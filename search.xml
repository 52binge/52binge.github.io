<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[博文的自愿付费方式]]></title>
      <url>http://iequa.com/2017/11/05/pay-blog/</url>
      <content type="html"><![CDATA[<p>你的一点激励，可以鼓励作者写出更多的好文章，让更多的人喜欢，从中受益，构建一个良性的循环.</p>
<a id="more"></a>
<hr>
<p>有很多人建议我在博文里加上付款方式，这样我花费的时间可以得到一些回报。我一直不愿意为此收费，然而后来我发现，根据经济学的原理，这是有害社会的。原理是这样，有价值的事物，就应该在经济上受到相应的回报，这样好的东西才能发扬光大。</p>
<p>所以我决定给觉得价值比较大的文章加上大概的价格，这样喜欢文章的人可以自愿付费购买，当然也可以不付费。不过请注意避免一个心理问题，这是等价的商品交易，而不是在募捐，所以请不要支付超过标签价格。</p>
<p>你可以使用以下方式付款：</p>
<ol>
<li><p>支付宝：</p>
<div class="tweetimg"><br><img src="/images/life/pay-10.png" width="300" height="800" img=""></div>
</li>
<li><p>PayPal: 请点击<a href="https://www.paypal.com" target="_blank" rel="external">付款链接</a></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python 结构化您的工程 (not finish)]]></title>
      <url>http://iequa.com/2017/11/04/python-structure-project/</url>
      <content type="html"><![CDATA[<p>如何利用Python的特性来创造简洁、高效的代码。 “<strong>结构化</strong>” 意味着通过编写简洁的代码，使逻辑和依赖清晰.</p>
<a id="more"></a>
<h2 id="仓库的结构"><a href="#仓库的结构" class="headerlink" title="仓库的结构"></a>仓库的结构</h2><p>在一个健康的开发周期中，代码风格，API设计和自动化是非常关键的。同样的，对于工程的 架构 ,仓库的结构也是关键的一部分。</p>
<p>当一个潜在的用户和贡献者登录到您的仓库页面时，他们会看到这些:</p>
<ul>
<li>工程的名字</li>
<li>工程的描述</li>
<li>一系列的文件</li>
</ul>
<blockquote>
<p>拥有良好的布局，事半功倍。</p>
</blockquote>
<h2 id="仓库样例"><a href="#仓库样例" class="headerlink" title="仓库样例"></a>仓库样例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">README.rst</span><br><span class="line">LICENSE</span><br><span class="line">setup.py</span><br><span class="line">requirements.txt</span><br><span class="line">sample/__init__.py</span><br><span class="line">sample/core.py</span><br><span class="line">sample/helpers.py</span><br><span class="line">docs/conf.py</span><br><span class="line">docs/index.rst</span><br><span class="line">tests/<span class="built_in">test</span>_basic.py</span><br><span class="line">tests/<span class="built_in">test</span>_advanced.py</span><br></pre></td></tr></table></figure>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>除了源代码本身以外，这个毫无疑问是您仓库最重要的一部分。在这个文件中要有完整的许可说明和授权。</p>
<p>如果您不太清楚您应该使用哪种许可方式，请查看 choosealicense.com.</p>
<h2 id="Setup-py"><a href="#Setup-py" class="headerlink" title="Setup.py"></a>Setup.py</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="http://pythonguidecn.readthedocs.io/zh/latest/writing/structure.html" target="_blank" rel="external">结构化你的工程</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Taking care of your pet DOG!]]></title>
      <url>http://iequa.com/2017/11/02/engvid-Taking-care-of-your-pet/</url>
      <content type="html"><![CDATA[<p>Do you have a dog? Do you want a dog?<br><a id="more"></a><br>Here in North America, we have specific rules, laws, and cultural customs that every dog owner must know. And if you’re not a dog owner, you need to know this stuff, too, because you’ll be around a lot of dogs here! In this video, I’ll teach you English vocabulary for the dog-related people you’ll meet: breeders, vets, and groomers; as well as the doggie things you must have, such as a leash, dish, and treats. The best part? Dog owners love to talk about dogs. So you can practice your English by talking to other dog owners. Want more? Check out my friend Emma’s video about pets and animals here!</p>
<div class="video-container"><iframe src="//www.youtube.com/embed/CgGicK1q1eg" frameborder="0" allowfullscreen></iframe></div>
<blockquote>
<p>&amp;t=171s</p>
</blockquote>
<p>Ruff. Hi. I’m Ronnie. I’m not a dog, but I have a dog, and I like dogs. Not: I like dog. I don’t want to eat a dog. No, actually I would eat a dog if you gave it to me. If you barbequed it, I’d eat it. But, oh, we’re not talking about eating dogs. We’re going to talk about how to actually not eat your dog, how to care for your dog. In English and in our society we call our dog our best friends, although it really has no choice. Even if your dog doesn’t like you, it has to hang out with you a lot because you have to care for your dog. So, I’m going to teach you English vocabulary, English verbs for caring for your dog. Hopefully you can learn some stuff. You probably know it in your language, but now you’re going to learn English with me because that’s what I do.</p>
<p>So, the first thing that we should talk about is someone called a “breeder”. Okay? A breeder is a person who breeds dogs. So, I’ve written the word “breeds” here as a verb. Now, to breed a dog means that you get the boy dog who’s called a stud and you get the girl dog who’s called a bitch, and you make them have sex. I don’t know how they do this, maybe they give them some doggy wine, play some nice doggy music, but anyways, the boy dog and the girl dog have dog sex, doggy style - and they have puppies. Woo-hoo. So the breeder is the person who cares for the dogs and makes more dogs. They’re magical.</p>
<p>It is a really, really bad idea, almost illegal in Canada to buy a dog from the “pet shop”. We have really tried to cut down on dogs who are for sale in pet shops. Just the treatment of the dogs, there’s been a lot of controversy. Also, you can find a dog on the internet, you can go to Kijiji or you can go to many websites where you can buy a dog. There’s also dog rescue sites where maybe a dog doesn’t have a house, a dog is homeless, and you can rescue the dog and make him your… Or her your best friend. So there’s many options. I do not recommend the pet shop option, but make sure that your dog is going to be… You’re going to be able to take care of a dog before you get one.</p>
<p>So, the place where the dogs or the puppies live and where they have all their doggy sex is called a “kennel”. So the kennel is the place, and the breeder is the person. You can use both of these words interchangeably, but a breeder is always a person. It’s important that you go and look at the kennel when you’re buying a dog to make sure that it’s clean and the dogs are well taken care of. There’s some terrible-looking kennels I imagine.</p>
<p>The next person that you’re not going to want to go to and your dog is going to hate more than the mailman is the “veterinarian”. Now, in English we don’t need to bother saying: “Veterinarian”, which is an animal doctor. What we need to say is: “Vet”. So you’re going to say: “Uh-oh, I have to take my dog to the vet”, because maybe your dog is sick. Vets in Canada and probably around the world, America as well, are very, very expensive. So we don’t want our dogs to be sick because it costs us a lot of money.</p>
<p>But there is one thing that people or breeders really encourage you to do if you have gotten a puppy and you’re not going to breed the dog, you’re not going to have… Make more baby dogs with this. That’s a whole other business. So, for this you’re going to do what we call “get your dog fixed”. Your dog is not broken, don’t worry, it’s not a toy. So: “Get your dog fixed”, you’re going to go to the vet, you’re going to go to the animal doctor and what’s happened… What’s going to happen is you’re going to get your animal neutered. “Neutered” means… We have two different meaning… Two different words we use for this. For the boys or for the studs, neutered means “castrated”. Oh, gentlemen, gentlemen, this means they’re going to remove the dog’s testicles so the dog cannot produce sperm to have little puppies. Don’t worry, I’m sure the dog doesn’t feel anything, and when he wakes up he is very happy because he has less balls to lick. So, “castrated” is only for boys and they remove the testicles. The word that we use for women, or sorry, girls or bitches, mm-hmm, is “spayed”.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Knowledge Graph]]></title>
      <url>http://iequa.com/2017/10/30/nlp-kg/</url>
      <content type="html"><![CDATA[<p>Google 在12年的时候，提出了“知识图谱”的概念，Google 主要用它来构建下一代的搜索引擎.</p>
<a id="more"></a>
<p>Google 提出知识图谱的时候，用了这么一个短句：</p>
<p>Things, not strings!</p>
<p>也就是说，在互联网中它不是一个个字符串，而是一个个真实存在的事物，事物之间还有相应的关联关系</p>
<p>搜索引擎的三个主要功能将需要改进，搜索将需要：1.答案，2.对话，3.预测。</p>
<ul>
<li>第一期w1：知识提取</li>
<li>第一期w2：知识表示</li>
<li>第一期w3：知识存储</li>
<li>第一期w4：知识检索</li>
</ul>
<h2 id="1-Knowledge-Graph"><a href="#1-Knowledge-Graph" class="headerlink" title="1. Knowledge Graph"></a>1. Knowledge Graph</h2><ol>
<li>自动摘要</li>
<li>指代消解   </li>
</ol>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://www.zhihu.com/question/52368821" target="_blank" rel="external">知识图谱怎样入门？</a></li>
<li><a href="http://blog.memect.cn/wp-content/uploads/2016/09/2016-09-19_ccks.pdf" target="_blank" rel="external">精益知识图谱方法论</a></li>
<li><a href="http://zhishi.me/" target="_blank" rel="external">Chinese Linking Open Data</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Guitar 基本乐理]]></title>
      <url>http://iequa.com/2017/10/28/life-music-guitar3/</url>
      <content type="html"><![CDATA[<p>音乐分为 噪音 与 乐音</p>
<a id="more"></a>
<h2 id="1-入门"><a href="#1-入门" class="headerlink" title="1. 入门"></a>1. 入门</h2><table>
<thead>
<tr>
<th></th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>i</th>
</tr>
</thead>
<tbody>
<tr>
<td>音名</td>
<td>c</td>
<td>d</td>
<td>e</td>
<td>f</td>
<td>g</td>
<td>a</td>
<td>b</td>
<td>c1</td>
</tr>
<tr>
<td>唱名</td>
<td>Do</td>
<td>Re</td>
<td>Mi</td>
<td>Fa</td>
<td>Sol</td>
<td>La</td>
<td>Si</td>
<td>Do</td>
</tr>
</tbody>
</table>
<h2 id="2-和弦"><a href="#2-和弦" class="headerlink" title="2. 和弦"></a>2. 和弦</h2><blockquote>
<p>和弦: 几个相互和谐融洽的音放在一起组成的一组音</p>
</blockquote>
<p>我们人所听到的声音，究其物理实质，是因为空气振动而形成的，振动频率越高，音就越高。有时候，某一振动频率的音和另外一振动频率的音在一起的时候，我们人的耳朵听起来就感觉非常舒服，这是因为在物理原理上，在声学原理上，两种频率产生了谐振，因此彼此相互支持、相互加强、相互映衬了；而有时候，当两个不同振动频率的音在一起的时候，人们听起来就觉得非常刺耳、非常不舒服，这是因为两种频率相互背道而弛、相互对抗相互拆台了。</p>
<table>
<thead>
<tr>
<th>音名组合</th>
<th>唱名</th>
<th>和弦</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>C、E、G</strong></td>
<td>1、3、5</td>
<td><strong>C和弦</strong></td>
</tr>
<tr>
<td><strong>D、F、A</strong></td>
<td>2、4、6</td>
<td><strong>D和弦</strong></td>
</tr>
<tr>
<td><strong>E、G、B</strong></td>
<td>3、5、7</td>
<td><strong>E和弦</strong></td>
</tr>
<tr>
<td><strong>F、A、C1</strong></td>
<td>中音的4、6 和 高音的1组合起来</td>
<td><strong>F和弦</strong></td>
</tr>
<tr>
<td><strong>G、B、D1</strong></td>
<td>中音的5、7和高音的2组合起来。根音5</td>
<td><strong>G和弦</strong></td>
</tr>
<tr>
<td><strong>A、C1、E1</strong></td>
<td>中音的6和高音的1、3组合。根音6</td>
<td><strong>A和弦</strong></td>
</tr>
<tr>
<td><strong>B、D1、F1</strong></td>
<td>中音7和高音2、4组合。根音7</td>
<td><strong>B和弦</strong></td>
</tr>
</tbody>
</table>
<h2 id="3-音及音高"><a href="#3-音及音高" class="headerlink" title="3. 音及音高"></a>3. 音及音高</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.douban.com/group/topic/10727953/" target="_blank" rel="external">Douban Guitar</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Scikit-Learn 备忘录(not finish)]]></title>
      <url>http://iequa.com/2017/10/28/ml-python-sklearn-basic/</url>
      <content type="html"><![CDATA[<p>Scikit-learn 提供了 <code>数据预处理</code>、 <code>交叉验证算法</code> 与 <code>可视化算法</code> 等一系列接口。</p>
<a id="more"></a>
<h2 id="1-Basic-Example"><a href="#1-Basic-Example" class="headerlink" title="1. Basic Example"></a>1. Basic Example</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn <span class="keyword">import</span> neighbors, datasets, preprocessing</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn.cross_validation <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>iris = datasets.load_iris()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X, y = iris.data[:, :<span class="number">2</span>], iris.target</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=<span class="number">33</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>scaler = preprocessing.StandardScaler().fit(X_train)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X_train = scaler.transform(X_train)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X_test = scaler.transform(X_test)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>knn = neighbors.KNeighborsClassifier(n_neighbors=<span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>knn.fit(X_train, y_train)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y_pred = knn.predict(X_test)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>accuracy_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>
<h2 id="2-数据加载与切分"><a href="#2-数据加载与切分" class="headerlink" title="2. 数据加载与切分"></a>2. 数据加载与切分</h2><p>我们一般使用NumPy中的数组或者Pandas中的DataFrame等数据结构来存放数据：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X = np.random.random((<span class="number">10</span>,<span class="number">5</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = np.array([<span class="string">'M'</span>,<span class="string">'M'</span>,<span class="string">'F'</span>,<span class="string">'F'</span>,<span class="string">'M'</span>,<span class="string">'F'</span>,<span class="string">'M'</span>,<span class="string">'M'</span>,<span class="string">'F'</span>,<span class="string">'F'</span>,<span class="string">'F'</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X[X &lt; <span class="number">0.7</span>] = <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>NumPy还提供了方便的接口帮我们划分训练数据与测试数据：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn.cross_validation <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X_train, X_test, y_train, y_test = train_test_split(X,</span><br><span class="line"> y, random_state=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<h2 id="3-Model-模型"><a href="#3-Model-模型" class="headerlink" title="3. Model:模型"></a>3. Model:模型</h2><ol>
<li>模型创建</li>
<li>模型拟合</li>
<li>模型预测</li>
<li>模型评估</li>
</ol>
<h3 id="3-1-模型创建"><a href="#3-1-模型创建" class="headerlink" title="3.1 模型创建"></a>3.1 模型创建</h3><h4 id="3-1-1-监督学习"><a href="#3-1-1-监督学习" class="headerlink" title="3.1.1 监督学习"></a>3.1.1 监督学习</h4><p>Linear Regression</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lr = LinearRegression(normalize=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure>
<p>Support Vector Machines</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>svc = SVC(kernel=<span class="string">'linear'</span>)</span><br></pre></td></tr></table></figure>
<p>Naive Bayes</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> GaussianNB</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>gnb = GaussianNB()</span><br></pre></td></tr></table></figure>
<p>KNN</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn <span class="keyword">import</span> neighbors</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>knn = neighbors.KNeighborsClassifier(n_neighbors=<span class="number">5</span>)</span><br></pre></td></tr></table></figure>
<h4 id="3-1-2-无监督学习"><a href="#3-1-2-无监督学习" class="headerlink" title="3.1.2 无监督学习"></a>3.1.2 无监督学习</h4><h3 id="3-2-模型拟合"><a href="#3-2-模型拟合" class="headerlink" title="3.2 模型拟合"></a>3.2 模型拟合</h3><h4 id="3-2-2-监督学习"><a href="#3-2-2-监督学习" class="headerlink" title="3.2.2 监督学习"></a>3.2.2 监督学习</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lr.fit(X, y)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>knn.fit(X_train, y_train)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>svc.fit(X_train, y_train)</span><br></pre></td></tr></table></figure>
<h3 id="3-3-模型预测"><a href="#3-3-模型预测" class="headerlink" title="3.3 模型预测"></a>3.3 模型预测</h3><h3 id="3-4-模型评估"><a href="#3-4-模型评估" class="headerlink" title="3.4 模型评估"></a>3.4 模型评估</h3><h2 id="4-数据预处理"><a href="#4-数据预处理" class="headerlink" title="4. 数据预处理"></a>4. 数据预处理</h2><h2 id="6-Reference"><a href="#6-Reference" class="headerlink" title="6. Reference"></a>6. Reference</h2><ul>
<li><a href="https://zhuanlan.zhihu.com/p/24770526" target="_blank" rel="external">知乎-scikit-learn</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux Search Cmd]]></title>
      <url>http://iequa.com/2017/10/24/ops-linux-cmd-file-search/</url>
      <content type="html"><![CDATA[<p>which，whereis，locate，find，find exec，find xargs，find…</p>
<a id="more"></a>
<p>which   查看可执行文件的位置。<br>whereis 查看文件的位置。<br>locate  配合数据库查看文件位置。<br>find    实际搜寻硬盘查询文件名称。  </p>
<h2 id="1-which"><a href="#1-which" class="headerlink" title="1. which"></a>1. which</h2><p>which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># which pwd</span></span><br><span class="line">/bin/<span class="built_in">pwd</span></span><br><span class="line">[root@localhost ~]<span class="comment">#  which adduser</span></span><br><span class="line">/usr/sbin/adduser</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>cd 是bash 内建的命令！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜ <span class="built_in">which</span> <span class="built_in">cd</span></span><br><span class="line"><span class="built_in">cd</span>: shell built-in <span class="built_in">command</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>which 默认是找 PATH 内所规范的目录，所以当然一定找不到的！</p>
</blockquote>
<h2 id="2-whereis"><a href="#2-whereis" class="headerlink" title="2. whereis"></a>2. whereis</h2><p>whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。</p>
<p>和find相比，whereis查找的速度非常快，这是因为linux系统会将 系统内的所有文件都记录在一个数据库文件中，当使用whereis和下面即将介绍的locate时，会从数据库中查找数据，而不是像find命令那样，通 过遍历硬盘来查找，效率自然会很高。 </p>
<p>但是该数据库文件并不是实时更新，默认情况下时一星期更新一次，因此，我们在用whereis和locate 查找文件时，有时会找到已经被删除的数据，或者刚刚建立文件，却无法查找到，原因就是因为数据库文件没有被更新。</p>
<h2 id="3-locate"><a href="#3-locate" class="headerlink" title="3. locate"></a>3. locate</h2><p>locate命令可以在搜寻数据库时快速找到档案，数据库由updatedb程序来更新，updatedb是由cron daemon周期性建立的，locate命令在搜寻数据库时比由整个由硬盘资料来搜寻资料来得快，但较差劲的是locate所找到的档案若是最近才建立或 刚更名的，可能会找不到，在内定值中，updatedb每天会跑一次，可以由修改crontab来更新设定值。(etc/crontab)</p>
<p>locate指定用在搜寻符合条件的档案，它会去储存档案与目录名称的数据库内，寻找合乎范本样式条件的档案或目录录，可以使用特殊字元（如”<em>” 或”?”等）来指定范本样式，如指定范本为kcpa</em>ner, locate会找出所有起始字串为kcpa且结尾为ner的档案或目录，如名称为kcpartner若目录录名称为kcpa_ner则会列出该目录下包括 子目录在内的所有档案。</p>
<p>locate指令和find找寻档案的功能类似，但locate是透过update程序将硬盘中的所有档案和目录资料先建立一个索引数据库，在 执行loacte时直接找该索引，查询速度会较快，索引数据库一般是由操作系统管理，但也可以直接下达update强迫系统立即修改索引数据库。</p>
<blockquote>
<p>mac 默认没启动 locate</p>
</blockquote>
<h2 id="4-find"><a href="#4-find" class="headerlink" title="4. find"></a>4. find</h2><h3 id="4-1-查找指定时间内修改过的文件"><a href="#4-1-查找指定时间内修改过的文件" class="headerlink" title="4.1 查找指定时间内修改过的文件"></a>4.1 查找指定时间内修改过的文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@peidachang ~]<span class="comment"># find -atime -2</span></span><br><span class="line">.</span><br><span class="line">./logs/monitor</span><br><span class="line">./.bashrc</span><br><span class="line">./.bash_profile</span><br><span class="line">./.bash_<span class="built_in">history</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明：超找48小时内修改过的文件 </p>
</blockquote>
<h3 id="4-2-根据关键字查找"><a href="#4-2-根据关键字查找" class="headerlink" title="4.2 根据关键字查找"></a>4.2 根据关键字查找</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find . -name <span class="string">"*.log"</span></span><br></pre></td></tr></table></figure>
<h3 id="4-3-查找当前所有目录并排序"><a href="#4-3-查找当前所有目录并排序" class="headerlink" title="4.3 查找当前所有目录并排序"></a>4.3 查找当前所有目录并排序</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find . -type d | sort</span><br></pre></td></tr></table></figure>
<h3 id="4-4-按类型查找"><a href="#4-4-按类型查找" class="headerlink" title="4.4 按类型查找"></a>4.4 按类型查找</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find . -type f -name <span class="string">"*.log"</span></span><br></pre></td></tr></table></figure>
<h3 id="4-5-查找当前所有目录并排序"><a href="#4-5-查找当前所有目录并排序" class="headerlink" title="4.5 查找当前所有目录并排序"></a>4.5 查找当前所有目录并排序</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find . -type d | sort</span><br></pre></td></tr></table></figure>
<h3 id="4-6-按大小查找文件"><a href="#4-6-按大小查找文件" class="headerlink" title="4.6 按大小查找文件"></a>4.6 按大小查找文件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find . -size +1000c -print</span><br></pre></td></tr></table></figure>
<h2 id="5-find命令之exec"><a href="#5-find命令之exec" class="headerlink" title="5. find命令之exec"></a>5. find命令之exec</h2><p>find是我们很常用的一个Linux命令，但是我们一般查找出来的并不仅仅是看看而已，还会有进一步的操作，这个时候exec的作用就显现出来了。 </p>
<p><strong>exec解释：</strong></p>
<p>-exec  参数后面跟的是command命令，它的终止是以;为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以前面加反斜杠。  </p>
<p>{}   花括号代表前面find查找出来的文件名。  </p>
<p>使用find时，只要把想要的操作写在一个文件里，就可以用exec来配合find查找，很方便的。在有些操作系统中只允许-exec选项执行诸如l s或ls -l这样的命令。大多数用户使用这一选项是为了查找旧文件并删除它们。建议在真正执行rm命令删除文件之前，最好先用ls命令看一下，确认它们是所要删除的文件。 exec选项后面跟随着所要执行的命令或脚本，然后是一对儿{ }，一个空格和一个\，最后是一个分号。为了使用exec选项，必须要同时使用print选项。如果验证一下find命令，会发现该命令只输出从当前路径起的相对路径及文件名。</p>
<h3 id="5-1-ls-l命令放find命令的-exec"><a href="#5-1-ls-l命令放find命令的-exec" class="headerlink" title="5.1 ls -l命令放find命令的-exec"></a>5.1 ls -l命令放find命令的-exec</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ~/ghome/github/test [15:45:03]</span></span><br><span class="line">➜ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r--  1 blair  staff     0B Oct 28 15:44 <span class="built_in">log</span>1</span><br><span class="line">-rw-r--r--  1 blair  staff     0B Oct 28 15:45 <span class="built_in">log</span>2</span><br><span class="line">-rw-r--r--  1 blair  staff     0B Oct 28 15:45 <span class="built_in">log</span>3</span><br><span class="line">-rw-r--r--  1 blair  staff     0B Oct 28 15:45 <span class="built_in">log</span>4</span><br><span class="line">(vpy2)</span><br><span class="line"><span class="comment"># ~/ghome/github/test [15:45:03]</span></span><br><span class="line">➜ find . -type f -exec ls <span class="_">-l</span> &#123;&#125; \;</span><br><span class="line">-rw-r--r--  1 blair  staff  0 Oct 28 15:45 ./<span class="built_in">log</span>4</span><br><span class="line">-rw-r--r--  1 blair  staff  0 Oct 28 15:45 ./<span class="built_in">log</span>3</span><br><span class="line">-rw-r--r--  1 blair  staff  0 Oct 28 15:45 ./<span class="built_in">log</span>2</span><br><span class="line">-rw-r--r--  1 blair  staff  0 Oct 28 15:44 ./<span class="built_in">log</span>1</span><br><span class="line">(vpy2)</span><br><span class="line"><span class="comment"># ~/ghome/github/test [15:45:04]</span></span><br><span class="line">➜</span><br></pre></td></tr></table></figure>
<h3 id="5-2-更改时间在n日以前的文件并删除"><a href="#5-2-更改时间在n日以前的文件并删除" class="headerlink" title="5.2 更改时间在n日以前的文件并删除"></a>5.2 更改时间在n日以前的文件并删除</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find . -type f -mtime +14 -exec rm &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<h3 id="5-3-更改时间在n日前文件并提示删除"><a href="#5-3-更改时间在n日前文件并提示删除" class="headerlink" title="5.3 更改时间在n日前文件并提示删除"></a>5.3 更改时间在n日前文件并提示删除</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ~/ghome/github/test [15:47:35]</span><br><span class="line">➜ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r--  1 blair  staff     0B Oct 28 15:44 log1</span><br><span class="line">-rw-r--r--  1 blair  staff     0B Oct 28 15:45 log2</span><br><span class="line">-rw-r--r--  1 blair  staff     0B Oct 28 15:45 log3</span><br><span class="line">-rw-r--r--  1 blair  staff     0B Oct 28 15:45 log4</span><br><span class="line">(vpy2)</span><br><span class="line"># ~/ghome/github/test [15:47:38]</span><br><span class="line">➜ find . -name &quot;*log*&quot; -mtime -1 -ok rm &#123;&#125; \;</span><br><span class="line">&quot;rm ./log4&quot;?</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在目录中查找更改时间在n日以前的文件并删除它们，在删除之前先给出提示</p>
</blockquote>
<h3 id="5-4-exec中使用grep命令"><a href="#5-4-exec中使用grep命令" class="headerlink" title="5.4 -exec中使用grep命令"></a>5.4 -exec中使用grep命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /etc -name <span class="string">"passwd*"</span> -exec grep <span class="string">"root"</span> &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<h3 id="5-5-查找文件移动到指定目录"><a href="#5-5-查找文件移动到指定目录" class="headerlink" title="5.5 查找文件移动到指定目录"></a>5.5 查找文件移动到指定目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find . -name <span class="string">"*.log"</span> -exec mv &#123;&#125; .. \;</span><br></pre></td></tr></table></figure>
<h3 id="5-6-exec选项执行cp命令"><a href="#5-6-exec选项执行cp命令" class="headerlink" title="5.6 exec选项执行cp命令"></a>5.6 exec选项执行cp命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find . -name &quot;*.log&quot; -exec cp &#123;&#125; test3 \;</span><br></pre></td></tr></table></figure>
<h2 id="6-find命令之xargs"><a href="#6-find命令之xargs" class="headerlink" title="6. find命令之xargs"></a>6. find命令之xargs</h2><p>在使用 find命令的-exec选项处理匹配到的文件时， find命令将所有匹配到的文件一起传递给exec执行。但有些系统对能够传递给exec的命令长度有限制，这样在find命令运行几分钟之后，就会出现溢出错误。错误信息通常是“参数列太长”或“参数列溢出”。这就是xargs命令的用处所在，特别是与find命令一起使用。  </p>
<p>find命令把匹配到的文件传递给xargs命令，而xargs命令每次只获取一部分文件而不是全部，不像-exec选项那样。这样它可以先处理最先获取的一部分文件，然后是下一批，并如此继续下去。  </p>
<p>在有些系统中，使用-exec选项会为处理每一个匹配到的文件而发起一个相应的进程，并非将匹配到的文件全部作为参数一次执行；这样在有些情况下就会出现进程过多，系统性能下降的问题，因而效率不高； 而使用xargs命令则只有一个进程。另外，在使用xargs命令时，究竟是一次获取所有的参数，还是分批取得参数，以及每一次获取参数的数目都会根据该命令的选项及系统内核中相应的可调参数来确定。</p>
<h3 id="6-1-find-type-f-print-xargs-file"><a href="#6-1-find-type-f-print-xargs-file" class="headerlink" title="6.1 find . -type f -print | xargs file"></a>6.1 find . -type f -print | xargs file</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ~/ghome/github/test [7:41:40]</span></span><br><span class="line">➜ find . -type f -print | xargs file</span><br><span class="line">./<span class="built_in">log</span>4: empty</span><br><span class="line">./<span class="built_in">log</span>3: empty</span><br><span class="line">./<span class="built_in">log</span>2: empty</span><br><span class="line">./<span class="built_in">log</span>1: ASCII text</span><br><span class="line">(vpy2)</span><br></pre></td></tr></table></figure>
<h3 id="6-2-用户具有读、写和执行权限的文件，并收回相应的写权限"><a href="#6-2-用户具有读、写和执行权限的文件，并收回相应的写权限" class="headerlink" title="6.2 用户具有读、写和执行权限的文件，并收回相应的写权限"></a>6.2 用户具有读、写和执行权限的文件，并收回相应的写权限</h3><p>find . -perm -7 -print | xargs chmod o-w</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ~/ghome/github/test [7:44:26]</span></span><br><span class="line">➜ find . -perm -7 -print</span><br><span class="line">./<span class="built_in">log</span>3</span><br><span class="line">(vpy2)</span><br><span class="line"><span class="comment"># ~/ghome/github/test [7:44:27]</span></span><br><span class="line">➜ find . -perm -7 -print | xargs chmod o-w</span><br><span class="line">(vpy2)</span><br><span class="line"><span class="comment"># ~/ghome/github/test [7:44:49]</span></span><br><span class="line">➜ ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--  1 blair  staff    32B Oct 28 15:54 <span class="built_in">log</span>1</span><br><span class="line">-rw-r--r--  1 blair  staff     0B Oct 28 15:45 <span class="built_in">log</span>2</span><br><span class="line">-rwxrwxr-x  1 blair  staff     0B Oct 28 15:45 <span class="built_in">log</span>3</span><br><span class="line">-rw-r--r--  1 blair  staff     0B Oct 28 15:45 <span class="built_in">log</span>4</span><br><span class="line">(vpy2)</span><br><span class="line"><span class="comment"># ~/ghome/github/test [7:44:50]</span></span><br></pre></td></tr></table></figure>
<h3 id="6-3-grep命令在所有的普通文件中搜索hostname这个词"><a href="#6-3-grep命令在所有的普通文件中搜索hostname这个词" class="headerlink" title="6.3 grep命令在所有的普通文件中搜索hostname这个词"></a>6.3 grep命令在所有的普通文件中搜索hostname这个词</h3><p>find . -type f -print | xargs grep “hostname”</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># find . -type f -print | xargs grep "hostname"</span></span><br><span class="line">./<span class="built_in">log</span>2013.log:hostnamebaidu=baidu.com</span><br><span class="line">./<span class="built_in">log</span>2013.log:hostnamesina=sina.com</span><br><span class="line">./<span class="built_in">log</span>2013.log:hostnames=<span class="literal">true</span>[root@localhost <span class="built_in">test</span>]<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<h3 id="6-4-使用xargs执行mv"><a href="#6-4-使用xargs执行mv" class="headerlink" title="6.4 使用xargs执行mv"></a>6.4 使用xargs执行mv</h3><p>find . -name “*.log” | xargs -i mv {} test4</p>
<blockquote>
<p>使用-i参数默认的前面输出用{}代替，-I参数可以指定其他代替字符</p>
</blockquote>
<h3 id="6-5-xargs的-p参数的使用"><a href="#6-5-xargs的-p参数的使用" class="headerlink" title="6.5 xargs的-p参数的使用"></a>6.5 xargs的-p参数的使用</h3><p>find . -name “*.log” | xargs -p -i mv {} ..</p>
<blockquote>
<p>-p参数会提示让你确认是否执行后面的命令,y执行，n不执行。</p>
</blockquote>
<h2 id="7-find-命令的参数详解"><a href="#7-find-命令的参数详解" class="headerlink" title="7. find 命令的参数详解"></a>7. <a href="http://www.cnblogs.com/peida/archive/2012/11/16/2773289.html" target="_blank" rel="external">find 命令的参数详解</a></h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="http://www.cnblogs.com/peida/archive/2012/12/05/2803591.html" target="_blank" rel="external">每天一个linux命令目录</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux File Basic Cmd]]></title>
      <url>http://iequa.com/2017/10/23/ops-linux-cmd-1-file-directory-operation/</url>
      <content type="html"><![CDATA[<p>ls, cd, pwd, mkdir, rm, rmdir, mv, cp, touch, cat, nl, more, less, head, tail</p>
<a id="more"></a>
<h2 id="1-ls"><a href="#1-ls" class="headerlink" title="1. ls"></a>1. ls</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -l -R /home/blair/ghome</span><br><span class="line">ls -ctrl s*</span><br></pre></td></tr></table></figure>
<p>列出 /opt/soft 文件下面的子目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -F /opt/soft |grep /$</span><br></pre></td></tr></table></figure>
<p>目录于名称后加”/“, 可执行档于名称后加”*” </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -AFl</span><br></pre></td></tr></table></figure>
<p>列出当前目录下的所有文件（包括隐藏文件）的绝对路径， 对目录不做递归</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find <span class="variable">$PWD</span> -maxdepth 1 | xargs ls -ld</span><br></pre></td></tr></table></figure>
<p>递归列出当前目录下的所有文件（包括隐藏文件）的绝对路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find <span class="variable">$PWD</span> | xargs ls -ld</span><br></pre></td></tr></table></figure>
<h2 id="2-cd"><a href="#2-cd" class="headerlink" title="2. cd"></a>2. cd</h2><blockquote>
<p><code>cd -</code> or <code>cd</code> or <code>cd ~</code></p>
</blockquote>
<h2 id="3-pwd"><a href="#3-pwd" class="headerlink" title="3. pwd"></a>3. pwd</h2><p><code>pwd -P</code> 显示出实际路径，而非使用连接（link）路径</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># /usr/local/xsoft/software/scala [22:17:59]</span><br><span class="line">➜ pwd</span><br><span class="line">/usr/local/xsoft/software/scala</span><br><span class="line">(vpy3)</span><br><span class="line"># /usr/local/xsoft/software/scala [22:17:59]</span><br><span class="line">➜ pwd -P</span><br><span class="line">/usr/local/xsoft/deploy/scala-2.11.7</span><br><span class="line">(vpy3)</span><br><span class="line"># /usr/local/xsoft/software/scala [22:18:02]</span><br><span class="line">➜</span><br></pre></td></tr></table></figure>
<h2 id="4-mkdir"><a href="#4-mkdir" class="headerlink" title="4. mkdir"></a>4. mkdir</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir <span class="built_in">test</span>1</span><br><span class="line">mkdir -p <span class="built_in">test</span>2/<span class="built_in">test</span>22</span><br><span class="line">mkdir -m 777 <span class="built_in">test</span>3</span><br><span class="line">mkdir -v <span class="built_in">test</span>4</span><br></pre></td></tr></table></figure>
<p>一个命令创建项目的目录结构</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ~/ghome/seek/test2 [22:23:06]</span></span><br><span class="line">➜ mkdir -vp scf/&#123;lib/,bin/,doc/&#123;info,product&#125;,logs/&#123;info,product&#125;,service/deploy/&#123;info,product&#125;&#125;</span><br><span class="line">(vpy3)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ~/ghome/seek/test2 [22:23:08]</span><br><span class="line">➜ tree</span><br><span class="line">.</span><br><span class="line">└── scf</span><br><span class="line">    ├── bin</span><br><span class="line">    ├── doc</span><br><span class="line">    │   ├── info</span><br><span class="line">    │   └── product</span><br><span class="line">    ├── lib</span><br><span class="line">    ├── logs</span><br><span class="line">    │   ├── info</span><br><span class="line">    │   └── product</span><br><span class="line">    └── service</span><br><span class="line">        └── deploy</span><br><span class="line">            ├── info</span><br><span class="line">            └── product</span><br><span class="line"></span><br><span class="line">13 directories, 0 files</span><br><span class="line">(vpy3)</span><br><span class="line"># ~/ghome/seek/test2 [22:23:10]</span><br></pre></td></tr></table></figure>
<h2 id="5-rm"><a href="#5-rm" class="headerlink" title="5. rm"></a>5. rm</h2><p>-f, –force    忽略不存在的文件，从不给出提示。<br>-i, –interactive 进行交互式删除<br>-r, -R, –recursive   指示rm将参数中列出的全部目录和子目录均递归地删除。<br>-v, –verbose    详细显示进行的步骤</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ~/ghome/seek/test2 [22:29:28]</span></span><br><span class="line">➜ rm -i f1</span><br><span class="line">remove f1?</span><br></pre></td></tr></table></figure>
<p><strong>自定义回收站功能</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">myrm</span></span>()&#123; D=/tmp/$(date +%Y%m%d%H%M%S); mkdir -p <span class="variable">$D</span>; mv <span class="string">"<span class="variable">$@</span>"</span> <span class="variable">$D</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">"moved to <span class="variable">$D</span> ok"</span>; &#125;</span><br></pre></td></tr></table></figure>
<p><strong>for example</strong>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost test]# myrm()&#123; D=/tmp/$(date +%Y%m%d%H%M%S); mkdir -p $D; mv &quot;$@&quot; $D &amp;&amp; echo &quot;moved to $D ok&quot;; &#125;</span><br><span class="line">[root@localhost test]# alias rm=&apos;myrm&apos;</span><br><span class="line">[root@localhost test]# touch 1.log 2.log 3.log</span><br><span class="line">[root@localhost test]# ll</span><br><span class="line">总计 16</span><br><span class="line">-rw-r--r-- 1 root root    0 10-26 15:08 1.log</span><br><span class="line">-rw-r--r-- 1 root root    0 10-26 15:08 2.log</span><br><span class="line">-rw-r--r-- 1 root root    0 10-26 15:08 3.log</span><br><span class="line">drwxr-xr-x 7 root root 4096 10-25 18:07 scf</span><br><span class="line">drwxrwxrwx 2 root root 4096 10-25 17:46 test3</span><br><span class="line">drwxr-xr-x 2 root root 4096 10-25 17:56 test4</span><br><span class="line">drwxr-xr-x 3 root root 4096 10-25 17:56 test5</span><br><span class="line">[root@localhost test]# rm [123].log</span><br><span class="line">moved to /tmp/20121026150901 ok</span><br><span class="line">[root@localhost test]# ll</span><br><span class="line">总计 16drwxr-xr-x 7 root root 4096 10-25 18:07 scf</span><br><span class="line">drwxrwxrwx 2 root root 4096 10-25 17:46 test3</span><br><span class="line">drwxr-xr-x 2 root root 4096 10-25 17:56 test4</span><br><span class="line">drwxr-xr-x 3 root root 4096 10-25 17:56 test5</span><br><span class="line">[root@localhost test]# ls /tmp/20121026150901/</span><br><span class="line">1.log  2.log  3.log</span><br><span class="line">[root@localhost test]#</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>Reference: </strong> <a href="http://www.cnblogs.com/peida/archive/2012/10/26/2740521.html" target="_blank" rel="external">每天一个linux命令（5）：rm 命令</a></p>
</blockquote>
<h2 id="6-rmdir"><a href="#6-rmdir" class="headerlink" title="6. rmdir"></a>6. rmdir</h2><blockquote>
<p>删除空目录</p>
<p>rmdir -p 当子目录被删除后使它也成为空目录的话，则顺便一并删除 </p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost scf]<span class="comment"># rmdir -p logs</span></span><br><span class="line">rmdir: logs: 目录非空</span><br><span class="line"></span><br><span class="line">[root@localhost scf]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">|-- bin</span><br><span class="line">|-- doc</span><br><span class="line">|-- lib</span><br><span class="line">|-- logs</span><br><span class="line">|   `-- product</span><br><span class="line">`-- service</span><br><span class="line">    `-- deploy</span><br><span class="line">        |-- info</span><br><span class="line">        `-- product</span><br><span class="line"> </span><br><span class="line">9 directories, 0 files</span><br></pre></td></tr></table></figure>
<p>[root@localhost scf]# rmdir -p logs/product</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost scf]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">|-- bin</span><br><span class="line">|-- doc</span><br><span class="line">|-- lib</span><br><span class="line">`-- service</span><br><span class="line">`-- deploy</span><br><span class="line">        |-- info</span><br><span class="line">        `-- product</span><br></pre></td></tr></table></figure>
<h2 id="7-mv"><a href="#7-mv" class="headerlink" title="7. mv"></a>7. mv</h2><p>-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！<br>-t  ： –target-directory=DIRECTORY move all SOURCE arguments into DIRECTORY，即指定mv的目标目录，该选项适用于移动多个源文件到一个目录的情况，此时目标目录在前，源文件在后。</p>
<h2 id="8-cp"><a href="#8-cp" class="headerlink" title="8. cp"></a>8. cp</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp -a test3 test4</span><br><span class="line">cp -s log.log log_link.log</span><br></pre></td></tr></table></figure>
<h2 id="9-touch"><a href="#9-touch" class="headerlink" title="9. touch"></a>9. touch</h2><p>设定文件的时间戳</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">touch -t 201211142234.50 log.log</span><br></pre></td></tr></table></figure>
<p>更新 log2012.log 的时间和 log.log 时间戳相同</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">touch -r log.log log2012.log</span><br></pre></td></tr></table></figure>
<h2 id="10-cat"><a href="#10-cat" class="headerlink" title="10. cat"></a>10. cat</h2><ol>
<li>一次显示整个文件:cat filename</li>
<li>从键盘创建一个文件:cat &gt; filename 只能创建新文件,不能编辑已有文件.</li>
<li>将几个文件合并为一个文件:cat file1 file2 &gt; file</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜ cat -n log.log <span class="built_in">log</span>2012.log</span><br><span class="line">     1	asd</span><br><span class="line">     2</span><br><span class="line">     3	asd</span><br><span class="line">     1	k1</span><br><span class="line">     2	k2</span><br><span class="line">     3</span><br><span class="line">     4	k3</span><br><span class="line">(vpy3)</span><br><span class="line"><span class="comment"># ~/ghome/seek/test2 [23:02:19]</span></span><br><span class="line">➜</span><br></pre></td></tr></table></figure>
<blockquote>
<p>tac (反向列示).<br>tac log.txt</p>
</blockquote>
<h2 id="11-nl"><a href="#11-nl" class="headerlink" title="11. nl"></a>11. nl</h2><p>nl命令在linux系统中用来计算文件中行号。nl 可以将输出的文件内容自动的加上行号！</p>
<p>命令参数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-b  ：指定行号指定的方式，主要有两种：</span><br><span class="line">-b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)；</span><br><span class="line">-b t ：如果有空行，空的那一行不要列出行号(默认值)；</span><br><span class="line">-n  ：列出行号表示的方法，主要有三种：</span><br><span class="line">-n ln ：行号在萤幕的最左方显示；</span><br><span class="line">-n rn ：行号在自己栏位的最右方显示，且不加 0 ；</span><br><span class="line">-n rz ：行号在自己栏位的最右方显示，且加 0 ；</span><br><span class="line">-w  ：行号栏位的占用的位数。</span><br><span class="line">-p 在逻辑定界符处不重新开始计算。</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># nl log2012.log </span></span><br><span class="line">     1  2012-01</span><br><span class="line">     2  2012-02</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">     3  ======[root@localhost <span class="built_in">test</span>]<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost test]# nl -b a log2012.log </span><br><span class="line">     1  2012-01</span><br><span class="line">     2  2012-02</span><br><span class="line">     3</span><br><span class="line">     4</span><br><span class="line">     5  ======[root@localhost test]#</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># nl -b a -n rz log2014.log </span></span><br><span class="line">000001  2014-01</span><br><span class="line">000002  2014-02</span><br><span class="line">000003  2014-03</span><br><span class="line">000004  2014-04</span><br><span class="line">000005  2014-05</span><br><span class="line">000006  2014-06</span><br><span class="line">000007  2014-07</span><br><span class="line">000008  2014-08</span><br><span class="line">000009  2014-09</span><br><span class="line">000010  2014-10</span><br><span class="line">000011  2014-11</span><br><span class="line">000012  2014-12</span><br><span class="line">000013  =======</span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># nl -b a -n rz -w 3 log2014.log </span></span><br><span class="line">001     2014-01</span><br><span class="line">002     2014-02</span><br><span class="line">003     2014-03</span><br><span class="line">004     2014-04</span><br><span class="line">005     2014-05</span><br><span class="line">006     2014-06</span><br><span class="line">007     2014-07</span><br><span class="line">008     2014-08</span><br><span class="line">009     2014-09</span><br><span class="line">010     2014-10</span><br><span class="line">011     2014-11</span><br><span class="line">012     2014-12</span><br><span class="line">013     =======</span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明： nl -b a -n rz 命令行号默认为六位，要调整位数可以加上参数 -w 3 调整为3位。</p>
</blockquote>
<h2 id="12-more"><a href="#12-more" class="headerlink" title="12. more"></a>12. more</h2><p>命令参数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+n       从笫n行开始显示</span><br><span class="line">-n       定义屏幕大小为n行</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost test]# cat log2012.log </span><br><span class="line">2012-01</span><br><span class="line">2012-02</span><br><span class="line">2012-03</span><br><span class="line">2012-04-day1</span><br><span class="line">2012-04-day2</span><br><span class="line">2012-04-day3</span><br><span class="line">======[root@localhost test]# more +3 log2012.log </span><br><span class="line">2012-03</span><br><span class="line">2012-04-day1</span><br><span class="line">2012-04-day2</span><br><span class="line">2012-04-day3</span><br><span class="line">======[root@localhost test]#</span><br></pre></td></tr></table></figure>
<p>设定每屏显示行数   more -5 log2012.log. </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># more -5 log2012.log </span></span><br><span class="line">2012-01</span><br><span class="line">2012-02</span><br><span class="line">2012-03</span><br><span class="line">2012-04-day1</span><br><span class="line">2012-04-day2</span><br></pre></td></tr></table></figure>
<p>列一个目录下的文件，由于内容太多，我们应该学会用more来分页显示。这得和管道 | 结合起来</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls <span class="_">-l</span>  | more -5</span><br></pre></td></tr></table></figure>
<h2 id="13-less"><a href="#13-less" class="headerlink" title="13. less"></a>13. less</h2><p>less 工具也是对文件或其它输出进行分页显示的工具，应该说是linux正统查看文件内容的工具，功能极其强大。</p>
<p>less 的用法比起 more 更加的有弹性。在 more 的时候，我们并没有办法向前面翻， 只能往后面看，但若使用了 less 时，就可以使用 [pageup] [pagedown] 等按键的功能来往前往后翻看文件，更容易用来查看一个文件的内容！</p>
<p>在 less 里头可以拥有更多的搜索功能，不止可以向下搜，也可以向上搜。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">less <span class="built_in">log</span>2013.log</span><br><span class="line"></span><br><span class="line">ps -ef |less</span><br><span class="line"></span><br><span class="line"><span class="built_in">history</span> | less</span><br></pre></td></tr></table></figure>
<p>输出文件除了最后n行的全部内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">head -n -6 <span class="built_in">log</span>2014.log</span><br></pre></td></tr></table></figure>
<h2 id="14-head"><a href="#14-head" class="headerlink" title="14. head"></a>14. head</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost test]# head -n 5 log2014.log </span><br><span class="line">2014-01</span><br><span class="line">2014-02</span><br><span class="line">2014-03</span><br><span class="line">2014-04</span><br><span class="line">2014-05[root@localhost test]#</span><br></pre></td></tr></table></figure>
<p>显示文件前n个字节  head -c 20 log2014.log</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># head -c 20 log2014.log</span></span><br><span class="line">2014-01</span><br><span class="line">2014-02</span><br><span class="line">2014</span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>输出文件除了最后n行的全部内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">head -n -6 log2014.log</span><br></pre></td></tr></table></figure>
<h2 id="15-tail"><a href="#15-tail" class="headerlink" title="15. tail"></a>15. tail</h2><p>显示文件末尾内容. tail -n 5 log2014.log</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># tail -n 5 log2014.log </span></span><br><span class="line">2014-09</span><br><span class="line">2014-10</span><br><span class="line">2014-11</span><br><span class="line">2014-12</span><br><span class="line">==============================[root@localhost <span class="built_in">test</span>]<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>循环查看文件内容 tail -f test.log</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="http://www.cnblogs.com/peida/tag/每日一linux命令/" target="_blank" rel="external">每日一linux命令</a></li>
<li><a href="http://www.cnblogs.com/peida/archive/2012/12/05/2803591.html" target="_blank" rel="external">每天一个linux命令目录</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[My Zsh Config Files]]></title>
      <url>http://iequa.com/2017/10/21/ops-zsh-config/</url>
      <content type="html"><![CDATA[<p> <code>~/.zprofile</code> and <code>~/.zshrc</code> custom config</p>
<a id="more"></a>
<h2 id="zprofile"><a href="#zprofile" class="headerlink" title=".zprofile"></a>.zprofile</h2><figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line"><span class="comment">###################################################</span></span><br><span class="line"><span class="comment">###       blair custom config @2017.10.21       ###</span></span><br><span class="line"><span class="comment">###################################################</span></span><br><span class="line"></span><br><span class="line">MS=/usr/<span class="built_in">local</span>/xsoft/software</span><br><span class="line"></span><br><span class="line"><span class="comment">### JAVA ###</span></span><br><span class="line">JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk/Contents/Home</span><br><span class="line">JAVA_BIN=<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line">PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/jre/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/jre/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME JAVA_BIN PATH CLASSPATH</span><br><span class="line"></span><br><span class="line"><span class="comment">### Maven ###</span></span><br><span class="line">M2_HOME=/usr/<span class="built_in">local</span>/xsoft/software/apache-maven</span><br><span class="line">MAVEN_HOME=<span class="variable">$M2_HOME</span></span><br><span class="line">M3_HOME=<span class="variable">$M2_HOME</span></span><br><span class="line">PATH=<span class="variable">$M3_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME M2_HOME PATH</span><br><span class="line"><span class="comment">#MAVEN_OPTS=-Xms128m -Xmx512m</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Tomcat ###</span></span><br><span class="line">CATALINA_HOME=/usr/<span class="built_in">local</span>/xsoft/software/apache-tomcat</span><br><span class="line">PATH=<span class="variable">$CATALINA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> CATALINA_HOME PATH</span><br><span class="line"></span><br><span class="line"><span class="comment">### Scala ###</span></span><br><span class="line"><span class="comment">#export SCALA_HOME=/usr/local/xsoft/software/scala</span></span><br><span class="line"><span class="comment">#export SCALA_HOME=/usr/local/Cellar/scala/2.11.5</span></span><br><span class="line"><span class="comment">#export PATH=$&#123;SCALA_HOME&#125;/bin:$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Spark ###</span></span><br><span class="line"><span class="built_in">export</span> SPARK_HOME=/usr/<span class="built_in">local</span>/xsoft/software/spark</span><br><span class="line"></span><br><span class="line"><span class="comment">### IPython ###</span></span><br><span class="line"><span class="built_in">alias</span> ipython=<span class="string">'python -m IPython'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Pyenv ###</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/Users/blair/.pyenv/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line"><span class="built_in">alias</span> pyenv_init=<span class="string">'eval "$(pyenv init -)" &amp;&amp; eval "$(pyenv virtualenv-init -)"'</span></span><br><span class="line">pyenv_init</span><br><span class="line"><span class="comment">#export PYENV_VIRTUALENV_DISABLE_PROMPT=1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Node.js ###</span></span><br><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span><br><span class="line"><span class="comment">#[ -s "$NVM_DIR/nvm.sh" ] &amp;&amp; \. "$NVM_DIR/nvm.sh"  # This loads nvm</span></span><br><span class="line"><span class="comment">#[ -s "$NVM_DIR/bash_completion" ] &amp;&amp; \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### LANG ###</span></span><br><span class="line"><span class="built_in">export</span> LC_ALL=en_US.UTF-8</span><br><span class="line"><span class="built_in">export</span> LANG=en_US.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment">### Fast Function ###</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># show ip</span></span><br><span class="line"><span class="built_in">alias</span> ip=<span class="string">'ipconfig getifaddr en0'</span></span><br><span class="line"><span class="built_in">alias</span> ip0=<span class="string">'ipconfig getifaddr en0'</span></span><br><span class="line"><span class="built_in">alias</span> ip1=<span class="string">'ipconfig getifaddr en1'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># shutdown</span></span><br><span class="line"><span class="built_in">alias</span> shuth=<span class="string">'sudo shutdown -h now'</span></span><br><span class="line"><span class="built_in">alias</span> shutr=<span class="string">'sudo shutdown -r now'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pip list</span></span><br><span class="line"><span class="built_in">alias</span> pipl=<span class="string">'pip list --format=columns'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lsof -i:port</span></span><br><span class="line"><span class="built_in">alias</span> lsofi=<span class="string">'lsof -i:'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># http_proxy</span></span><br><span class="line"><span class="built_in">alias</span> hp=<span class="string">"http_proxy=http://localhost:8123"</span></span><br><span class="line"><span class="built_in">alias</span> hps=<span class="string">"https_proxy=http://localhost:8123"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo</span></span><br><span class="line"><span class="built_in">alias</span> hx=<span class="string">'source ~/.nvm/nvm.sh'</span></span><br><span class="line"><span class="built_in">alias</span> hs=<span class="string">'hx &amp;&amp; cd ~/ghome/blog &amp;&amp; hexo s'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># deploy blog</span></span><br><span class="line"><span class="built_in">alias</span> db=<span class="string">'hx &amp;&amp; cd ~/ghome/blog &amp;&amp; hexo clean &amp;&amp; sh dp.sh'</span></span><br><span class="line"><span class="built_in">alias</span> dg=<span class="string">'cd ~/ghome/blog &amp;&amp; hexo clean &amp;&amp; sh dp.sh'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pyenv</span></span><br><span class="line"><span class="built_in">alias</span> pyenv_install_python_pre=<span class="string">'source $MS/custom-machine/pyenv-install.sh'</span></span><br><span class="line"><span class="built_in">alias</span> py2=<span class="string">'pyenv_init &amp;&amp; pyenv activate vpy2 &amp;&amp; clear &amp;&amp; python -V'</span></span><br><span class="line"><span class="built_in">alias</span> py3=<span class="string">'pyenv_init &amp;&amp; pyenv activate vpy3 &amp;&amp; clear &amp;&amp; python -V'</span></span><br><span class="line"><span class="built_in">alias</span> pyde=<span class="string">'pyenv deactivate'</span></span><br><span class="line"><span class="built_in">alias</span> pys=<span class="string">'pyenv activate vpy3 &amp;&amp; pyenv global system &amp;&amp; pyde &amp;&amp; python -V'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># zshrc</span></span><br><span class="line"><span class="built_in">alias</span> vzp=<span class="string">'vim ~/.zprofile'</span></span><br><span class="line"><span class="built_in">alias</span> szp=<span class="string">'source ~/.zprofile'</span></span><br></pre></td></tr></table></figure>
<h2 id="zshrc"><a href="#zshrc" class="headerlink" title=".zshrc"></a>.zshrc</h2><figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># If you come from bash you might have to change your $PATH.</span></span><br><span class="line"><span class="comment"># export PATH=$HOME/bin:/usr/local/bin:$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to your oh-my-zsh installation.</span></span><br><span class="line"><span class="built_in">export</span> ZSH=/Users/blair/.oh-my-zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set name of the theme to load. Optionally, if you set this to "random"</span></span><br><span class="line"><span class="comment"># it'll load a random theme each time that oh-my-zsh is loaded.</span></span><br><span class="line"><span class="comment"># See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes</span></span><br><span class="line">ZSH_THEME=<span class="string">"robbyrussell"</span></span><br><span class="line"><span class="comment"># by blair add @2017-10-10</span></span><br><span class="line"><span class="comment">#ZSH_THEME="ys" </span></span><br><span class="line">ZSH_THEME=<span class="string">"astro"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to use case-sensitive completion.</span></span><br><span class="line"><span class="comment"># CASE_SENSITIVE="true"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to use hyphen-insensitive completion. Case</span></span><br><span class="line"><span class="comment"># sensitive completion must be off. _ and - will be interchangeable.</span></span><br><span class="line"><span class="comment"># HYPHEN_INSENSITIVE="true"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable bi-weekly auto-update checks.</span></span><br><span class="line"><span class="comment"># DISABLE_AUTO_UPDATE="true"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to change how often to auto-update (in days).</span></span><br><span class="line"><span class="comment"># export UPDATE_ZSH_DAYS=13</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable colors in ls.</span></span><br><span class="line"><span class="comment"># DISABLE_LS_COLORS="true"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable auto-setting terminal title.</span></span><br><span class="line"><span class="comment"># DISABLE_AUTO_TITLE="true"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to enable command auto-correction.</span></span><br><span class="line"><span class="comment"># ENABLE_CORRECTION="true"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to display red dots whilst waiting for completion.</span></span><br><span class="line"><span class="comment"># COMPLETION_WAITING_DOTS="true"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you want to disable marking untracked files</span></span><br><span class="line"><span class="comment"># under VCS as dirty. This makes repository status check for large repositories</span></span><br><span class="line"><span class="comment"># much, much faster.</span></span><br><span class="line"><span class="comment"># DISABLE_UNTRACKED_FILES_DIRTY="true"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you want to change the command execution time</span></span><br><span class="line"><span class="comment"># stamp shown in the history command output.</span></span><br><span class="line"><span class="comment"># The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"</span></span><br><span class="line"><span class="comment"># HIST_STAMPS="mm/dd/yyyy"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Would you like to use another custom folder than $ZSH/custom?</span></span><br><span class="line"><span class="comment"># ZSH_CUSTOM=/path/to/new-custom-folder</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)</span></span><br><span class="line"><span class="comment"># Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/</span></span><br><span class="line"><span class="comment"># Example format: plugins=(rails git textmate ruby lighthouse)</span></span><br><span class="line"><span class="comment"># Add wisely, as too many plugins slow down shell startup.</span></span><br><span class="line">plugins=(git)</span><br><span class="line">plugins=(git autojump) <span class="comment"># by blair add @2017-10-10</span></span><br><span class="line"><span class="comment">#[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] &amp;&amp; . $(brew --prefix)/etc/profile.d/autojump.sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$ZSH</span>/oh-my-zsh.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># User configuration</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># export MANPATH="/usr/local/man:$MANPATH"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You may need to manually set your language environment</span></span><br><span class="line"><span class="comment"># export LANG=en_US.UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Preferred editor for local and remote sessions</span></span><br><span class="line"><span class="comment"># if [[ -n $SSH_CONNECTION ]]; then</span></span><br><span class="line"><span class="comment">#   export EDITOR='vim'</span></span><br><span class="line"><span class="comment"># else</span></span><br><span class="line"><span class="comment">#   export EDITOR='mvim'</span></span><br><span class="line"><span class="comment"># fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Compilation flags</span></span><br><span class="line"><span class="comment"># export ARCHFLAGS="-arch x86_64"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh</span></span><br><span class="line"><span class="comment"># export SSH_KEY_PATH="~/.ssh/rsa_id"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set personal aliases, overriding those provided by oh-my-zsh libs,</span></span><br><span class="line"><span class="comment"># plugins, and themes. Aliases can be placed here, though oh-my-zsh</span></span><br><span class="line"><span class="comment"># users are encouraged to define aliases within the ZSH_CUSTOM folder.</span></span><br><span class="line"><span class="comment"># For a full list of active aliases, run `alias`.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Example aliases</span></span><br><span class="line"><span class="comment"># alias zshconfig="mate ~/.zshrc"</span></span><br><span class="line"><span class="comment"># alias ohmyzsh="mate ~/.oh-my-zsh"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###################################################</span></span><br><span class="line"><span class="comment">###       blair custom config @2017.10.21       ###</span></span><br><span class="line"><span class="comment">###################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Fast Login Machine Function ###</span></span><br><span class="line"><span class="comment"># ssh add</span></span><br><span class="line"><span class="built_in">alias</span> sd=<span class="string">'ssh-add'</span></span><br><span class="line"><span class="built_in">alias</span> x2=<span class="string">'ssh loguser@192.168.***.*'</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Macos Terminal Set Shadowsocks]]></title>
      <url>http://iequa.com/2017/10/19/ops-mac-for-shadowsocks/</url>
      <content type="html"><![CDATA[<ol>
<li>first, you need to have vps</li>
<li>second, you need to have shadowsocks app</li>
</ol>
<a id="more"></a>
<p><img src="/images/ops/ops-vpn-shadowsocks.png" width="520" height="300" align="middle" img="">  </p>
<h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install polipo</span><br></pre></td></tr></table></figure>
<h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><p>设置每次登陆启动polipo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln -sfv /usr/local/opt/polipo/*.plist ~/Library/LaunchAgents</span><br></pre></td></tr></table></figure>
<p>修改文件 <code>/usr/local/opt/polipo/homebrew.mxcl.polipo.plist</code> 设置parentProxy</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</span><br><span class="line">&lt;plist version=&quot;1.0&quot;&gt;</span><br><span class="line">  &lt;dict&gt;</span><br><span class="line">    &lt;key&gt;Label&lt;/key&gt;</span><br><span class="line">    &lt;string&gt;homebrew.mxcl.polipo&lt;/string&gt;</span><br><span class="line">    &lt;key&gt;RunAtLoad&lt;/key&gt;</span><br><span class="line">    &lt;true/&gt;</span><br><span class="line">    &lt;key&gt;KeepAlive&lt;/key&gt;</span><br><span class="line">    &lt;true/&gt;</span><br><span class="line">    &lt;key&gt;ProgramArguments&lt;/key&gt;</span><br><span class="line">    &lt;array&gt;</span><br><span class="line">        &lt;string&gt;/usr/local/opt/polipo/bin/polipo&lt;/string&gt;</span><br><span class="line">        &lt;string&gt;socksParentProxy=localhost:1080&lt;/string&gt;</span><br><span class="line">    &lt;/array&gt;</span><br><span class="line">    &lt;!-- Set `ulimit -n 20480`. The default OS X limit is 256, that&apos;s</span><br><span class="line">         not enough for Polipo (displays &apos;too many files open&apos; errors).</span><br><span class="line">         It seems like you have no reason to lower this limit</span><br><span class="line">         (and unlikely will want to raise it). --&gt;</span><br><span class="line">    &lt;key&gt;SoftResourceLimits&lt;/key&gt;</span><br><span class="line">    &lt;dict&gt;</span><br><span class="line">      &lt;key&gt;NumberOfFiles&lt;/key&gt;</span><br><span class="line">      &lt;integer&gt;20480&lt;/integer&gt;</span><br><span class="line">    &lt;/dict&gt;</span><br><span class="line">  &lt;/dict&gt;</span><br><span class="line">&lt;/plist&gt;</span><br></pre></td></tr></table></figure>
<p>修改的地方是增加了 <code>&lt;string&gt;socksParentProxy=localhost:1080&lt;/string&gt;</code></p>
<h2 id="start-stop"><a href="#start-stop" class="headerlink" title="start / stop"></a>start / stop</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.polipo.plist</span><br><span class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.polipo.plist</span><br></pre></td></tr></table></figure>
<h2 id="setting-profile"><a href="#setting-profile" class="headerlink" title="setting profile"></a>setting profile</h2><p>vim ~/.zshrc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#export http_proxy=http://localhost:8123</span><br><span class="line">alias hp=&quot;http_proxy=http://localhost:8123&quot;</span><br></pre></td></tr></table></figure>
<p>source ~/.zshrc</p>
<h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜ hp curl ip.cn</span><br><span class="line">当前 IP：97.64.**.** 来自：美国</span><br></pre></td></tr></table></figure>
<h2 id="reference-article"><a href="#reference-article" class="headerlink" title="reference article"></a>reference article</h2><ul>
<li><a href="http://droidyue.com/blog/2016/04/04/set-shadowsocks-proxy-for-terminal/" target="_blank" rel="external">技术小黑屋</a></li>
<li><a href="https://segmentfault.com/a/1190000008449046" target="_blank" rel="external">Mac+shadowsocks+polipo快捷实现终端科学上网</a></li>
<li><a href="http://blog.liujiangbei.com/14532622130324.html" target="_blank" rel="external">VPS-install-shadowsocks-proxy</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Macos Sierra Uninstall App & Solve Allow apps Anywhere]]></title>
      <url>http://iequa.com/2017/10/19/ops-mac-sierra-some-tips/</url>
      <content type="html"><![CDATA[<p>Here are some tips to help you fun macos sierra</p>
<a id="more"></a>
<h2 id="MacOS-Sierra-amp-High-Sierra-Complete-Uninstall-App"><a href="#MacOS-Sierra-amp-High-Sierra-Complete-Uninstall-App" class="headerlink" title="MacOS Sierra &amp; High Sierra Complete Uninstall App"></a>MacOS Sierra &amp; High Sierra Complete Uninstall App</h2><blockquote>
<p>About This Mac -&gt; Storage -&gt; Manage -&gt; Applications -&gt; Delete</p>
</blockquote>
<h2 id="How-to-Allow-Apps-from-Anywhere-in-Gatekeeper-for-macOS-High-Sierra"><a href="#How-to-Allow-Apps-from-Anywhere-in-Gatekeeper-for-macOS-High-Sierra" class="headerlink" title="How to Allow Apps from Anywhere in Gatekeeper for macOS High Sierra"></a>How to Allow Apps from Anywhere in Gatekeeper for macOS High Sierra</h2><p>1). Open the Terminal app from the /Applications/Utilities/ folder and then enter the following command syntax:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>
<p>Hit return and authenticate with an admin password</p>
<p>2). Relaunch System Preferences and go to “Security &amp; Privacy” and the “General” tab</p>
<p>3). You will now see the “Anywhere” option under ‘Allow apps downloaded from:’ Gatekeeper options</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Pyenv Install For Virtual Multi Python Version Switch]]></title>
      <url>http://iequa.com/2017/10/18/ops-pyenv-install/</url>
      <content type="html"><![CDATA[<p>It needs to be used in both python2 and python3 environments, or different packages need to be installed in different projects.</p>
<a id="more"></a>
<p>we hope that the packages installed between different projects do not interfere with each other, and then you can configure the virtual environment of Python using pyenv.</p>
<h2 id="installation-pyenv"><a href="#installation-pyenv" class="headerlink" title="installation pyenv"></a>installation pyenv</h2><p><a href="https://github.com/pyenv/pyenv-installer" target="_blank" rel="external">Official Pyenv Install</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"~/.pyenv/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv init -)</span>"</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv virtualenv-init -)</span>"</span></span><br><span class="line"><span class="comment">#export PYENV_VIRTUALENV_DISABLE_PROMPT=1</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>按照官方文档配置即可，mac zsh 用户，将 以上三句放入到 .zshrc 即可。</p>
</blockquote>
<h2 id="see-available-versions"><a href="#see-available-versions" class="headerlink" title="see available versions"></a>see available versions</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyenv install -l</span><br></pre></td></tr></table></figure>
<h2 id="install-python-in-virtual-env"><a href="#install-python-in-virtual-env" class="headerlink" title="install python in virtual env"></a>install python in virtual env</h2><p>install python 2.7.14</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyenv install 2.7.14</span><br></pre></td></tr></table></figure>
<p>install python 3.6.3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyenv install 3.6.3</span><br></pre></td></tr></table></figure>
<blockquote>
<p> <a href="https://github.com/pyenv/pyenv/issues/993" target="_blank" rel="external">solve macOS High Sierra: ERROR: The Python ssl extension was not compiled. Missing the OpenSSL lib?</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># about zlib</span><br><span class="line">export CFLAGS=&quot;-I$(xcrun --show-sdk-path)/usr/include&quot;</span><br><span class="line"># about readline</span><br><span class="line">export CFLAGS=&quot;-I$(brew --prefix readline)/include $CFLAGS&quot;</span><br><span class="line">export LDFLAGS=&quot;-L$(brew --prefix readline)/lib $LDFLAGS&quot;</span><br><span class="line"># about openssl</span><br><span class="line">export CFLAGS=&quot;-I$(brew --prefix openssl)/include $CFLAGS&quot;</span><br><span class="line">export LDFLAGS=&quot;-L$(brew --prefix openssl)/lib $LDFLAGS&quot;</span><br><span class="line"># about SQLite (maybe not necessary)</span><br><span class="line">export CFLAGS=&quot;-I$(brew --prefix sqlite)/include $CFLAGS&quot;</span><br><span class="line">export LDFLAGS=&quot;-L$(brew --prefix sqlite)/lib $LDFLAGS&quot;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>Set or show the global Python version</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ pyenv global 3.6.3 or system</span><br></pre></td></tr></table></figure>
<blockquote>
<p>system stands for this mac</p>
</blockquote>
<p>show list all Python versions available to pyenv</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ pyenv versions</span><br></pre></td></tr></table></figure>
<h2 id="create-virtual-env"><a href="#create-virtual-env" class="headerlink" title="create virtual env"></a>create virtual env</h2><p>create current <code>3.6.3 version python</code> virtual env</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ pyenv virtualenv vpy3</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>vpy3</strong> is this virtual env alias</p>
</blockquote>
<h2 id="pyenv-activate-amp-deactivate"><a href="#pyenv-activate-amp-deactivate" class="headerlink" title="pyenv activate &amp; deactivate"></a>pyenv activate &amp; deactivate</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ pyenv activate vpy3</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这是时候就可以开始pip安装依赖包了</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜ pyenv activate vpy3</span><br><span class="line">pyenv-virtualenv: prompt changing will be removed from future release. configure `export PYENV_VIRTUALENV_DISABLE_PROMPT=1&apos; to simulate the behavior.</span><br><span class="line">(vpy3)</span><br><span class="line"># ~ [12:25:44]</span><br><span class="line">➜ python -V</span><br><span class="line">Python 3.6.3</span><br><span class="line">(vpy3)</span><br><span class="line"># ~ [12:25:49]</span><br><span class="line">➜ pyenv deactivate vpy3</span><br><span class="line"># ~ [12:25:57]</span><br><span class="line">➜ python -V</span><br><span class="line">Python 2.7.10</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mac OSX pip OSError [Errno 1] Operation not permitted]]></title>
      <url>http://iequa.com/2017/10/17/ops-mac-pip-OSError/</url>
      <content type="html"><![CDATA[<p>Solved Mac OSX pip OSError, When you pip install python lib about machine-learning package.</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install --upgrade gensim</span><br></pre></td></tr></table></figure>
<p>结果抛出下面这个异常报告</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">OSError: [Errno 1] Operation not permitted: &apos;/tmp/pip-pvGyz6-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/numpy, scipy, ...</span><br></pre></td></tr></table></figure>
<p>google 后解决方案 :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pip install --upgrade pip</span><br><span class="line"></span><br><span class="line">$ sudo pip install numpy --upgrade --ignore-installed</span><br><span class="line">$ sudo pip install scipy --upgrade --ignore-installed</span><br><span class="line">$ sudo pip install scikit-learn --upgrade --ignore-installed</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Common Useful Links]]></title>
      <url>http://iequa.com/2017/10/14/ops-common-links/</url>
      <content type="html"><![CDATA[<p>Here are some useful links</p>
<a id="more"></a>
<h2 id="NLP"><a href="#NLP" class="headerlink" title="NLP"></a>NLP</h2><ul>
<li><a href="https://github.com/explosion/sense2vec" target="_blank" rel="external">sense2vec</a></li>
<li><a href="https://www.zybuluo.com/hanxiaoyang/note/472184" target="_blank" rel="external">zybuluo hanxiaoyang</a></li>
<li><a href="https://radimrehurek.com/gensim/" target="_blank" rel="external">gensim</a></li>
</ul>
<h2 id="Friends"><a href="#Friends" class="headerlink" title="Friends"></a>Friends</h2><ul>
<li><a href="https://blog.fazero.me/" target="_blank" rel="external">fazero</a></li>
<li><a href="http://wuchong.me/" target="_blank" rel="external">ali wuchong</a></li>
</ul>
<h2 id="vps"><a href="#vps" class="headerlink" title="vps"></a>vps</h2><ul>
<li><a href="https://www.yuntionly.com/" target="_blank" rel="external">www.yuntionly.com</a></li>
<li><a href="https://www.wisevpn.net/" target="_blank" rel="external">www.wisevpn.net</a></li>
<li><a href="https://www.banwago.com/797.html" target="_blank" rel="external">www.banwago.com</a></li>
<li><a href="https://www.godaddy.com/" target="_blank" rel="external">www.godaddy.com</a></li>
</ul>
<h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><ul>
<li><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">廖雪峰 Python 3 </a></li>
<li><a href="https://github.com/elastic/elasticsearch-dsl-py" target="_blank" rel="external">elasticsearch-dsl-py</a></li>
<li><a href="https://pypi.python.org/pypi" target="_blank" rel="external">pypi.python.org/pypi</a></li>
<li><a href="https://github.com/pyenv/pyenv-installer" target="_blank" rel="external">install pyenv</a></li>
<li><a href="http://flask.pocoo.org/" target="_blank" rel="external">flask microframework</a></li>
</ul>
<blockquote>
<p>pip install elasticsearch_dsl==0.0.11</p>
</blockquote>
<h2 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h2><ul>
<li><a href="http://www.runoob.com/linux/linux-command-manual.html" target="_blank" rel="external">runoob linux</a></li>
</ul>
<h2 id="spark"><a href="#spark" class="headerlink" title="spark"></a>spark</h2><ul>
<li><a href="http://spark.apache.org/" target="_blank" rel="external">spark.apache.org</a></li>
<li><a href="http://spark.apache.org/docs/1.6.3/api/python/pyspark.sql.html#pyspark.sql.DataFrame" target="_blank" rel="external">python spark 1.6.3</a></li>
<li><a href="https://github.com/apache/spark" target="_blank" rel="external">github spark</a></li>
</ul>
<h2 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h2><ul>
<li><a href="https://www.zhihu.com/question/20021861" target="_blank" rel="external">macOS (OS X) 有哪些常用的快捷键？</a></li>
</ul>
<h2 id="blog"><a href="#blog" class="headerlink" title="blog"></a>blog</h2><ul>
<li><a href="https://dotblogs.com.tw/hatelove/2017/03/26/why-engineers-should-keep-blogging" target="_blank" rel="external">鼓励工程师写blog</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera 7 - Support Vector Machines]]></title>
      <url>http://iequa.com/2017/10/13/ml-coursera-ng-w7-svm/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p>From <code>Logistic Regression</code> to <code>Support Vector Machines</code></p>
<a id="more"></a>
<h2 id="1-Large-Margin-Classification"><a href="#1-Large-Margin-Classification" class="headerlink" title="1. Large Margin Classification"></a>1. Large Margin Classification</h2><p><strong>Alternation view of logistic regression</strong></p>
<p>$ \begin{align} h_\theta (x) = g({\theta^T x}) = \dfrac{1}{1 + e^{-\theta^T x}} \end{align}  \; , \; h_\theta (x) \in [0, 1] $ </p>
<p><img src="/images/ml/ml-ng-w3-02.png" alt=""></p>
<blockquote>
<p>$ y = 1 \; when \; h_\theta(x) = g(\theta^T x) \geq 0.5 \; when \; \theta^T x \geq 0 $.   </p>
<p>$ y = 0 \; when \; h_\theta(x) = g(\theta^T x) \le 0.5 \; when \; \theta^T x \le 0 $ </p>
</blockquote>
<p>We can compress our cost function’s two conditional cases into one case:</p>
<p>$ \mathrm{Cost}(h_\theta(x),y) = - y \cdot \log(h_\theta(x)) - (1 - y) \cdot \log(1 - h_\theta(x))$</p>
<p>We can fully write out our entire cost function as follows:</p>
<p>$<br>J(\theta) = - \frac{1}{m} \displaystyle \sum_{i=1}^m [y^{(i)}\log (h_\theta (x^{(i)})) + (1 - y^{(i)})\log (1 - h_\theta(x^{(i)}))]<br>$</p>
<h3 id="1-1-Optimization-Objective"><a href="#1-1-Optimization-Objective" class="headerlink" title="1.1 Optimization Objective"></a>1.1 Optimization Objective</h3><h3 id="1-2-Large-Margin-Intuition"><a href="#1-2-Large-Margin-Intuition" class="headerlink" title="1.2 Large Margin Intuition"></a>1.2 Large Margin Intuition</h3><h3 id="1-3-Mathematics-Behind-Large-Margin-Classification"><a href="#1-3-Mathematics-Behind-Large-Margin-Classification" class="headerlink" title="1.3 Mathematics Behind Large Margin Classification"></a>1.3 Mathematics Behind Large Margin Classification</h3><blockquote>
<p>大间距分类器</p>
</blockquote>
<h2 id="2-Kernels"><a href="#2-Kernels" class="headerlink" title="2. Kernels"></a>2. Kernels</h2><h3 id="2-1-Kernels-I"><a href="#2-1-Kernels-I" class="headerlink" title="2.1 Kernels I"></a>2.1 Kernels I</h3><h3 id="2-2-Kernels-II"><a href="#2-2-Kernels-II" class="headerlink" title="2.2 Kernels II"></a>2.2 Kernels II</h3><h2 id="3-SVMs-in-Practice"><a href="#3-SVMs-in-Practice" class="headerlink" title="3. SVMs in Practice"></a>3. SVMs in Practice</h2><h3 id="3-1-Using-An-SVM"><a href="#3-1-Using-An-SVM" class="headerlink" title="3.1 Using An SVM"></a>3.1 Using An SVM</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[My Blog Config.yml]]></title>
      <url>http://iequa.com/2017/10/08/ops-hexo-blog_config.yml/</url>
      <content type="html"><![CDATA[<p>hexo blog config.yml file</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: Home</span><br><span class="line">subtitle: 春有百花秋有月，夏有涼風冬有雪 .</span><br><span class="line">description: Everyone should not forget his dream</span><br><span class="line">author: Blair Chan</span><br><span class="line"><span class="comment">#avatar: /images/avatar.jpeg</span></span><br><span class="line"></span><br><span class="line">language: </span><br><span class="line">- en</span><br><span class="line">- zh-Hans</span><br><span class="line">- zh-tw</span><br><span class="line">timezone:</span><br><span class="line"></span><br><span class="line"><span class="comment">#leancloud_visitors:</span></span><br><span class="line"><span class="comment">#  enable: true</span></span><br><span class="line"><span class="comment">#  app_id: #&lt;AppID&gt;</span></span><br><span class="line"><span class="comment">#  app_key: #&lt;AppKEY&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#comments</span></span><br><span class="line">disqus_shortname: blairos-sn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line">url: http://iequa.com/</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="built_in">source</span>_dir: <span class="built_in">source</span></span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line">new_post_name: :title.md <span class="comment"># File name of new posts</span></span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line">external_link: <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">filename_<span class="keyword">case</span>: 0</span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">false</span></span><br><span class="line">  auto_detect: <span class="literal">false</span></span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">## theme: hexo-theme-next</span></span><br><span class="line"><span class="comment">## theme: yinwang</span></span><br><span class="line"><span class="comment">## theme: minos</span></span><br><span class="line">theme: blairos</span><br><span class="line"><span class="comment">## theme: jacman</span></span><br><span class="line"><span class="comment">## theme: landscape-plus</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:<span class="built_in">type</span>: git</span><br><span class="line">repository: https://github.com/52binge/52binge.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[My Vim Config File]]></title>
      <url>http://iequa.com/2017/10/04/ops-vimrc/</url>
      <content type="html"><![CDATA[<p>my vim custom config .vimrc file</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> nocompatible <span class="string">" 关闭 vi 兼容模式  </span><br><span class="line">syntax on        "</span> 自动语法高亮  </span><br><span class="line"><span class="built_in">set</span> number     <span class="string">" 显示行号         "</span> <span class="built_in">set</span> cursorline    突出显示当前行  </span><br><span class="line"><span class="built_in">set</span> ruler        <span class="string">" 打开状态栏标尺    (不错)  </span><br><span class="line">set shiftwidth=4 "</span> 设定 &lt;&lt; 和 &gt;&gt; 命令移动时的宽度为 4  </span><br><span class="line"><span class="built_in">set</span> smartindent  </span><br><span class="line"><span class="built_in">set</span> tabstop=4         <span class="string">" tabstop=4 设定 tab 长度为4  </span><br><span class="line">set softtabstop=4   </span><br><span class="line">set expandtab  </span><br><span class="line">set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936</span><br><span class="line">set nobackup     "</span> 覆盖文件时不备份  </span><br><span class="line"><span class="built_in">set</span> ignorecase smartcase    <span class="string">" 搜索时忽略大小写，但在有一个或以上大写字母时仍大小写敏感  </span><br><span class="line">"</span><span class="built_in">set</span> nowrapscan              <span class="string">" 禁止在搜索到文件两端时重新搜索  </span><br><span class="line">set nowrapscan              "</span> 禁止在搜索到文件两端时重新搜索  </span><br><span class="line"><span class="built_in">set</span> incsearch               <span class="string">" 输入搜索内容时就显示搜索结果  </span><br><span class="line">set hlsearch                "</span> 搜索时高亮显示被找到的文本  </span><br><span class="line"><span class="built_in">set</span> noerrorbells            <span class="string">" 关闭错误信息响铃  </span><br><span class="line">set novisualbell            "</span> 关闭使用可视响铃代替呼叫  </span><br><span class="line"><span class="built_in">set</span> t_vb=                   <span class="string">" 置空错误铃声的终端代码  </span><br><span class="line">set showmatch               "</span> 插入括号时，短暂地跳转到匹配的对应括号  </span><br><span class="line"><span class="string">" set matchtime=2             "</span> 短暂跳转到匹配括号的时间  </span><br><span class="line"><span class="built_in">set</span> magic                   <span class="string">" 设置魔术  </span><br><span class="line">set hidden                  "</span> 允许在有未保存的修改时切换缓冲区，此时的修改由 vim 负责保存  </span><br><span class="line"><span class="string">"set guioptions-=T           "</span> 隐藏工具栏  </span><br><span class="line"><span class="string">"set guioptions-=m           "</span> 隐藏菜单栏  </span><br><span class="line"><span class="built_in">set</span> smartindent             <span class="string">" 开启新行时使用智能自动缩进  </span><br><span class="line">set backspace=indent,eol,start  </span><br><span class="line">                            "</span> 不设定在插入状态无法用退格键和 Delete 键删除回车符  </span><br><span class="line"><span class="built_in">set</span> cmdheight=1             <span class="string">" 设定命令行的行数为 1  </span><br><span class="line">set laststatus=2            "</span> 显示状态栏 (默认值为 1, 无法显示状态栏)  </span><br><span class="line"><span class="built_in">set</span> statusline=\ %&lt;%F[%1*%M%*%n%R%H]%=\ %y\ %0(%&#123;&amp;fileformat&#125;\ %&#123;&amp;encoding&#125;\ %c:%l/%L%)\  </span><br><span class="line"><span class="string">" 设置在状态行显示的信息  </span><br><span class="line">"</span><span class="built_in">set</span> foldenable              <span class="string">" 开始折叠  </span><br><span class="line">"</span><span class="built_in">set</span> foldmethod=syntax       <span class="string">" 设置语法折叠  </span><br><span class="line">"</span><span class="built_in">set</span> foldcolumn=0            <span class="string">" 设置折叠区域的宽度  </span><br><span class="line">"</span>setlocal foldlevel=1        <span class="string">" 设置折叠层数为  </span><br><span class="line">"</span> <span class="built_in">set</span> foldclose=all           <span class="string">" 设置为自动关闭折叠                             </span><br><span class="line">"</span> nnoremap &lt;space&gt; @=((foldclosed(line(<span class="string">'.'</span>)) &lt; 0) ? <span class="string">'zc'</span> : <span class="string">'zo'</span>)&lt;CR&gt;  </span><br><span class="line"><span class="string">" 用空格键来开关折叠  </span><br><span class="line"></span><br><span class="line">set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936</span><br><span class="line">set termencoding=utf-8</span><br><span class="line">set encoding=utf-8  </span><br><span class="line">  </span><br><span class="line">"</span> <span class="built_in">return</span> OS <span class="built_in">type</span>, eg: windows, or linux, mac, et.st..  </span><br><span class="line"><span class="keyword">function</span>! MySys()  </span><br><span class="line">    <span class="keyword">if</span> has(<span class="string">"win16"</span>) || has(<span class="string">"win32"</span>) || has(<span class="string">"win64"</span>) || has(<span class="string">"win95"</span>)  </span><br><span class="line">       <span class="built_in">return</span> <span class="string">"windows"</span>  </span><br><span class="line">    elseif has(<span class="string">"unix"</span>)  </span><br><span class="line">       <span class="built_in">return</span> <span class="string">"linux"</span>  </span><br><span class="line">    endif  </span><br><span class="line">endfunction  </span><br><span class="line">  </span><br><span class="line"><span class="string">" 用户目录变量<span class="variable">$VIMFILES</span>  </span><br><span class="line">if MySys() == "</span>windows<span class="string">"  </span><br><span class="line">    let <span class="variable">$VIMFILES</span> = <span class="variable">$VIM</span>.'/vimfiles'  </span><br><span class="line">elseif MySys() == "</span>linux<span class="string">"  </span><br><span class="line">    let <span class="variable">$VIMFILES</span> = <span class="variable">$HOME</span>.'/.vim'  </span><br><span class="line">endif  </span><br><span class="line">  </span><br><span class="line">"</span> 设定doc文档目录  </span><br><span class="line"><span class="built_in">let</span> helptags=<span class="variable">$VIMFILES</span>.<span class="string">'/doc'</span>  </span><br><span class="line">  </span><br><span class="line"><span class="string">" 设置字体 以及中文支持  </span><br><span class="line">if has("</span>win32<span class="string">")  </span><br><span class="line">    set guifont=Inconsolata:h12:cANSI  </span><br><span class="line">endif  </span><br><span class="line">  </span><br><span class="line">"</span> 配置多语言环境  </span><br><span class="line"><span class="keyword">if</span> has(<span class="string">"multi_byte"</span>)  </span><br><span class="line">   <span class="string">" UTF-8 编码  </span><br><span class="line">    set encoding=utf-8  </span><br><span class="line">    set termencoding=utf-8  </span><br><span class="line">    set formatoptions+=mM  </span><br><span class="line">    set fencs=utf-8,gbk  </span><br><span class="line">  </span><br><span class="line">    if v:lang =~? '^\(zh\)\|\(ja\)\|\(ko\)'  </span><br><span class="line">          set ambiwidth=double  </span><br><span class="line">    endif  </span><br><span class="line">  </span><br><span class="line">    if has("</span>win32<span class="string">")  </span><br><span class="line">        source <span class="variable">$VIMRUNTIME</span>/delmenu.vim  </span><br><span class="line">           source <span class="variable">$VIMRUNTIME</span>/menu.vim  </span><br><span class="line">           language messages zh_CN.utf-8  </span><br><span class="line">    endif  </span><br><span class="line">    else  </span><br><span class="line">           echoerr "</span>Sorry, this version of (g)vim was not compiled with +multi_byte<span class="string">"  </span><br><span class="line">endif  </span><br><span class="line">  </span><br><span class="line">"</span> Buffers操作快捷方式!  </span><br><span class="line">nnoremap &lt;C-RETURN&gt; :bnext&lt;CR&gt;  </span><br><span class="line">nnoremap &lt;C-S-RETURN&gt; :bprevious&lt;CR&gt;  </span><br><span class="line"><span class="string">" Tab操作快捷方式!  </span><br><span class="line">nnoremap &lt;C-TAB&gt; :tabnext&lt;CR&gt;  </span><br><span class="line">nnoremap &lt;C-S-TAB&gt; :tabprev&lt;CR&gt;  </span><br><span class="line">"</span>关于tab的快捷键  </span><br><span class="line"><span class="string">" map tn :tabnext&lt;cr&gt;  </span><br><span class="line">"</span> map tp :tabprevious&lt;cr&gt;  </span><br><span class="line"><span class="string">" map td :tabnew .&lt;cr&gt;  </span><br><span class="line">"</span> map te :tabedit  </span><br><span class="line"><span class="string">" map tc :tabclose&lt;cr&gt;  </span><br><span class="line">"</span>窗口分割时,进行切换的按键热键需要连接两次,比如从下方窗口移动  </span><br><span class="line"><span class="string">"光标到上方窗口,需要&lt;c-w&gt;&lt;c-w&gt;k,非常麻烦,现在重映射为&lt;c-k&gt;,切换的  </span><br><span class="line">"</span>时候会变得非常方便.  </span><br><span class="line">nnoremap &lt;C-h&gt; &lt;C-w&gt;h  </span><br><span class="line">nnoremap &lt;C-j&gt; &lt;C-w&gt;j  </span><br><span class="line">nnoremap &lt;C-k&gt; &lt;C-w&gt;k  </span><br><span class="line">nnoremap &lt;C<span class="_">-l</span>&gt; &lt;C-w&gt;l  </span><br><span class="line"><span class="string">"一些不错的映射转换语法（如果在一个文件中混合了不同语言时有用）  </span><br><span class="line">nnoremap &lt;leader&gt;1 :set filetype=xhtml&lt;CR&gt;  </span><br><span class="line">nnoremap &lt;leader&gt;2 :set filetype=css&lt;CR&gt;  </span><br><span class="line">nnoremap &lt;leader&gt;3 :set filetype=javascript&lt;CR&gt;  </span><br><span class="line">nnoremap &lt;leader&gt;4 :set filetype=php&lt;CR&gt;  </span><br><span class="line">"</span> <span class="built_in">set</span> fileformats=unix,dos,mac  </span><br><span class="line"><span class="string">" nmap &lt;leader&gt;fd :se fileformat=dos&lt;CR&gt;  </span><br><span class="line">"</span> nmap &lt;leader&gt;fu :se fileformat=unix&lt;CR&gt;  </span><br><span class="line">  </span><br><span class="line"><span class="string">" use Ctrl+[l|n|p|cc] to list|next|previous|jump to count the result  </span><br><span class="line">"</span> map &lt;C-x&gt;l &lt;ESC&gt;:cl&lt;CR&gt;  </span><br><span class="line"><span class="string">" map &lt;C-x&gt;n &lt;ESC&gt;:cn&lt;CR&gt;  </span><br><span class="line">"</span> map &lt;C-x&gt;p &lt;ESC&gt;:cp&lt;CR&gt;  </span><br><span class="line"><span class="string">" map &lt;C-x&gt;c &lt;ESC&gt;:cc&lt;CR&gt;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">"</span> 让 Tohtml 产生有 CSS 语法的 html  </span><br><span class="line"><span class="string">" syntax/2html.vim，可以用:runtime! syntax/2html.vim  </span><br><span class="line">let html_use_css=1  </span><br><span class="line">"</span> Python 文件的一般设置，比如不要 tab 等  </span><br><span class="line">autocmd FileType python <span class="built_in">set</span> tabstop=4 shiftwidth=4 expandtab  </span><br><span class="line">autocmd FileType python map &lt;F12&gt; :!python %&lt;CR&gt;  </span><br><span class="line"><span class="string">" 选中状态下 Ctrl+c 复制  </span><br><span class="line">vmap &lt;C-c&gt; "</span>+y  </span><br><span class="line"><span class="string">" 打开javascript折叠  </span><br><span class="line">let b:javascript_fold=1  </span><br><span class="line">"</span> 打开javascript对dom、html和css的支持  </span><br><span class="line"><span class="built_in">let</span> javascript_<span class="built_in">enable</span>_domhtmlcss=1  </span><br><span class="line"><span class="string">" 设置字典 ~/.vim/dict/文件的路径  </span><br><span class="line">autocmd filetype javascript set dictionary=<span class="variable">$VIMFILES</span>/dict/javascript.dict  </span><br><span class="line">autocmd filetype css set dictionary=<span class="variable">$VIMFILES</span>/dict/css.dict  </span><br><span class="line">autocmd filetype php set dictionary=<span class="variable">$VIMFILES</span>/dict/php.dict  </span><br><span class="line">  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line">    <span class="string">" plugin - bufexplorer.vim Buffers切换  </span><br><span class="line">    "</span> \be 全屏方式查看全部打开的文件列表  </span><br><span class="line">    <span class="string">" \bv 左右方式查看   \bs 上下方式查看  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">    "</span> plugin - taglist.vim  查看函数列表，需要ctags程序  </span><br><span class="line">    <span class="string">" F4 打开隐藏taglist窗口  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line"><span class="keyword">if</span> MySys() == <span class="string">"windows"</span>                <span class="string">" 设定windows系统中ctags程序的位置  </span><br><span class="line">    let Tlist_Ctags_Cmd = '"</span><span class="string">'.$VIMRUNTIME.'</span>/ctags.exe<span class="string">"'  </span><br><span class="line">elseif MySys() == "</span>linux<span class="string">"              "</span> 设定windows系统中ctags程序的位置  </span><br><span class="line">    <span class="built_in">let</span> Tlist_Ctags_Cmd = <span class="string">'/usr/bin/ctags'</span>  </span><br><span class="line">endif  </span><br><span class="line">nnoremap &lt;silent&gt;&lt;F4&gt; :TlistToggle&lt;CR&gt;  </span><br><span class="line"><span class="built_in">let</span> Tlist_Show_One_File = 1            <span class="string">" 不同时显示多个文件的tag，只显示当前文件的  </span><br><span class="line">let Tlist_Exit_OnlyWindow = 1          "</span> 如果taglist窗口是最后一个窗口，则退出vim  </span><br><span class="line"><span class="built_in">let</span> Tlist_Use_Right_Window = 1         <span class="string">" 在右侧窗口中显示taglist窗口  </span><br><span class="line">let Tlist_File_Fold_Auto_Close=1       "</span> 自动折叠当前非编辑文件的方法列表  </span><br><span class="line"><span class="built_in">let</span> Tlist_Auto_Open = 0  </span><br><span class="line"><span class="built_in">let</span> Tlist_Auto_Update = 1  </span><br><span class="line"><span class="built_in">let</span> Tlist_Hightlight_Tag_On_BufEnter = 1  </span><br><span class="line"><span class="built_in">let</span> Tlist_Enable_Fold_Column = 0  </span><br><span class="line"><span class="built_in">let</span> Tlist_Process_File_Always = 1  </span><br><span class="line"><span class="built_in">let</span> Tlist_Display_Prototype = 0  </span><br><span class="line"><span class="built_in">let</span> Tlist_Compact_Format = 1  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">"</span> plugin - mark.vim 给各种tags标记不同的颜色，便于观看调式的插件。  </span><br><span class="line"><span class="string">" \m  mark or unmark the word under (or before) the cursor  </span><br><span class="line">"</span> \r  manually input a regular expression. 用于搜索.  </span><br><span class="line"><span class="string">" \n  clear this mark (i.e. the mark under the cursor), or clear all highlighted marks .  </span><br><span class="line">"</span> \*  当前MarkWord的下一个     \<span class="comment">#  当前MarkWord的上一个  </span></span><br><span class="line"><span class="string">" \/  所有MarkWords的下一个    \?  所有MarkWords的上一个  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">"</span> plugin - NERD_tree.vim 以树状方式浏览系统中的文件和目录  </span><br><span class="line"><span class="string">" :ERDtree 打开NERD_tree         :NERDtreeClose    关闭NERD_tree  </span><br><span class="line">"</span> o 打开关闭文件或者目录         t 在标签页中打开  </span><br><span class="line"><span class="string">" T 在后台标签页中打开           ! 执行此文件  </span><br><span class="line">"</span> p 到上层目录                   P 到根目录  </span><br><span class="line"><span class="string">" K 到第一个节点                 J 到最后一个节点  </span><br><span class="line">"</span> u 打开上层目录                 m 显示文件系统菜单（添加、删除、移动操作）  </span><br><span class="line"><span class="string">" r 递归刷新当前目录             R 递归刷新当前根目录  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line"><span class="string">" F3 NERDTree 切换  </span><br><span class="line">map &lt;F3&gt; :NERDTreeToggle&lt;CR&gt;  </span><br><span class="line">imap &lt;F3&gt; &lt;ESC&gt;:NERDTreeToggle&lt;CR&gt;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line"><span class="string">" plugin - NERD_commenter.vim   注释代码用的，  </span><br><span class="line">"</span> [count],cc 光标以下count行逐行添加注释(7,cc)  </span><br><span class="line"><span class="string">" [count],cu 光标以下count行逐行取消注释(7,cu)  </span><br><span class="line">"</span> [count],cm 光标以下count行尝试添加块注释(7,cm)  </span><br><span class="line"><span class="string">" ,cA 在行尾插入 /* */,并且进入插入模式。 这个命令方便写注释。  </span><br><span class="line">"</span> 注：count参数可选，无则默认为选中行或当前行  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">"</span><span class="built_in">let</span> NERDSpaceDelims=1       <span class="string">" 让注释符与语句之间留一个空格  </span><br><span class="line">"</span><span class="built_in">let</span> NERDCompact***yComs=1   <span class="string">" 多行注释时样子更好看  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line"><span class="string">" plugin - DoxygenToolkit.vim  由注释生成文档，并且能够快速生成函数标准注释  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_authorName=<span class="string">"Asins - asinsimple AT gmail DOT com"</span>  </span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_briefTag_funcName=<span class="string">"yes"</span>  </span><br><span class="line">map &lt;leader&gt;da :DoxAuthor&lt;CR&gt;  </span><br><span class="line">map &lt;leader&gt;df :Dox&lt;CR&gt;  </span><br><span class="line">map &lt;leader&gt;db :DoxBlock&lt;CR&gt;  </span><br><span class="line">map &lt;leader&gt;dc a /*  */&lt;LEFT&gt;&lt;LEFT&gt;&lt;LEFT&gt;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">"</span> plugin – ZenCoding.vim 很酷的插件，HTML代码生成  </span><br><span class="line"><span class="string">" 插件最新版：http://github.com/mattn/zencoding-vim  </span><br><span class="line">"</span> 常用命令可看：http://nootn.com/blog/Tool/23/  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line"><span class="string">" plugin – checksyntax.vim    JavaScript常见语法错误检查  </span><br><span class="line">"</span> 默认快捷方式为 F5  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">let g:checksyntax_auto = 0 "</span> 不自动检查  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">"</span> plugin - NeoComplCache.vim    自动补全插件  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">let g:AutoComplPop_NotEnableAtStartup = 1  </span><br><span class="line">let g:NeoComplCache_EnableAtStartup = 1  </span><br><span class="line">let g:NeoComplCache_SmartCase = 1  </span><br><span class="line">let g:NeoComplCache_TagsAutoUpdate = 1  </span><br><span class="line">let g:NeoComplCache_EnableInfo = 1  </span><br><span class="line">let g:NeoComplCache_EnableCamelCaseCompletion = 1  </span><br><span class="line">let g:NeoComplCache_MinSyntaxLength = 3  </span><br><span class="line">let g:NeoComplCache_EnableSkipCompletion = 1  </span><br><span class="line">let g:NeoComplCache_SkipInputTime = '0.5'  </span><br><span class="line">let g:NeoComplCache_SnippetsDir = <span class="variable">$VIMFILES</span>.'/snippets'  </span><br><span class="line">"</span> &lt;TAB&gt; completion.  </span><br><span class="line">inoremap &lt;expr&gt;&lt;TAB&gt; pumvisible() ? <span class="string">"\&lt;C-n&gt;"</span> : <span class="string">"\&lt;TAB&gt;"</span>  </span><br><span class="line"><span class="string">" snippets expand key  </span><br><span class="line">imap &lt;silent&gt; &lt;C-e&gt; &lt;Plug&gt;(neocomplcache_snippets_expand)  </span><br><span class="line">smap &lt;silent&gt; &lt;C-e&gt; &lt;Plug&gt;(neocomplcache_snippets_expand)  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line"><span class="string">" plugin - matchit.vim   对%命令进行扩展使得能在嵌套标签和语句之间跳转  </span><br><span class="line">"</span> % 正向匹配      g% 反向匹配  </span><br><span class="line"><span class="string">" [% 定位块首     ]% 定位块尾  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">"</span> plugin - vcscommand.vim   对%命令进行扩展使得能在嵌套标签和语句之间跳转  </span><br><span class="line"><span class="string">" SVN/git管理工具  </span><br><span class="line">"</span>-----------------------------------------------------------------  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">"</span> plugin – a.vim  </span><br><span class="line"><span class="string">"-----------------------------------------------------------------  </span><br><span class="line">  </span><br><span class="line">"</span>---------------------------------------------  </span><br><span class="line"><span class="string">"定义函数SetTitle，自动插入文件头  </span><br><span class="line">func SetTitle()  </span><br><span class="line">if &amp;filetype == 'c'  </span><br><span class="line">    call setline(1, "</span><span class="comment">#include &lt;stdio.h&gt;")  </span></span><br><span class="line">    call setline(2, <span class="string">"#include &lt;stdlib.h&gt;"</span>)  </span><br><span class="line">    call setline(3, <span class="string">""</span>)  </span><br><span class="line">    call setline(4, <span class="string">"int main() &#123;"</span>)  </span><br><span class="line">elseif &amp;filetype == <span class="string">'cpp'</span>  </span><br><span class="line">    call setline(1, <span class="string">"#include &lt;iostream&gt;"</span>)  </span><br><span class="line">    call setline(2, <span class="string">""</span>)  </span><br><span class="line">    call setline(3, <span class="string">"int main() &#123;"</span>)  </span><br><span class="line">elseif &amp;filetype == <span class="string">'sh'</span>  </span><br><span class="line">    call setline(1, <span class="string">"#!/bin/bash"</span>)  </span><br><span class="line">    call setline(2, <span class="string">""</span>)  </span><br><span class="line">elseif &amp;filetype == <span class="string">'py'</span>  </span><br><span class="line">    call setline(1, <span class="string">"#!coding:utf-8"</span>)  </span><br><span class="line">    call setline(2, <span class="string">""</span>)  </span><br><span class="line">endif  </span><br><span class="line">endfunc  </span><br><span class="line">  </span><br><span class="line">    <span class="built_in">set</span> completeopt=longest,menu  </span><br><span class="line">    <span class="string">"新建.c,.h,.sh,.java文件，自动插入文件头  </span><br><span class="line">    autocmd BufNewFile *.[ch],*.sh,*.cpp,*.java exec "</span>:call SetTitle()<span class="string">"  </span><br><span class="line">    "</span>---------------------------------------------  </span><br><span class="line">  </span><br><span class="line"><span class="string">"定义CompileRun函数，用来调用进行编译和运行  </span><br><span class="line">func! CompileRun()  </span><br><span class="line">    exec "</span>w<span class="string">"  </span><br><span class="line">    "</span>C程序  </span><br><span class="line">    <span class="keyword">if</span> &amp;filetype == <span class="string">'c'</span>  </span><br><span class="line">        <span class="built_in">exec</span> <span class="string">"!gcc % -g -o %&lt;.exe"</span>  </span><br><span class="line">        <span class="built_in">exec</span> <span class="string">"! ./%&lt;.exe"</span>  </span><br><span class="line">    elseif &amp;filetype == <span class="string">'cpp'</span>  </span><br><span class="line">        <span class="built_in">exec</span> <span class="string">"!g++ % -g -o %&lt;"</span>  </span><br><span class="line">        <span class="built_in">exec</span> <span class="string">"! ./%&lt;"</span>  </span><br><span class="line">        <span class="string">"Java程序  </span><br><span class="line">    elseif &amp;filetype == 'java'  </span><br><span class="line">        exec "</span>!javac %<span class="string">"  </span><br><span class="line">        exec "</span>!java %&lt;<span class="string">"  </span><br><span class="line">    endif  </span><br><span class="line">endfunc  </span><br><span class="line">"</span>结束定义CompileRun  </span><br><span class="line"><span class="string">"-------------------------  </span><br><span class="line">"</span> ======= 编译 &amp;&amp; 运行 ======= <span class="string">"  </span><br><span class="line">"</span> 编译源文件  </span><br><span class="line">func! CompileCode()  </span><br><span class="line">     <span class="built_in">exec</span> <span class="string">"w"</span>  </span><br><span class="line">     <span class="keyword">if</span> &amp;filetype == <span class="string">"c"</span>  </span><br><span class="line">         <span class="built_in">exec</span> <span class="string">"!gcc -Wall -std=c99 %&lt;.c -o %&lt;"</span>  </span><br><span class="line">     elseif &amp;filetype == <span class="string">"cpp"</span>  </span><br><span class="line">         <span class="built_in">exec</span> <span class="string">"!g++ -Wall -std=c++98 %&lt;.cpp -o %&lt;"</span>  </span><br><span class="line">     elseif &amp;filetype == <span class="string">"java"</span>  </span><br><span class="line">         <span class="built_in">exec</span> <span class="string">"!javac %&lt;.java"</span>  </span><br><span class="line">     endif  </span><br><span class="line">endfunc  </span><br><span class="line"><span class="string">" 运行可执行文件  </span><br><span class="line">func! RunCode()  </span><br><span class="line">    exec "</span>w<span class="string">"  </span><br><span class="line">    if &amp;filetype == "</span>c<span class="string">" || &amp;filetype == "</span>cpp<span class="string">" || &amp;filetype == "</span>haskell<span class="string">"  </span><br><span class="line">        exec "</span>! ./%&lt;<span class="string">"  </span><br><span class="line">    elseif &amp;filetype == "</span>java<span class="string">"  </span><br><span class="line">        exec "</span>!java %&lt;<span class="string">"  </span><br><span class="line">    endif  </span><br><span class="line">endfunc  </span><br><span class="line">  </span><br><span class="line">"</span>---------------------------------------------  </span><br><span class="line"><span class="string">" Ctrl + F9   一键保存, 编译  </span><br><span class="line">"</span> Ctrl + F10  一键保存，运行  </span><br><span class="line"><span class="string">" F9  编译 + 运行  </span><br><span class="line">"</span> F10 Debug  </span><br><span class="line">map&lt;C-F9&gt;:call CompileCode()&lt;CR&gt;  </span><br><span class="line">imap&lt;C-F9&gt; &lt;ESC&gt;:call CompileCode()&lt;CR&gt;  </span><br><span class="line">vmap&lt;C-F9&gt; &lt;ESC&gt;:call CompileCode()&lt;CR&gt;  </span><br><span class="line">map&lt;C-F10&gt;:call RunCode()&lt;CR&gt;  </span><br><span class="line">imap&lt;C-F10&gt; &lt;ESC&gt;:call RunCode()&lt;CR&gt;  </span><br><span class="line">vmap&lt;C-F10&gt; &lt;ESC&gt;:call RunCode()&lt;CR&gt;  </span><br><span class="line">map&lt;F9&gt;:call CompileRun()&lt;CR&gt;  </span><br><span class="line">imap&lt;F9&gt; &lt;ESC&gt;:call CompileRun()&lt;CR&gt;  </span><br><span class="line">vmap &lt;F9&gt; &lt;ESC&gt;:call CompileRun()&lt;CR&gt;  </span><br><span class="line">                                 <span class="string">"  </span><br><span class="line">"</span><span class="built_in">set</span> mouse=v <span class="string">" 鼠标支持</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Macos High Sierra 10.13 Work Environment Install]]></title>
      <url>http://iequa.com/2017/10/03/ops-mac10.13-install-env/</url>
      <content type="html"><![CDATA[<p>Enable Dragging With Three Finger : </p>
<blockquote>
<p>System Preferences -&gt; Accessibility -&gt; Mouse &amp; Trackpad -&gt; Trackpad Options.</p>
</blockquote>
<a id="more"></a>
<h2 id="1-Common-Soft"><a href="#1-Common-Soft" class="headerlink" title="1. Common Soft"></a>1. Common Soft</h2><ol>
<li>Chrome</li>
<li>NeteaseMusic</li>
<li>Baiduyun &amp; Aira2GUI</li>
<li>Microsoft_Office_2016_15.38.17090200_Installer.pkg</li>
</ol>
<blockquote>
<p>Google Chrome is up to date<br>Version 61.0.3163.100 (Official Build) (64-bit)</p>
<p>百度云破解限速 (Aria2GUI + chrome plugin)</p>
<p>Evernote 国际版与国内版分开管理的.</p>
</blockquote>
<h2 id="2-Dev-Tools"><a href="#2-Dev-Tools" class="headerlink" title="2. Dev Tools"></a>2. Dev Tools</h2><h3 id="2-1-general-dev-tool"><a href="#2-1-general-dev-tool" class="headerlink" title="2.1 general dev tool"></a>2.1 general dev tool</h3><ol>
<li>Macdown</li>
<li>Alfred</li>
<li>Atom</li>
<li>SubLime Text</li>
<li><a href="https://brew.sh/" target="_blank" rel="external">Homebrew</a></li>
<li>Iterm2</li>
<li>Oh-my-zsh</li>
<li><a href="https://feiyang.li/2017/02/26/jetbrains/index.html" target="_blank" rel="external">PyCharm &amp; IDEA</a></li>
<li>GNU_Octave_3.8.0-6.dmg</li>
</ol>
<blockquote>
<p>brew (install 过程会自动需要 Xcode 被安装)<br>brew install wget tree </p>
<p>wget <a href="https://bootstrap.pypa.io/get-pip.py" target="_blank" rel="external">https://bootstrap.pypa.io/get-pip.py</a> <br><br>sudo python get-pip.py</p>
</blockquote>
<h3 id="2-2-iterm-amp-zsh"><a href="#2-2-iterm-amp-zsh" class="headerlink" title="2.2 iterm &amp; zsh"></a>2.2 iterm &amp; zsh</h3><p><strong>Iterm2 Change Font</strong></p>
<blockquote>
<p>Iterm2 -&gt; Preference -&gt; Profiles -&gt; Text -&gt; Change Font -&gt; 17pt Courier New Bold</p>
</blockquote>
<p><strong>Iterm2 Hide scrollbars And title bar</strong></p>
<blockquote>
<p>Preference -&gt; Appearance </p>
<p>取消 show per-pane title bar with split panes.<br>勾选 Hide scrollbars</p>
</blockquote>
<p><strong>Iterm2 Color Presets</strong></p>
<blockquote>
<p>Iterm2 -&gt; Preference -&gt; Profiles -&gt; Color -&gt; Color Presets -&gt; your_theme</p>
<p>maybe Atom, Brogrammer, Darkside </p>
<p><a href="https://github.com/iplaces/astro-zsh-theme" target="_blank" rel="external">Zsh astro theme</a></p>
</blockquote>
<p><strong>oh-my-zsh 自带 git 插件，里面的针对git 的别名设置见</strong>:</p>
<blockquote>
<p>➜ &gt;vim .oh-my-zsh/plugins/git/git.plugin.zsh</p>
</blockquote>
<p><strong>oh-my-zsh autojump plugin install</strong></p>
<ol>
<li>brew install autojump</li>
<li>vim .zshrc</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plugins=(git autojump)</span><br><span class="line">[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] &amp;&amp; . $(brew --prefix)/etc/profile.d/autojump.sh</span><br></pre></td></tr></table></figure>
<p>then, source ~/.zshrc</p>
<p><strong>Reference Article</strong></p>
<blockquote>
<p><a href="http://iterm2colorschemes.com/" target="_blank" rel="external">Iterm2-color-schemes</a><br><a href="https://github.com/bahlo/iterm-colors" target="_blank" rel="external">Iterm-colors</a><br><a href="https://github.com/iplaces/astro-zsh-theme" target="_blank" rel="external">Zsh astro theme</a><br><a href="http://blog.csdn.net/rapheler/article/details/51505003" target="_blank" rel="external">使用 Zsh 的十大优点</a>.<br><a href="http://yijiebuyi.com/blog/b9b5e1ebb719f22475c38c4819ab8151.html" target="_blank" rel="external">oh-my-zsh配置你的zsh提高shell逼格终极选择</a>.<br><a href="http://huang-jerryc.com/2016/08/11/%E6%89%93%E9%80%A0%E9%AB%98%E6%95%88%E4%B8%AA%E6%80%A7Terminal%EF%BC%88%E4%B8%80%EF%BC%89%E4%B9%8B%20iTerm/" target="_blank" rel="external">打造高效个性Terminal（一）之 iTerm</a>.<br><a href="https://segmentfault.com/a/1190000006248107" target="_blank" rel="external">打造高效个性Terminal（二）之 zsh</a>.<br><a href="http://www.barretlee.com/blog/2015/03/30/autojump-in-mac/" target="_blank" rel="external">Mac下的效率工具autojump</a></p>
</blockquote>
<hr>
<h3 id="2-3-ssh-config"><a href="#2-3-ssh-config" class="headerlink" title="2.3 ssh config"></a>2.3 ssh config</h3><ol>
<li>ssh-keygen -t rsa -C “your-company-email-full-address”</li>
<li>~/.ssh/id_rsa.pub 粘贴到运维平台</li>
</ol>
<blockquote>
<p>mac iterm2 ssh 跳转失败, 解决办法 :</p>
<p>(1) 新建并编辑 .ssh/config, 并复制以下内容到 config文件中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host * </span><br><span class="line">ForwardAgent yes </span><br><span class="line">PasswordAuthentication yes </span><br><span class="line">StrictHostKeyChecking no </span><br><span class="line">HashKnownHosts yes </span><br><span class="line">Compression yes</span><br></pre></td></tr></table></figure>
<p>(2) cd ～/.ssh, 并在 terminal 中执行 ssh-add</p>
</blockquote>
<h3 id="2-4-navicat-for-MySQL"><a href="#2-4-navicat-for-MySQL" class="headerlink" title="2.4 navicat for MySQL"></a>2.4 navicat for MySQL</h3><p><img src="/images/ops/ops-ssh-general.png" alt="rds-general"></p>
<blockquote>
<p>Encoding 设置为 utf-8 则，查询数据库，汉字乱码，改为 Auto 解决。</p>
</blockquote>
<p><img src="/images/ops/ops-ssh-rds.png" alt="ssh-rds"></p>
<h2 id="3-Java"><a href="#3-Java" class="headerlink" title="3. Java"></a>3. Java</h2><ol>
<li><a href="http://blog.tibame.com/?p=2068" target="_blank" rel="external">JDK</a></li>
<li>Maven</li>
<li>Tomcat</li>
<li>Scala</li>
<li>Spark</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  software pwd</span><br><span class="line">/usr/local/xsoft/software</span><br><span class="line">➜  software ll</span><br><span class="line">total 0</span><br><span class="line">lrwxr-xr-x  apache-maven -&gt; /usr/local/xsoft/deploy/apache-maven-3.3.9</span><br><span class="line">lrwxr-xr-x  apache-tomcat -&gt; /usr/local/xsoft/deploy/apache-tomcat-7.0.59</span><br><span class="line">lrwxr-xr-x  scala -&gt; /usr/local/xsoft/deploy/scala-2.11.7</span><br><span class="line">lrwxr-xr-x  spark -&gt; /usr/local/xsoft/deploy/spark-1.6.3-bin-hadoop2.6</span><br><span class="line">➜  software</span><br></pre></td></tr></table></figure>
<h2 id="4-Blog"><a href="#4-Blog" class="headerlink" title="4. Blog"></a>4. Blog</h2><ol>
<li><a href="https://hexo.io/docs/" target="_blank" rel="external">hexo</a></li>
<li>Install Node.js</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Once nvm is installed, restart the terminal and run the following command to install Node.js:</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ nvm install v4.1.0</span><br><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<blockquote>
<p>v4.1.0 更合适 hexo</p>
</blockquote>
<h2 id="5-Python"><a href="#5-Python" class="headerlink" title="5. Python"></a>5. Python</h2><h3 id="5-1-this-mac-install-pip"><a href="#5-1-this-mac-install-pip" class="headerlink" title="5.1 this mac install pip"></a>5.1 this mac install pip</h3><p><a href="https://bootstrap.pypa.io/get-pip.py" target="_blank" rel="external">Python pip</a> , <code>sudo python get-pip.py</code></p>
<p>then, terminal input <code>pip list</code>.</p>
<blockquote>
<p>If exist warning:</p>
<p>DEPRECATION: The default format will switch to columns in the future. You can use –format=(legacy|columns) (or define a format=(legacy|columns) in your pip.conf under the [list] section) to disable this warning.</p>
<p>solve this warning:</p>
<p>~.vim ~/.pip/pip.conf<br>[list]<br>format=columns  </p>
</blockquote>
<h3 id="5-2-pyenv-install-package"><a href="#5-2-pyenv-install-package" class="headerlink" title="5.2 pyenv install package"></a>5.2 pyenv install package</h3><p><strong>First, you need to install python <code>pyenv</code> environment</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Python <span class="number">3.6</span><span class="number">.3</span></span><br><span class="line">(vpy3)</span><br><span class="line">➜</span><br><span class="line"></span><br><span class="line">pip install numpy</span><br><span class="line">pip install scipy</span><br><span class="line">pip install matplotlib</span><br><span class="line">pip install pandas</span><br><span class="line"></span><br><span class="line">pip install xlrd</span><br><span class="line">pip install xlwt</span><br><span class="line">pip install StatsModels</span><br><span class="line">pip install scikit-learn</span><br><span class="line"></span><br><span class="line">pip install jieba</span><br><span class="line">pip install --upgrade gensim</span><br></pre></td></tr></table></figure>
<blockquote>
<p>pip install elasticsearch==1.9</p>
</blockquote>
<p><strong>ipython</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install ipython</span><br></pre></td></tr></table></figure>
<blockquote>
<p>然后, 如 terminall input <code>ipython</code> 不存在, 则 pip show ipython,  python -m IPython 试试. </p>
</blockquote>
<p><strong>notebook</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#pip install --ignore-installed six</span></span><br><span class="line"><span class="comment">#pip install target-gsheet tap-fixerio</span></span><br><span class="line">pip install notebook</span><br></pre></td></tr></table></figure>
<blockquote>
<p>pip install notebook, 如 macos High Sierra 10.13 报错，则<br>pip install –ignore-installed six<br>pip install target-gsheet tap-fixerio<br>then, pip install notebook</p>
</blockquote>
<h2 id="8-Reference"><a href="#8-Reference" class="headerlink" title="8. Reference"></a>8. Reference</h2><ul>
<li><a href="https://brew.sh/" target="_blank" rel="external">Homebrew</a></li>
<li><a href="https://bootstrap.pypa.io/get-pip.py" target="_blank" rel="external">Get-pip</a></li>
<li><a href="https://feiyang.li/2017/02/26/jetbrains/index.html" target="_blank" rel="external">IntelliJ、Pycharm激活</a></li>
<li><a href="http://blog.tibame.com/?p=2068" target="_blank" rel="external">Mac OSX 安裝JDK</a></li>
<li><a href="https://hexo.io/docs/" target="_blank" rel="external">Hexo Doc</a></li>
<li><a href="http://www.jianshu.com/p/3e0206dd23ac" target="_blank" rel="external">Mac 上完整卸载Node.js</a></li>
<li><a href="http://10176523.cn/archives/50" target="_blank" rel="external">Mac OSX 完整卸载Node.js</a></li>
<li><a href="https://segmentfault.com/a/1190000004404505" target="_blank" rel="external">node版本管理工具nvm-Mac下安装及使用</a></li>
<li><a href="http://xclient.info/" target="_blank" rel="external">XClient.info Mac App</a></li>
<li><a href="https://stackoverflow.com/questions/32856194/ipython-on-macos-10-10-command-not-found" target="_blank" rel="external">Stackoverflow python on MacOS 10.10 - command not found</a></li>
<li><a href="/2016/08/02/ml-python-env/">Blair python install data mining env</a></li>
</ul>
<p>Macos NSNavRecentPlaces 内部自动生成的配置，别乱改。</p>
<blockquote>
<p>defaults write -g NSNavRecentPlaces ‘(“~/Desktop”, “/usr/local/xsoft/software”)’;</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Singapore IT environment]]></title>
      <url>http://iequa.com/2017/09/25/Singapore-for-it/</url>
      <content type="html"><![CDATA[<p>本文简短介绍了下 Singapore 的一些 IT 公司的情况</p>
<a id="more"></a>
<h2 id="1-Mozat"><a href="#1-Mozat" class="headerlink" title="1. Mozat"></a>1. Mozat</h2><blockquote>
<p>mozat致力于移动端社交应用和游戏应用，不断研发创新。</p>
</blockquote>
<h2 id="2-Garena"><a href="#2-Garena" class="headerlink" title="2. Garena"></a>2. Garena</h2><blockquote>
<p>游戏起家的综合互联网公司，估值达37.5亿美金</p>
</blockquote>
<h2 id="3-Carousell"><a href="#3-Carousell" class="headerlink" title="3. Carousell"></a>3. Carousell</h2><blockquote>
<p>闲鱼</p>
</blockquote>
<h2 id="4-Grabtaxi"><a href="#4-Grabtaxi" class="headerlink" title="4. Grabtaxi"></a>4. Grabtaxi</h2><blockquote>
<p>(获得滴滴、软银6亿美金投资)</p>
</blockquote>
<h2 id="5-iCarsClub"><a href="#5-iCarsClub" class="headerlink" title="5. iCarsClub"></a>5. iCarsClub</h2><blockquote>
<p>汽车借租iCarClub(7050万美元）</p>
</blockquote>
<p>鉴于新加坡的车主大都在自家车上花费了大把大把的钞票，对等私家车租赁这个想法也就应运而生了。</p>
<h2 id="6-Reebonz-4000万美元"><a href="#6-Reebonz-4000万美元" class="headerlink" title="6. Reebonz(4000万美元)"></a>6. Reebonz(4000万美元)</h2><p>当提到新加坡本地的电子商务网店时，除了上述提到的受Rocket Internet公司协助的两家电子商务零售商以外，最出名应该就是Reebonz。它和其他的电子商务网店不同的是它只关注奢侈品牌。Reebonz 在2014年3月收购了新加坡的在线奢侈品商店Clout Shoppe，扩大了自己的规模。</p>
<h2 id="7-MyRepublic（3750万美元）"><a href="#7-MyRepublic（3750万美元）" class="headerlink" title="7. MyRepublic（3750万美元）"></a>7. MyRepublic（3750万美元）</h2><blockquote>
<p>MyRepublic也许是这十家公司中最有野心的公司：它想成为新加坡第四大电信公司。它不满足只是一家本地的大公司，所以最近该公司为新西兰用户提供三个月免费的100兆位/秒的超速光纤宽带。我们还了解到，这家电信初创企业在一个月内就吸引了大约2000名新用户;不就的将来，它的年收入会是2014年三倍，达到1500万美元。2015年，MyRepublic将会打入亚洲的其它国家。</p>
</blockquote>
<h2 id="8-Bubbly-3900万美元"><a href="#8-Bubbly-3900万美元" class="headerlink" title="8. Bubbly(3900万美元)"></a>8. Bubbly(3900万美元)</h2><blockquote>
<p>对于Bubbly公司来说，也许它最想忘记的就是2014年的上半年。在那段时间，社交网络媒体初创企业Bubbly收到了各式各样的收购请求;并且，该公司解散了公司的管理团队，还达成一致协议对公司进行重组。公司的首席执行官Thomas Clayton开始把公司资产清算，几周之后，Bubbly公司就被Altruist Group收购，该集团在欧洲、非洲和亚洲提供电信服务，不过这次收购的条款没有对外披露。</p>
</blockquote>
<h2 id="9-Ninja-van"><a href="#9-Ninja-van" class="headerlink" title="9. Ninja van"></a>9. Ninja van</h2><p>成立于2014年的「最后一公里物流」公司 Ninja Van 两年内就拿到了两轮融资，这家技术驱动型公司使用算法来提供最好的物流路线并实时追踪订单，不仅解决了当地电商网站货品常常丢失的问题，还通过技术手段提高了物流配送效率。</p>
<h2 id="10-Lazada"><a href="#10-Lazada" class="headerlink" title="10. Lazada"></a>10. Lazada</h2><p>Lazada，东南亚地区最大的在线购物网站之一。获得德国创业孵化器RocketInternet桑威尔兄弟(SamwerBrothers)支持，Lazada的目标主要是印尼、马来西亚、菲律宾以及泰国用户。</p>
<h2 id="11-Zalora"><a href="#11-Zalora" class="headerlink" title="11. Zalora"></a>11. Zalora</h2><p>ZALORA是一个网上时装及美容产品购物平台,为男女顾客提供时装、饰物、鞋履及化妆护肤品。总部位于新加坡的ZALORA于不同地区设有分区网页,包括香港、新加坡、印尼、菲律宾、泰国、越南、马来西亚及文莱，到目前为止Zalora已经获得了拥有大量投资者的青睐。</p>
<p>Zalora的母公司于2014年上市，该公司的最新计划是和上述提到的项目Rocket Internet旗下另外四家流行的时尚品牌公司合并，这样一来便可成为全球的时尚团队。Rocket Intetrnet的首次公开募股便获得了82亿美元，这就意味着不久就会有越来越多的资金流入Zalora。</p>
<blockquote>
<p>2.38亿美元</p>
</blockquote>
<h2 id="12-ViSenze"><a href="#12-ViSenze" class="headerlink" title="12. ViSenze"></a>12. ViSenze</h2><p>视觉搜索和图像识别的公司 (产品主要服务Rakuten，Zalora等电商的推荐引擎和手机搜索应用)</p>
<p>ViSenze是一家非常重视技术发展的公司，技术团队内部会不定期举行技术分享会和深度训练。</p>
<h2 id="13-Wego（3450万美元）"><a href="#13-Wego（3450万美元）" class="headerlink" title="13. Wego（3450万美元）"></a>13. Wego（3450万美元）</h2><blockquote>
<p>2013年，旅游搜索公司Wego宣称，在其提供服务的52个市场上，每天起码有1000万个潜在预约客户。该公司于2014年中旬推出了自己的iOS应用和Android应用，很快这款应用的下载量就居印尼iOS应用商店下载量排行榜的榜首。</p>
</blockquote>
<h2 id="14-ViKi（2430万美元）"><a href="#14-ViKi（2430万美元）" class="headerlink" title="14. ViKi（2430万美元）"></a>14. ViKi（2430万美元）</h2><blockquote>
<p>视频聚合网<br>对于新加坡人而言，这个特别的众包视频字幕网站，是熟悉到不能再熟悉的日常浏览网站之一。Viki是2013年对新加坡公司进行大型收购中的璀璨之星，因为日本电商巨头Rakuten以2亿美元的价格收购了Viki。一年后，有关报道称Viki每个月活跃的用户有3500万，另外还有2500万移动用户;与该公司被收购之时相比，每月活跃用户增长了1300万，移动用户增长了1500万。</p>
</blockquote>
<h2 id="15-Neo-Innovation"><a href="#15-Neo-Innovation" class="headerlink" title="15. Neo Innovation"></a>15. Neo Innovation</h2><h2 id="16-Migme（3460万美元）"><a href="#16-Migme（3460万美元）" class="headerlink" title="16. Migme（3460万美元）"></a>16. Migme（3460万美元）</h2><blockquote>
<p>在过去的2014年里，社交娱乐平台Migme的发展是值得一提的。自去年的八月以来，它完成了几项重要的收购.12月，Migme拥有超过900万的MAU。该公司的目标是为了让客户体验更好玩的社交化电子商务。公司的首席执行官Steven Goh的愿望是建立一个像中国淘宝网那样的顾客对顾客的商业模式。</p>
</blockquote>
<h2 id="17-PropertyGuru"><a href="#17-PropertyGuru" class="headerlink" title="17. PropertyGuru"></a>17. PropertyGuru</h2><p>却有幸独占鳌头。最近，<a href="http://99.co公司加入新加坡房地产市场，成为了PropertyGuru最新的竞争对手。" target="_blank" rel="external">http://99.co公司加入新加坡房地产市场，成为了PropertyGuru最新的竞争对手。</a></p>
<h2 id="18-Redmart"><a href="#18-Redmart" class="headerlink" title="18. Redmart"></a>18. Redmart</h2><blockquote>
<p><a href="https://redmart.com/" target="_blank" rel="external">https://redmart.com/</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[LDA Topic Model]]></title>
      <url>http://iequa.com/2017/09/22/nlp-LDA/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p>Latent Dirichlet Allocation 主题模型理论:</p>
<ol>
<li>直观版</li>
<li>标准版</li>
<li>公式版</li>
</ol>
<a id="more"></a>
<blockquote>
<p>                                          据我推测，大部分人是可以撑过前两个版本的</p>
</blockquote>
<h2 id="1-什么是主题模型"><a href="#1-什么是主题模型" class="headerlink" title="1. 什么是主题模型"></a>1. 什么是主题模型</h2><p><img src="/images/nlp/lda-01.png" width="420" height="400" img=""></p>
<h3 id="1-1-直观版"><a href="#1-1-直观版" class="headerlink" title="1.1 直观版"></a>1.1 直观版</h3><p><code>场景</code> : 假设某企业想要招聘一个工程师，他们收到了一把简历，他们想直接通过简历来看谁是大牛，谁是彩笔 ?</p>
<p><code>特征</code> :</p>
<p>简历里通常包含这些个人特征 :</p>
<p><img src="/images/nlp/lda-02.png" width="490" height="400" img=""></p>
<p><code>判断基础</code> :</p>
<p><img src="/images/nlp/lda-04.png" width="400" height="200" img=""></p>
<p><code>总结公式</code> :</p>
<p><img src="/images/nlp/lda-05.png" width="700" height="400" img=""></p>
<blockquote>
<p>？</p>
</blockquote>
<h3 id="例子与理论的关系"><a href="#例子与理论的关系" class="headerlink" title="例子与理论的关系"></a>例子与理论的关系</h3><p><img src="/images/nlp/lda-04.png" width="400" height="200" img=""></p>
<p><img src="/images/nlp/lda-06.png" width="400" height="200" img=""></p>
<h2 id="2-什么是-LDA"><a href="#2-什么是-LDA" class="headerlink" title="2. 什么是 LDA ?"></a>2. 什么是 LDA ?</h2><p>Latent Dirichlet Allocation</p>
<p>            是一种无监督的贝叶斯模型</p>
<ol>
<li>是一种主题模型，它可以将文档集中每篇文档的主题按照概率分布的形式给出。</li>
<li>无监督学习算法，训练时需要手工标注训练集，需要的是文档集以及主题数量k即可。</li>
</ol>
<p>此外LDA的另一个优点则是: 每一个主题均可找出词语来描述它。                 </p>
<p>是一种词袋模型，即它认为一篇文档是由一组词构成的一个集合，一篇 Doc 可以包含多个Topic，文档中每个词都由其中一个主题生成。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python logging]]></title>
      <url>http://iequa.com/2017/09/21/python-logging/</url>
      <content type="html"><![CDATA[<p>该模块定义的函数和类为应用程序和库实现了一个灵活的事件日志系统。</p>
<a id="more"></a>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Naive Bayes For News Classification]]></title>
      <url>http://iequa.com/2017/08/23/nlp-bayes-2/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p>朴素贝叶斯，适用于新闻分类问题</p>
<p>$$<br>p(x)p(y|x) = p(y)p(x|y)<br>$$</p>
<a id="more"></a>
<h2 id="1-贝叶斯理论简单回顾"><a href="#1-贝叶斯理论简单回顾" class="headerlink" title="1. 贝叶斯理论简单回顾"></a>1. 贝叶斯理论简单回顾</h2><p>在我们有一大堆样本（包含特征和类别）的时候，我们非常容易通过统计得到  $p(特征|类别)$.<br>大家又都很熟悉下述公式：</p>
<p>$$<br>p(x)p(y|x) = p(y)p(x|y)<br>$$</p>
<p>所以做一个小小的变换</p>
<p>$$<br>p(特征)p(类别|特征) = p(类别)p(特征|类别)<br>$$</p>
<p>$$<br>p(类别|特征) = \frac{p(类别)p(特征|类别)}{p(特征)}<br>$$</p>
<h2 id="2-独立假设"><a href="#2-独立假设" class="headerlink" title="2. 独立假设"></a>2. 独立假设</h2><p>看起来很简单，但实际上，你的特征可能是很多维的</p>
<p>$$<br>p(features|class) = p({f_0, f_1, \ldots ,f_n}|c)<br>$$</p>
<p>就算是2个维度吧，可以简单写成</p>
<p>$$<br>p({f_0, f_1}|c) = p(f_1|c, f_0)p(f_0|c)<br>$$</p>
<p>加一个牛逼的假设：特征之间是独立的</p>
<p>$$<br>p({f_0, f_1}|c) = p(f_1|c)p(f_0|c)<br>$$</p>
<p>其实也就是：</p>
<p>$$<br>p({f_0, f_1, \ldots, f_n}|c) = \Pi^n_i p(f_i|c)<br>$$</p>
<h2 id="3-贝叶斯分类器"><a href="#3-贝叶斯分类器" class="headerlink" title="3. 贝叶斯分类器"></a>3. 贝叶斯分类器</h2><p>其实我们就是对每个类别计算一个概率 $p(ci)$ ，然后再计算所有特征的条件概率 $p(f_j|c_i)$ ，那么分类的时候我们就是依据贝叶斯找一个最可能的类别：</p>
<p>$$<br>p(class_i|{f_0, f_1, \ldots, f_n})= \frac{p(class_i)}{p({f_0, f_1, \ldots, f_n})} \Pi^n_j p(f_j|c_i)<br>$$</p>
<h2 id="4-文本分类问题"><a href="#4-文本分类问题" class="headerlink" title="4. 文本分类问题"></a>4. 文本分类问题</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Naive Bayes]]></title>
      <url>http://iequa.com/2017/08/10/nlp-bayes-1/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1. 引言"></a>1. 引言</h2><p>贝叶斯方法是一个历史悠久，有着坚实的理论基础的方法，同时处理很多问题时直接而又高效，很多高级 NLP 模型也可以从它演化而来。因此，学习贝叶斯方法，是研究 NLP 问题的一个非常好的切入口。</p>
<a id="more"></a>
<h2 id="2-贝叶斯公式"><a href="#2-贝叶斯公式" class="headerlink" title="2. 贝叶斯公式"></a>2. 贝叶斯公式</h2><p>贝叶斯公式就一行：</p>
<p>$$<br>P(Y|X)=\frac{P(X|Y)P(Y)}{P(X)}<br>$$</p>
<p>它其实是由以下的联合概率公式推导出来：</p>
<p>$$<br>P(Y,X)=P(Y|X)P(X)=P(X|Y)P(Y)<br>$$</p>
<p>其中 $P(Y)$ 叫做先验概率， $P(Y|X)$ 叫做后验概率， $P(Y,X)$ 叫做联合概率。</p>
<h2 id="3-机器学习视角理解贝叶斯公式"><a href="#3-机器学习视角理解贝叶斯公式" class="headerlink" title="3. 机器学习视角理解贝叶斯公式"></a>3. 机器学习视角理解贝叶斯公式</h2><p>把 $X$ 理解成 “$有某 feature$”<br>把 $Y$ 理解成 “$属于某类 label$”</p>
<blockquote>
<p>一般机器学习为题中都是 $X$ =&gt; 特征, $Y$ =&gt; 结果 对吧。</p>
<p>在最简单的二分类问题(是与否判定)下，我们将 $Y$ 理解成 $“属于某类”$ 的标签。<br>于是贝叶斯公式就变形成了下面的样子:</p>
</blockquote>
<p>$$<br>P(“属于某类”|“具有某特征”)=\frac{P(“具有某特征”|“属于某类”)P(“属于某类”)}{P(“具有某特征”)}<br>$$</p>
<p>而我们二分类问题的最终目的就是要判断 $P(“属于某类”|“具有某特征”)$ 是否大于1/2就够了。贝叶斯方法把计算 “$具有某特征的条件下属于某类$” 的概率转换成需要计算 “$属于某类的条件下具有某特征$” 的概率，而后者获取方法就简单多了，我们只需要找到一些包含已知特征标签的样本，即可进行训练。而样本的类别标签都是明确的，所以贝叶斯方法在机器学习里属于<code>有监督学习方法</code>。</p>
<h2 id="4-垃圾邮件识别"><a href="#4-垃圾邮件识别" class="headerlink" title="4. 垃圾邮件识别"></a>4. 垃圾邮件识别</h2><p>举个栗子 🌰</p>
<p>我们现在要对邮件进行分类，识别垃圾邮件和普通邮件，如果我们选择使用朴素贝叶斯分类器，那目标就是判断 $P(“垃圾邮件”|“具有某特征”)$ 是否大于1/2。</p>
<p>假设我们有垃圾邮件和正常邮件各1万封作为训练集。需要判断以下这个邮件是否属于垃圾邮件：</p>
<blockquote>
<p>“我司可办理正规发票（保真）17%增值税发票点数优惠！”</p>
</blockquote>
<p>也就是判断概率 $P(“垃圾邮件”|“我司可办理正规发票（保真）17\%增值税发票点数优惠！”)$ 是否大于1/2。</p>
<p>$$<br>P = \frac{垃圾邮件中出现这句话的次数}{垃圾邮件中出现这句话的次数+正常邮件中出现这句话的次数}<br>$$</p>
<blockquote>
<p>咳咳，有木有发现，转换成的这个概率，计算的方法：就是写个计数器，然后+1 +1 +1统计出所有垃圾邮件和正常邮件中出现这句话的次数啊！！！</p>
</blockquote>
<h2 id="5-分词"><a href="#5-分词" class="headerlink" title="5. 分词"></a>5. 分词</h2><p>一个很悲哀但是很现实的结论：<code>训练集是有限的，而句子的可能性则是无限的。所以覆盖所有句子可能性的训练集是不存在的</code>。</p>
<p>所以解决方法是？ $句子的可能性无限，但是词语就那么些$！！汉语常用字2500个，常用词语也就56000个(你终于明白小学语文老师的用心良苦了)。按人们的经验理解，两句话意思相近并不强求非得每个字、词语都一样。比如 $“我司可办理正规发票，17%增值税发票点数优惠！”$，这句话就比之前那句话少了“（保真）”这个词，但是意思基本一样。如果把这些情况也考虑进来，那样本数量就会增加，这就不方便我们计算了。</p>
<p>于是，我们可以不拿句子作为特征，而是拿句子里面的词语（组合）作为特征去考虑。比如 “$正规发票$” 可以作为一个单独的词语，“$增值税$” 也可以作为一个单独的词语等等。</p>
<blockquote>
<p>句子“我司可办理正规发票，17%增值税发票点数优惠！”就可以变成（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)）。</p>
</blockquote>
<p>于是你接触到了中文NLP中，最最最重要的技术之一：<strong><code>分词</code></strong>！！！也就是把一整句话拆分成更细粒度的词语来进行表示。另外，分词之后去除标点符号、数字甚至无关成分(停用词)是特征预处理中的一项技术。  </p>
<p>中文分词是一个专门的技术领域(我不会告诉你某搜索引擎厂码砖工有专门做分词的！！！)  </p>
<p>我们观察$（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)$，这可以理解成一个向量：向量的每一维度都表示着该 $特征词$ 在文本中的特定位置存在。这种将特征拆分成更小的单元，依据这些更灵活、更细粒度的特征进行判断的思维方式，在自然语言处理与机器学习中都是非常常见又有效的。</p>
<p>因此贝叶斯公式就变成了：</p>
<p>$$<br>P(“垃圾邮件”|（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)）<br>$$</p>
<p>$$<br>=\frac{P(（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)|”垃圾邮件”）P(“垃圾邮件”)}{P(（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)) }<br>$$</p>
<hr>
<p>$$<br>P(“正常邮件”|（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)）<br>$$</p>
<p>$$<br>=\frac{P(（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)|”正常邮件”）P(“正常邮件”)}{P(（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)) }<br>$$</p>
<h2 id="6-条件独立假设"><a href="#6-条件独立假设" class="headerlink" title="6. 条件独立假设"></a>6. 条件独立假设</h2><p>下面我们马上会看到一个非常简单粗暴的假设。</p>
<p>$P(（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)|”垃圾邮件”）$ 依旧不够好求，我们引进一个很朴素的近似。为了让公式显得更加紧凑，我们令字母 <code>S</code> 表示“垃圾邮件”,令字母 <code>H</code> 表示“正常邮件”。近似公式如下：</p>
<p>$$<br>P(（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)|S）<br>$$</p>
<p>$$<br>=P(“我”|S）×P(“司”|S）×P(“可”|S）×P(“办理”|S）×P(“正规发票”|S）<br>$$</p>
<p>$$<br>×P(“保真”|S）×P(“增值税”|S）×P(“发票”|S）×P(“点数”|S）×P(“优惠”|S)<br>$$</p>
<p>这就是传说中的条件独立假设。基于“正常邮件”的条件独立假设的式子与上式类似，此处省去。接着，将条件独立假设代入上面两个相反事件的贝叶斯公式。 </p>
<p>于是我们就只需要比较以下两个式子的大小：</p>
<p>$$<br>C = P(“我”|S)P(“司”|S)P(“可”|S)P(“办理”|S)P(“正规发票”|S)<br>$$</p>
<p>$$<br>×P(“保真”|S)P(“增值税”|S)P(“发票”|S)P(“点数”|S)P(“优惠”|S)P(“垃圾邮件”)<br>$$</p>
<hr>
<p>$$<br>\overline{C}=P(“我”|H)P(“司”|H)P(“可”|H)P(“办理”|H)P(“正规发票”|H)<br>$$</p>
<p>$$<br>×P(“保真”|H)P(“增值税”|H)P(“发票”|H)P(“点数”|H)P(“优惠”|H)P(“正常邮件”)<br>$$</p>
<p>厉(wo)害(cao)！酱紫处理后式子中的每一项都特别好求！只需要分别统计各类邮件中该关键词出现的概率就可以了！！！比如：</p>
<blockquote>
<p>$$<br>P(“发票”|S）=\frac{垃圾邮件中所有“发票”的次数}{垃圾邮件中所有词语的次数}<br>$$</p>
</blockquote>
<p>统计次数非常方便，而且样本数量足够大，算出来的概率比较接近真实。于是垃圾邮件识别的问题就可解了。</p>
<h2 id="7-Naive-Bayes，“Naive”在何处？"><a href="#7-Naive-Bayes，“Naive”在何处？" class="headerlink" title="7. Naive Bayes，“Naive”在何处？"></a>7. Naive Bayes，“Naive”在何处？</h2><p>加上条件独立假设的贝叶斯方法就是朴素贝叶斯方法（Naive Bayes）。 Naive的发音是“乃一污”，意思是“朴素的”、“幼稚的”、“蠢蠢的”。咳咳，也就是说，大神们取名说该方法是一种比较萌蠢的方法，为啥？</p>
<p>将句子（“我”,“司”,“可”,“办理”,“正规发票”) 中的 （“我”,“司”）与（“正规发票”）调换一下顺序，就变成了一个新的句子（“正规发票”,“可”,“办理”, “我”, “司”)。新句子与旧句子的意思完全不同。但由于乘法交换律，朴素贝叶斯方法中算出来二者的条件概率完全一样！计算过程如下：</p>
<p>$$<br>P(（“我”,“司”,“可”,“办理”,“正规发票”)|S) = P(“我”|S)P(“司”|S)P(“可”|S)P(“办理”|S)P(“正规发票”|S)<br>$$</p>
<p>$$<br>=P(“正规发票”|S)P(“可”|S)P(“办理”|S)P(“我”|S)P(“司”|S） =P(（“正规发票”,“可”,“办理”, “我”, “司”)|S)<br>$$</p>
<p>也就是说，在朴素贝叶斯眼里，“<code>我司可办理正规发票</code>” 与 “<code>正规发票可办理我司</code>” 完全相同。朴素贝叶斯失去了词语之间的顺序信息。这就相当于把所有的词汇扔进到一个袋子里随便搅和，贝叶斯都认为它们一样。因此这种情况也称作词袋子模型(<code>bag of words</code>)。</p>
<p>词袋子模型与人们的日常经验完全不同。比如，在条件独立假设的情况下，“<code>武松打死了老虎</code>” 与 “<code>老虎打死了武松</code>” 被它认作一个意思了。恩，朴素贝叶斯就是这么单纯和直接，对比于其他分类器，好像是显得有那么点萌蠢</p>
<h2 id="8-简单高效，吊丝逆袭"><a href="#8-简单高效，吊丝逆袭" class="headerlink" title="8. 简单高效，吊丝逆袭"></a>8. 简单高效，吊丝逆袭</h2><p>虽然说朴素贝叶斯方法萌蠢萌蠢的，但实践证明在垃圾邮件识别的应用还令人诧异地好。Paul Graham先生自己简单做了一个朴素贝叶斯分类器，“1000封垃圾邮件能够被过滤掉995封，并且没有一个误判”。（Paul Graham《黑客与画家》）</p>
<p>那个…效果为啥好呢？</p>
<blockquote>
<p>“有人对此提出了一个理论解释，并且建立了什么时候朴素贝叶斯的效果能够等价于非朴素贝叶斯的充要条件，这个解释的核心就是：有些独立假设在各个分类之间的分布都是均匀的所以对于似然的相对大小不产生影响；即便不是如此，也有很大的可能性各个独立假设所产生的消极影响或积极影响互相抵消，最终导致结果受到的影响不大。具体的数学公式请参考[这篇 paper][2]。”（刘未鹏《：平凡而又神奇的贝叶斯方法》）</p>
</blockquote>
<p>恩，这个分类器中最简单直接看似萌蠢的小盆友『朴素贝叶斯』，实际上却是简单、实用、且强大的。</p>
<h2 id="9-处理重复词语的三种方式"><a href="#9-处理重复词语的三种方式" class="headerlink" title="9. 处理重复词语的三种方式"></a>9. 处理重复词语的三种方式</h2><p>我们之前的 <font color="blue"> 垃圾邮件向量（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”) </font>，其中每个词都不重复。而这在现实中其实很少见。因为如果文本长度增加，或者分词方法改变，必然会有许多词重复出现，因此需要对这种情况进行进一步探讨。比如以下这段邮件：</p>
<blockquote>
<p>“代开发票。增值税发票，正规发票。” 分词后为向量： （“代开”,“发票”,“增值税”,“发票”,“正规”,“发票”）</p>
</blockquote>
<p>其中“发票”重复了三次。</p>
<h3 id="9-1-多项式模型"><a href="#9-1-多项式模型" class="headerlink" title="9.1 多项式模型"></a>9.1 多项式模型</h3><p>如果我们考虑重复词语的情况，<font color="blue">重复的词语我们视为其出现多次</font>，直接按条件独立假设的方式推导，则有</p>
<p>$$<br>P(（“代开”,“发票”,“增值税”,“发票”,“正规”,“发票”)|S）<br>$$</p>
<p>$$<br>=P(“代开””|S)P(“发票”|S)P(“增值税”|S)P(“发票”|S)P(“正规”|S)P(“发票”|S）<br>$$</p>
<p>$$<br>=P(“代开””|S)P^3(“发票”|S)P(“增值税”|S)P(“正规”|S)<br>$$</p>
<blockquote>
<p>注意这项 $P^3(“发票”|S)$</p>
</blockquote>
<h3 id="9-2-伯努利模型"><a href="#9-2-伯努利模型" class="headerlink" title="9.2 伯努利模型"></a>9.2 伯努利模型</h3><p>另一种更加简化的方法是将重复的词语都视为其只出现1次，</p>
<p>$$<br>P(（“代开”,“发票”,“增值税”,“发票”,“正规”,“发票”)|S）<br>$$</p>
<p>$$<br>=P(“发票”|S)P(“代开””|S)P(“增值税”|S)P(“正规”|S）<br>$$</p>
<p>统计计算 $P(“词语”|S)$ 时也是如此。</p>
<p>$$<br>P(“发票”|S）=\frac{出现“发票”的垃圾邮件的封数}{每封垃圾邮件中所有词出现次数（出现了只计算一次）的总和}<br>$$</p>
<p>这样的模型叫作 <font color="blue">伯努利模型</font>（又称为二项独立模型）。这种方式更加简化与方便。当然它丢失了词频的信息，因此效果可能会差一些。</p>
<h3 id="9-3-混合模型"><a href="#9-3-混合模型" class="headerlink" title="9.3 混合模型"></a>9.3 混合模型</h3><p>第三种方式是在计算句子概率时，不考虑重复词语出现的次数，但是在统计计算词语的概率$P(“词语”|S)$ 时，却考虑重复词语的出现次数，这样的模型可以叫作混合模型。</p>
<p><img src="/images/nlp/nlp-bayes-03.jpg" alt=""></p>
<p>具体实践中采用那种模型，关键看具体的业务场景，一个简单经验是，对于垃圾邮件识别，混合模型更好些。</p>
<h2 id="10-去除停用词与选择关键词"><a href="#10-去除停用词与选择关键词" class="headerlink" title="10. 去除停用词与选择关键词"></a>10. 去除停用词与选择关键词</h2><p>我们继续观察<strong>（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)</strong> 这句话。其实，像<strong>“我”、“可”</strong>之类词其实非常中性，无论其是否出现在垃圾邮件中都无法帮助判断的有用信息。所以可以直接不考虑这些典型的词。这些无助于我们分类的词语叫作 “停用词”（<code>Stop Words</code>）。这样可以减少我们训练模型、判断分类的时间。 于是之前的句子就变成了<strong>（“司”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”) </strong>。</p>
<p>我们进一步分析。以人类的经验，其实 <strong>“正规发票”、“发票”</strong> 这类的词如果出现的话，邮件作为垃圾邮件的概率非常大，可以作为我们区分垃圾邮件的“关键词”。而像 <strong>“司”、“办理”、“优惠”</strong> 这类的词则有点鸡肋，可能有助于分类，但又不那么强烈。如果想省事做个简单的分类器的话，则可以直接采用“关键词”进行统计与判断，剩下的词就可以先不管了。于是之前的垃圾邮件句子就变成了<strong>（“正规发票”,“发票”)</strong> 。这样就更加减少了我们训练模型、判断分类的时间，速度非常快。</p>
<p><strong>“停用词”和“关键词”一般都可以提前靠人工经验指定</strong>。不同的“停用词”和“关键词”训练出来<strong>的分类器</strong>的效果也会有些差异。</p>
<h2 id="11-浅谈平滑技术"><a href="#11-浅谈平滑技术" class="headerlink" title="11. 浅谈平滑技术"></a>11. 浅谈平滑技术</h2><p>我们来说个问题(中文NLP里问题超级多)，比如在计算以下独立条件假设的概率：</p>
<p>$$<br>P(（“我”,“司”,“可”,“办理”,“正规发票”)|S)<br>$$</p>
<p>$$<br>=P(“我”|S)P(“司”|S)P(“可”|S)P(“办理”|S)P(“正规发票”|S）<br>$$</p>
<p>我们扫描一下训练集，发现 <strong>“正规发票”这个词从出现过！！！，于是 $P(“正规发票”|S）=0$ …问题严重了，整个概率都变成0了！！！朴素贝叶斯方法面对一堆0，很凄惨地失效了…更残酷的是</strong> 这种情况其实很常见，<strong>因为哪怕训练集再大，也可能有覆盖不到的词语。本质上还是</strong>样本数量太少，不满足大数定律，计算出来的概率失真。为了解决这样的问题，一种分析思路就是直接不考虑这样的词语，但这种方法就相当于默认给 $P(“正规发票”|S）$ 赋值为1。其实效果不太好，大量的统计信息给浪费掉了。我们进一步分析，既然可以默认赋值为1，为什么不能默认赋值为一个很小的数？这就是平滑技术的基本思路，依旧保持着一贯的作风，朴实/土但是直接而有效。</p>
<p>对于伯努利模型，$P(“正规发票”|S)$ 的一种平滑算法是：</p>
<p>$$<br>P(“正规发票”|S）=\frac{出现“正规发票”的垃圾邮件的封数+1}{每封垃圾邮件中所有词出现次数（出现了只计算一次）的总和+2}<br>$$</p>
<p>对于多项式模型，$P(“正规发票”| S)$ 的一种平滑算法是：</p>
<p>$$<br>P(“发票”|S）=\frac{每封垃圾邮件中出现“发票”的次数的总和+1}{每封垃圾邮件中所有词出现次数（计算重复次数）的总和+被统计的词表的词语数量}<br>$$</p>
<p>说起来，平滑技术的种类其实非常多，有兴趣的话回头我们专门拉个专题讲讲好了。这里只提一点，就是所有的<strong>平滑技术都是给未出现在训练集中的词语一个估计的概率，而相应地调低其他已经出现的词语的概率</strong>。</p>
<p>平滑技术是因为数据集太小而产生的现实需求。<strong>如果数据集足够大，平滑技术对结果的影响将会变小</strong>。</p>
<h2 id="12-内容小结"><a href="#12-内容小结" class="headerlink" title="12. 内容小结"></a>12. 内容小结</h2><p>我们找了个最简单常见的例子：垃圾邮件识别，说明了一下朴素贝叶斯进行文本分类的思路过程。基本思路是先区分好训练集与测试集，对文本集合进行分词、去除标点符号等特征预处理的操作，然后使用条件独立假设，将原概率转换成词概率乘积，再进行后续的处理。</p>
<p>$$<br>贝叶斯公式 + 条件独立假设 = 朴素贝叶斯方法<br>$$</p>
<p>基于对重复词语在训练阶段与判断（测试）阶段的三种不同处理方式，我们相应的有伯努利模型、多项式模型和混合模型。在训练阶段，如果样本集合太小导致某些词语并未出现，我们可以采用平滑技术对其概率给一个估计值。而且并不是所有的词语都需要统计，我们可以按相应的“停用词”和“关键词”对模型进行进一步简化，提高训练和判断速度。</p>
<h2 id="13-匹配关键词识别spam？"><a href="#13-匹配关键词识别spam？" class="headerlink" title="13. 匹配关键词识别spam？"></a>13. 匹配关键词识别spam？</h2><p>有同学可能会问：“何必费这么大劲算那么多词的概率？直接看邮件中有没有‘代开发票’、‘转售发票’之类的关键词不就得了？如果关键词比较多就认为是垃圾邮件呗。”</p>
<p>其实关键词匹配的方法如果有效的话真不必用朴素贝叶斯。毕竟这种方法简单嘛，就是一个字符串匹配。从历史来看，之前没有贝叶斯方法的时候主要也是用关键词匹配。但是这种方法准确率太低。我们在工作项目中也尝试过用关键词匹配的方法去进行文本分类，发现大量误报。感觉就像扔到垃圾箱的邮件99%都是正常的！这样的效果不忍直视。而加一个朴素贝叶斯方法就可能把误报率拉低近一个数量级，体验好得不要不要的。</p>
<p>另一个原因是词语会随着时间不断变化。发垃圾邮件的人也不傻，当他们发现自己的邮件被大量屏蔽之后，也会考虑采用新的方式，如变换文字、词语、句式、颜色等方式来绕过反垃圾邮件系统。比如对于垃圾邮件“我司可办理正规发票，17%增值税发票点数优惠”,他们采用<strong>火星文：“涐司岢办理㊣規髮票，17%增値稅髮票嚸數優蕙”</strong>，那么字符串匹配的方法又要重新找出这些火星文，一个一个找出关键词，重新写一些匹配规则。更可怕的是，这些规则可能相互之间的耦合关系异常复杂，要把它们梳理清楚又是大一个数量级的工作量。等这些规则失效了又要手动更新新的规则……<strong>无穷无尽猫鼠游戏最终会把猫给累死</strong>。</p>
<p>而朴素贝叶斯方法却显示出无比的优势。因为它是基于统计方法的，只要训练样本中有更新的垃圾邮件的新词语，哪怕它们是火星文，都能自动地把哪些更敏感的词语（如“髮”、“㊣”等）给凸显出来，并根据统计意义上的敏感性给他们分配适当的权重 ，这样就不需要什么人工了，非常省事。你只需要时不时地拿一些最新的样本扔到训练集中，重新训练一次即可。</p>
<blockquote>
<p>小补充一下，对于火星文、同音字等替代语言，一般的分词技术可能会分得不准，最终可能只把一个一个字给分出来，成为“分字”。效果可能不会太好。也可以用过n-gram之类的语言模型，拿到最常见短语。当然，对于英文等天生自带空格来间隔单词的语言，分词则不是什么问题，使用朴素贝叶斯方法将会更加顺畅。</p>
</blockquote>
<h2 id="14-实际工程的tricks"><a href="#14-实际工程的tricks" class="headerlink" title="14. 实际工程的tricks"></a>14. 实际工程的tricks</h2><p>应用朴素贝叶斯方法的过程中，一些tricks能显著帮助工程解决问题。我们毕竟经验有限，无法将它们全都罗列出来，只能就所知的一点点经验与大家分享，欢迎批评指正。</p>
<h3 id="14-1-trick1：取对数"><a href="#14-1-trick1：取对数" class="headerlink" title="14.1 trick1：取对数"></a>14.1 trick1：取对数</h3><p>我们提到用来识别垃圾邮件的方法是比较以下两个概率的大小（字母S表示“垃圾邮件”,字母H表示“正常邮件”）：</p>
<p>$$<br>C = P(“我”|S)P(“司”|S)P(“可”|S)P(“办理”|S)P(“正规发票”|S)<br>$$</p>
<p>$$<br>×P(“保真”|S)P(“增值税”|S)P(“发票”|S)P(“点数”|S)P(“优惠”|S)P(“垃圾邮件”)<br>$$</p>
<p>$$<br>\overline{C}=P(“我”|H)P(“司”|H)P(“可”|H)P(“办理”|H)P(“正规发票”|H)<br>$$</p>
<p>$$<br>×P(“保真”|H)P(“增值税”|H)P(“发票”|H)P(“点数”|H)P(“优惠”|H)P(“正常邮件”)<br>$$</p>
<p>但这里进行了<strong>很多乘法运算，计算的时间开销比较大</strong>。尤其是对于篇幅比较长的邮件，几万个数相乘起来还是非常花时间的。如果能把<strong>这些乘法变成加法则方便得多</strong>。刚好数学中的对数函数log就可以实现这样的功能。两边同时取对数（本文统一取底数为2），则上面的公式变为：</p>
<p>$$<br>log{C} = log{P(“我”|S)}+log{P(“司”|S)}+log{P(“可”|S)}+log{P(“办理”|S)}+log{P(“正规发票”|S)}<br>$$</p>
<p>$$<br>+log{P(“保真”|S)}+log{P(“增值税”|S)}+log{P(“发票”|S)}+log{P(“点数”|S)}+log{P(“优惠”|S)}+log{P(“垃圾邮件”)}<br>$$</p>
<p>$$<br>log{\overline{C}}=log{P(“我”|H)}+log{P(“司”|H)}+log{P(“可”|H)}+log{P(“办理”|H)}+log{P(“正规发票”|H)}<br>$$</p>
<p>$$<br>+log{P(“保真”|H)}+log{P(“增值税”|H)}+log{P(“发票”|H)}+log{P(“点数”|H)}+log{P(“优惠”|H)}+log{P(“正常邮件”)}<br>$$</p>
<p>有同学可能要叫了：“做对数运算岂不会也很花时间？”的确如此，但是可以在训练阶段直接计算  $logP$  ，然后把他们存在一张大的hash表里。<strong>在判断的时候直接提取hash表中已经计算好的对数概率，然后相加即可。这样使得判断所需要的计算时间被转移到了训练阶段</strong>，实时运行的时候速度就比之前快得多，这可不止几个数量级的提升。</p>
<h3 id="14-2-trick2：转换为权重"><a href="#14-2-trick2：转换为权重" class="headerlink" title="14.2 trick2：转换为权重"></a>14.2 trick2：转换为权重</h3><p>对于二分类，我们还可以继续提高判断的速度。既然要比较 $log$ 和 $log{\overline{C}}$ 的大小，那就可以直接将上下两式相减，并继续化简：</p>
<p>$$<br>log{\frac{C}{\overline{C}}}=log{\frac{P(“我”|S)}{P(“我”|H)}}+log{\frac{P(“司”|S)}{P(“司”|H)}}+log{\frac{P(“可”|S)}{P(“可”|H)}}+log{\frac{P(“办理”|S)}{P(“办理”|H)}}+log{\frac{P(“正规发票”|S)}{P(“正规发票”|H)}}<br>$$</p>
<p>$$<br>+log{\frac{P(“保真”|S)}{P(“保真”|H)}}+log{\frac{P(“增值税”|S)}{P(“增值税”|H)}}+log{\frac{P(“发票”|S)}{P(“发票”|H)}}+log{\frac{P(“点数”|S)}{P(“点数”|H)}}+log{\frac{P(“优惠”|S)}{P(“优惠”|H)}}+log{\frac{P(“正常邮件”|S)}{P(“正常邮件”)}}<br>$$</p>
<p>$log{\frac{C}{\overline{C}}}$如果大于0则属于垃圾邮件。我们可以把其中每一项作为其对应词语的权重，比如 $log{\frac{P(“发票”|S)}{P(“发票”|H)}}$  就可以作为词语“发票”的权重，权重越大就越说明“发票”更可能是与“垃圾邮件”相关的特征。这样可以根据权重的大小来评估和筛选显著的特征，比如关键词。而这些权重值可以直接提前计算好而存在hash表中 。判断的时候直接将权重求和即可。</p>
<p>关键词hash表的样子如下，左列是权重，右列是其对应的词语，权重越高的说明越“关键”：</p>
<p><img src="/images/nlp/nlp-bayes-04.jpg" alt=""></p>
<h3 id="14-3-trick3：选取topk的关键词"><a href="#14-3-trick3：选取topk的关键词" class="headerlink" title="14.3 trick3：选取topk的关键词"></a>14.3 trick3：选取topk的关键词</h3><p>前文说过可以通过提前选取关键词来提高判断的速度。有一种方法可以省略提前选取关键词的步骤，就是直接选取一段文本中权重最高的K个词语，将其权重进行加和。比如Paul Graham 在《黑客与画家》中是选取邮件中权重最高的15个词语计算的。</p>
<p>通过权重hash表可知，如果是所有词语的权重，则权重有正有负。如果只选择权重最高的 $K$ 个词语，则它们的权重基本都是正的。所以就不能像之前那样判断 $log{\frac{C}{\overline{C}}}$ 是否大于0来区分邮件了。而这需要依靠经验选定一个正数的阈值（门槛值） ，依据 $log{\frac{C}{\overline{C}}}$  与该门槛值的大小来识别垃圾邮件。</p>
<p>如下图所示，蓝色点代表垃圾邮件，绿色点代表正常邮件，横坐标为计算出来的 $log{\frac{C}{\overline{C}}}$  值，中间的红线代表阈值。</p>
<p><img src="/images/nlp/nlp-bayes-07.jpg" style="width:500px; height:250px;"> </p>
<blockquote>
<p>k 的选取，需要你自己判断。可以通过交叉验证来判断。</p>
</blockquote>
<h3 id="14-4-trick4：分割样本"><a href="#14-4-trick4：分割样本" class="headerlink" title="14.4 trick4：分割样本"></a>14.4 trick4：分割样本</h3><p>选取topk个词语的方法对于篇幅变动不大的邮件样本比较有效。但是对篇幅过大或者过小的邮件则会有判断误差。</p>
<p>比如这个垃圾邮件的例子：（“我”,“司”,“可”,“办理”,“正规发票”,“保真”,“增值税”,“发票”,“点数”,“优惠”)。分词出了10个词语，其中有“正规发票”、“发票”2个关键词。关键词的密度还是蛮大的，应该算是敏感邮件。但因为采用最高15个词语的权重求和，并且相应的阈值是基于15个词的情况有效，可能算出来的结果还小于之前的阈值，这就造成漏判了。  </p>
<p>类似的，如果一封税务主题的邮件有1000个词语，其中只有“正规发票”、“发票”、“避税方法”3个权重比较大的词语，它们只是在正文表述中顺带提到的内容。关键词的密度被较长的篇幅稀释了，应该算是正常邮件。但是却被阈值判断成敏感邮件，造成误判了。<br>这两种情况都说明topk关键词的方法需要考虑篇幅的影响。这里有许多种处理方式，它们的基本思想都是选取词语的个数及对应的阈值要与篇幅的大小成正比，本文只介绍其中一种方方法：  </p>
<p>对于长篇幅邮件，按一定的大小，比如每500字，将其分割成小的文本段落，再对小文本段落采用topk关键词的方法。只要其中有一个小文本段落超过阈值就判断整封邮件是垃圾邮件。  </p>
<p>对于超短篇幅邮件，比如50字，可以按篇幅与标准比较篇幅的比例来选取topk，以确定应该匹配关键词语的个数。比如选取  50500×15≈250500×15≈2  个词语进行匹配，相应的阈值可以是之前阈值的  215215  。以此来判断则更合理。</p>
<h3 id="14-5-trick5：位置权重"><a href="#14-5-trick5：位置权重" class="headerlink" title="14.5 trick5：位置权重"></a>14.5 trick5：位置权重</h3><h3 id="14-6-trick6：蜜罐"><a href="#14-6-trick6：蜜罐" class="headerlink" title="14.6 trick6：蜜罐"></a>14.6 trick6：蜜罐</h3><p>我们通过辛辛苦苦的统计与计算，好不容易得到了不同词语的权重。然而这并不是一劳永逸的。我们我们之前交代过，词语及其权重会随着时间不断变化，需要时不时地用最新的样本来训练以更新词语及其权重。</p>
<p>而搜集最新垃圾邮件有一个技巧，就是随便注册一些邮箱，然后将它们公布在各大论坛上。接下来就坐等一个月，到时候收到的邮件就绝大部分都是垃圾邮件了（好奸诈）。再找一些正常的邮件，基本就能够训练了。这些用于自动搜集垃圾邮件的邮箱叫做“蜜罐”。“蜜罐”是网络安全领域常用的手段，因其原理类似诱捕昆虫的装有蜜的罐子而得名。比如杀毒软件公司会利用蜜罐来监视或获得计算机网络中的病毒样本、攻击行为等。</p>
<h2 id="15-贝叶斯方法的思维方式"><a href="#15-贝叶斯方法的思维方式" class="headerlink" title="15. 贝叶斯方法的思维方式"></a>15. 贝叶斯方法的思维方式</h2><h3 id="15-1-逆概问题"><a href="#15-1-逆概问题" class="headerlink" title="15.1 逆概问题"></a>15.1 逆概问题</h3><p>$$<br>P(Y|X)=\frac{P(X|Y)P(Y)}{P(X)}<br>$$</p>
<p>先不考虑先验概率 $P(Y)$ 与 $P(X)$ ，观察两个后验概率 $P(Y|X)$ 与 $P(X|Y)$，可见贝叶斯公式能够揭示两个相反方向的条件概率之间的转换关系。</p>
<ul>
<li><p>从贝叶斯历史来看, 其就是为了处理所谓 “<code>逆概</code>” 问题而诞生的。比如 $P(Y|X)$  不能通过直接观测来得到结果，而 $P(X|Y)$ 却容易通过直接观测得到结果，就可以通过贝叶斯公式从间接地观测对象去推断不可直接观测的对象的情况。</p>
</li>
<li><p><code>人话版本</code>: 基于邮件的文本内容判断其属于垃圾邮件的概率不好求（不可通过直接观测、统计得到），但是基于已经搜集好的垃圾邮件样本，去统计（直接观测）其文本内部各个词语的概率却非常方便。这就可以用贝叶斯方法。</p>
</li>
<li><p>引申一步: 基于样本特征去判断其所属标签的概率不好求，但是基于已经搜集好的打上标签的样本（有监督），却可以直接统计属于同一标签的样本内部各个特征的概率分布。因此贝叶斯方法的理论视角适用于一切分类问题的求解。</p>
</li>
</ul>
<h3 id="15-2-多分类问题"><a href="#15-2-多分类问题" class="headerlink" title="15.2 多分类问题"></a>15.2 多分类问题</h3><ol>
<li>垃圾邮件</li>
<li>私人邮件 (正常)</li>
<li>工作邮件 (正常)</li>
</ol>
<p>现在有这 3 类邮件各 1 万封作为样本。需要训练出一个贝叶斯分类器。这里依次用 $Y_1,Y_2,Y_3$ 表示这三类邮件，用 $X$ 表示被判断的邮件。套用贝叶斯公式有：</p>
<p>$$<br>P(Y_1|X)=\frac{P(X|Y_1)P(Y_1)}{P(X)}<br>$$</p>
<p>$$<br>P(Y_2|X)=\frac{P(X|Y_2)P(Y_2)}{P(X)}<br>$$</p>
<p>$$<br>P(Y_3|X)=\frac{P(X|Y_3)P(Y_3)}{P(X)}<br>$$</p>
<p>通过比较 <strong>3</strong> 个概率值的大小即可得到 $X$ 所属的分类。发现三个式子的分母 $P(X)$ 一样，比较大小时可以忽略不计，于是就可以用下面这一个式子表达上面 <strong>3</strong> 式：</p>
<p>$$<br>P(Y_i|X)\propto P(X|Y_i)P(Y_i)  ； i=1,2,3<br>$$</p>
<p>其中 $\propto$ 表示“正比于”。而 $P(X|Y_i)$ 则有个特别高逼格的名字叫做 “<strong>似然函数</strong>”。其实把它直接理解成“ $P(Yi|X)$ 的逆反条件概率” 就方便了。</p>
<blockquote>
<p>对于任意多分类的问题都可以用这样的思路去理解。比如 <strong>新闻分类、情感喜怒哀乐分类</strong> 等等。</p>
</blockquote>
<h3 id="15-3-先验概率的问题"><a href="#15-3-先验概率的问题" class="headerlink" title="15.3 先验概率的问题"></a>15.3 先验概率的问题</h3><p>在垃圾邮件的例子中，先验概率都相等， $P(Y_1)=P(Y_2)=P(Y_3)=10000/30000=1/3$，所以上面是式子又可以进一步化简：</p>
<p>$$<br>P(Y_i|X)\propto P(X|Y_i)  ； i=1,2,3<br>$$</p>
<p>只需比较右边式子（也就是“似然函数”）的大小就可以了。这种方法就是传说中的<strong>最大似然法</strong>: 不考虑先验概率而直接比较似然函数。</p>
<p>关于选出最佳分类 $Y_i$ 是否要考虑先验概率 $P(Y_i)$ 的问题，曾经在频率学派和贝叶斯学派之间产生了激烈的教派冲突。统计学家（频率学派）说：我们让数据自己说话。言下之意就是要摒弃先验概率。而贝叶斯学派支持者则说：数据会有各种各样的偏差，而一个<strong>靠谱的先验概率</strong>则可以对这些随机噪音做到健壮.</p>
<p>比如我们在采集垃圾邮件样本的时候，不小心delete掉了一半的数据，就剩下5000封邮件。则计算出来的先验概率为:</p>
<p>$$<br>P(Y_1)=5000/25000=1/5<br>$$</p>
<p>$$<br>P(Y_2)=P(Y_3)=10000/25000=2/5<br>$$</p>
<p>如果还用贝叶斯方法,就要在似然函数后面乘上先验概率。比如之前用最大似然法算出 $Y_1$  垃圾邮件的概率大，但是因为 $P(Y_1)$ 特别小，用贝叶斯方法得出的结果是 $Y_2$  私人邮件的概率大。那相信哪个呢？其实，我们删掉了部分带标签的样本，从计算结果看 $P(Y1)$，$P(Y2)$，$P(Y3)$ 的概率分布变化了，但实际上<strong>这三个类别的真实分布应该是一个客观的状态，不应该因为我们的计算方法而发生变化</strong>。所以是我们计算出来的先验概率失真，应该放弃这样计算出来的先验概率，而用最大似然法。</p>
<p>但即便我们不删掉一半垃圾邮件，这三类邮件的分布就真的是 $1:1:1$ 那样平均吗？那也未必。<strong>我们只是按1:1:1这样的方式进行了抽样而已，真正在邮箱里收到的这三类邮件的分布可能并不是这样。也就是说，在我们对于先验概率一无所知时，只能假设每种猜测的先验概率是均等的（其实这也是人类经验的结果），这个时候就只有用最大似然了</strong>。在现实运用过程中如果发现最大似然法有偏差，可以考虑对不同的似然函数设定一些系数或者阈值，使其接近真实情况。</p>
<p>但是，<strong>如果我们有足够的自信，训练集中这三类的样本分布的确很接近真实的情况，这时就应该用贝叶斯方法</strong>。难怪前面的贝叶斯学派强调的是“靠谱的先验概率”。所以说<strong>贝叶斯学派的适用范围更广，关键要先验概率靠谱，而频率学派有效的前提也是他们的先验概率同样是经验统计的结果</strong>。</p>
<h2 id="16-朴素-贝叶斯方法的常见应用"><a href="#16-朴素-贝叶斯方法的常见应用" class="headerlink" title="16. (朴素)贝叶斯方法的常见应用"></a>16. (朴素)贝叶斯方法的常见应用</h2><h3 id="16-1-褒贬分析"><a href="#16-1-褒贬分析" class="headerlink" title="16.1 褒贬分析"></a>16.1 褒贬分析</h3><p>一个比较常见的应用场景是情感褒贬分析。比如你要统计微博上人们对一个新上映电影的褒贬程度评价：好片还是烂片。但是一条一条地看微博是根本看不过来，只能用自动化的方法。我们可以有一个很粗略的思路：</p>
<ul>
<li>首先是用爬虫将微博上提到这个电影名字的微博全都抓取下来，比如有10万条。</li>
<li>然后用训练好的朴素贝叶斯分类器分别判断这些微博对电影是好评还是差评。</li>
<li>最后统计出这些好评的影评占所有样本中的比例，就能形成微博网友对这个电影综合评价的大致估计。</li>
</ul>
<p>接下来的核心问题就是训练出一个靠谱的分类器。首先需要有打好标签的文本。这个好找，豆瓣影评上就有大量网友对之前电影的评价，并且对电影进行1星到5星的评价。我们可以认为3星以上的评论都是好评，3星以下的评论都是差评。这样就分别得到了好评差评两类的语料样本。剩下就可以用朴素贝叶斯方法进行训练了。基本思路如下：</p>
<ul>
<li>训练与测试样本：豆瓣影评的网友评论，用爬虫抓取下100万条。</li>
<li>标签：3星以上的是好评，3星以下的是差评。</li>
<li>特征：豆瓣评论分词后的词语。一个简单的方法是只选择其中的形容词，网上有大量的情绪词库可以为我们所用。</li>
<li>然后再用常规的朴素贝叶斯方法进行训练。</li>
</ul>
<p>但是由于自然语言的特点，在提取特征的过程当中，有一些tricks需要注意</p>
<ul>
<li><p><strong>对否定句进行特别的处理</strong>。比如这句话“我不是很喜欢部电影，因为它让我开心不起来。”其中两个形容词“喜欢”、“开心”都是褒义词，但是因为句子的否定句，所以整体是贬义的。有一种比较简单粗暴的处理方式，就是“对否定词（“不”、“非”、“没”等）与句尾标点之间的所有形容词都采用其否定形式” 。则这句话中提取出来的形容词就应该是“不喜欢”和“不开心”。</p>
</li>
<li><p>一般说来，<strong>最相关的情感词在一些文本片段中仅仅出现一次，词频模型起得作用有限</strong>，甚至是负作用，则使用<code>伯努利模型</code>代替多项式模型。这种情况在微博这样的小篇幅文本中似乎不太明显，但是在博客、空间、论坛之类允许长篇幅文本出现的平台中需要注意。</p>
</li>
<li><p>其实，副词对情感的评价有一定影响。“不很喜欢”与“很不喜欢”的程度就有很大差异。但如果是朴素贝叶斯方法的话比较难处理这样的情况。我们可以考虑用语言模型或者加入词性标注的信息进行综合判断。这些内容我们将在之后进行探讨。</p>
</li>
</ul>
<p>当然经过以上的处理，情感分析还是会有一部分误判。这里涉及到许多问题，都是情感分析的难点：</p>
<ul>
<li><strong>情绪表达的含蓄微妙</strong>：“导演你出来，我保证不打死你。”你让机器怎么判断是褒还是贬？</li>
<li><strong>转折性表达</strong>：“我非常喜欢这些大牌演员，非常崇拜这个导演，非常赞赏这个剧本，非常欣赏他们的预告片，我甚至为了这部影片整整期待了一年，最后进了电影院发现这是个噩梦。” 五个褒义的形容词、副词对一个不那么贬义的词。机器自然判断成褒义，但这句话是妥妥的贬义。</li>
</ul>
<h3 id="16-2-拼写纠错"><a href="#16-2-拼写纠错" class="headerlink" title="16.2 拼写纠错"></a>16.2 拼写纠错</h3><p>……</p>
<p><img src="/images/nlp/nlp-bayes-06.jpg" alt=""></p>
<h2 id="17-内容小结"><a href="#17-内容小结" class="headerlink" title="17. 内容小结"></a>17. 内容小结</h2><p>从前面大家基本可以看出，工程应用不同于学术理论，有许多tricks需要考虑，而理论本质就是翻来倒去折腾贝叶斯公式，都快玩出花来了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[转卖一些计算机相关的二手书籍]]></title>
      <url>http://iequa.com/2017/08/02/life-books-for-sold/</url>
      <content type="html"><![CDATA[<p>如下是我打算转卖的一些二手书，很多都比较新, 参考价如下:</p>
<a id="more"></a>
<table>
<thead>
<tr>
<th>书名</th>
<th>新度</th>
<th>原价</th>
<th>现价</th>
</tr>
</thead>
<tbody>
<tr>
<td>《决战Nginx》</td>
<td>9.5成</td>
<td>79</td>
<td>15</td>
</tr>
<tr>
<td>《unix环境高级编程》</td>
<td>6.0成</td>
<td>99</td>
<td>15</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>《MongoDB》</td>
<td>9.5成</td>
<td>39</td>
<td>10</td>
</tr>
<tr>
<td>《Spring 3.x企业应用开发实战》</td>
<td>6.0成</td>
<td>90</td>
<td>10</td>
</tr>
<tr>
<td>《Maven实战》</td>
<td>8.0成</td>
<td>65</td>
<td>10</td>
</tr>
<tr>
<td>《Spring实战》第3版</td>
<td>6.0成</td>
<td>59</td>
<td>10 </td>
</tr>
<tr>
<td>《程序员面试金典》</td>
<td>8.5成</td>
<td>59</td>
<td>10 </td>
</tr>
<tr>
<td>《Python核心编程》 第2版</td>
<td>8.0成</td>
<td>89</td>
<td>10 </td>
</tr>
<tr>
<td>《重构*改善既有代码的设计》</td>
<td>9.5成</td>
<td>69</td>
<td>10 </td>
</tr>
<tr>
<td>《Effective Java中文版》第2版</td>
<td>8.0成</td>
<td>52</td>
<td>10</td>
</tr>
<tr>
<td>《快学Scala》</td>
<td>7.0成</td>
<td>79</td>
<td>10</td>
</tr>
<tr>
<td>《第一本Docker书》</td>
<td>9.5成</td>
<td>59</td>
<td>10</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 字符串处理-正则表达式]]></title>
      <url>http://iequa.com/2017/07/30/nlp-01-string-operation-re/</url>
      <content type="html"><![CDATA[<p><a href="https://github.com/blairchan/NLP/blob/master/string_operation.ipynb" target="_blank" rel="external">Github-ipynb</a></p>
<h3 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h3><p>我们一起回归一下python字符串的相关操作，这是非常基础的知识，但却是使用频度非常高的一些功能。</p>
<a id="more"></a>
<h4 id="1-1-去空格及特殊符号"><a href="#1-1-去空格及特殊符号" class="headerlink" title="1.1 去空格及特殊符号"></a>1.1 去空格及特殊符号</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">' hello, world!'</span></span><br><span class="line"><span class="keyword">print</span> s.strip()</span><br><span class="line"><span class="keyword">print</span> s.lstrip(<span class="string">' hello, '</span>)</span><br><span class="line"><span class="keyword">print</span> s.rstrip(<span class="string">'!'</span>)</span><br></pre></td></tr></table></figure>
<pre><code>hello, world!
world!
 hello, world
</code></pre><h4 id="1-2-连接字符串"><a href="#1-2-连接字符串" class="headerlink" title="1.2 连接字符串"></a>1.2 连接字符串</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sStr1 = <span class="string">'strcat'</span></span><br><span class="line">sStr2 = <span class="string">'append'</span></span><br><span class="line">sStr1 += sStr2</span><br><span class="line"><span class="keyword">print</span> sStr1</span><br></pre></td></tr></table></figure>
<pre><code>strcatappend
</code></pre><h4 id="1-3-查找字符"><a href="#1-3-查找字符" class="headerlink" title="1.3 查找字符"></a>1.3 查找字符</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># &lt; 0 为未找到</span></span><br><span class="line">sStr1 = <span class="string">'strchr'</span></span><br><span class="line">sStr2 = <span class="string">'r'</span></span><br><span class="line">nPos = sStr1.index(sStr2)</span><br><span class="line"><span class="keyword">print</span> nPos</span><br></pre></td></tr></table></figure>
<pre><code>2
</code></pre><h4 id="1-4-较字符串"><a href="#1-4-较字符串" class="headerlink" title="1.4 较字符串"></a>1.4 较字符串</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sStr1 = <span class="string">'strchr'</span></span><br><span class="line">sStr2 = <span class="string">'strch'</span></span><br><span class="line"><span class="keyword">print</span> cmp(sStr2,sStr1)</span><br><span class="line"><span class="keyword">print</span> cmp(sStr1,sStr2)</span><br><span class="line"><span class="keyword">print</span> cmp(sStr1,sStr1)</span><br></pre></td></tr></table></figure>
<pre><code>-1
1
0
</code></pre><h4 id="1-5-大小写转换"><a href="#1-5-大小写转换" class="headerlink" title="1.5 大小写转换"></a>1.5 大小写转换</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sStr1 = <span class="string">'JCstrlwr'</span></span><br><span class="line">sStr1 = sStr1.upper()</span><br><span class="line"><span class="comment">#sStr1 = sStr1.lower()</span></span><br><span class="line"><span class="keyword">print</span> sStr1</span><br></pre></td></tr></table></figure>
<pre><code>JCSTRLWR
</code></pre><h4 id="1-6-翻转字符串"><a href="#1-6-翻转字符串" class="headerlink" title="1.6 翻转字符串"></a>1.6 翻转字符串</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sStr1 = <span class="string">'abcdefg'</span></span><br><span class="line">sStr1 = sStr1[::<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">print</span> sStr1</span><br></pre></td></tr></table></figure>
<pre><code>gfedcba
</code></pre><h4 id="1-7-查找字符串"><a href="#1-7-查找字符串" class="headerlink" title="1.7 查找字符串"></a>1.7 查找字符串</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sStr1 = <span class="string">'abcdefg'</span></span><br><span class="line">sStr2 = <span class="string">'cde'</span></span><br><span class="line"><span class="keyword">print</span> sStr1.find(sStr2)</span><br></pre></td></tr></table></figure>
<pre><code>2
</code></pre><h4 id="1-8-分割字符串"><a href="#1-8-分割字符串" class="headerlink" title="1.8 分割字符串"></a>1.8 分割字符串</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sStr1 = <span class="string">'ab,cde,fgh,ijk'</span></span><br><span class="line">sStr2 = <span class="string">','</span></span><br><span class="line">sStr1 = sStr1[sStr1.find(sStr2) + <span class="number">1</span>:]</span><br><span class="line"><span class="keyword">print</span> sStr1</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">s = <span class="string">'ab,cde,fgh,ijk'</span></span><br><span class="line">print(s.split(<span class="string">','</span>))</span><br></pre></td></tr></table></figure>
<pre><code>cde,fgh,ijk
[&apos;ab&apos;, &apos;cde&apos;, &apos;fgh&apos;, &apos;ijk&apos;]
</code></pre><h4 id="1-9-频次最高的字母"><a href="#1-9-频次最高的字母" class="headerlink" title="1.9 频次最高的字母"></a>1.9 频次最高的字母</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#version 1</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_max_value_v1</span><span class="params">(text)</span>:</span></span><br><span class="line">    text = text.lower()</span><br><span class="line">    result = re.findall(<span class="string">'[a-zA-Z]'</span>, text)  <span class="comment"># 去掉列表中的符号符</span></span><br><span class="line">    count = Counter(result)  <span class="comment"># Counter(&#123;'l': 3, 'o': 2, 'd': 1, 'h': 1, 'r': 1, 'e': 1, 'w': 1&#125;)</span></span><br><span class="line">    count_list = list(count.values())</span><br><span class="line">    max_value = max(count_list)</span><br><span class="line">    max_list = []</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> count.items():</span><br><span class="line">        <span class="keyword">if</span> v == max_value:</span><br><span class="line">            max_list.append(k)</span><br><span class="line">    max_list = sorted(max_list)</span><br><span class="line">    <span class="keyword">return</span> max_list[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#version 2</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_max_value</span><span class="params">(text)</span>:</span></span><br><span class="line">    count = Counter([x <span class="keyword">for</span> x <span class="keyword">in</span> text.lower() <span class="keyword">if</span> x.isalpha()])</span><br><span class="line">    m = max(count.values())</span><br><span class="line">    <span class="keyword">return</span> sorted([x <span class="keyword">for</span> (x, y) <span class="keyword">in</span> count.items() <span class="keyword">if</span> y == m])[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#version 3</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_max_value</span><span class="params">(text)</span>:</span></span><br><span class="line">    text = text.lower()</span><br><span class="line">    <span class="keyword">return</span> max(string.ascii_lowercase, key=text.count)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">max(range(<span class="number">6</span>), key = <span class="keyword">lambda</span> x : x&gt;<span class="number">2</span>)</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; 3</span></span><br><span class="line"><span class="comment"># 带入key函数中，各个元素返回布尔值，相当于[False, False, False, True, True, True]</span></span><br><span class="line"><span class="comment"># key函数要求返回值为True，有多个符合的值，则挑选第一个。</span></span><br><span class="line"></span><br><span class="line">max([<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">0</span>], key = <span class="keyword">lambda</span> x : x)</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; 5</span></span><br><span class="line"><span class="comment"># 带入key函数中，各个元素返回自身的值，最大的值为5，返回5.</span></span><br><span class="line"></span><br><span class="line">max(<span class="string">'ah'</span>, <span class="string">'bf'</span>, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; 'ah'</span></span><br><span class="line"><span class="comment"># 带入key函数，各个字符串返回最后一个字符，其中'ah'的h要大于'bf'中的f，因此返回'ah'</span></span><br><span class="line"></span><br><span class="line">max(<span class="string">'ah'</span>, <span class="string">'bf'</span>, key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; 'bf'</span></span><br><span class="line"><span class="comment"># 带入key函数，各个字符串返回第一个字符，其中'bf'的b要大于'ah'中的a，因此返回'bf'</span></span><br><span class="line"></span><br><span class="line">text = <span class="string">'Hello World'</span></span><br><span class="line">max(<span class="string">'abcdefghijklmnopqrstuvwxyz'</span>, key=text.count)</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; 'l'</span></span><br><span class="line"><span class="comment"># 带入key函数，返回各个字符在'Hello World'中出现的次数，出现次数最多的字符为'l',因此输出'l'</span></span><br></pre></td></tr></table></figure>
<pre><code>&apos;l&apos;
</code></pre><h4 id="Count-occurrence-of-a-character-in-a-Python-string"><a href="#Count-occurrence-of-a-character-in-a-Python-string" class="headerlink" title="Count occurrence of a character in a Python string"></a>Count occurrence of a character in a Python string</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#T  h  e     M  i  s  s  i  s  s  i  p  p  i     R  i  v  e  r</span></span><br><span class="line"><span class="comment">#[1, 1, 2, 2, 1, 5, 4, 4, 5, 4, 4, 5, 2, 2, 5, 2, 1, 5, 1, 2, 1]</span></span><br><span class="line">sentence=<span class="string">'The Mississippi River'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_chars</span><span class="params">(s)</span>:</span></span><br><span class="line">        s=s.lower()</span><br><span class="line">        count=list(map(s.count,s))</span><br><span class="line">        <span class="keyword">return</span> (max(count))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> count_chars(sentence)</span><br></pre></td></tr></table></figure>
<pre><code>5
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Jieba 中文处理]]></title>
      <url>http://iequa.com/2017/07/29/nlp-01-jieba/</url>
      <content type="html"><![CDATA[<p><a href="https://github.com/blairchan/NLP/blob/master/jieba-learning-Notes.ipynb" target="_blank" rel="external">Github-ipynb</a></p>
<p>词汇是我们对句子和文章理解的基础，因此需要一个工具去把完整的文本中分解成粒度更细的词</p>
<p><strong>jieba</strong> 就是这样一个非常好用的中文工具，是以分词起家的，但是功能比分词要强大很多。</p>
<a id="more"></a>
<h2 id="1-基本分词函数与用法"><a href="#1-基本分词函数与用法" class="headerlink" title="1. 基本分词函数与用法"></a>1. 基本分词函数与用法</h2><ol>
<li>jieba.cut </li>
<li>jieba.cut_for_search </li>
</ol>
<p>返回的结构都是一个可迭代的 generator，可以使用 for 循环来获得分词后得到的每一个词语(unicode)</p>
<p><strong>jieba.cut</strong> 方法接受三个输入参数:</p>
<ul>
<li>需要分词的字符串</li>
<li>cut_all 参数用来控制是否采用全模式</li>
<li>HMM 参数用来控制是否使用 HMM 模型</li>
</ul>
<p><strong>jieba.cut_for_search</strong> 方法接受两个参数</p>
<ul>
<li>需要分词的字符串</li>
<li>是否使用 HMM 模型。</li>
</ul>
<p>该方法适合用于搜索引擎构建倒排索引的分词，粒度比较细</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">seg_list = jieba.cut(<span class="string">"我在学习自然语言处理"</span>, cut_all=<span class="keyword">True</span>)</span><br><span class="line"><span class="keyword">print</span> seg_list</span><br><span class="line">print(<span class="string">"Full Mode: "</span> + <span class="string">"/ "</span>.join(seg_list))  <span class="comment"># 全模式</span></span><br><span class="line"></span><br><span class="line">seg_list = jieba.cut(<span class="string">"我在学习自然语言处理"</span>, cut_all=<span class="keyword">False</span>)</span><br><span class="line">print(<span class="string">"Default Mode: "</span> + <span class="string">"/ "</span>.join(seg_list))  <span class="comment"># 精确模式</span></span><br><span class="line"></span><br><span class="line">seg_list = jieba.cut(<span class="string">"他毕业于上海交通大学，在百度深度学习研究院进行研究"</span>)  <span class="comment"># 默认是精确模式</span></span><br><span class="line">print(<span class="string">", "</span>.join(seg_list))</span><br><span class="line"></span><br><span class="line">seg_list = jieba.cut_for_search(<span class="string">"小明硕士毕业于中国科学院计算所，后在哈佛大学深造"</span>)  <span class="comment"># 搜索引擎模式</span></span><br><span class="line">print(<span class="string">", "</span>.join(seg_list))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Building prefix dict from the default dictionary ...</span><br><span class="line">&lt;generator object cut at 0x110370460&gt;</span><br><span class="line">Dumping model to file cache /var/folders/mf/_jgd83rx0rgcmt42cp7fkkd00000gn/T/jieba.cache</span><br><span class="line">Loading model cost 2.184 seconds.</span><br><span class="line">Prefix dict has been built succesfully.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Full Mode: 我/ 在/ 学习/ 自然/ 自然语言/ 语言/ 处理</span><br><span class="line">Default Mode: 我/ 在/ 学习/ 自然语言/ 处理</span><br><span class="line">他, 毕业, 于, 上海交通大学, ，, 在, 百度, 深度, 学习, 研究院, 进行, 研究</span><br><span class="line">小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 哈佛, 大学, 哈佛大学, 深造</span><br></pre></td></tr></table></figure>
<p><strong>jieba.lcut</strong> 以及 <strong>jieba.lcut_for_search</strong> 直接返回 list</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result_lcut = jieba.lcut(<span class="string">"小明硕士毕业于中国科学院计算所，后在哈佛大学深造"</span>)</span><br><span class="line"><span class="keyword">print</span> result_lcut</span><br><span class="line"><span class="keyword">print</span> <span class="string">" "</span>.join(result_lcut)</span><br><span class="line"><span class="keyword">print</span> <span class="string">" "</span>.join(jieba.lcut_for_search(<span class="string">"小明硕士毕业于中国科学院计算所，后在哈佛大学深造"</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[u&apos;\u5c0f\u660e&apos;, u&apos;\u7855\u58eb&apos;, u&apos;\u6bd5\u4e1a&apos;, u&apos;\u4e8e&apos;, u&apos;\u4e2d\u56fd\u79d1\u5b66\u9662&apos;, u&apos;\u8ba1\u7b97\u6240&apos;, u&apos;\uff0c&apos;, u&apos;\u540e&apos;, u&apos;\u5728&apos;, u&apos;\u54c8\u4f5b\u5927\u5b66&apos;, u&apos;\u6df1\u9020&apos;]</span><br><span class="line">小明 硕士 毕业 于 中国科学院 计算所 ， 后 在 哈佛大学 深造</span><br><span class="line">小明 硕士 毕业 于 中国 科学 学院 科学院 中国科学院 计算 计算所 ， 后 在 哈佛 大学 哈佛大学 深造</span><br></pre></td></tr></table></figure>
<h3 id="1-1-添加用户自定义词典"><a href="#1-1-添加用户自定义词典" class="headerlink" title="1.1 添加用户自定义词典"></a>1.1 添加用户自定义词典</h3><p>很多时候我们需要针对自己的场景进行分词，会有一些领域内的专有词汇。</p>
<ol>
<li>可以用 <code>jieba.load_userdict(file_name)</code> 加载用户字典</li>
<li>少量的词汇可以自己用下面方法手动添加：</li>
</ol>
<p>用 <strong>add_word(word, freq=None, tag=None)</strong> 和 <strong>del_word(word)</strong> 在程序中动态修改词典<br>用 <strong>suggest_freq(segment, tune=True)</strong> 可调节单个词语的词频，使其能（或不能）被分出来。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">'/'</span>.join(jieba.cut(<span class="string">'如果放到旧字典中将出错。'</span>, HMM=<span class="keyword">False</span>)))</span><br><span class="line"><span class="keyword">print</span> jieba.suggest_freq((<span class="string">'中'</span>, <span class="string">'将'</span>), <span class="keyword">True</span>)</span><br><span class="line">print(<span class="string">'/'</span>.join(jieba.cut(<span class="string">'如果放到旧字典中将出错。'</span>, HMM=<span class="keyword">False</span>)))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果/放到/旧/字典/中将/出错/。</span><br><span class="line">494</span><br><span class="line">如果/放到/旧/字典/中/将/出错/。</span><br></pre></td></tr></table></figure>
<h2 id="2-关键词提取"><a href="#2-关键词提取" class="headerlink" title="2. 关键词提取"></a>2. 关键词提取</h2><h3 id="2-1-TF-IDF-算法的关键词抽取"><a href="#2-1-TF-IDF-算法的关键词抽取" class="headerlink" title="2.1 TF-IDF 算法的关键词抽取"></a>2.1 TF-IDF 算法的关键词抽取</h3><p>import jieba.analyse<br>jieba.analyse.extract_tags(sentence, topK=20, withWeight=False, allowPOS=())</p>
<ul>
<li>sentence 为待提取的文本</li>
<li>topK 为返回几个 TF/IDF 权重最大的关键词，默认值为 20</li>
<li>withWeight 为是否一并返回关键词权重值，默认值为 False</li>
<li>allowPOS 仅包括指定词性的词，默认值为空，即不筛选</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba.analyse <span class="keyword">as</span> analyse</span><br><span class="line">lines = open(<span class="string">'NBA.txt'</span>).read()</span><br><span class="line"><span class="keyword">print</span> <span class="string">"  "</span>.join(analyse.extract_tags(lines, topK=<span class="number">20</span>, withWeight=<span class="keyword">False</span>, allowPOS=()))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">韦少  杜兰特  全明星  全明星赛  MVP  威少  正赛  科尔  投篮  勇士  球员  </span><br><span class="line">斯布鲁克  更衣柜  张卫平  三连庄  NBA  西部  指导  雷霆  明星队</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">lines = open(<span class="string">u'西游记.txt'</span>).read()</span><br><span class="line"><span class="keyword">print</span> <span class="string">"  "</span>.join(analyse.extract_tags(lines, topK=<span class="number">20</span>, withWeight=<span class="keyword">False</span>, allowPOS=()))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">行者  八戒  师父  三藏  唐僧  大圣  沙僧  妖精  菩萨  和尚  那怪  那里  </span><br><span class="line">长老  呆子  徒弟  怎么  不知  老孙  国王  一个</span><br></pre></td></tr></table></figure>
<h3 id="2-2-TF-IDF-关键词抽取补充"><a href="#2-2-TF-IDF-关键词抽取补充" class="headerlink" title="2.2 TF-IDF 关键词抽取补充"></a>2.2 TF-IDF 关键词抽取补充</h3><p>关键词提取所使用逆向文件频率（<strong>IDF</strong>）文本语料库可以切换成自定义语料库的路径</p>
<ul>
<li>用法： jieba.analyse.set_idf_path(file_name) # file_name为自定义语料库的路径</li>
<li>自定义语料库示例见<a href="https://github.com/fxsjy/jieba/blob/master/extra_dict/idf.txt.big" target="_blank" rel="external">这里</a></li>
<li>用法示例见<a href="https://github.com/fxsjy/jieba/blob/master/test/extract_tags_idfpath.py" target="_blank" rel="external">这里</a></li>
</ul>
<p>关键词提取所使用停止词（<strong>Stop Words</strong>）文本语料库可以切换成自定义语料库的路径</p>
<ul>
<li>用法： jieba.analyse.set_stop_words(file_name) # file_name为自定义语料库的路径</li>
<li>自定义语料库示例见<a href="https://github.com/fxsjy/jieba/blob/master/extra_dict/stop_words.txt" target="_blank" rel="external">这里</a></li>
<li>用法示例见<a href="https://github.com/fxsjy/jieba/blob/master/test/extract_tags_stop_words.py" target="_blank" rel="external">这里</a></li>
</ul>
<p>关键词一并返回关键词权重值示例</p>
<ul>
<li>用法示例见<a href="https://github.com/fxsjy/jieba/blob/master/test/extract_tags_with_weight.py" target="_blank" rel="external">这里</a></li>
</ul>
<h3 id="2-3-TextRank-的关键词抽取"><a href="#2-3-TextRank-的关键词抽取" class="headerlink" title="2.3 TextRank 的关键词抽取"></a>2.3 TextRank 的关键词抽取</h3><ul>
<li>jieba.analyse.textrank(sentence, topK=20, withWeight=False, allowPOS=(‘ns’, ‘n’, ‘vn’, ‘v’)) 直接使用，接口相同，注意默认过滤词性。</li>
<li>jieba.analyse.TextRank() 新建自定义 TextRank 实例</li>
</ul>
<p>算法论文： TextRank: <a href="http://web.eecs.umich.edu/~mihalcea/papers/mihalcea.emnlp04.pdf" target="_blank" rel="external">Bringing Order into Texts</a></p>
<p>基本思想:</p>
<ul>
<li>将待抽取关键词的文本进行分词</li>
<li>以固定窗口大小(默认为5，通过span属性调整)，词之间的共现关系，构建图</li>
<li>计算图中节点的PageRank，注意是无向带权图</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba.analyse <span class="keyword">as</span> analyse</span><br><span class="line">lines = open(<span class="string">'NBA.txt'</span>).read()</span><br><span class="line"><span class="keyword">print</span> <span class="string">"  "</span>.join(analyse.textrank(lines, topK=<span class="number">20</span>, withWeight=<span class="keyword">False</span>, allowPOS=(<span class="string">'ns'</span>, <span class="string">'n'</span>, <span class="string">'vn'</span>, <span class="string">'v'</span>)))</span><br><span class="line"><span class="keyword">print</span> <span class="string">"---------------------我是分割线----------------"</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"  "</span>.join(analyse.textrank(lines, topK=<span class="number">20</span>, withWeight=<span class="keyword">False</span>, allowPOS=(<span class="string">'ns'</span>, <span class="string">'n'</span>)))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Building prefix dict from the default dictionary ...</span><br><span class="line">Loading model from cache /var/folders/mf/_jgd83rx0rgcmt42cp7fkkd00000gn/T/jieba.cache</span><br><span class="line">Loading model cost 0.530 seconds.</span><br><span class="line">Prefix dict has been built succesfully.</span><br><span class="line"></span><br><span class="line">全明星赛  勇士  正赛  指导  对方  投篮  球员  没有  出现  时间  威少  </span><br><span class="line">认为  看来  结果  相隔  助攻  现场  三连庄  介绍  嘉宾</span><br><span class="line">---------------------我是分割线----------------</span><br><span class="line">勇士  正赛  全明星赛  指导  投篮  玩命  时间  对方  现场  结果  球员  </span><br><span class="line">嘉宾  时候  全队  主持人  特点  大伙  肥皂剧  全程  快船队</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">lines = open(<span class="string">u'西游记.txt'</span>).read()</span><br><span class="line"><span class="keyword">print</span> <span class="string">"  "</span>.join(analyse.textrank(lines, topK=<span class="number">20</span>, withWeight=<span class="keyword">False</span>, allowPOS=(<span class="string">'ns'</span>, <span class="string">'n'</span>, <span class="string">'vn'</span>, <span class="string">'v'</span>)))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">行者  师父  八戒  三藏  大圣  不知  菩萨  妖精  只见  长老  国王  却说  </span><br><span class="line">呆子  徒弟  小妖  出来  不得  不见  不能  师徒</span><br></pre></td></tr></table></figure>
<h2 id="3-词性标注"><a href="#3-词性标注" class="headerlink" title="3. 词性标注"></a>3. 词性标注</h2><ul>
<li>jieba.posseg.POSTokenizer(tokenizer=None) 新建自定义分词器，tokenizer 参数可指定内部使用的 jieba.Tokenizer 分词器。</li>
<li>jieba.posseg.dt 为默认词性标注分词器。  </li>
<li>标注句子分词后每个词的词性，采用和 ictclas 兼容的标记法。</li>
<li>具体的词性对照表参见计算所汉语词性标记集 <a href="http://ictclas.nlpir.org/nlpir/html/readme.htm" target="_blank" rel="external">计算所汉语词性标记集</a></li>
</ul>
<p><a href="http://ictclas.nlpir.org/" target="_blank" rel="external">ictclas</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba.posseg <span class="keyword">as</span> pseg</span><br><span class="line">words = pseg.cut(<span class="string">"我爱自然语言处理"</span>)</span><br><span class="line"><span class="keyword">for</span> word, flag <span class="keyword">in</span> words:</span><br><span class="line">    print(<span class="string">'%s %s'</span> % (word, flag))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我 r</span><br><span class="line">爱 v</span><br><span class="line">自然语言 l</span><br><span class="line">处理 v</span><br></pre></td></tr></table></figure>
<h2 id="4-并行分词"><a href="#4-并行分词" class="headerlink" title="4. 并行分词"></a>4. 并行分词</h2><p>原理：将目标文本按行分隔后，把各行文本分配到多个 Python 进程并行分词，然后归并结果，从而获得分词速度的可观提升 基于 python 自带的 multiprocessing 模块，目前暂不支持 Windows</p>
<p>用法：</p>
<ul>
<li>jieba.enable_parallel(4) # 开启并行分词模式，参数为并行进程数</li>
<li>jieba.disable_parallel() # 关闭并行分词模式</li>
</ul>
<p>实验结果：在 4 核 3.4GHz Linux 机器上，对金庸全集进行精确分词，获得了 1MB/s 的速度，是单进程版的 3.3 倍。  </p>
<p>注意：并行分词仅支持默认分词器 jieba.dt 和 jieba.posseg.dt。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">jieba.enable_parallel()</span><br><span class="line">content = open(<span class="string">u'西游记.txt'</span>,<span class="string">"r"</span>).read()</span><br><span class="line">t1 = time.time()</span><br><span class="line">words = <span class="string">"/ "</span>.join(jieba.cut(content))</span><br><span class="line">t2 = time.time()</span><br><span class="line">tm_cost = t2-t1</span><br><span class="line">print(<span class="string">'并行分词速度为 %s bytes/second'</span> % (len(content)/tm_cost))</span><br><span class="line"></span><br><span class="line">jieba.disable_parallel()</span><br><span class="line">content = open(<span class="string">u'西游记.txt'</span>,<span class="string">"r"</span>).read()</span><br><span class="line">t1 = time.time()</span><br><span class="line">words = <span class="string">"/ "</span>.join(jieba.cut(content))</span><br><span class="line">t2 = time.time()</span><br><span class="line">tm_cost = t2-t1</span><br><span class="line">print(<span class="string">'非并行分词速度为 %s bytes/second'</span> % (len(content)/tm_cost))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">并行分词速度为 415863.760491 bytes/second</span><br><span class="line">非并行分词速度为 242471.700496 bytes/second</span><br></pre></td></tr></table></figure>
<h3 id="命令行分词"><a href="#命令行分词" class="headerlink" title="命令行分词"></a>命令行分词</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用示例：python -m jieba news.txt &gt; cut_result.txt</span><br><span class="line">命令行选项（翻译）：</span><br><span class="line">使用: python -m jieba [options] filename</span><br><span class="line"></span><br><span class="line">结巴命令行界面。</span><br><span class="line"></span><br><span class="line">固定参数:</span><br><span class="line">  filename              输入文件</span><br><span class="line"></span><br><span class="line">可选参数:</span><br><span class="line">  -h, --help            显示此帮助信息并退出</span><br><span class="line">  -d [DELIM], --delimiter [DELIM]</span><br><span class="line">                        使用 DELIM 分隔词语，而不是用默认的&apos; / &apos;。</span><br><span class="line">                        若不指定 DELIM，则使用一个空格分隔。</span><br><span class="line">  -p [DELIM], --pos [DELIM]</span><br><span class="line">                        启用词性标注；如果指定 DELIM，词语和词性之间</span><br><span class="line">                        用它分隔，否则用 _ 分隔</span><br><span class="line">  -D DICT, --dict DICT  使用 DICT 代替默认词典</span><br><span class="line">  -u USER_DICT, --user-dict USER_DICT</span><br><span class="line">                        使用 USER_DICT 作为附加词典，与默认词典或自定义词典配合使用</span><br><span class="line">  -a, --cut-all         全模式分词（不支持词性标注）</span><br><span class="line">  -n, --no-hmm          不使用隐含马尔可夫模型</span><br><span class="line">  -q, --quiet           不输出载入信息到 STDERR</span><br><span class="line">  -V, --version         显示版本信息并退出</span><br><span class="line"></span><br><span class="line">如果没有指定文件名，则使用标准输入。</span><br></pre></td></tr></table></figure>
<h3 id="Tokenize：返回词语在原文的起止位置"><a href="#Tokenize：返回词语在原文的起止位置" class="headerlink" title="Tokenize：返回词语在原文的起止位置"></a>Tokenize：返回词语在原文的起止位置</h3><p>注意，输入参数只接受 unicode</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"这是默认模式的tokenize"</span></span><br><span class="line">result = jieba.tokenize(<span class="string">u'自然语言处理非常有用'</span>)</span><br><span class="line"><span class="keyword">for</span> tk <span class="keyword">in</span> result:</span><br><span class="line">    print(<span class="string">"%s\t\t start: %d \t\t end:%d"</span> % (tk[<span class="number">0</span>],tk[<span class="number">1</span>],tk[<span class="number">2</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"\n-----------我是神奇的分割线------------\n"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"这是搜索模式的tokenize"</span></span><br><span class="line">result = jieba.tokenize(<span class="string">u'自然语言处理非常有用'</span>, mode=<span class="string">'search'</span>)</span><br><span class="line"><span class="keyword">for</span> tk <span class="keyword">in</span> result:</span><br><span class="line">    print(<span class="string">"%s\t\t start: %d \t\t end:%d"</span> % (tk[<span class="number">0</span>],tk[<span class="number">1</span>],tk[<span class="number">2</span>]))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这是默认模式的tokenize</span><br><span class="line">自然语言		 start: 0 		 end:4</span><br><span class="line">处理		 start: 4 		 end:6</span><br><span class="line">非常		 start: 6 		 end:8</span><br><span class="line">有用		 start: 8 		 end:10</span><br><span class="line">    </span><br><span class="line">-----------我是神奇的分割线------------</span><br><span class="line">    </span><br><span class="line">这是搜索模式的tokenize</span><br><span class="line">自然		 start: 0 		 end:2</span><br><span class="line">语言		 start: 2 		 end:4</span><br><span class="line">自然语言		 start: 0 		 end:4</span><br><span class="line">处理		 start: 4 		 end:6</span><br><span class="line">非常		 start: 6 		 end:8</span><br><span class="line">有用		 start: 8 		 end:10</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[词向量到word2vec与相关应用]]></title>
      <url>http://iequa.com/2017/07/12/nlp-word-vector/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p>Natural Language Processing，计算机科学与语言学中关注于计算机与人类语言间转换的领域</p>
<a id="more"></a>
<h2 id="1-NLP-常见任务"><a href="#1-NLP-常见任务" class="headerlink" title="1. NLP 常见任务"></a>1. NLP 常见任务</h2><ol>
<li>自动摘要</li>
<li>指代消解   </li>
<li>机器翻译 </li>
<li>词性标注   </li>
<li>分词 (中文、日文等)</li>
<li>主题识别</li>
<li>文本分类.<br>……</li>
</ol>
<blockquote>
<p>自动摘要   -&gt;   搜索要索引，关键词等<br>指代消解   -&gt;   小明放学了, 妈妈去接<code>他</code><br>机器翻译   -&gt;   小心地滑、干货 =&gt; Slide carefully<br>词性标注   -&gt;   heat(v.) water(n.) in(p.) a(det.)   pot(n.)<br>分词 (中文、日文等)   -&gt;   大水沟/很/难/过  </p>
</blockquote>
<h2 id="2-NLP-处理方法"><a href="#2-NLP-处理方法" class="headerlink" title="2. NLP 处理方法"></a>2. NLP 处理方法</h2><h3 id="2-1-传统-基于规则"><a href="#2-1-传统-基于规则" class="headerlink" title="2.1 传统: 基于规则"></a>2.1 传统: 基于规则</h3><p>Dict…</p>
<blockquote>
<p>简单、粗暴、有用</p>
</blockquote>
<h3 id="2-2-现代-基于机器学习"><a href="#2-2-现代-基于机器学习" class="headerlink" title="2.2 现代: 基于机器学习"></a>2.2 现代: 基于机器学习</h3><blockquote>
<p>HMM, CRF, SVM, LDA, CNN…<br>“规则”隐含在模型参数里</p>
</blockquote>
<h2 id="3-词编码和词向量初步"><a href="#3-词编码和词向量初步" class="headerlink" title="3. 词编码和词向量初步"></a>3. 词编码和词向量初步</h2><blockquote>
<p>你需要一些 model，不管你是基于规则统计、机器学习、深度学习 的一些方法，第一步要做的，一定是对你的文本或者数据，进行表达, 词编码。</p>
</blockquote>
<p><font color="black">『词编码需要保证词的相似性』<font></font></font></p>
<p>Glove results</p>
<p>Nearest words to</p>
<ol>
<li>frog</li>
<li>toad</li>
<li>rana</li>
<li>…</li>
</ol>
<p><font color="black">『向量空间分布的相似性』<font></font></font></p>
<p><img src="/images/ml/nlp-word2vector-2.png" alt=""></p>
<p><font color="black">『向量空间子结构』<font></font></font></p>
<blockquote>
<p>编码要尽量保证，相似的词的空间距离是相近的</p>
</blockquote>
<p>$V_{King}$ - $V_{Queen}$ + $V_{Women}$ = $V_{Man}$</p>
<p>$V_{Paris}$ - $V_{France}$ + $V_{German}$ = $V_{Berlin}$</p>
<blockquote>
<p>最终目标: 词向量表示作为机器学习、特别是深度学习的输入和表示空间</p>
</blockquote>
<hr>
<blockquote>
<p>你的 <code>数据</code> 决定了你的 <code>结果上限</code><br>你的 <code>算法</code> 只是以多大程度去 <code>逼近</code></p>
</blockquote>
<hr>
<p><strong>Linguists</strong></p>
<p><img src="/images/ml/nlp-word2vector-3.png" width="520" height="400" align="middle" img=""></p>
<h3 id="3-1-离散表示-One-hot"><a href="#3-1-离散表示-One-hot" class="headerlink" title="3.1 离散表示 One-hot"></a>3.1 离散表示 One-hot</h3><ul>
<li><font color="blue">语料库<font></font></font></li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">John likes to watch movies. Mary likes too.John also likes to watch football games.</span><br></pre></td></tr></table></figure>
<ul>
<li><font color="blue">词典<font></font></font></li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">"John"</span>: <span class="number">1</span>, <span class="string">"likes"</span>: <span class="number">2</span>, <span class="string">"to"</span>: <span class="number">3</span>, <span class="string">"watch"</span>: <span class="number">4</span>, <span class="string">"movies"</span>: <span class="number">5</span>, </span><br><span class="line"><span class="string">"also"</span>: <span class="number">6</span>, <span class="string">"football"</span>: <span class="number">7</span>, <span class="string">"games"</span>: <span class="number">8</span>, <span class="string">"Mary"</span>: <span class="number">9</span>, <span class="string">"too"</span>: <span class="number">10</span>&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><font color="blue">One-hot表示<font></font></font></li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">John: [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]likes: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">...</span><br><span class="line">too : [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<h3 id="3-2-离散表示-Bag-of-Words"><a href="#3-2-离散表示-Bag-of-Words" class="headerlink" title="3.2 离散表示 Bag of Words"></a>3.2 离散表示 Bag of Words</h3><blockquote>
<p>文档的向量表示可以直接将各词的词向量表示加和</p>
</blockquote>
<p>John likes to watch movies. Mary likes too. =&gt; [1, 2, 1, 1, 1, 0, 0, 0, 1, 1]<br>John also likes to watch football games. =&gt; [1, 1, 1, 1, 0, 1, 1, 1, 0, 0]</p>
<blockquote>
<p>词权重  - (<code>词在文档中的顺序没有被考虑</code>)</p>
<p>tf-idf是一种统计方法，用以评估一字词对于一个文件集或一个语料库中的其中一份文件的重要程度</p>
</blockquote>
<ul>
<li>TF-IDF (Term Frequency - Inverse Document Frequency)</li>
</ul>
<p>Term Frequency : F(term) = (该word词出现在当前文档中的次数) / (当前文档所有word的总数).</p>
<p>信息检索词 t 的 IDF </p>
<p>$$\log (1 + {\frac{N}{n^t}})$$</p>
<blockquote>
<p>N: 文档总数， n: 含有词 t 的文档数</p>
</blockquote>
<p>[0.693, 1.386, 0.693, 0.693, 1.099, 0, 0, 0, 0.693, 0.693]</p>
<p>Binary weighting</p>
<blockquote>
<p>不做计数的版本</p>
<p>短文本相似性, Bernoulli Naive Bayes [1, 1, 1, 1, 1, 0, 0, 0, 1, 1]</p>
<p>if so, I love you = you love I</p>
</blockquote>
<h3 id="3-3-离散表示-􏰜􏰝􏰞􏰟􏰒Bi-gram-􏰪N-gram"><a href="#3-3-离散表示-􏰜􏰝􏰞􏰟􏰒Bi-gram-􏰪N-gram" class="headerlink" title="3.3 离散表示 􏰜􏰝􏰞􏰟􏰒Bi-gram / 􏰪N-gram"></a>3.3 离散表示 􏰜􏰝􏰞􏰟􏰒Bi-gram / 􏰪N-gram</h3><p>John likes to watch movies. Mary likes too.<br>John also likes to watch football games.</p>
<p><img src="/images/ml/nlp-word2vector-4.png" width="620" height="400" align="middle" img=""></p>
<h3 id="3-4-语言模型-词组合出现的概率"><a href="#3-4-语言模型-词组合出现的概率" class="headerlink" title="3.4 语言模型 词组合出现的概率"></a>3.4 语言模型 词组合出现的概率</h3><p>一句话(词组合)出现的概率</p>
<p><img src="/images/ml/nlp-word2vector-5.png" width="620" height="400" align="middle" img=""></p>
<blockquote>
<p>简化计算 : $P(too | Mark, likes) \approx P(too | likes)$, 可参见 吴军 《数学之美》 解释</p>
</blockquote>
<h3 id="3-5-离散表示-的缺点"><a href="#3-5-离散表示-的缺点" class="headerlink" title="3.5 离散表示 的缺点"></a>3.5 离散表示 的缺点</h3><p><img src="/images/ml/nlp-word2vector-6.png" width="620" height="400" align="middle" img=""></p>
<h3 id="3-6-分布式表示-提出"><a href="#3-6-分布式表示-提出" class="headerlink" title="3.6 分布式表示 提出"></a>3.6 分布式表示 提出</h3><p><img src="/images/ml/nlp-word2vector-7.png" width="620" height="400" align="middle" img=""></p>
<blockquote>
<p>Distributed representation :  </p>
<p>用一个词附近的其他词来表示该词  - (不知道你的经济情况，就调查下你的狐朋狗友们)<br>􏰐􏱏􏲎􏰀􏳎􏳏􏰢􏳐􏳑􏰀􏳒􏰞You shall know a word by the company it keeps<br>  — J.R. Firth 1957<br>􏰐􏱏􏲎􏰀􏳎􏳏􏰢􏳐􏳑􏰀􏳒􏰞􏰟􏳓􏰀􏰑􏰐􏱏􏲎􏰀􏳎􏳏􏰢􏳐􏳑􏰀􏳒􏰞􏰟􏳓􏰀􏰑􏰐􏱏􏲎􏰀􏳎􏳏􏰢􏳐􏳑<br>􏱕􏳔􏳕􏳖􏳗&gt; 现代统计自然语言处理中最有创见的想法之一</p>
</blockquote>
<h2 id="4-共现矩阵-Cocurrence-matrix"><a href="#4-共现矩阵-Cocurrence-matrix" class="headerlink" title="4. 共现矩阵 (Cocurrence matrix)"></a>4. 共现矩阵 (Cocurrence matrix)</h2><p><img src="/images/ml/nlp-word2vector-8.png" width="620" height="400" align="middle" img=""></p>
<blockquote>
<p>共现 : 共同出现</p>
</blockquote>
<h3 id="4-1-Word-Word"><a href="#4-1-Word-Word" class="headerlink" title="4.1 Word - Word"></a>4.1 Word - Word</h3><p><img src="/images/ml/nlp-word2vector-9.png" width="620" height="400" align="middle" img=""></p>
<blockquote>
<p>左右窗 length 为 1， 得到的矩阵如上</p>
</blockquote>
<p>存在缺点</p>
<p><img src="/images/ml/nlp-word2vector-10.png" width="620" height="400" align="middle" img=""></p>
<blockquote>
<p>模型欠稳定，可以考虑下 LR 的各个参数等，变化太大，对模型求解有影响</p>
</blockquote>
<p><strong>用SVD对共现矩阵向量做降维</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">la = np.linalg</span><br><span class="line"></span><br><span class="line">words = [<span class="string">"I"</span>, <span class="string">"like"</span>, <span class="string">"enjoy"</span>, <span class="string">"deep"</span>, <span class="string">"learning"</span>, <span class="string">"NLP"</span>, <span class="string">"flying"</span>, <span class="string">"."</span>]</span><br><span class="line"></span><br><span class="line">X = np.array(</span><br><span class="line">    [</span><br><span class="line">        [<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">U, s, Vh = la.svd(X, full_matrices=<span class="keyword">False</span>)</span><br></pre></td></tr></table></figure>
<p><strong>SVD 降维存在的问题</strong></p>
<ul>
<li><p>计算量随语料库和词典增长膨胀太快，对X(n,n)维 的矩阵，计算量O(n^3)。而对大型的语料库， n~400k，语料库大小1~60B token</p>
</li>
<li><p>难以为词典中新加入的词分配词向量    </p>
</li>
<li>与其他深度学习模型框架差异大</li>
</ul>
<blockquote>
<p>Jerya , 不懂 O(n^3) 如何得到的</p>
</blockquote>
<h3 id="4-2-NNLM"><a href="#4-2-NNLM" class="headerlink" title="4.2 NNLM"></a>4.2 NNLM</h3><h3 id="4-3-Word2Vec-CBOW"><a href="#4-3-Word2Vec-CBOW" class="headerlink" title="4.3 Word2Vec: CBOW"></a>4.3 Word2Vec: CBOW</h3><h3 id="4-4-Word2Vec-Skip-Gram"><a href="#4-4-Word2Vec-Skip-Gram" class="headerlink" title="4.4 Word2Vec: Skip-Gram"></a>4.4 Word2Vec: Skip-Gram</h3><h3 id="4-5-Word2Vec-缺点"><a href="#4-5-Word2Vec-缺点" class="headerlink" title="4.5 Word2Vec 缺点"></a>4.5 Word2Vec 缺点</h3><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><h3 id="5-1-离散表示"><a href="#5-1-离散表示" class="headerlink" title="5.1 离散表示"></a>5.1 离散表示</h3><ul>
<li>One-hot representation, Bag Of Words Unigram语言模型</li>
<li>N-gram词向量表示和语言模型</li>
<li>Co-currence矩阵的行(列)向量作为词向量</li>
</ul>
<h3 id="5-2-分布式连续表示"><a href="#5-2-分布式连续表示" class="headerlink" title="5.2 分布式连续表示"></a>5.2 分布式连续表示</h3><ul>
<li>Co-currence矩阵的SVD降维的低维词向量表示</li>
<li>Word2Vec: Continuous Bag of Words Model</li>
<li>Word2Vec: Skip-Gram Model</li>
</ul>
<blockquote>
<p>gensim 用 python 训练 word2vec 最好用的库<br>它的功能不至于 word2vec</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Cooking]]></title>
      <url>http://iequa.com/2017/07/09/life-cooking/</url>
      <content type="html"><![CDATA[<h2 id="1-火腿炒蛋"><a href="#1-火腿炒蛋" class="headerlink" title="1. 火腿炒蛋"></a>1. 火腿炒蛋</h2><ol>
<li>2个鸡蛋，打入小碗中，搅拌均匀</li>
<li>切一根火腿，切成片状</li>
<li>打开燃气阀门与起火，开小火便可</li>
<li>放入一些豆油，待油热一点</li>
<li>鸡蛋慢慢倒入油锅，鸡蛋成饼狀，期间可以颠勺</li>
<li>将火腿片，放入其中，进行一起炒，并可放入少量盐</li>
<li>炒得差不多后，关闭燃气阀门，并关闭起火开关</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[城市的经纬度]]></title>
      <url>http://iequa.com/2017/07/06/elastic-city-postion/</url>
      <content type="html"><![CDATA[<h2 id="1-杭州"><a href="#1-杭州" class="headerlink" title="1. 杭州"></a>1. 杭州</h2><h3 id="1-1-第一版"><a href="#1-1-第一版" class="headerlink" title="1.1 第一版"></a>1.1 第一版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">中溪村: [120.01114, 30.417591]</span><br><span class="line">财经大学东方学院: [120.618727, 30.442177]</span><br><span class="line">富阳客运站[119.957687, 30.06436]</span><br><span class="line">[120.445745, 30.14519]</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="1-2-第二版"><a href="#1-2-第二版" class="headerlink" title="1.2 第二版"></a>1.2 第二版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">119.998168</span><br><span class="line">120.492553</span><br><span class="line">30.099792</span><br><span class="line">30.407409</span><br></pre></td></tr></table></figure>
<h2 id="2-上海"><a href="#2-上海" class="headerlink" title="2. 上海"></a>2. 上海</h2><h3 id="2-1-第一版"><a href="#2-1-第一版" class="headerlink" title="2.1 第一版"></a>2.1 第一版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">120.942186</span><br><span class="line">122.140337</span><br><span class="line">30.606932</span><br><span class="line">31.671275</span><br></pre></td></tr></table></figure>
<h3 id="2-2-第二版"><a href="#2-2-第二版" class="headerlink" title="2.2 第二版"></a>2.2 第二版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">120.959472</span><br><span class="line">121.970214</span><br><span class="line">30.815527</span><br><span class="line">31.486816</span><br></pre></td></tr></table></figure>
<h2 id="3-青岛"><a href="#3-青岛" class="headerlink" title="3. 青岛"></a>3. 青岛</h2><h3 id="3-1-第一版"><a href="#3-1-第一版" class="headerlink" title="3.1 第一版"></a>3.1 第一版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">119.578234</span><br><span class="line">120.961582</span><br><span class="line">35.643559</span><br><span class="line">36.976174</span><br></pre></td></tr></table></figure>
<h3 id="3-2-第二版"><a href="#3-2-第二版" class="headerlink" title="3.2 第二版"></a>3.2 第二版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">120.272827</span><br><span class="line">120.701293</span><br><span class="line">36.015930</span><br><span class="line">36.312561</span><br></pre></td></tr></table></figure>
<h2 id="4-厦门"><a href="#4-厦门" class="headerlink" title="4. 厦门"></a>4. 厦门</h2><h3 id="4-1-第一版"><a href="#4-1-第一版" class="headerlink" title="4.1 第一版"></a>4.1 第一版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">117.820569</span><br><span class="line">118.583220</span><br><span class="line">24.273182</span><br><span class="line">25.064185</span><br></pre></td></tr></table></figure>
<h3 id="4-2-第二版"><a href="#4-2-第二版" class="headerlink" title="4.2 第二版"></a>4.2 第二版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">117.943720</span><br><span class="line">118.317260</span><br><span class="line">24.419860</span><br><span class="line">24.765930</span><br></pre></td></tr></table></figure>
<h2 id="5-武汉"><a href="#5-武汉" class="headerlink" title="5. 武汉"></a>5. 武汉</h2><h3 id="5-1-第一版"><a href="#5-1-第一版" class="headerlink" title="5.1 第一版"></a>5.1 第一版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">113.819498</span><br><span class="line">115.112853</span><br><span class="line">30.262890</span><br><span class="line">31.593052</span><br></pre></td></tr></table></figure>
<h3 id="5-2-第二版"><a href="#5-2-第二版" class="headerlink" title="5.2 第二版"></a>5.2 第二版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">113.944702</span><br><span class="line">114.790649</span><br><span class="line">30.281066</span><br><span class="line">30.885314</span><br></pre></td></tr></table></figure>
<h2 id="6-成都"><a href="#6-成都" class="headerlink" title="6. 成都"></a>6. 成都</h2><h3 id="6-2-第二版"><a href="#6-2-第二版" class="headerlink" title="6.2 第二版"></a>6.2 第二版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">103.749389</span><br><span class="line">104.408569</span><br><span class="line">30.445861</span><br><span class="line">30.907287</span><br></pre></td></tr></table></figure>
<h2 id="7-台州"><a href="#7-台州" class="headerlink" title="7. 台州"></a>7. 台州</h2><h3 id="1-仙居县"><a href="#1-仙居县" class="headerlink" title="1. 仙居县"></a>1. 仙居县</h3><blockquote>
<p>100 点，误差1km</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">120.708509</span><br><span class="line">120.767904</span><br><span class="line">28.825756</span><br><span class="line">28.874772</span><br></pre></td></tr></table></figure>
<h3 id="2-三门县"><a href="#2-三门县" class="headerlink" title="2. 三门县"></a>2. 三门县</h3><blockquote>
<p>100 点，误差1km</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">center : 29.104789, 121.395711</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">121.344300,</span><br><span class="line">121.447200,</span><br><span class="line">29.059800, </span><br><span class="line">29.149788,</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EF Conversation]]></title>
      <url>http://iequa.com/2017/06/30/ef-conversaion/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
audio {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}

</style>


<h2 id="2017-06-30"><a href="#2017-06-30" class="headerlink" title="2017-06-30"></a>2017-06-30</h2><p>According to statistics, online recruitment is becoming more and more common. What’s the best way to advertise a job in your country?</p>
<h2 id="2017-06-29"><a href="#2017-06-29" class="headerlink" title="2017-06-29"></a>2017-06-29</h2><p>Call it ‘gossip’, ‘small talk’ or ‘networking’, almost everyone participates in idle chat with their co-workers. Practicing sharing gossip with your classmates today.</p>
<p><code>What do you like to chat about with your friends?</code></p>
<p><code>Do you gossip with friends about these things?</code></p>
<p>politician，salary，celebrity</p>
<p>What does the media say about celebrities in your country?</p>
<p>People gossip about things that should be private</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[NLP 原理与基础]]></title>
      <url>http://iequa.com/2017/06/29/nlp-nltk/</url>
      <content type="html"><![CDATA[<blockquote>
<p>NLTK 是一个有肉有血的</p>
<p>斯坦佛 CoreNLP (英文、中文、西班牙语)</p>
</blockquote>
<a id="more"></a>
<h2 id="1-NLTK"><a href="#1-NLTK" class="headerlink" title="1. NLTK"></a>1. NLTK</h2><p><a href="http://www.nltk.org/" target="_blank" rel="external">nltk.org</a></p>
<ol>
<li>Python 著名的自然语言处理库</li>
<li>自带语料库、词性分类库</li>
<li>自带分类、分词 等功能</li>
<li>强大的社区支持</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pip install -U nltk</span><br><span class="line">sudo pip install -U numpy</span><br></pre></td></tr></table></figure>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> nltk</span><br><span class="line">nltk.download()</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>NLTK Modules</th>
<th>Functionality</th>
</tr>
</thead>
<tbody>
<tr>
<td>nltk.corpus</td>
<td>Corpus</td>
</tr>
<tr>
<td>nltk.tokenize, nltk.stem</td>
<td>Tokenizers, stemmers</td>
</tr>
</tbody>
</table>
<h2 id="2-NLTK-自带语料库"><a href="#2-NLTK-自带语料库" class="headerlink" title="2. NLTK 自带语料库"></a>2. NLTK 自带语料库</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> nltk.corpus <span class="keyword">import</span> brown</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>brown.categories()</span><br><span class="line">[<span class="string">u'adventure'</span>, <span class="string">u'belles_lettres'</span>, <span class="string">u'editorial'</span>, <span class="string">u'fiction'</span>, <span class="string">u'government'</span>, <span class="string">u'hobbies'</span>, <span class="string">u'humor'</span>, <span class="string">u'learned'</span>, <span class="string">u'lore'</span>, <span class="string">u'mystery'</span>, <span class="string">u'news'</span>, <span class="string">u'religion'</span>, <span class="string">u'reviews'</span>, <span class="string">u'romance'</span>, <span class="string">u'science_fiction'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(brown.sents())</span><br><span class="line"><span class="number">57340</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(brown.words())</span><br><span class="line"><span class="number">1161192</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="3-文本处理流程"><a href="#3-文本处理流程" class="headerlink" title="3. 文本处理流程"></a>3. 文本处理流程</h2><p><img src="/images/ml/nlp-text-deal-process.png" alt=""></p>
<h2 id="4-Tokenize"><a href="#4-Tokenize" class="headerlink" title="4. Tokenize"></a>4. Tokenize</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> nltk<span class="meta">&gt;&gt;&gt; </span>sentence = “hello, world<span class="string">"&gt;&gt;&gt; tokens = nltk.word_tokenize(sentence)&gt;&gt;&gt; tokens['hello', ‘,', 'world']</span></span><br></pre></td></tr></table></figure>
<h3 id="4-1-中英文分词"><a href="#4-1-中英文分词" class="headerlink" title="4.1 中英文分词"></a>4.1 中英文分词</h3><p>今天 / 天⽓ / 不错 / !<br>What a nice weather today !</p>
<p>[‘what’, ‘a’, ‘nice’, ‘weather’, ‘today’]<br>[‘今天’,’天气’,’真’,’不错’]</p>
<p>NLTK</p>
<p>word_tokenize 分词器</p>
<h3 id="4-2-中文分词"><a href="#4-2-中文分词" class="headerlink" title="4.2 中文分词"></a>4.2 中文分词</h3><blockquote>
<p>jieba (第三方开源库)</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jiebaseg_list = jieba.cut(<span class="string">"我来到北京清华⼤学"</span>, cut_all=<span class="keyword">True</span>)<span class="keyword">print</span> <span class="string">"Full Mode:"</span>, <span class="string">"/ "</span>.join(seg_list) <span class="comment"># 全模式</span>seg_list = jieba.cut(<span class="string">"我来到北京清华⼤学"</span>, cut_all=<span class="keyword">False</span>)<span class="keyword">print</span> <span class="string">"Default Mode:"</span>, <span class="string">"/ "</span>.join(seg_list) <span class="comment"># 精确模式</span>seg_list = jieba.cut(<span class="string">"他来到了网易杭研⼤厦"</span>) <span class="comment"># 默认是精确模式</span><span class="keyword">print</span> <span class="string">", "</span>.join(seg_list)seg_list = jieba.cut_for_search(<span class="string">"⼩明硕士毕业于中国科学院计算所,后在日本京都⼤学深造"</span>) <span class="comment"># 搜索引擎模式</span><span class="keyword">print</span> <span class="string">", "</span>.join(seg_list)</span><br></pre></td></tr></table></figure>
<p>【全模式】: 我/ 来到/ 北北京/ 清华/ 清华⼤大学/ 华⼤大/ ⼤大学<br>【精确模式】: 我/ 来到/ 北北京/ 清华⼤大学<br>【新词识别】:他, 来到, 了了, ⽹网易易, 杭研, ⼤大厦 (此处,“杭研”并没有在词典中,但是也被Viterbi算法识别出来了了)<br>【搜索引擎模式】: ⼩小明, 硕⼠士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, 后, 在, ⽇日本, 京都, ⼤大学, ⽇日本京都⼤大学, 深造</p>
<blockquote>
<p>有时候tokenize没那么简单 :</p>
<p>比如社交网络上,这些乱七八糟的不合语法不合正常逻辑的语言很多:<br>拯救 @某人, 表情符号, URL, #话题符号</p>
</blockquote>
<p><strong>社交网络语言的tokenize :</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nltk.tokenize <span class="keyword">import</span> word_tokenizetweet = <span class="string">'RT @angelababy: love you baby! :D http://ah.love #168cm'</span>print(word_tokenize(tweet))</span><br></pre></td></tr></table></figure>
<p><a href="http://www.nltk.org/" target="_blank" rel="external">正则表达式对照表</a></p>
<h2 id="5-词形归一化"><a href="#5-词形归一化" class="headerlink" title="5. 词形归一化"></a>5. 词形归一化</h2><p>Inflection变化: walk =&gt; walking =&gt; walked 不影响词性</p>
<p>derivation 引申: nation (noun) =&gt; national (adjective) =&gt; nationalize (verb) 影响词性</p>
<h3 id="5-1-Stemming"><a href="#5-1-Stemming" class="headerlink" title="5.1 Stemming"></a>5.1 Stemming</h3><p>Stemming 词干提取:一般来说,就是把不影响词性的inflection的小尾巴砍掉</p>
<p>walking 砍ing = walk<br>walked 砍ed = walk</p>
<p><strong>PorterStemmer</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> nltk.stem.porter <span class="keyword">import</span> PorterStemmer<span class="meta">&gt;&gt;&gt; </span>porter_stemmer = PorterStemmer()<span class="meta">&gt;&gt;&gt; </span>porter_stemmer.stem(‘maximum’)u’maximum’<span class="meta">&gt;&gt;&gt; </span>porter_stemmer.stem(‘presumably’)u’presum’<span class="meta">&gt;&gt;&gt; </span>porter_stemmer.stem(‘multiply’)u’multipli’<span class="meta">&gt;&gt;&gt; </span>porter_stemmer.stem(‘provision’)u’provis’</span><br></pre></td></tr></table></figure>
<p><strong>SnowballStemmer</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> nltk.stem <span class="keyword">import</span> SnowballStemmer</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>snowball_stemmer = SnowballStemmer(<span class="string">"english"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>snowball_stemmer.stem(<span class="string">'maximum'</span>)</span><br><span class="line"><span class="string">u'maximum'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>snowball_stemmer.stem(<span class="string">'presumably'</span>)</span><br><span class="line">u’presum’</span><br></pre></td></tr></table></figure>
<p><strong>LancasterStemmer</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> nltk.stem.lancaster <span class="keyword">import</span> LancasterStemmer</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lancaster_stemmer = LancasterStemmer()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lancaster_stemmer.stem(‘maximum’)</span><br><span class="line">‘maxim’</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lancaster_stemmer.stem(‘presumably’)</span><br><span class="line">‘presum’</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lancaster_stemmer.stem(‘presumably’)</span><br><span class="line">‘presum’</span><br></pre></td></tr></table></figure>
<p><strong>PorterStemmer</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> nltk.stem.porter <span class="keyword">import</span> PorterStemmer</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p = PorterStemmer()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.stem(<span class="string">'went'</span>)</span><br><span class="line"><span class="string">'went'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.stem(<span class="string">'wenting'</span>)</span><br><span class="line"><span class="string">'went'</span></span><br></pre></td></tr></table></figure>
<h3 id="5-2-Lemmatization"><a href="#5-2-Lemmatization" class="headerlink" title="5.2 Lemmatization"></a>5.2 Lemmatization</h3><p>词形归一:把各种类型的词的变形,都归为一个形式 </p>
<p>went 归一 = go<br>are 归一 = be</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> nltk.stem <span class="keyword">import</span> WordNetLemmatizer<span class="meta">&gt;&gt;&gt; </span>wordnet_lemmatizer = WordNetLemmatizer()<span class="meta">&gt;&gt;&gt; </span>wordnet_lemmatizer.lemmatize(‘dogs’)u’dog’<span class="meta">&gt;&gt;&gt; </span>wordnet_lemmatizer.lemmatize(‘churches’)u’church’<span class="meta">&gt;&gt;&gt; </span>wordnet_lemmatizer.lemmatize(‘aardwolves’)u’aardwolf’<span class="meta">&gt;&gt;&gt; </span>wordnet_lemmatizer.lemmatize(‘abaci’)u’abacus’<span class="meta">&gt;&gt;&gt; </span>wordnet_lemmatizer.lemmatize(‘hardrock’)‘hardrock’</span><br></pre></td></tr></table></figure>
<p>NLTK更好地实现Lemma</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ⽊木有POS Tag,默认是NN 名词</span><span class="meta">&gt;&gt;&gt; </span>wordnet_lemmatizer.lemmatize(‘are’) ‘are’<span class="meta">&gt;&gt;&gt; </span>wordnet_lemmatizer.lemmatize(‘<span class="keyword">is</span>’) ‘<span class="keyword">is</span>’<span class="comment"># 加上POS Tag</span><span class="meta">&gt;&gt;&gt; </span>wordnet_lemmatizer.lemmatize(‘<span class="keyword">is</span>’, pos=’v’) u’be’<span class="meta">&gt;&gt;&gt; </span>wordnet_lemmatizer.lemmatize(‘are’, pos=’v’) u’be’</span><br></pre></td></tr></table></figure>
<h2 id="6-Part-Of-Speech"><a href="#6-Part-Of-Speech" class="headerlink" title="6. Part Of Speech"></a>6. Part Of Speech</h2><table>
<thead>
<tr>
<th>TAG</th>
<th>Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td>CC</td>
<td>coordinating conjunction</td>
</tr>
<tr>
<td>CD</td>
<td>cardinal digit</td>
</tr>
<tr>
<td>DT</td>
<td>determiner</td>
</tr>
<tr>
<td>EX</td>
<td>existential there (like: “there is” … think of it like “there exists”)</td>
</tr>
<tr>
<td>FW</td>
<td>foreign word</td>
</tr>
<tr>
<td>IN</td>
<td>preposition/subordinating conjunction</td>
</tr>
<tr>
<td>JJ</td>
<td>adjective    ‘big’</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
<h3 id="6-1-NLTK-标注-POS-Tag"><a href="#6-1-NLTK-标注-POS-Tag" class="headerlink" title="6.1 NLTK 标注 POS Tag"></a>6.1 NLTK 标注 POS Tag</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> nltk<span class="meta">&gt;&gt;&gt; </span>text = nltk.word_tokenize(<span class="string">'what does the fox say'</span>)<span class="meta">&gt;&gt;&gt; </span>text[<span class="string">'what'</span>, <span class="string">'does'</span>, <span class="string">'the'</span>, <span class="string">'fox'</span>, <span class="string">'say'</span>]<span class="meta">&gt;&gt;&gt; </span>nltk.pos_tag(text)[(<span class="string">'what'</span>, <span class="string">'WDT'</span>), (<span class="string">'does'</span>, <span class="string">'VBZ'</span>), (<span class="string">'the'</span>, <span class="string">'DT'</span>), (<span class="string">'fox'</span>, <span class="string">'NNS'</span>), (<span class="string">'say'</span>, <span class="string">'VBP'</span>)]</span><br></pre></td></tr></table></figure>
<h2 id="7-Stopwords"><a href="#7-Stopwords" class="headerlink" title="7. Stopwords"></a>7. Stopwords</h2><p>一千个HE有一千种指代</p>
<p>一千个THE有一千种指事 对于注重理解文本『意思』的应用场景来说</p>
<p>歧义太多</p>
<p><a href="http://www.ranks.nl/stopwords" target="_blank" rel="external">全体stopwords列表</a> </p>
<h3 id="7-1-NLTK去除stopwords"><a href="#7-1-NLTK去除stopwords" class="headerlink" title="7.1 NLTK去除stopwords"></a>7.1 NLTK去除stopwords</h3><blockquote>
<p>首先记得在console里面下载一下词库<br>或者 nltk.download(‘stopwords’)</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> nltk</span><br><span class="line"><span class="keyword">from</span> nltk.corpus <span class="keyword">import</span> stopwords </span><br><span class="line"></span><br><span class="line"><span class="comment"># 先token⼀一把,得到⼀一个word_list</span></span><br><span class="line"></span><br><span class="line">word_list = nltk.word_tokenize(<span class="string">'what does the fox say'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后filter⼀一把</span></span><br><span class="line"></span><br><span class="line">filtered_words = [word <span class="keyword">for</span> word <span class="keyword">in</span> word_list <span class="keyword">if</span> word <span class="keyword">not</span> <span class="keyword">in</span> stopwords.words(<span class="string">'english'</span>)]</span><br><span class="line"></span><br><span class="line">filtered_words</span><br></pre></td></tr></table></figure>
<h2 id="8-文本预处理流水线"><a href="#8-文本预处理流水线" class="headerlink" title="8. 文本预处理流水线"></a>8. 文本预处理流水线</h2><blockquote>
<p>一条typical的文本预处理流水线</p>
</blockquote>
<p><img src="/images/ml/nlp-nltk-raw.png" alt=""></p>
<p><strong>文本预处理让我们得到了什么?</strong></p>
<p><img src="/images/ml/nlp-pre-deal.png" alt=""></p>
<h2 id="9-NLP上的经典应用"><a href="#9-NLP上的经典应用" class="headerlink" title="9. NLP上的经典应用"></a>9. NLP上的经典应用</h2><ol>
<li>情感分析</li>
<li>文本相似度 </li>
<li>文本分类</li>
</ol>
<h3 id="9-1-情感分析"><a href="#9-1-情感分析" class="headerlink" title="9.1 情感分析"></a>9.1 情感分析</h3><p><img src="/images/ml/nlp-nltk-2.png" alt=""></p>
<p>哪些是夸你？哪些是黑你？</p>
<p><strong>最简单的 sentiment dictionary</strong></p>
<ul>
<li>like 1 </li>
<li>good 2 </li>
<li>bad -2 </li>
<li>terrible -3</li>
</ul>
<blockquote>
<p>最简单也比较有效的方法，不需要学习</p>
<p>比如:AFINN-111<br><a href="http://www2.imm.dtu.dk/pubdb/views/publication_details.php?id=6010" target="_blank" rel="external">http://www2.imm.dtu.dk/pubdb/views/publication_details.php?id=6010</a></p>
</blockquote>
<p><strong>NLTK 完成简单的情感分析</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">sentiment_dictionary = &#123;&#125;<span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">'data/AFINN-111.txt'</span>)    word, score = line.split(<span class="string">'\t'</span>)    sentiment_dictionary[word] = int(score)<span class="comment"># 把这个打分表记录在⼀一个Dict上以后 </span></span><br><span class="line"><span class="comment"># 跑⼀一遍整个句句⼦子,把对应的值相加</span>total_score = sum(sentiment_dictionary.get(word, <span class="number">0</span>) <span class="keyword">for</span> word <span class="keyword">in</span> </span><br><span class="line">words) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 有值就是Dict中的值,没有就是0</span><span class="comment"># 于是你就得到了了⼀一个 sentiment score</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>显然这个方法太Naive<br>新词怎么办?<br>特殊词汇怎么办?<br>更深层次的玩意儿怎么办?</p>
</blockquote>
<p><strong>配上ML的情感分析</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nltk.classify <span class="keyword">import</span> NaiveBayesClassifier<span class="comment"># 随⼿手造点训练集</span>s1 = <span class="string">'this is a good book'</span>s2 = <span class="string">'this is a awesome book'</span>s3 = <span class="string">'this is a bad book'</span>s4 = <span class="string">'this is a terrible book'</span><span class="function"><span class="keyword">def</span> <span class="title">preprocess</span><span class="params">(s)</span>:</span> <span class="comment"># Func: 句⼦处理</span><span class="comment"># 这⾥简单的⽤了了split(), 把句子中每个单词分开 # 显然 还有更多的processing method可以⽤ </span></span><br><span class="line">    <span class="keyword">return</span> &#123;word: <span class="keyword">True</span> <span class="keyword">for</span> word <span class="keyword">in</span> s.lower().split()&#125;<span class="comment"># return长这样:</span><span class="comment"># &#123;'this': True, 'is':True, 'a':True, 'good':True, 'book':True&#125; # 其中, 前⼀一个叫fname, 对应每个出现的文本单词;</span><span class="comment"># 后⼀一个叫fval, 指的是每个⽂文本单词对应的值。</span><span class="comment"># 这⾥里里我们⽤用最简单的True,来表示,这个词『出现在当前的句句⼦子中』的意义。</span><span class="comment"># 当然啦, 我们以后可以升级这个⽅方程, 让它带有更更加⽜牛逼的fval, 比如 word2vec</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把训练集给做成标准形式</span>training_data = [[preprocess(s1), <span class="string">'pos'</span>],                 [preprocess(s2), <span class="string">'pos'</span>],                 [preprocess(s3), <span class="string">'neg'</span>],                 [preprocess(s4), <span class="string">'neg'</span>]]<span class="comment"># 喂给model吃</span>model = NaiveBayesClassifier.train(training_data)<span class="comment"># 打出结果</span>print(model.classify(preprocess(<span class="string">'this is a good book'</span>)))</span><br></pre></td></tr></table></figure>
<h3 id="9-2-文本相似度"><a href="#9-2-文本相似度" class="headerlink" title="9.2 文本相似度"></a>9.2 文本相似度</h3><p><img src="/images/ml/nlp-nltk-3.png" alt=""></p>
<p><strong>9.2.1 用元素频率表示文本特征</strong></p>
<p><img src="/images/ml/nlp-nltk-4.png" alt=""></p>
<p><strong>9.2.2 Frequency 频率统计</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> nltk</span><br><span class="line"><span class="keyword">from</span> nltk <span class="keyword">import</span> FreqDist</span><br><span class="line"><span class="comment"># 做个词库先</span></span><br><span class="line">corpus = <span class="string">'this is my sentence '</span> \</span><br><span class="line">           <span class="string">'this is my life '</span> \</span><br><span class="line">           <span class="string">'this is the day'</span></span><br><span class="line"><span class="comment"># 随便tokenize一下, 显然, 正如上文提到,</span></span><br><span class="line"><span class="comment"># 这里可以根据需要做任何的preprocessing:  stopwords, lemma, stemming, etc.</span></span><br><span class="line"><span class="comment"># 借⽤NLTK的FreqDist统计⼀下⽂字出现的频率 fdist = FreqDist(tokens)</span></span><br><span class="line"><span class="comment"># 它就类似于⼀个Dic,  带上某个单词, 可以看到它在整个文章中出现的次数</span></span><br><span class="line"></span><br><span class="line">tokens = nltk.word_tokenize(corpus) </span><br><span class="line">print(tokens)</span><br><span class="line"><span class="comment"># 得到 token 好的 word list</span></span><br><span class="line"><span class="comment"># ['this', 'is', 'my', 'sentence',</span></span><br><span class="line"><span class="comment"># 'this', 'is', 'my', 'life', 'this', # 'is', 'the', 'day']</span></span><br><span class="line"><span class="comment"># 借⽤ NLTK 的 FreqDist 统计⼀下文字出现的频率</span></span><br><span class="line">fdist = FreqDist(tokens)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 它就类似于⼀一个Dict</span></span><br><span class="line"><span class="comment"># 带上某个单词, 可以看到它在整个文章中出现的次数</span></span><br><span class="line">print(fdist[<span class="string">'is'</span>]) <span class="comment">#3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 好, 此刻, 我们可以把最常⽤用的50个单词拿出来 </span></span><br><span class="line">standard_freq_vector = fdist.most_common(<span class="number">50</span>) </span><br><span class="line">size = len(standard_freq_vector) </span><br><span class="line"><span class="keyword">print</span> <span class="string">"size: %s"</span> % (size)</span><br><span class="line">print(standard_freq_vector)</span><br><span class="line"><span class="comment"># [('is', 3), ('this', 3), ('my', 2),</span></span><br><span class="line"><span class="comment"># ('the', 1), ('day', 1), ('sentence', 1),</span></span><br><span class="line"><span class="comment"># ('life', 1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Func: 按照出现频率⼤小, 记录下每⼀个单词的位置 </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">position_lookup</span><span class="params">(v)</span>:</span></span><br><span class="line">    res = &#123;&#125;</span><br><span class="line">    counter = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> v:</span><br><span class="line">        res[word[<span class="number">0</span>]] = counter</span><br><span class="line">        counter += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment"># 把标准的单词位置记录下来</span></span><br><span class="line">standard_position_dict = position_lookup(standard_freq_vector) </span><br><span class="line">print(standard_position_dict)</span><br><span class="line"><span class="comment"># 得到⼀一个位置对照表</span></span><br><span class="line"><span class="comment"># &#123;'is': 0, 'the': 3, 'day': 4, 'this': 1, 'sentence': 5, 'my': 2, 'life': 6&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这时, 如果我们有个新句句⼦子:</span></span><br><span class="line">sentence = <span class="string">'this is cool'</span></span><br><span class="line"><span class="comment"># 先新建⼀一个跟我们的标准vector同样⼤小的向量 </span></span><br><span class="line">freq_vector = [<span class="number">0</span>] * size</span><br><span class="line"><span class="comment"># 简单的Preprocessing</span></span><br><span class="line">tokens = nltk.word_tokenize(sentence) <span class="comment"># 对于这个新句⼦⾥的每一个单词</span></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> tokens:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 如果在我们的词库里出现过</span></span><br><span class="line">    <span class="comment"># 那么就在"标准位置"上+1 </span></span><br><span class="line">        freq_vector[standard_position_dict[word]] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">except</span> KeyError: <span class="comment"># 如果是个新词</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">print(freq_vector)   <span class="comment"># [1, 1, 0, 0, 0, 0, 0]</span></span><br></pre></td></tr></table></figure>
<h3 id="9-3-文本分类"><a href="#9-3-文本分类" class="headerlink" title="9.3 文本分类"></a>9.3 文本分类</h3><h4 id="9-3-1-tf-idf"><a href="#9-3-1-tf-idf" class="headerlink" title="9.3.1 tf-idf"></a>9.3.1 tf-idf</h4><p><strong>TF: Term Frequency</strong>, 衡量一个term在文档中出现得有多频繁。 T</p>
<p>F(t) = (t出现在文档中的次数) / (文档中的term总数).</p>
<p><strong>IDF: Inverse Document Frequency</strong>, 衡量一个term有多重要。 有些词出现的很多,但是明显不是很有卵用。比如’is’,’the‘,’and‘之类 的。</p>
<p>为了平衡,我们把罕见的词的重要性(weight)搞高, 把常见词的重要性搞低。</p>
<p>IDF(t) = log_e(文档总数 / 含有t的文档总数). </p>
<p><strong>TF-IDF = TF * IDF</strong></p>
<p>举个栗子🌰 :</p>
<p>一个文档有100个单词,其中单词baby出现了3次。 那么,TF(baby) = (3/100) = 0.03.</p>
<p>好,现在我们如果有10M的文档, baby出现在其中的1000个文档中。 那么,IDF(baby) = log(10,000,000 / 1,000) = 4</p>
<p>所以, TF-IDF(baby) = TF(baby) * IDF(baby) = 0.03 * 4 = 0.12</p>
<h4 id="9-3-2-nltk-implement-tf-idf"><a href="#9-3-2-nltk-implement-tf-idf" class="headerlink" title="9.3.2 nltk implement tf-idf"></a>9.3.2 nltk implement tf-idf</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nltk.text <span class="keyword">import</span> TextCollection</span><br><span class="line"><span class="comment"># ⾸先, 把所有的⽂档放到TextCollection类中。</span></span><br><span class="line"><span class="comment"># 这个类会⾃动帮你断句, 做统计, 做计算</span></span><br><span class="line">corpus = TextCollection([<span class="string">'this is sentence one'</span>,</span><br><span class="line">                        <span class="string">'this is sentence two'</span>,</span><br><span class="line">                        <span class="string">'sentence three six'</span>,</span><br><span class="line">                        <span class="string">'this is sentence three'</span>])</span><br><span class="line"><span class="comment"># 直接就能算出tfidf</span></span><br><span class="line"><span class="comment"># (term: ⼀一句句话中的某个term, text: 这句句话)</span></span><br><span class="line">print(corpus.tf_idf(<span class="string">'this'</span>, <span class="string">'this is sentence four'</span>))</span><br><span class="line"><span class="comment"># 0.444342</span></span><br><span class="line"><span class="comment"># 同理, 怎么得到⼀一个标准⼤小的vector来表示所有的句子?</span></span><br><span class="line"><span class="comment"># 对于每个新句子</span></span><br><span class="line"><span class="comment">#new_sentence = 'this is sentence five' # 遍历⼀一遍所有的vocabulary中的词:</span></span><br><span class="line"><span class="comment">#for word in standard_vocab:</span></span><br><span class="line"><span class="comment">#    print(corpus.tf_idf(word, new_sentence)) # 我们会得到⼀个巨长(=所有vocab⻓度)的向量</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Guitar Learning]]></title>
      <url>http://iequa.com/2017/06/25/life-music-guitar/</url>
      <content type="html"><![CDATA[<h2 id="1-Guitar-调音操作"><a href="#1-Guitar-调音操作" class="headerlink" title="1. Guitar 调音操作"></a>1. Guitar 调音操作</h2><p>将调音器夹琴头空白位置，短按开关键将模式调节到G字母再进行调试~</p>
<p>从细到粗1-6弦的标准音分别是：1E 2B 3G 4D 5A 6E，</p>
<p>要将每根弦都对应到正确的字母到中间变绿才是标准音哟~</p>
<a id="more"></a>
<p><a href="http://v.youku.com/v_show/id_XMTQ3NDEzOTgzNg==.html?from=y1.7-2" target="_blank" rel="external">调音操作</a></p>
<p>调到 C 字母的调音方法 :</p>
<p>从细到粗1-6弦的标准音分别是：E B G D A E，</p>
<p>要将每根弦都对应到正确的字母到中间变绿才是标准音哟~</p>
<blockquote>
<p>注意先从最粗的6弦开始，最后调1弦，调音过程需要耐心多一点，力度小一点.</p>
</blockquote>
<h2 id="2-换弦操作方法"><a href="#2-换弦操作方法" class="headerlink" title="2. 换弦操作方法"></a>2. 换弦操作方法</h2><p>注意视频里面提到的撬弦器是没有赠送的，您可以使用钥匙或者小勺子放在固弦锥下方轻轻往上撬一下即可取出固弦锥.</p>
<p><a href="http://v.youku.com/v_show/id_XMTM4MDkyNjQ0MA==.html?from=y1.7-2" target="_blank" rel="external">换弦操作</a></p>
<p>吉他正对自己，一二三弦往自己怀里方向是拧紧调高，往外的方向是放松调低，四五六弦是相反方向</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EF 5.3 Telling story]]></title>
      <url>http://iequa.com/2017/06/25/ef-l5u3-Telling-stories/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
audio {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}

</style>

<h2 id="1-Explaining-how-you-met-someone"><a href="#1-Explaining-how-you-met-someone" class="headerlink" title="1. Explaining how you met someone"></a>1. Explaining how you met someone</h2><p><img src="/images/english/ef-l5u3l1.png" alt=""></p>
<audio src="/voices/ef/l5u3-explain-how-to-met-someone.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<a id="more"></a>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[KATE] So did I tell you I met this guy?</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Yeah, the one from the bank? or The guy at the beach?</td>
<td></td>
</tr>
<tr>
<td>[KATE] No! Not them.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Someone … better.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Well, let me tell you the story.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Um, I was shopping.</td>
<td></td>
</tr>
<tr>
<td>[KATE] And, uh, as I was leaving, I was in the car.</td>
<td></td>
</tr>
<tr>
<td>[KATE] … and you know <strong>how suddenly things just come out of nowhere?</strong></td>
<td></td>
</tr>
<tr>
<td>[KATE] Well, I had a lot of shopping bags, and I was <strong>putting on my lip gloss</strong> as I was driving.</td>
<td></td>
</tr>
<tr>
<td>[KATE] I know - stupid. And then … and then, I just didn’t see it.</td>
<td></td>
</tr>
<tr>
<td>[KATE] <code>It all happened so, so fast</code>.</td>
<td></td>
</tr>
<tr>
<td>[KATE] I was putting on my lip gloss, and then ‘Bang!’</td>
<td></td>
</tr>
<tr>
<td>[KATE] I hit his car.</td>
<td></td>
</tr>
<tr>
<td>[KATE] But there was a reward: the driver.</td>
<td></td>
</tr>
<tr>
<td>[KATE] He is great !</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Oh, I see. So now this guy <strong>is interested in you</strong>.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] You hit his car!</td>
<td></td>
</tr>
<tr>
<td>[KATE] Yeah. and it’s a nice car, too.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Yeah, and he was probably very angry.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Not very angry.</td>
<td></td>
</tr>
<tr>
<td>[KATE] He called me later about the accident, and he invited me to dinner.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] No way!</td>
<td></td>
</tr>
<tr>
<td>[KATE] Yep. We have a date.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Why am I not surprised?</td>
<td></td>
</tr>
<tr>
<td>[KATE] Come on! Let’s go.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="1-1-Grammar"><a href="#1-1-Grammar" class="headerlink" title="1.1 Grammar"></a>1.1 Grammar</h3><ul>
<li>In 1960, they were both living in France.</li>
<li>Larry was <code>working</code> in Orleans.</li>
</ul>
<ul>
<li>Where did they meet ?</li>
<li>Was she <strong>hoping</strong> to find a husband?</li>
<li>They’re <strong>celebrating</strong> 25 years of marriage.</li>
</ul>
<ul>
<li>What was she doing?</li>
</ul>
<h3 id="1-2-Sequencing-events-in-a-story"><a href="#1-2-Sequencing-events-in-a-story" class="headerlink" title="1.2 Sequencing events in a story"></a>1.2 Sequencing events in a story</h3><blockquote>
<p><strong>At first</strong>, I didn’t like him.<br><strong>In the beginning</strong>, he seemed unfriendly.<br><strong>Later</strong>, we started talking in the break room.<br><strong>After that</strong>, we had lunch a couple of times.<br><strong>Next</strong>, we went on a date.<br><strong>Finally</strong>, he asked me to marry him.<br><strong>In the end</strong>, we got married and had three children.</p>
</blockquote>
<h2 id="2-Talking-about-a-relationship"><a href="#2-Talking-about-a-relationship" class="headerlink" title="2. Talking about a relationship"></a>2. Talking about a relationship</h2><ul>
<li>close friends</li>
<li>old friends</li>
<li>My buddy</li>
<li>relatives</li>
<li>colleagues</li>
<li>acquaintance  [ə’kweɪnt(ə)ns]</li>
<li>instrument</li>
<li>gorgeous</li>
</ul>
<p><img src="/images/english/ef-l5u3l2.png" alt=""></p>
<audio src="/voices/ef/l5u3-talking-about-a-relationship.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[LISA] Petey! Peter Oakes.</td>
<td></td>
</tr>
<tr>
<td>[LISA] Hi! Lisa. Lisa Gomez. Remember me?</td>
<td></td>
</tr>
<tr>
<td>[PETER] Lisa Gomez. How can I forget?</td>
<td></td>
</tr>
<tr>
<td>[PETER] Lisa and I, eh, knew each other at university.</td>
<td></td>
</tr>
<tr>
<td>[PETER] Well, actually, you were dating Leo Cole when we first met, do you remember?</td>
<td></td>
</tr>
<tr>
<td>[LISA] Leo? Dating? No, not really.</td>
<td></td>
</tr>
<tr>
<td>[LISA] Well, he was so romantic, you know, with the flowers and the chocolates and everything. Oh, my …</td>
<td></td>
</tr>
<tr>
<td>[PETER] Lisa, it was really nice to meet you, but we really have to be going now.</td>
<td></td>
</tr>
<tr>
<td>[PETER] see you around</td>
<td></td>
</tr>
<tr>
<td>[KATE] So, uh, she was dating Leo when she met you?</td>
<td></td>
</tr>
<tr>
<td>[PETER] It wasn’t really like that.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-2-Grammar"><a href="#2-2-Grammar" class="headerlink" title="2.2 Grammar"></a>2.2 Grammar</h3><p>I’<strong>ve known</strong> my best friend for 22 years.<br>I was writing an email <strong>when</strong> the phone rang.<br>I was taking a shower <strong>when</strong> someone knocked on the door.</p>
<table>
<thead>
<tr>
<th>word</th>
</tr>
</thead>
<tbody>
<tr>
<td>swimming</td>
<td></td>
</tr>
<tr>
<td>8 years old</td>
<td></td>
</tr>
<tr>
<td>incredibly tall</td>
<td></td>
</tr>
<tr>
<td>taller than others</td>
<td></td>
</tr>
<tr>
<td>asked a question</td>
<td></td>
</tr>
<tr>
<td>an orange swim cap</td>
<td></td>
</tr>
<tr>
<td>a purple mouth</td>
<td></td>
</tr>
<tr>
<td>laughed</td>
<td></td>
</tr>
</tbody>
</table>
<p>My Best Friend Natasha</p>
<p>I first met my best friend when we were swimming at summer camp. We were 8 years old. Natasha was incredibly tall. She was taller than all the other children. She asked me a question: ‘Why are you wearing that orange swim cap?’ So I asked her: ‘Why are you so tall?’ Natasha laughed. Her mouth was purple from eating strange candy. I laughed, too.    </p>
<h3 id="2-3-Reading-and-Writing"><a href="#2-3-Reading-and-Writing" class="headerlink" title="2.3 Reading and Writing"></a>2.3 Reading and Writing</h3><p>I first met my colleague, John, when we were studying at Duke University. He walked into my room, said hello, and then we started talking about history together. John looks like one of those little people in ‘Lord of the Rings,’ with funny ears. He always has a smile in his eyes. He also tells crazy stories. He has one story about playing the flute in New Orleans. He was playing on the street when a river of water came down the street. He ran! In the end, both John and I got hired by BTC. Now he’s an old friend.</p>
<p>I first met my colleague, Jamie, when I was getting coffee at the office eight years ago. She was putting five spoons of sugar in her cup when I walked into the coffee room. When I saw that, I really liked her. She has gorgeous red hair and a funny laugh, like a little mouse. She has lived in 12 countries;</p>
<h2 id="3-Talking-about-a-good-experience"><a href="#3-Talking-about-a-good-experience" class="headerlink" title="3. Talking about a good experience"></a>3. Talking about a good experience</h2><ul>
<li>backyard</li>
<li>guilty</li>
<li>embarrassed</li>
</ul>
<p><img src="/images/english/ef-l5u3l3.png" alt=""></p>
<audio src="/voices/ef/l5u3-talking-about-a-good-experience.m4a
" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[PETER] Leo is my best friend.</td>
<td></td>
</tr>
<tr>
<td>[PETER] But I did not steal his girlfriend</td>
<td></td>
</tr>
<tr>
<td>[PETER] A couple of years ago, I was studying business at the university, and Lisa was in my class.</td>
<td></td>
</tr>
<tr>
<td>[PETER] I didn’t know she had a boyfriend.</td>
<td></td>
</tr>
<tr>
<td>[PETER] One evening I was waiting for Lisa outside a movie theater.</td>
<td></td>
</tr>
<tr>
<td>[PETER] And, uh, I saw this other guy.</td>
<td></td>
</tr>
<tr>
<td>[PETER] He was also waiting outside the movie theater.</td>
<td></td>
</tr>
<tr>
<td>[PETER] And we started talking.</td>
<td></td>
</tr>
<tr>
<td>[PETER] Well, his date was late, too.</td>
<td></td>
</tr>
<tr>
<td>[PETER] When Lisa arrived, she looked at me, she looked at Leo, and then she ran away.</td>
<td></td>
</tr>
<tr>
<td>[PETER] She had two dates at the same time!</td>
<td></td>
</tr>
<tr>
<td>[PETER] Well, anyways, I saw Leo at school the next day, and now we’re best friends!</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="3-1-Grammar"><a href="#3-1-Grammar" class="headerlink" title="3.1 Grammar"></a>3.1 Grammar</h3><table>
<thead>
<tr>
<th>Adjective</th>
<th>Adverb</th>
</tr>
</thead>
<tbody>
<tr>
<td>lucky</td>
<td>luckily</td>
</tr>
<tr>
<td>unexpected</td>
<td>unexpectedly</td>
</tr>
<tr>
<td>fortunate</td>
<td>fortunately</td>
</tr>
<tr>
<td>grateful</td>
<td>gratefully</td>
</tr>
<tr>
<td>positive</td>
<td>positively</td>
</tr>
<tr>
<td>surpring</td>
<td>surpringly</td>
</tr>
</tbody>
</table>
<ul>
<li>Heather <strong>got an unexpected promotion</strong> at work.</li>
<li>Fortunately, Jean found her wallet.</li>
<li>Surprisingly, John didn’t get the job.</li>
<li>I was really embarrassed.</li>
<li>I felt <strong>guilty</strong>.</li>
<li>He seemed upset.    </li>
<li>The hike was fantastic!</li>
<li>Something crazy happened.</li>
</ul>
<h3 id="3-2-Expressions"><a href="#3-2-Expressions" class="headerlink" title="3.2 Expressions"></a>3.2 Expressions</h3><p><strong>Listen to the audio. Move the text to the correct gaps.</strong></p>
<table>
<thead>
<tr>
<th>text</th>
</tr>
</thead>
<tbody>
<tr>
<td>I finally went up OId Rag Mountain.</td>
<td></td>
</tr>
<tr>
<td>I feel fantastic !</td>
<td></td>
</tr>
<tr>
<td>Something crazy happened, though. I felt guilty leaving him here.</td>
<td></td>
</tr>
<tr>
<td>Yeah, he was a little upset when you left.</td>
<td></td>
</tr>
<tr>
<td>He seems okay  now.</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>Did he seem calm after going to the spa?</li>
<li>Everyone seemed so embarrassed.</li>
<li>I forgot the date and felt guilty for three days.</li>
</ul>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>MELISSA: Okay, so Ralph <strong>walks up to</strong> me, and he has a picture  in his hand.</td>
<td></td>
</tr>
<tr>
<td>NICK: A picture of what?</td>
<td></td>
</tr>
<tr>
<td>MELISSA: A cat. In a pink sweater.</td>
<td></td>
</tr>
<tr>
<td>NICK: What? Whose cat?</td>
<td></td>
</tr>
<tr>
<td>MELISSA: His. The cat in the pink sweater is Ralph’s!</td>
<td></td>
</tr>
<tr>
<td>NICK: Really?</td>
<td></td>
</tr>
<tr>
<td>MELISSA: Yep, and so Ralph gives  me the picture. He says  , ‘Isn’t Lucky cute in this picture?’</td>
<td></td>
</tr>
<tr>
<td>NICK: Ha! Very surprising.</td>
<td></td>
</tr>
<tr>
<td>MELISSA: I know! I couldn’t believe it! Ralph isn’t all bad. He is very strange, though.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="4-Telling-a-story-about-a-bad-experience"><a href="#4-Telling-a-story-about-a-bad-experience" class="headerlink" title="4. Telling a story about a bad experience"></a>4. Telling a story about a bad experience</h2><table>
<thead>
<tr>
<th>Word</th>
<th>meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td>delivery [dɪ’lɪv(ə)rɪ]</td>
<td></td>
</tr>
<tr>
<td>disaster [dɪ’zɑːstə]</td>
<td></td>
</tr>
<tr>
<td>pothole [‘pɒthəʊl]</td>
<td></td>
</tr>
<tr>
<td>motorcycle</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>swerved [swɜːv] | vi, vt, n.</p>
</blockquote>
<p><img src="/images/english/ef-l5u3l4.png" alt=""></p>
<audio src="/voices/ef/l5u3-story-about-a-bad-experience.m4a
" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[JAKE] Have I ever told you about my job as a pizza delivery guy?</td>
<td></td>
</tr>
<tr>
<td>[SIMON] No. What about it?</td>
<td></td>
</tr>
<tr>
<td>[JAKE] It ended in disaster.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] What happened?</td>
<td></td>
</tr>
<tr>
<td>[JAKE] One night, I had a really big delivery, like, 20 pizzas. They were on the back of the motorcycle.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] I was driving down the road, and I was in a hurry, and then this dog ran out in front of me.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] So I swerved, and I missed the dog. But I hit this really big pothole.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] So then what happened?</td>
<td></td>
</tr>
<tr>
<td>[JAKE] There were pizzas all over the street, and I ended up on the sidewalk.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] Ouch !</td>
<td></td>
</tr>
<tr>
<td>[JAKE] And <strong>while they were putting me into the ambulance, the neighborhood dogs were having a pizza party</strong>.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] Were you badly hurt?</td>
<td></td>
</tr>
<tr>
<td>[JAKE] No. I just had a broken arm … and no job.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>How terrible!</p>
</blockquote>
<h3 id="4-1-Grammar"><a href="#4-1-Grammar" class="headerlink" title="4.1 Grammar"></a>4.1 Grammar</h3><table>
<thead>
<tr>
<th>clauses with past continuous</th>
</tr>
</thead>
<tbody>
<tr>
<td>While it was raining, the electricity went out.</td>
<td></td>
</tr>
<tr>
<td>The electricity came back on while we were sleeping.</td>
<td></td>
</tr>
<tr>
<td>While it was raining, he took a nap.</td>
<td></td>
</tr>
<tr>
<td>The phone rang while I was taking a shower.</td>
<td></td>
</tr>
<tr>
<td>She was watching TV while he was studying.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>‘While’ clauses with past continuous</p>
</blockquote>
<h3 id="4-2-Expressions"><a href="#4-2-Expressions" class="headerlink" title="4.2 Expressions"></a>4.2 Expressions</h3><ul>
<li>I was watching a movie at the theater.</li>
<li>She was laughing and laughing.</li>
<li>That was my best date ever.</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EF 5.2 Making decisions]]></title>
      <url>http://iequa.com/2017/06/19/ef-l5u2-Making-Decisions/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
audio {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}

</style>

<h2 id="1-Comparing-options"><a href="#1-Comparing-options" class="headerlink" title="1. Comparing options"></a>1. Comparing options</h2><ul>
<li>parrot [ˈperət] </li>
<li>turtle [ˈtɜ:rtl] </li>
<li>rabbit</li>
<li>goldfish</li>
</ul>
<p><img src="/images/english/ef-l5u2l1.png" alt=""></p>
<audio src="/voices/ef/l5u2-comparing-options.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[LEO] They say that a dog is a man’s best friend.</td>
<td></td>
</tr>
<tr>
<td>[LEO] In Britain, some people spend <strong>as much money on their pets as</strong> others spend on their children.</td>
<td></td>
</tr>
<tr>
<td>[LEO] I know.</td>
<td></td>
</tr>
<tr>
<td>[LEO] You know, they … they … they buy presents for them.</td>
<td></td>
</tr>
<tr>
<td>[LEO] They take pictures with them!</td>
<td></td>
</tr>
<tr>
<td>[LEO] In my job, I meet a lot of interesting people, and their pets.</td>
<td></td>
</tr>
<tr>
<td>[LEO] Wow! Look at your hair!</td>
<td></td>
</tr>
<tr>
<td>[MRS.JAMES] Yeah, you like it?</td>
<td></td>
</tr>
<tr>
<td>[MRS.JAMES] It’s as white as Coco’s now. Coco loves Mommy’s hair. Yes, she does!</td>
<td></td>
</tr>
<tr>
<td>[MRS.JAMES] Mommy’s as beautiful as Coco now. Mommy loves her Coco. They did her hair and nails yesterday.</td>
<td></td>
</tr>
<tr>
<td>[MRS. JAMES] Isn’t she beautiful?</td>
<td></td>
</tr>
<tr>
<td>[LEO] As beautiful as a princess<code>[prɪn&#39;ses]</code>.</td>
<td></td>
</tr>
<tr>
<td>[LEO] Whoa! Hi, Miles!</td>
<td></td>
</tr>
<tr>
<td>[LEO] Long time, no see, boy!</td>
<td></td>
</tr>
<tr>
<td>[MR.BRADY] He’s almost as big as me.</td>
<td></td>
</tr>
<tr>
<td>[MR.BRADY] We’re both on a <code>diet</code> [‘daɪət].</td>
<td></td>
</tr>
<tr>
<td>[MR. BRADY] I’m as hungry as a bear.</td>
<td></td>
</tr>
<tr>
<td>[MR. BRADY] Now we go for long walks.</td>
<td></td>
</tr>
<tr>
<td>[MR. BRADY] See you later.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="1-1-grammar"><a href="#1-1-grammar" class="headerlink" title="1.1 grammar"></a>1.1 grammar</h3><ul>
<li>My cat, Gatsby, is as intelligent as a person. </li>
<li>That dog isn’t as loud as my parrot. </li>
</ul>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: What does your dog look like?</td>
<td></td>
</tr>
<tr>
<td>B: He’s really big and he has black fur.</td>
<td></td>
</tr>
<tr>
<td>A: Did I tell you what my dog did?</td>
<td></td>
</tr>
<tr>
<td>B: No. What happened?</td>
<td></td>
</tr>
<tr>
<td>A: What did it look like?</td>
<td></td>
</tr>
<tr>
<td>B: It had really big ears.</td>
<td></td>
</tr>
<tr>
<td>A: Which do you prefer?</td>
<td></td>
</tr>
<tr>
<td>B: I think I prefer cats.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Making-decisions"><a href="#2-Making-decisions" class="headerlink" title="2. Making decisions"></a>2. Making decisions</h2><table>
<thead>
<tr>
<th>seal</th>
<th>cheetah[ˈtʃi:tə]</th>
<th>penguin [ˈpeŋgwɪn]</th>
</tr>
</thead>
<tbody>
<tr>
<td>zebra</td>
<td>dolphin[‘dɒlfɪn]</td>
<td>whale [weɪl]</td>
</tr>
</tbody>
</table>
<p><img src="/images/english/ef-l5u2l2.png" alt=""></p>
<audio src="/voices/ef/l5u2-making-decision.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[SALLY] Hey, Todd, what’s all this?</td>
<td></td>
</tr>
<tr>
<td>[TODD] I’m planning a trip with my family. I want something big this year, something really special for the kids.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Where are you <code>thinking of going</code>?</td>
<td></td>
</tr>
<tr>
<td>[TODD] <code>It’s down to two options</code>: Patagonia, or Kenya.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Wow! Cool!</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yeah. Both places have <code>amazing animals</code>. My kids are crazy about animals.</td>
<td></td>
</tr>
<tr>
<td>[TODD] You see, they’ve been to the zoo, but I want them to see animals in the wild.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Yeah.</td>
<td></td>
</tr>
<tr>
<td>[TODD] So, it’s down to whales, penguins and seals in Patagonia; or, zebras, lions and elephants in Kenya. I feel like a child, too, planning this trip.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Maybe <code>I should go on a trip</code>. Where did you get these brochures?  [bro’ʃʊr]</td>
<td></td>
</tr>
<tr>
<td>[TODD] Oh. There’s a great little travel agency on 6th Street. They have some great deals right now.</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>I’m planning an amazing trip.</li>
<li>Which animals are you planning to see?</li>
</ul>
<h3 id="2-1-grammar"><a href="#2-1-grammar" class="headerlink" title="2.1 grammar"></a>2.1 grammar</h3><ul>
<li>Whales are the <strong>biggest</strong> animals.    </li>
<li>The <strong>fastest</strong> runner is the cheetah.</li>
<li>Penguins live in the <strong>coldest</strong> places on earth.</li>
</ul>
<blockquote>
<p>intelligent &gt; most intelligent / least intelligent</p>
</blockquote>
<ul>
<li>Penguins live in the coldest places on earth</li>
<li>Dolphins are probably the most intelligent animal.</li>
</ul>
<h3 id="2-2-reading"><a href="#2-2-reading" class="headerlink" title="2.2 reading"></a>2.2 reading</h3><p>Of all animals, the cheetah is the fastest runner. Cheetahs can run faster than 95 kilometers an hour. (The slowest animal is the sloth. It moves slower than one kilometer per hour.) Cheetahs have very large eyes, but maybe the most interesting thing about cheetahs is their colors. Their black and yellow colors are perhaps the most gorgeous of any animal. Their fur looks just like the African wilderness, so it’s difficult to see them. It’s unlikely that you’ll ever visit the beautiful cheetah in the wilderness of Africa, or the Middle East. The easiest way to see a cheetah is to come here. Today, 10 amazing cheetahs are living with us at Adventure Park.</p>
<h2 id="3-Discussing-the-details"><a href="#3-Discussing-the-details" class="headerlink" title="3. Discussing the details"></a>3. Discussing the details</h2><p><img src="/images/english/ef-l5u2l3-word.png" alt=""></p>
<table>
<thead>
<tr>
<th>volcano  [vɒl’keɪnəʊ]</th>
<th>package tours</th>
<th>coral reefs  [‘kɒr(ə)l]</th>
</tr>
</thead>
<tbody>
<tr>
<td>rainforest</td>
<td>desert</td>
<td>glacier  [‘gleɪsɪə]</td>
</tr>
</tbody>
</table>
<p><img src="/images/english/ef-l5u2l3.png" alt=""></p>
<audio src="/voices/ef/l5u2-discussing-the-details.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[AGENT] Good afternoon. May I help you?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] I’m thinking about taking a vacation in March.</td>
<td></td>
</tr>
<tr>
<td>[AGENT] <code>How many of you are there?</code></td>
<td></td>
</tr>
<tr>
<td>[SALLY] Two. I’m going with a friend.</td>
<td></td>
</tr>
<tr>
<td>[AGENT] Okay. And, uh, where are you thinking of going?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] We haven’t decided yet. We want a relaxing vacation, definitely a nice beach, some nature, and not too expensive. <code>What would you suggest</code>?</td>
<td></td>
</tr>
<tr>
<td>[AGENT] Well, at that time of year, I’d recommend Hawaii. They have some of the best <code>package tours</code>.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] I’ve always wanted to go to Hawaii.</td>
<td></td>
</tr>
<tr>
<td>[AGENT] I just got this brochure from a hotel in Maui, <code>right on the ocean</code>. Great diving just off the beach, lots of coral reefs and mountains not too far away.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] That sounds perfect! Oh! And can we see a volcano?</td>
<td></td>
</tr>
<tr>
<td>[AGENT] That’s actually on another island, but I can arrange a tour.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Cool. So <code>how much would it all be</code>?</td>
<td></td>
</tr>
<tr>
<td>[AGENT] Well, how many nights would you like to stay?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Ummm, maybe six? Or seven?</td>
<td></td>
</tr>
<tr>
<td>[AGENT] Okay. Give me a minute, and I can give you some prices.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="3-2-grammar"><a href="#3-2-grammar" class="headerlink" title="3.2 grammar"></a>3.2 grammar</h3><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>The weather in Hawaii is the best in the United States.</td>
<td></td>
</tr>
<tr>
<td>It was a worse vacation than last year.</td>
<td></td>
</tr>
<tr>
<td>It was the worst vacation ever.</td>
<td></td>
</tr>
<tr>
<td>A glacier is a really bad place to be in the winter.</td>
<td></td>
</tr>
<tr>
<td>The weather this year was worse than last year</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>My summer vacation in the United States</p>
<p>I just returned from the United States. I had a really good time. <strong>Los Angeles was the best place I went</strong>. There were amazing beaches and great things to do. I also loved New York and Chicago, but Chicago was better than New York. The people were wonderful. Dallas was the worst place. It was too hot!</p>
</blockquote>
<h3 id="3-3-expressions"><a href="#3-3-expressions" class="headerlink" title="3.3 expressions"></a>3.3 expressions</h3><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: When are you thinking of going?</td>
<td></td>
</tr>
<tr>
<td>B: I’m thinking of going in January.</td>
<td></td>
</tr>
<tr>
<td>A: What are you looking for, exactly?</td>
<td></td>
</tr>
<tr>
<td>B: I’m interested in going somewhere beautiful.</td>
<td></td>
</tr>
<tr>
<td>A: Are you thinking more of mountains or the ocean?</td>
<td></td>
</tr>
<tr>
<td>B: I’m thinking more of the mountains.</td>
<td></td>
</tr>
<tr>
<td>B: What would you suggest? What would you recommend?</td>
<td></td>
</tr>
<tr>
<td>A: I’d recommend that you go to Hawaii.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="4-Summarizing-decisions"><a href="#4-Summarizing-decisions" class="headerlink" title="4. Summarizing decisions"></a>4. Summarizing decisions</h2><ul>
<li>trail [trel] 、stream 、 bush、backpacking</li>
</ul>
<p><img src="/images/english/ef-l5u2l4.png" alt=""></p>
<audio src="/voices/ef/l5u2-summarizing-decisions.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[SIMON] That’s Jake in Barcelona. [,ba:si’ləunə]</td>
<td></td>
</tr>
<tr>
<td>[PAM] cool.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] And that’s me at the Eiffel Tower.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Ha-ha! Nice.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] Ooh! And these are the mountains in Switzerland. [ˈswɪtsələnd]</td>
<td></td>
</tr>
<tr>
<td>[PAM] Wow! Beautiful trees. And <strong>amazing mountain flowers. Those colors.</strong></td>
<td></td>
</tr>
<tr>
<td>[SIMON] Yeah, it was really beautiful.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Let’s try hiking in the mountains sometime. <strong>I’ve never done it before</strong>.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] Really? You’ve never gone hiking before?</td>
<td></td>
</tr>
<tr>
<td>[PAM] No. <code>I mean, it’s not something my family did</code>.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] Well, if you do go hiking, <strong>you’d better be careful</strong>. The mountains can be dangerous.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] Yeah. Don’t go into the mountains alone. <strong>Go with a group of people</strong>.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] Also, uh, <code>it can be freezing cold</code> at night, even in the summer.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] Make sure you get excellent equipment, especially boots and a tent.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] And always tell someone where you’re going.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Okay. Don’t go alone. Get excellent equipment. Be careful. Tell someone where you’re going. I got it. Hey, why don’t we go hiking this weekend?</td>
<td></td>
</tr>
<tr>
<td>[SIMON] Well, uh, I have work to do this weekend.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] And I have a, uh … thing.</td>
<td></td>
</tr>
<tr>
<td>[PAM] <code>Did you even go up these mountains?</code></td>
<td></td>
</tr>
<tr>
<td>[SIMON] Of course, we did.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] That’s us at the Munich beer festival!</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>Munich beer [ˈmjunɪk bɪr]</p>
</blockquote>
<h3 id="4-2-expressions"><a href="#4-2-expressions" class="headerlink" title="4.2 expressions"></a>4.2 expressions</h3><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>JOHNNY: I’m going <code>backpacking</code> this weekend.</td>
<td></td>
</tr>
<tr>
<td>MOM: Well, don’t go alone.</td>
<td></td>
</tr>
<tr>
<td>JOHNNY: I’m not. <strong>I’m going</strong> with some friends.</td>
<td></td>
</tr>
<tr>
<td>MOM: And make sure you have good shoes.</td>
<td></td>
</tr>
<tr>
<td>JOHNNY:  <strong>I do have good shoes</strong>.</td>
<td></td>
</tr>
<tr>
<td>MOM: OK, that’s good. <strong>Be sure to stay on the trails</strong>. n. 山径；踪迹（trail的复数）；游径</td>
<td></td>
</tr>
<tr>
<td>JOHNNY: I will.</td>
<td></td>
</tr>
<tr>
<td>MOM: And <strong>you’d better</strong> get a good jacket.</td>
<td></td>
</tr>
<tr>
<td>JOHNNY: Mom, I’m going to be OK.</td>
<td></td>
</tr>
<tr>
<td>MOM: I’m sorry. I just love you, and I worry.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="4-3-writing"><a href="#4-3-writing" class="headerlink" title="4.3 writing"></a>4.3 writing</h3><p>Using commas</p>
<ul>
<li>When I was on vacation in Chile, I saw a lot of wild animals.</li>
<li>After I got home, I looked at all my photographs.</li>
</ul>
<p>I live in San Francisco, California [,kælɪ’fɔ:njə]. There are wonderful plants and animals here. In the city, there are wonderful parks with a lot of beautiful birds, rabbits, turtles and other animals. When I go there, I always sit under the big redwood, <strong>oak  [əʊk] and pine trees</strong>. Redwoods are the tallest trees in the world. San Francisco is on the Pacific Ocean. You can sometimes see whales swimming in the ocean. Whales are the largest animals in the world.</p>
<p>My name is Blair. I live in Hangzhou, China. Hangzhou is the most beautiful city in the China. We have incredible nature lake in my state. There are a lot of forests and mountains. West lake Nine Stream is the largest stream in the Hangzhou. I’d suggest you hike Nine Stream. I often see deer and kinds of birds. But, Don’t go hiking alone.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EF 5.1 Travel]]></title>
      <url>http://iequa.com/2017/06/14/ef-l5u1-Travel/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
audio {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}

</style>

<h2 id="1-Talking-about-flight-arrangements"><a href="#1-Talking-about-flight-arrangements" class="headerlink" title="1. Talking about flight arrangements"></a>1. Talking about flight arrangements</h2><ul>
<li>boarding pass</li>
<li>luggage</li>
<li>pack</li>
</ul>
<p><img src="/images/english/ef-l5u1l1.png" alt=""></p>
<audio src="/voices/ef/l5u1-travel-flight-arrangements.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[TODD] Passport, ticket, uh, don’t need a visa for Sweden.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Are you going somewhere?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Joan called last night, around 3 o’clock.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] in the morning?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yeah. I’m flying to, uh, Stockholm. There’s a … She needs help with a client. I packed this morning.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Stockholm? That’s a long trip. Looks like you’re in a hurry.</td>
<td></td>
</tr>
<tr>
<td>[TODD] My flight leaves in three hours, and I haven’t printed my boarding pass, called a taxi or …</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Todd, let me help. How about you print your boarding pass? I’ll call a taxi for you. What time’s your flight?</td>
<td></td>
</tr>
<tr>
<td>[TODD] It’s 5:15.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] You have plenty of time. What’s the airline?</td>
<td></td>
</tr>
<tr>
<td>[TODD] It’s, uh, it’s Western Airlines. I leave from, uh, the international terminal.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Okay. Western. No problem. Yes. I need a taxi at 3 p.m.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="1-1-grammar"><a href="#1-1-grammar" class="headerlink" title="1.1 grammar"></a>1.1 grammar</h3><ul>
<li>I have printed my boarding pass.</li>
<li>She has lost her ticket.    </li>
</ul>
<table>
<thead>
<tr>
<th>The subject pronoun</th>
<th>have are contracted as follows</th>
</tr>
</thead>
<tbody>
<tr>
<td>I have worded</td>
<td>I’ve worded.</td>
</tr>
<tr>
<td>You have    worked</td>
<td>You’ve    worked.</td>
</tr>
<tr>
<td>It has rained</td>
<td>It’s    rained.</td>
</tr>
<tr>
<td>He has worked</td>
<td>He’s worked.</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: Has she packed her bags?</td>
<td></td>
</tr>
<tr>
<td>B: Yes, she has.</td>
<td></td>
</tr>
<tr>
<td>A: Have the Taylors bought their tickets?</td>
<td></td>
</tr>
<tr>
<td>B: No, they haven’t.</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>Alice has <code>bought</code> a new suitcase.</li>
<li>Have you <code>packed</code> your bags?</li>
<li>I have lost my passport.</li>
<li>They have worked so hard!</li>
<li>He hasn’t found my sweater.</li>
</ul>
<h3 id="1-2-expressions"><a href="#1-2-expressions" class="headerlink" title="1.2 expressions"></a>1.2 expressions</h3><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: When are you leaving?</td>
<td></td>
</tr>
<tr>
<td>B: On the 23rd.</td>
<td></td>
</tr>
<tr>
<td>A: When are you returning?</td>
<td></td>
</tr>
<tr>
<td>B: On Friday the 31st.</td>
<td></td>
</tr>
<tr>
<td>A: What time’s your flight?</td>
<td></td>
</tr>
<tr>
<td>B: It’s at 7:38 a.m.</td>
<td></td>
</tr>
<tr>
<td>A: What’s the airline?</td>
<td></td>
</tr>
<tr>
<td>B: Air Pacifica.</td>
<td></td>
</tr>
<tr>
<td>A: When do you arrive in Paris?</td>
<td></td>
</tr>
<tr>
<td>B: At 11:42 p.m.</td>
<td></td>
</tr>
<tr>
<td>A: Is that our time or Paris time?</td>
<td></td>
</tr>
<tr>
<td>B: Paris time.</td>
<td></td>
</tr>
<tr>
<td>A: Which airport do you fly out of?</td>
<td></td>
</tr>
<tr>
<td>B: O’Hare.</td>
<td></td>
</tr>
<tr>
<td>A: Which airport do you fly in to?</td>
<td></td>
</tr>
<tr>
<td>B: I fly in to De Gaulle.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Checking-in-for-a-flight"><a href="#2-Checking-in-for-a-flight" class="headerlink" title="2. Checking in for a flight"></a>2. Checking in for a flight</h2><ul>
<li>boarding pass</li>
<li>luggage [‘lʌgɪdʒ]</li>
</ul>
<p><img src="/images/english/ef-l5u1l2.png" alt=""></p>
<audio src="/voices/ef/l5u1-travel-Checking-in-for-a-flight.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[AGENT] Good afternoon. Where are you flying today?</td>
<td></td>
</tr>
<tr>
<td>[TODD] I’m flying to Stockholm.  [‘stɔkhəum; ‘stɔ:k,hɔ:lm]</td>
<td></td>
</tr>
<tr>
<td>[AGENT] May I see your passport, please?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yes. Here you are. Do you need to see my boarding pass?</td>
<td></td>
</tr>
<tr>
<td>[AGENT] Uh, no, I don’t. Unfortunately, your flight has been delayed. <code>It’s now scheduled to depart at 6 p.m.</code> [ʌnˈfɔːtʃənətli]</td>
<td></td>
</tr>
<tr>
<td>[TODD] Oh, well. That’s not too bad.</td>
<td></td>
</tr>
<tr>
<td>[AGENT] I’m sorry for any inconvenience. [ɪnkən’viːnɪəns]</td>
<td></td>
</tr>
<tr>
<td>[TODD] That’s okay.</td>
<td></td>
</tr>
<tr>
<td>[AGENT] Are you checking any bags today?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yes. I have one bag to check and one bag to carry on.</td>
<td></td>
</tr>
<tr>
<td>[AGENT] Have you left your bags unattended at any time?</td>
<td></td>
</tr>
<tr>
<td>[TODD] No. I’ve always had my bags with me.</td>
<td></td>
</tr>
<tr>
<td>[AGENT] Okay. That’s good. Right now you have a middle seat. Would you prefer a window seat or an aisle seat? [aɪl]</td>
<td></td>
</tr>
<tr>
<td>[TODD] Umm, an <code>aisle seat</code>, please.</td>
<td></td>
</tr>
<tr>
<td>[AGENT] Okay. Here’s your new boarding pass and your <code>baggage claim</code>.</td>
<td></td>
</tr>
<tr>
<td>[TOOD] Thanks.</td>
<td></td>
</tr>
<tr>
<td>[AGENT] Go through security, and your flight to Stockholm will depart from Gate B25. The flight boards at 5:30.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Gate B25. Okay. Thank you.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="3-Getting-to-your-hotel"><a href="#3-Getting-to-your-hotel" class="headerlink" title="3. Getting to your hotel"></a>3. Getting to your hotel</h2><ul>
<li>limousine</li>
<li>express train</li>
<li>shuttle  [ˈʃʌtl] </li>
<li>rental car</li>
</ul>
<p><img src="/images/english/ef-l5u1l3.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[TODD] Excuse me. Could you help me?</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] Sure. What do you need?</td>
<td></td>
</tr>
<tr>
<td>[TODD] How do I get downtown? I’m staying in a hotel there.</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] Uh, well, you basically have three options.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Okay.</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] You can take a taxi.</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] There are also buses to downtown. Or you could take the express train.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Would a taxi be the fastest?</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] Umm, not always. The traffic’s usually pretty bad at this time.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Oh. So what do you suggest?</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] Umm, what’s the name of your hotel?</td>
<td></td>
</tr>
<tr>
<td>[TODD] It’s the …</td>
<td></td>
</tr>
<tr>
<td>[TODD] It’s the The Royal Stockholm Hotel.</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] Can I see the address?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Certainly.</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] Okay, this is going to be easy. Your hotel is near Stockholm Central Station, so the best choice for you is the express train.</td>
<td></td>
</tr>
<tr>
<td>[TODD] The express train.</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] Yeah. It’s a little expensive, but it’s really fast. Just get off at Central Station.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Where is the express train from here?</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] Go straight this way. See the woman with the big hat?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yes.</td>
<td></td>
</tr>
<tr>
<td>[PASSERBY] Turn left there. The station is really close.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Thank you very much.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="3-1-grammar"><a href="#3-1-grammar" class="headerlink" title="3.1 grammar"></a>3.1 grammar</h3><p>Hi, Martin!</p>
<p>I <strong>have to fly</strong> to Budapest on Thursday. After I arrive, I <strong>have to</strong> go to Vaci Utca and then find Parliament. I also want to eat at an interesting restaurant, but it doesn’t <strong>have to be fancy</strong>. Then I <strong>have to check in</strong> to my hotel. And I’d like to go to a good museum. Do you have any recommendations?</p>
<p>Thanks.</p>
<p>Karl</p>
<h3 id="3-2-expressions"><a href="#3-2-expressions" class="headerlink" title="3.2 expressions"></a>3.2 expressions</h3><ul>
<li>There are several options.</li>
<li>Your best option is to go by subway.</li>
<li>A rental car would be the cheapest option.</li>
</ul>
<h2 id="4-Letting-someone-know-you’ve-arrived"><a href="#4-Letting-someone-know-you’ve-arrived" class="headerlink" title="4. Letting someone know you’ve arrived"></a>4. Letting someone know you’ve arrived</h2><ul>
<li>immigration [ɪmɪ’ɡreɪʃn]</li>
<li>shuttle  [ˈʃʌtl] </li>
</ul>
<p><img src="/images/english/ef-l5u1l4.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[JOAN] Welcome to Stockholm. How was your flight?  [‘stɔkhəum]</td>
<td></td>
</tr>
<tr>
<td>[TODD] Not bad, but very long. I <strong>had to change planes</strong> in Philadelphia and London. [,filə’delfjə; -fiə]</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Ouch. That was a long trip. No problems in <code>customs</code> or immigration?</td>
<td></td>
</tr>
<tr>
<td>[TODD] None at all. I went through really fast.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] That’s good. Now, uh, how are you feeling? Any <code>jet lag</code>?</td>
<td></td>
</tr>
<tr>
<td>[TODD] No, not really. Back home, it’s about 2 p.m., so I’m okay.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Good. Because, uh, I have some bad news.</td>
<td></td>
</tr>
<tr>
<td>[TODD] uh~</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Unfortunately, our clients moved our meeting up to 9 o’clock tomorrow morning.</td>
<td></td>
</tr>
<tr>
<td>[TODD] So we have to work tonight.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yeah. I’m sorry. Have you eaten yet?</td>
<td></td>
</tr>
<tr>
<td>[TODD] I had dinner on the plane. But I’d love to get some coffee.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] There’s a restaurant over there. Come on. I’m buying.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="4-1-present"><a href="#4-1-present" class="headerlink" title="4.1 present"></a>4.1 present</h3><table>
<thead>
<tr>
<th>Present</th>
<th>Past</th>
<th>Present perfect</th>
</tr>
</thead>
<tbody>
<tr>
<td>be</td>
<td>was</td>
<td>been</td>
</tr>
<tr>
<td>see</td>
<td>saw</td>
<td>seen</td>
</tr>
<tr>
<td>do</td>
<td>did</td>
<td>done</td>
</tr>
<tr>
<td>go</td>
<td>went</td>
<td>gone</td>
</tr>
</tbody>
</table>
<ul>
<li>I think he’s feeling some culture shock.</li>
<li>They checked my visa when I went through immigration.</li>
</ul>
<p>Use the adverbs <strong>yet</strong>, <strong>already</strong>, <strong>never</strong> and <strong>ever</strong> with the present perfect to indicate a period of time up until the present.</p>
<ul>
<li>I haven’t printed my boarding pass <strong>yet</strong>.</li>
<li>They haven’t packed their bags <strong>yet</strong>.</li>
<li>Has she left for the airport <strong>yet</strong>?</li>
</ul>
<ul>
<li>You can’t come? But I’ve <strong>already</strong> booked the tickets!</li>
<li>Carly has <strong>already</strong> been to Paris, but I haven’t.</li>
<li>Has John <strong>already</strong> been to the Louvre?</li>
</ul>
<ul>
<li>A: Have you <strong>ever</strong> lived in another country? </li>
<li>B: No, I’ve <strong>never</strong> lived in another country.</li>
</ul>
<ul>
<li>A: Have you <strong>ever been to</strong> Paris?</li>
<li>B: Yes, I <strong>have been to</strong> Paris.</li>
</ul>
<h3 id="4-2-reading"><a href="#4-2-reading" class="headerlink" title="4.2 reading"></a>4.2 reading</h3><p>The bad news is that <strong>I’ve still got terrible jet lag</strong> after my 26-hour flight on Monday. The good news is that, yesterday, I hiked the red coast of Tasmania. It’s the most beautiful place <strong>I’ve ever</strong> camped, and the night sky is gorgeous. <code>I&#39;ve been to</code> the Atacama Desert in Chile. <strong>I’ve visited</strong> Valentia Island in Ireland. And I’ve traveled in Australia before, but <strong>I’ve never seen</strong> so much light in the night sky. Tonight, I’ll <code>have to go for</code> a walk and look for Tasmania’s special animals, like wombats and kangaroos. I <strong>haven’t seen</strong> any of them in the wilderness yet.</p>
<h3 id="4-3-writing"><a href="#4-3-writing" class="headerlink" title="4.3 writing"></a>4.3 writing</h3><p>I absolutely love traveling. I’ve traveled to 7 countries. I’ve been to Thailand 3 times. bought fancy clothes and taken an elephant tour.</p>
<p>I haven’t been to Africa yet, but I really want to go. My trip last month to Thailand was difficult. The flight took 17 hours. When I arrived, customs took my cellphone, and I had to buy a new one!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EF 4.6 Vacations]]></title>
      <url>http://iequa.com/2017/06/11/ef-l4u6-Vacations/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
audio {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}

</style>


<h2 id="1-Getting-information-about-a-destination"><a href="#1-Getting-information-about-a-destination" class="headerlink" title="1. Getting information about a destination"></a>1. Getting information about a destination</h2><ul>
<li>forest</li>
<li>coast</li>
<li>ocean</li>
<li>valley</li>
<li>lake  </li>
</ul>
<p><img src="/images/english/ef-l4u6l1.png" alt=""></p>
<audio src="/voices/ef/l4u6-vacation-desert.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[SARAH] It’s a desert, Mark. A desert!</td>
<td></td>
</tr>
<tr>
<td>[SARAH] It gets to 115 degrees. Fahrenheit [ˈfarənˌhīt]</td>
<td></td>
</tr>
<tr>
<td>[SARAH] That’s, like, 46 degrees Celsius! [ˈselsēəs]</td>
<td></td>
</tr>
<tr>
<td>[MARK] Don’t look at that.</td>
<td></td>
</tr>
<tr>
<td>[MARK] Anyways, it gets cooler at night.</td>
<td></td>
</tr>
<tr>
<td>[MARK] Listen - we have a tent. That’s more fun than a hotel.</td>
<td></td>
</tr>
<tr>
<td>[SARAH] Mark, I love the coast.</td>
<td></td>
</tr>
<tr>
<td>[SARAH] I love the beach.</td>
<td></td>
</tr>
<tr>
<td>[SARAH] It’s nicer here!</td>
<td></td>
</tr>
<tr>
<td>[SARAH] It’s a desert. A desert, and you want to go camping there?</td>
<td></td>
</tr>
<tr>
<td>[SARAH] I mean, who does that?</td>
<td></td>
</tr>
<tr>
<td>[MARK] The desert - it’s beautiful.</td>
<td></td>
</tr>
<tr>
<td>[MARK] I really want you to see it.</td>
<td></td>
</tr>
<tr>
<td>[SARAH] Okay.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="1-1-sentence"><a href="#1-1-sentence" class="headerlink" title="1.1 sentence"></a>1.1 sentence</h3><ul>
<li>It gets cooler in fall.</li>
<li>Winter is cold and rainy.</li>
<li>It snows a lot in winter.</li>
<li>It’s foggy in the morning and sunny in the afternoon.</li>
<li>It can get to about 65 degrees.</li>
<li>It gets really windy in spring.</li>
</ul>
<h2 id="1-2-what’s-the-noun-like"><a href="#1-2-what’s-the-noun-like" class="headerlink" title="1.2 what’s the + noun + like?"></a>1.2 what’s the + noun + like?</h2><ul>
<li>A: <strong>What’s the weather like</strong> in your hometown?</li>
<li>B: It’s cold and snowy in winter. It gets to -30 degrees. But it’s warm in summer and fall.</li>
</ul>
<ul>
<li>A: <strong>What’s the food like</strong> in Ottawa?</li>
<li>B: Well, we eat a lot of fish. And poutine is popular. It’s special french fries with cheese.    </li>
</ul>
<ul>
<li>A: <strong>What are the people like</strong>?</li>
<li>B: Many people are university graduates and can speak English and French.</li>
</ul>
<blockquote>
<p>fries/chips with cheese 薯条奶酪<br>poutine 薯条</p>
<p>What kind of food <code>do</code> people eat in your hometown?</p>
</blockquote>
<h2 id="2-Discussing-vacation-plans"><a href="#2-Discussing-vacation-plans" class="headerlink" title="2. Discussing vacation plans"></a>2. Discussing vacation plans</h2><ul>
<li>camping      </li>
<li>horseback riding</li>
<li>going to the beach</li>
<li>visiting family</li>
<li>diving</li>
<li>going to a spa</li>
<li>sightseeing</li>
<li>biking</li>
</ul>
<p><img src="/images/english/ef-l4u6l2.png" alt=""></p>
<audio src="/voices/ef/l4u6-vacation-plans.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[EMMA] So <code>where are you going this year</code>?</td>
<td></td>
</tr>
<tr>
<td>[NANCY] To the Lake District.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Oh. Not Paris or Tokyo?</td>
<td></td>
</tr>
<tr>
<td>[NANCY] No. Your father wants to go fishing.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] <code>Where are you going to stay?</code></td>
<td></td>
</tr>
<tr>
<td>[NANCY] We are going to sleep in a tent.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] You mean camping.</td>
<td></td>
</tr>
<tr>
<td>[NANCY] That’s right. Camping.</td>
<td></td>
</tr>
<tr>
<td>[NANCY] Yes, Emma, we’re going to go fishing and camping.</td>
<td></td>
</tr>
<tr>
<td>[NANCY] It will be fun. <code>It will be an adventure</code>.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] OK - if you say so.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] <code>How long is the drive</code>?</td>
<td></td>
</tr>
<tr>
<td>[NANCY] Six hours.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Six hours? To go camping?</td>
<td></td>
</tr>
<tr>
<td>[NANCY] <code>Could you please check on your father</code>?</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-1-be-going-to-for-plan"><a href="#2-1-be-going-to-for-plan" class="headerlink" title="2.1 be + going to for plan"></a>2.1 be + going to for plan</h3><ul>
<li>Oscar is going to drive to the store.</li>
<li>Frank thinks it’ll be safer to walk.</li>
</ul>
<ul>
<li>A: <code>What are you going to do</code> on vacation?</li>
<li>B: I’m going to visit friends and family. And I’m not going to work</li>
</ul>
<ul>
<li>We’ll probably stay in a hotel.</li>
<li>I’ll be happy living by the sea.</li>
<li>We will not fight. </li>
<li>I won’t get sick.</li>
<li>They won’t come with us.  </li>
</ul>
<h3 id="2-2-Dialog"><a href="#2-2-Dialog" class="headerlink" title="2.2 Dialog"></a>2.2 Dialog</h3><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>KARA: What are you doing ?</td>
<td></td>
</tr>
<tr>
<td>SETH: Oh, nothing much. I’m just relaxing. Listening to some music.</td>
<td></td>
</tr>
<tr>
<td>KARA: What’s that book there?</td>
<td></td>
</tr>
<tr>
<td>SETH: Uh, I’m reading about Prague. The history. I’m really enjoying it.</td>
<td></td>
</tr>
<tr>
<td>KARA: Oh, that’s right - you’re going  there on vacation next month.</td>
<td></td>
</tr>
<tr>
<td>SETH: Yep. It’ll be great.</td>
<td></td>
</tr>
<tr>
<td>KARA: I’m sure it will. What are you going to do in Prague?</td>
<td></td>
</tr>
<tr>
<td>SETH: Umm, I’m going to go sightseeing in the Old Town. I’m going to walk everywhere. Across the Charles Bridge …</td>
<td></td>
</tr>
<tr>
<td>KARA: Excellent!</td>
<td></td>
</tr>
<tr>
<td>SETH: Yeah … And I’ll eat lots of good food.</td>
<td></td>
</tr>
<tr>
<td>KARA: You’re so lucky! Where are you going to stay ?</td>
<td></td>
</tr>
<tr>
<td>SETH: Oh, I’ll  probably camp somewhere. Maybe I’ll pay for a nice hotel on the weekend.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>doubtful<br>I’ll help you <code>pay for</code> the vacation.<br>Nice. Are you going to stay in a hotel?</p>
</blockquote>
<h2 id="3-Seeing-someone-off"><a href="#3-Seeing-someone-off" class="headerlink" title="3. Seeing someone off"></a>3. Seeing someone off</h2><p><img src="/images/english/ef-l4u6l3.png" alt=""></p>
<audio src="/voices/ef/l4u6-vacation-someone-off.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[BOB] OK.</td>
<td></td>
</tr>
<tr>
<td>[BOB] Now, remember to bring in the mail every day, and don’t forget the newspaper.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] OK, Dad, Don’t worry.</td>
<td></td>
</tr>
<tr>
<td>[BOB] Oh!, I almost forgot.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] What’s that?</td>
<td></td>
</tr>
<tr>
<td>[BOB] It’s for our hotel.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] I thought you were going to go camping.</td>
<td></td>
</tr>
<tr>
<td>[BOB] Shhh! It’s a surprise.</td>
<td></td>
</tr>
<tr>
<td>[BOB] Your mother thinks we’re going camping.</td>
<td></td>
</tr>
<tr>
<td>[BOB] But we’re not, we’re staying at a five-star hotel.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Dad! You old romantic!</td>
<td></td>
</tr>
<tr>
<td>[BOB] But I am going fishing.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Have a great trip!</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Drive safely, and call me when you get there.</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>A: When I go on vacation, will you take care of my dog?</li>
<li>B: Sure, I’ll take care of little Sammie.</li>
</ul>
<ul>
<li><p>I’ll drive you to the airport next week, if you want.</p>
</li>
<li><p>Will you get the bags?</p>
</li>
<li>I’ll make the reservations [rezə’veɪʃnz] </li>
</ul>
<h3 id="3-1-Grammar"><a href="#3-1-Grammar" class="headerlink" title="3.1 Grammar"></a>3.1 Grammar</h3><p><code>Try</code></p>
<ul>
<li>I can’t go to the mall. Maybe I’ll try to buy something online.          </li>
<li>I don’t like biking. Maybe I’ll try swimming on my vacation.</li>
</ul>
<blockquote>
<p>When the verb try is followed by an infinitive (to + verb), like to buy, it describes an attempt to do something.</p>
<p>When the verb try is followed by a gerund (verb + -ing), like swimming, it means doing something for the first time or doing something different.</p>
</blockquote>
<p><code>Remember</code></p>
<ul>
<li>I always remember to call my mother on Sunday.</li>
<li>I remember calling the neighbors.</li>
<li>I remember seeing  you at the party last week.</li>
</ul>
<blockquote>
<p>When the verb remember is followed by an infinitive, like to call, it describes remembering to do a duty or task.</p>
<p>When the verb remember is followed by a gerund, like calling, it describes a memory of something done in the past.</p>
</blockquote>
<p><code>Stop</code></p>
<ul>
<li>I stopped to eat when I got hungry.</li>
<li>I stopped eating when I felt sick.</li>
</ul>
<blockquote>
<p>When the verb stop is followed by an infinitive, like to eat, it describes stopping one action to begin another. In this example, the person was working, but stopped her work to eat.</p>
<p>When the verb stop is followed by a gerund, like eating, it describes a discontinued action.</p>
</blockquote>
<p><code>be going</code>, <code>want to</code>、<code>have to</code></p>
<ul>
<li>I have to go.</li>
<li>We have to be quick.    </li>
<li>She has to leave.</li>
<li>He has to get up early.</li>
</ul>
<h2 id="4-Describing-a-vacation"><a href="#4-Describing-a-vacation" class="headerlink" title="4. Describing a vacation"></a>4. Describing a vacation</h2><ul>
<li>I was sick, so I stayed home</li>
<li>I stayed home because I was sick.</li>
<li>In order to</li>
<li>embassy</li>
</ul>
<p><img src="/images/english/ef-l4u6l4.png" alt=""></p>
<audio src="/voices/ef/l4u6-vacation-describing.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[PAM] Hey, Sally, we got a postcard from Simon.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Really? How are Simon and Jake doing? Where are they?</td>
<td></td>
</tr>
<tr>
<td>[PAM] They’re in London. They went there to visit Simon’s friend, Karl.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Go on, then. Read it!</td>
<td></td>
</tr>
<tr>
<td>[PAM] OK.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Dear Pam and Sally. We’re relaxing in London. We’re eating out almost every night.</td>
<td></td>
</tr>
<tr>
<td>[PAM] The British Museum is incredible. Yesterday, we took a tour of the Tower of London.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Jake lost his passport, so we have to stay in London an extra week.</td>
<td></td>
</tr>
<tr>
<td>[PAM] In order to get a new passport, we had to go to the <code>embassy</code>.</td>
<td></td>
</tr>
<tr>
<td>[PAM] I hope our money lasts because London is really expensive. Love, Simon.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Jake. It’s always Jake.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="4-1-in-order-to-so-that"><a href="#4-1-in-order-to-so-that" class="headerlink" title="4.1 in order to / so that"></a>4.1 in order to / so that</h3><ul>
<li>In order to reserve our room, I called the hotel.</li>
<li>I called the hotel in order to reserve our room.</li>
</ul>
<ul>
<li>I turned off my phone so that I could relax.</li>
<li>So that I could relax, I turned off my phone. </li>
</ul>
<ul>
<li>I saved my money so I could visit Terry.</li>
</ul>
<h3 id="4-2-writing"><a href="#4-2-writing" class="headerlink" title="4.2 writing"></a>4.2 writing</h3><p>Hi, Nicole!</p>
<p>How are you? I’m going to stay another night in Mali so that I can relax and do more sightseeing. Today, I’ll take a tour  of Djenne to see the amazing old buildings. The downtown market is full of wonderful smells, so I’m eating a lot of good food. I hope my money lasts because I’m buying many beautiful clothes. I’ll give  some to you!   </p>
<p>Love, Megan </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EF 4.5 Welcome]]></title>
      <url>http://iequa.com/2017/06/08/ef-l4u5-Welcome/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
audio {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}

</style>


<h2 id="1-Inviting-someone-to-your-home"><a href="#1-Inviting-someone-to-your-home" class="headerlink" title="1. Inviting someone to your home"></a>1. Inviting someone to your home</h2><ul>
<li>that reminds me</li>
<li>by the way</li>
</ul>
<p><img src="/images/english/ef-l4u5l1.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[JOAN] Oh, Todd, did I tell you?</td>
<td></td>
</tr>
<tr>
<td>[TODD] What?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Al and I just bought a house.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Really? Congratulations!</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Thanks! Actually, we’re a little nervous about it.</td>
<td></td>
</tr>
<tr>
<td>[TODD] I can imagine. Buying a house is a big decision.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yes, it is. Anyway, we’re having some people over on Saturday night.</td>
<td></td>
</tr>
<tr>
<td>[TODD] A housewarming party!</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Exactly. Al and I were hoping you and Angela could come.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Well, I’m <code>definitely</code> coming … [‘dɛfɪnətli]</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Great!</td>
<td></td>
</tr>
<tr>
<td>[TODD] But Angela probably can’t come. Her mothers’s sick.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Oh, that’s too bad.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yeah. Angela’s in Las Vegas, taking care of her.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] I understand. Well, I’m happy you can come.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Ah! That reminds me. Angela’s birthday’s in two weeks. I’m thinking about having a party for her.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Nice!.</td>
<td></td>
</tr>
<tr>
<td>[TODD] And I’d like you and Al to come.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] We’d be <code>delighted</code>. [dɪ’laɪtɪd]</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Great!</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Sentence</th>
</tr>
</thead>
<tbody>
<tr>
<td>Zach and I just bought a house.</td>
<td></td>
</tr>
<tr>
<td>Carla just got promoted.</td>
<td></td>
</tr>
<tr>
<td>Bill just got promoted to vice president.</td>
<td></td>
</tr>
<tr>
<td>Did you just go to the <code>grocery</code> store ?  <strong><em>[ˈgroʊsəri]</em></strong></td>
<td></td>
</tr>
<tr>
<td>We should get together for dinner this week. <strong>What does your <code>schedule</code> look like?</strong></td>
<td></td>
</tr>
<tr>
<td>Great! I’m definitely coming.</td>
<td></td>
</tr>
<tr>
<td>Thanks - I’d be delighted.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>DANA: OK, let’s see … Who’s invited to the party?</td>
<td></td>
</tr>
<tr>
<td>JONATHAN: Natasha. She is <code>definitely</code> coming.</td>
<td></td>
</tr>
<tr>
<td>DANA: Great! How about Michael?</td>
<td></td>
</tr>
<tr>
<td>JONATHAN: <code>Probably not</code>.</td>
<td></td>
</tr>
<tr>
<td>DANA: Too bad! Anyway, Laurie <code>probably</code> can come.</td>
<td></td>
</tr>
<tr>
<td>JONATHAN: Cool.</td>
<td></td>
</tr>
<tr>
<td>DANA: And Kylie said ‘<code>absolutely</code>.’</td>
<td></td>
</tr>
<tr>
<td>JONATHAN: Nice! <code>Maybe</code> she can bring her tasty, dark chocolate cake.</td>
<td></td>
</tr>
<tr>
<td>DANA: Maybe … or <code>maybe not</code>. It’s <code>unlikely</code>  . She’s pretty busy.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Welcoming-someone-to-your-home"><a href="#2-Welcoming-someone-to-your-home" class="headerlink" title="2. Welcoming someone to your home"></a>2. Welcoming someone to your home</h2><ul>
<li>How was traffic ?</li>
<li>Can I get you something to drink? </li>
<li>whine [waɪn]</li>
</ul>
<p><img src="/images/english/ef-l4u5l2.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[SOPHIE] Hi!</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Oh, so good to see you. I’ve missed you so much.</td>
<td></td>
</tr>
<tr>
<td>[NANI] Me too!</td>
<td></td>
</tr>
<tr>
<td>[NANI] hey, Eric.</td>
<td></td>
</tr>
<tr>
<td>[ERIC] Hi, Nani, Great to see you.</td>
<td></td>
</tr>
<tr>
<td>[NANI] So, come in, come in. Make yourselves at home.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Here - you can put those over there.</td>
<td></td>
</tr>
<tr>
<td>[NINA] <code>Can I get you something to drink?</code></td>
<td></td>
</tr>
<tr>
<td>[ERIC] That would be lovely, thanks.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Yes, Please.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Ummm, cup of tea?</td>
<td></td>
</tr>
<tr>
<td>[NINA] So how was your trip?</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Yeah, it was fine, thanks.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] <code>Except for Eric and his whining. &#39;Are we there yet? Are we there yet?&#39;</code></td>
<td></td>
</tr>
<tr>
<td>[ERIC] I was just wondering how much further we had to go.</td>
<td></td>
</tr>
<tr>
<td>[ERIC] Nina, your flat is lovely.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Well, as you can see, there’s not much here yet.</td>
<td></td>
</tr>
<tr>
<td>[NINA] No sofa, no curtains.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Yeah, that’s OK.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] We can sleep on the floor.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] What? Come on, stop it!</td>
<td></td>
</tr>
<tr>
<td>[ERIC] No, it’s not right.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Of course, we can.</td>
<td></td>
</tr>
<tr>
<td>[ERIC] It’s inappropriate.</td>
<td></td>
</tr>
<tr>
<td>[ERIC] I really liked the ones with tomato. They were the best.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Nina, let’s go and see it.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] The shop.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Really?</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Yeah !</td>
<td></td>
</tr>
<tr>
<td>[NINA] You want to see it?</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Course, I do.</td>
<td></td>
</tr>
<tr>
<td>[NINA] It’s a bit late.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] No, it isn’t. Come on.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] I know it’s a big step for you.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] And, um, speaking of big steps …</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Eric and I have something we want to tell you …</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] We’re going to have a baby!</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="make-politely-offers"><a href="#make-politely-offers" class="headerlink" title="make politely offers"></a>make politely offers</h3><p>Use would you like to politely offer something to your guest</p>
<ul>
<li>Would you like something to drink?                            </li>
<li>Would you like to have a seat?</li>
</ul>
<p>Use could or may to make a polite request of your host.</p>
<ul>
<li>May I use the restroom?</li>
<li>Could I have some water?</li>
</ul>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>MRS. KUMAR: Welcome. Nice to see you.</td>
<td></td>
</tr>
<tr>
<td>MR. BRADLEY: Very nice to see  you, too, Mrs. Kumar.</td>
<td></td>
</tr>
<tr>
<td>MRS. KUMAR: Please come in.</td>
<td></td>
</tr>
<tr>
<td>MR. BRADLEY: You have a beautiful home.</td>
<td></td>
</tr>
<tr>
<td>MRS. KUMAR: Thank you. Would you like to have a seat?</td>
<td></td>
</tr>
<tr>
<td>MR. BRADLEY: Yes, thanks.</td>
<td></td>
</tr>
<tr>
<td>MRS. KUMAR: And would you like something to drink ?</td>
<td></td>
</tr>
<tr>
<td>MR. BRADLEY: Please. Could I have some water?</td>
<td></td>
</tr>
<tr>
<td>MRS. KUMAR: Of course.</td>
<td></td>
</tr>
</tbody>
</table>
<p>If you have a drink, you can say to your and cheers to offer a toast.</p>
<ul>
<li><code>To your new job! Cheers!</code></li>
<li>To your new baby. Cheers!</li>
<li>To your retirement. Cheers!</li>
</ul>
<p>You can use it’s crazy to react to both good and bad news.</p>
<ul>
<li>I was surprised to get this great promotion. It’s crazy.</li>
<li><code>It felt terrible to get fired. It&#39;s totally crazy.</code></li>
</ul>
<blockquote>
<p>Absolutely, It’s right over there</p>
</blockquote>
<h2 id="3-Parting-at-the-end-of-an-evening"><a href="#3-Parting-at-the-end-of-an-evening" class="headerlink" title="3. Parting at the end of an evening"></a>3. Parting at the end of an evening</h2><ul>
<li>great - wonderful - delightful - 美好的/美妙的/令人愉悅的                          </li>
<li>fun - enjoyable</li>
<li>happy - glad - pleased </li>
<li>beautiful - lovely - gorgeous - 漂亮的/可愛的/華麗的 [‘ɡɔrdʒəs]</li>
<li>delicious - tasty - yummy</li>
</ul>
<p><img src="/images/english/ef-l4u5l3.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
<th>-</th>
</tr>
</thead>
<tbody>
<tr>
<td>[ERIC] Have you got everything?</td>
<td>你的東西都齊了嗎？</td>
</tr>
<tr>
<td>[SOPHIE] I think so.</td>
<td></td>
</tr>
<tr>
<td>[ERIC] I’ll take that.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] OK, thanks.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Well, that’s us then.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] <code>Thanks for inviting us.</code></td>
<td></td>
</tr>
<tr>
<td>[NINA] Thanks for coming.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] Your shop’s really lovely.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Thanks</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] <code>We had a great time.</code></td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] You must come to us next time, okay?</td>
<td></td>
</tr>
<tr>
<td>[NINA] I will.</td>
<td></td>
</tr>
<tr>
<td>[ERIC] It was lovely to see again.</td>
<td></td>
</tr>
<tr>
<td>[NINA] And you.</td>
<td></td>
</tr>
<tr>
<td>[SOPHIE] take care.</td>
<td></td>
</tr>
<tr>
<td>[ERIC] Good luck with the shop.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Drive safely.</td>
<td></td>
</tr>
<tr>
<td>[NINA] All right, Bye.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>Next time, it’s our turn to host.<br>I’m glad you enjoyed it.   enjoyedit</p>
</blockquote>
<h3 id="Sentence"><a href="#Sentence" class="headerlink" title="Sentence"></a>Sentence</h3><ul>
<li>The price of petrol is really going up.</li>
<li>I definitely need some gas.</li>
<li>Do you have the car keys?</li>
</ul>
<h3 id="American-amp-British"><a href="#American-amp-British" class="headerlink" title="American &amp; British"></a>American &amp; British</h3><table>
<thead>
<tr>
<th>American</th>
<th>British</th>
</tr>
</thead>
<tbody>
<tr>
<td>restroom</td>
<td>toilet</td>
</tr>
<tr>
<td>gas</td>
<td>petrol</td>
</tr>
<tr>
<td>cellphone</td>
<td>mobile</td>
</tr>
<tr>
<td>That’s exactly right!</td>
<td>Spot on!</td>
</tr>
<tr>
<td>Do you have a pen?</td>
<td>Have you got a pen?</td>
</tr>
</tbody>
</table>
<h2 id="4-Thanking-someone-on-the-phone"><a href="#4-Thanking-someone-on-the-phone" class="headerlink" title="4. Thanking someone on the phone"></a>4. Thanking someone on the phone</h2><ul>
<li>I hope to see you again soon.                  </li>
<li>I hope that I see you again soon. </li>
</ul>
<ul>
<li>A: I hope to see you again soon.                </li>
<li>B: I hope so, too.</li>
</ul>
<p><img src="/images/english/ef-l4u5l4.png" alt=""></p>
<table>
<thead>
<tr>
<th>TODD to Joan</th>
</tr>
</thead>
<tbody>
<tr>
<td>Dear Joan, Thank you for inviting me to your housewarming party.</td>
<td></td>
</tr>
<tr>
<td>I had a really good time. Your new home is lovely.</td>
<td></td>
</tr>
<tr>
<td>And the food was delicious.</td>
<td></td>
</tr>
<tr>
<td>I hope that I see you and Al again soon.</td>
<td></td>
</tr>
<tr>
<td>Sincerely, Todd.  [sɪnˈsɪəli]</td>
<td></td>
</tr>
<tr>
<td>[TODD] Oh, uh, Joan. Your, um, party was wonderful. I really enjoyed myself. Your new home is beautiful. And I loved the food.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Thanks.</td>
<td></td>
</tr>
<tr>
<td>[TODD] I hope to see you and Al again soon.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] I hope so, too. Actually, you’ll see me very soon. We, uh, have a meeting in five minutes.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>uh，um 嗯</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EF 4.4 MileStones]]></title>
      <url>http://iequa.com/2017/06/07/ef-l4u4-Milestones/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
audio {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}

</style>

<h2 id="1-Talking-about-your-life"><a href="#1-Talking-about-your-life" class="headerlink" title="1. Talking about your life"></a>1. Talking about your life</h2><ul>
<li>I wasn’t born in a hospital.</li>
<li>I didn’t get promoted.</li>
</ul>
<p><img src="/images/english/ef-l4u4l1.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[NANCY] Did you watch TV all day?</td>
<td></td>
</tr>
<tr>
<td>[BOB] My wife worked all day.</td>
<td></td>
</tr>
<tr>
<td>[BOB] What did I do ?</td>
<td></td>
</tr>
<tr>
<td>[BOB] I just sat in front of the TV. But <code>I&#39;m retired</code>. I mean, <code>I have all this time on my hands</code>.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] I graduated from university last year.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] I’m <code>looking for a job</code>, but … you know, it’s not that easy.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>noun : death, retirement, marriage, birth, graduation </p>
</blockquote>
<h3 id="make-past-tense-questions"><a href="#make-past-tense-questions" class="headerlink" title="make past tense questions."></a>make past tense questions.</h3><ul>
<li>Where were you born?</li>
<li>I was born in Seoul.</li>
</ul>
<ul>
<li>A: Where did you grow up?</li>
<li>B: I grew up in <strong>Belgium</strong>.</li>
</ul>
<blockquote>
<p> 比利时</p>
</blockquote>
<ul>
<li>When did she start working there?</li>
</ul>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>JAMES: So, Hailey, let’s start with some basic information. Where were you born?</td>
<td></td>
</tr>
<tr>
<td>HAILEY: I was born in  Amman, Jordan.</td>
<td></td>
</tr>
<tr>
<td>JAMES: And when were you born?</td>
<td></td>
</tr>
<tr>
<td>HAILEY: I was born on  April 22nd. The first day of spring.</td>
<td></td>
</tr>
<tr>
<td>JAMES: That’s lucky. And, uh, where did you grow up?</td>
<td></td>
</tr>
<tr>
<td>HAILEY: I grew up  with my family in Al Karak, Jordan. Near the Dead Sea.</td>
<td></td>
</tr>
<tr>
<td>JAMES: Beautiful. And now a question about your high school, or university. Where did you graduate from  ?</td>
<td></td>
</tr>
<tr>
<td>HAILEY: I graduated from  the University of Chicago in 2009.</td>
<td></td>
</tr>
<tr>
<td>JAMES: Uh-huh? Now let’s talk about your work experience. Where are you working?</td>
<td></td>
</tr>
<tr>
<td>HAILEY: I’m working at Carter and Lindsey, in Chicago, as the creative director.</td>
<td></td>
</tr>
<tr>
<td>JAMES: And when did you start working there?</td>
<td></td>
</tr>
<tr>
<td>HAILEY: I got my job  there in May 2011.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>Geneva<br>It’s my pleasure</p>
</blockquote>
<h2 id="2-Discussing-important-life-events"><a href="#2-Discussing-important-life-events" class="headerlink" title="2. Discussing important life events"></a>2. Discussing important life events</h2><ul>
<li>It’s my turn, right?</li>
<li>people got married very young then</li>
</ul>
<p><img src="/images/english/ef-l4u4l2.png" alt=""></p>
<h3 id="2-1-‘Get’-for-life-events"><a href="#2-1-‘Get’-for-life-events" class="headerlink" title="2.1 ‘Get’ for life events"></a>2.1 ‘Get’ for life events</h3><ul>
<li>get married</li>
<li>get pregnant [‘prɛɡnənt]</li>
<li>get over a relationship</li>
<li>get a degree</li>
<li>get a job</li>
<li>get promoted</li>
<li>get fired</li>
<li>get a driver’s license</li>
<li>get old</li>
</ul>
<blockquote>
<p>My best friend is six months pregnant<br>She’s getting her driver’s license next year.<br>They’re getting married next month.</p>
</blockquote>
<h3 id="2-2-Clauses-with-‘when’"><a href="#2-2-Clauses-with-‘when’" class="headerlink" title="2.2 Clauses with ‘when’"></a>2.2 Clauses with ‘when’</h3><ul>
<li>When I was young, we didn’t sit around all day texting.</li>
<li>Do you remember when we bought that house on Oak Street.</li>
<li>She spent a lot of time in her car when she first got her driver’s license.</li>
</ul>
<h3 id="2-3-text"><a href="#2-3-text" class="headerlink" title="2.3 text"></a>2.3 text</h3><p>I got my driver’s license when I was  16. <code>I was 18 years old when I got  my first job.</code> When I was 21, I graduated from university. When I was 23, I left New York. When I was married for two years, I got pregnant.</p>
<blockquote>
<p>Tell me something about yourself.<br>What do you want to know?<br>When did you get your first job?<br>She left Los Angeles when she got divorced.</p>
</blockquote>
<h2 id="3-Giving-details-about-someone’s-life"><a href="#3-Giving-details-about-someone’s-life" class="headerlink" title="3. Giving details about someone’s life"></a>3. Giving details about someone’s life</h2><ul>
<li>move out</li>
<li>meet the love of her life</li>
</ul>
<p><img src="/images/english/ef-l4u4l3.png" alt=""></p>
<table>
<thead>
<tr>
<th>More life events</th>
</tr>
</thead>
<tbody>
<tr>
<td>I first traveled abroad when I was 15.</td>
<td></td>
</tr>
<tr>
<td>I got my first car when I was 17.</td>
<td></td>
</tr>
<tr>
<td>I moved away from home when I was 18.</td>
<td></td>
</tr>
<tr>
<td>I moved out of my parents’ house when I was 18.</td>
<td></td>
</tr>
<tr>
<td>I met the love of my life when I was 22.</td>
<td></td>
</tr>
<tr>
<td>We fell in love and got married.</td>
<td></td>
</tr>
<tr>
<td>We had our first child when I was 25.</td>
<td></td>
</tr>
</tbody>
</table>
<p>I first <code>traveled abroad</code> when I was 16. I went to Paris with my family. It was fantastic. The next year, I got my first car. It was red! I <strong>moved out of my parents’ house</strong> when I was 18, to go to university. I got my first apartment with a friend near the university. <code>My second year of university</code>, I met the love of my life. We fell in love and got married one year later. We had our first child after we graduated from university. I was only 22!  We didn’t have a lot of money, but we were happy.</p>
<blockquote>
<p>He traveled abroad after he graduated.</p>
</blockquote>
<table>
<thead>
<tr>
<th>Clauses with ‘after’</th>
</tr>
</thead>
<tbody>
<tr>
<td>After I moved out of my parents’ house, I got my first apartment.</td>
<td></td>
</tr>
<tr>
<td>I got my first apartment after I moved out of my parents’ house.</td>
<td></td>
</tr>
</tbody>
</table>
<p>I was born in 1975. I got my first car when I was 16 years old. After I graduated from high school, I moved out of my parents’ house. After I got an apartment, I got a good job. I met a girl at work, and we fell in love. After <code>I got a promotion</code>, we got married. When our first child was born, I really became an adult.</p>
<h2 id="4-Interviewing-for-a-job"><a href="#4-Interviewing-for-a-job" class="headerlink" title="4. Interviewing for a job"></a>4. Interviewing for a job</h2><ul>
<li>appointment</li>
<li>candidate</li>
<li>strengths [streŋθs] </li>
<li>opportunity</li>
</ul>
<p><img src="/images/english/ef-l4u4l4.png" alt=""></p>
<audio src="/voices/ef/l4u4-interviewing-for-a-job.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[SALLY] Can I help you?</td>
<td></td>
</tr>
<tr>
<td>[CAROL] Yes. I <code>have a 2 o’clock appointment</code> with Joan Baxter.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Oh, yes. That’s her office over there. She’s waiting for you. Good luck!</td>
<td></td>
</tr>
<tr>
<td>[CAROL] Thanks.</td>
<td></td>
</tr>
<tr>
<td>[CAROL] Hi. I’m Carol.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Nice to meet you, Carol. Have a seat.</td>
<td></td>
</tr>
<tr>
<td>[CAROL] Thanks.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] So, <code>I’ve looked over your resume</code>, and I’ve talked with Todd.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] He was very impressed with your last interview. He thinks you’re a <code>suitable candidate</code> for the position.</td>
<td></td>
</tr>
<tr>
<td>[CAROL] I’m happy to hear that.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] You’re a designer over at Future Studios?</td>
<td></td>
</tr>
<tr>
<td>[CAROL] Yes, that’s right. For six years now.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Why do you wanna leave?</td>
<td></td>
</tr>
<tr>
<td>[CAROL] Opportunity. I mean, Future Studios is a very small company, with only three designers. There isn’t much chance for me to advance.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] I see.</td>
<td></td>
</tr>
<tr>
<td>[CAROL] And you are looking for a senior designer.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] That’s right. So, what do you think are your strengths?</td>
<td></td>
</tr>
<tr>
<td>[CAROL] Well, I’m very creative. My boss and the other designers love my designs.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yes. Your designs are impressive.</td>
<td></td>
</tr>
<tr>
<td>[CAROL] Thank you. I also have an excellent technical background.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] <code>When would you be available to start?</code></td>
<td></td>
</tr>
<tr>
<td>[CAROL] I could start next month.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Great! Well, I’d like you to talk to a few other members of the team. Uh, do you have time now?</td>
<td></td>
</tr>
<tr>
<td>[CAROL] Yes, I do. That would be great.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Okay. Come this way.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>interview sentence 1</th>
</tr>
</thead>
<tbody>
<tr>
<td>Can you send me your resume?</td>
<td></td>
</tr>
<tr>
<td>There are many candidates for this job.</td>
<td></td>
</tr>
<tr>
<td>I’m very interested in the position.</td>
<td></td>
</tr>
<tr>
<td>I have an appointment to talk to the manager.</td>
<td></td>
</tr>
<tr>
<td>I have an interview on Thursday.</td>
<td></td>
</tr>
<tr>
<td>This is a really good opportunity for me.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>interview sentence 2</th>
</tr>
</thead>
<tbody>
<tr>
<td>Do you have any teaching experience?</td>
<td></td>
</tr>
<tr>
<td>Could you talk about your education?</td>
<td></td>
</tr>
<tr>
<td>What are your strengths?</td>
<td></td>
</tr>
<tr>
<td>What is your greatest weakness?</td>
<td></td>
</tr>
<tr>
<td>Tell me about your work background.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>interview sentence 3</th>
</tr>
</thead>
<tbody>
<tr>
<td>Could you come back for a second interview?</td>
<td></td>
</tr>
<tr>
<td>I’d like to introduce you to the other people on the team.</td>
<td></td>
</tr>
<tr>
<td>How is February 1st as a start date?</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="reading"><a href="#reading" class="headerlink" title="reading"></a>reading</h3><p>Thank you very much for this opportunity to speak with you. I think I am a very strong candidate for this position. As you can see on my resume, I have a lot of work experience, and my university education was excellent. I want to talk to you about both my strengths and weaknesses. I know I can do great work on your team  .</p>
<h3 id="interview-dialog"><a href="#interview-dialog" class="headerlink" title="interview dialog"></a>interview dialog</h3><ul>
<li>I have a 3 o’clock job interview with Ken Smith.</li>
<li>Thank you for seeing me, Mr. Smith.</li>
<li>Thank you for the opportunity to meet with you.</li>
</ul>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>INTERVIEWER: Good afternoon. I’m Carol Higgins, <code>director of Human Resources</code>. Please have a seat.</td>
<td></td>
</tr>
<tr>
<td>CANDIDATE: Thank you. And thank you very much <code>for speaking with me</code> today.</td>
<td></td>
</tr>
<tr>
<td>INTERVIEWER: My pleasure. Your resume is impressive. I think you are a strong candidate for the position of IT manager.  I just have one question about your resume. Who was your supervisor at Data Systems?</td>
<td></td>
</tr>
<tr>
<td>CANDIDATE: Oh, that was Trisha Chambers. She left the company last month.</td>
<td></td>
</tr>
<tr>
<td>INTERVIEWER: Why is that, and why do you want to leave?</td>
<td></td>
</tr>
<tr>
<td>CANDIDATE: Well, I don’t think the work is challenging  . Business isn’t good, and people are worried.</td>
<td></td>
</tr>
<tr>
<td>INTERVIEWER: I see. And you like a good challenge?</td>
<td></td>
</tr>
<tr>
<td>CANDIDATE: I do. The more challenging, the better.</td>
<td></td>
</tr>
<tr>
<td>INTERVIEWER: Good. How about weaknesses ? Where do you think you need to improve?</td>
<td></td>
</tr>
<tr>
<td>CANDIDATE: Well, sometimes I try to do too much. I need to work on one thing at a time.</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Basic Learning III (not finish)]]></title>
      <url>http://iequa.com/2017/06/05/python-basic-learning-III/</url>
      <content type="html"><![CDATA[<h2 id="1-函数式编程"><a href="#1-函数式编程" class="headerlink" title="1. 函数式编程"></a>1. 函数式编程</h2><p>函数就是面向过程的程序设计的基本单元。</p>
<p>Functional Programming 其思想更接近数学计算。</p>
<p>在计算机的层次上，CPU执行的是加减乘除的指令代码，以及各种条件判断和跳转指令，所以，汇编语言是最贴近计算机的语言。</p>
<p>而计算则指数学意义上的计算，越是抽象的计算，离计算机硬件越远。</p>
<p>对应到编程语言，就是越低级的语言，越贴近计算机，抽象程度低，执行效率高，比如C语言；越高级的语言，越贴近计算，抽象程度高，执行效率低，比如Lisp语言。</p>
<p>函数式编程就是一种抽象程度很高的编程范式，<code>纯粹的函数式编程语言编写的函数没有变量</code>，因此，任意一个函数，只要输入是确定的，输出就是确定的，这种纯函数我们称之为没有副作用。而允许使用变量的程序设计语言，由于函数内部的变量状态不确定，同样的输入，可能得到不同的输出，因此，这种函数是有副作用的。</p>
<p>函数式编程的一个特点就是，允许把函数本身作为参数传入另一个函数，还允许返回一个函数！</p>
<p>Python对函数式编程提供部分支持。由于Python允许使用变量，因此，Python不是纯函数式编程语言。</p>
<h3 id="1-1-高阶函数"><a href="#1-1-高阶函数" class="headerlink" title="1.1 高阶函数"></a>1.1 高阶函数</h3><p>Higher-order function</p>
<h2 id="2-模块"><a href="#2-模块" class="headerlink" title="2. 模块"></a>2. 模块</h2><blockquote>
<p>Python内置的模块 和 来自第三方的模块。</p>
<p>每一个包目录下面都会有一个<strong>init</strong>.py的文件，这个文件是必须存在的，否则，Python就把这个目录当成普通目录，而不是一个包。</p>
</blockquote>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><ul>
<li><a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000" target="_blank" rel="external">廖雪峰的官方网站 liaoxuefeng</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Basic Learning II]]></title>
      <url>http://iequa.com/2017/06/02/python-basic-learning-II/</url>
      <content type="html"><![CDATA[<h2 id="1-函数"><a href="#1-函数" class="headerlink" title="1. 函数"></a>1. 函数</h2><h3 id="1-1-调用函数"><a href="#1-1-调用函数" class="headerlink" title="1.1 调用函数"></a>1.1 调用函数</h3><p>内置函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(<span class="number">-12.34</span>)</span><br><span class="line"><span class="number">12.34</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/2/library/functions.html#abs" target="_blank" rel="external">abs api</a></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>cmp(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cmp(<span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>数据类型转换</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">'123'</span>)</span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="number">12.34</span>)</span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>float(<span class="string">'12.34'</span>)</span><br><span class="line"><span class="number">12.34</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(<span class="number">1.23</span>)</span><br><span class="line"><span class="string">'1.23'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>unicode(<span class="number">100</span>)</span><br><span class="line"><span class="string">u'100'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bool(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bool(<span class="string">''</span>)</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure>
<p>函数名其实就是指向一个函数对象的引用，完全可以把函数名赋给一个变量，相当于给这个函数起了一个“别名”：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = abs <span class="comment"># 变量a指向abs函数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a(<span class="number">-1</span>) <span class="comment"># 所以也可以通过a调用abs函数</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="1-2-定义函数"><a href="#1-2-定义函数" class="headerlink" title="1.2 定义函数"></a>1.2 定义函数</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>return None</code> 可以简写为 <code>return</code>。</p>
</blockquote>
<p>空函数</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nop</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p>函数参数类型检查</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isinstance(x, (int, float)):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">'bad operand type'</span>)</span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br></pre></td></tr></table></figure>
<p>返回多个值 (但其实就是一个tuple)</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(x, y, step, angle=<span class="number">0</span>)</span>:</span></span><br><span class="line">    nx = x + step * math.cos(angle)</span><br><span class="line">    ny = y - step * math.sin(angle)</span><br><span class="line">    <span class="keyword">return</span> nx, ny</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x, y = move(<span class="number">100</span>, <span class="number">100</span>, <span class="number">60</span>, math.pi / <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> x, y</span><br><span class="line"><span class="number">151.961524227</span> <span class="number">70.0</span></span><br></pre></td></tr></table></figure>
<h3 id="1-3-函数的参数"><a href="#1-3-函数的参数" class="headerlink" title="1.3 函数的参数"></a>1.3 函数的参数</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span><span class="params">(x, n=<span class="number">2</span>)</span>:</span></span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        n = n - <span class="number">1</span></span><br><span class="line">        s = s * x</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure>
<blockquote>
<p>一是必选参数在前，默认参数在后，否则Python的解释器会报错</p>
<p>二是如何设置默认参数。</p>
<p>当函数有多个参数时，把变化大的参数放前面，变化小的参数放后面。变化小的参数就可以作为默认参数。</p>
<p>使用默认参数有什么好处？最大的好处是能降低调用函数的难度。</p>
<p>定义默认参数要牢记一点：<code>默认参数必须指向不变对象！</code></p>
</blockquote>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_end</span><span class="params">(L=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> L <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        L = []</span><br><span class="line">    L.append(<span class="string">'END'</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br></pre></td></tr></table></figure>
<blockquote>
<p>为什么要设计str、None这样的不变对象呢？因为不变对象一旦创建，对象内部的数据就不能修改，这样就减少了由于修改数据导致的错误。此外，由于对象不变，多任务环境下同时读取对象不需要加锁，同时读一点问题都没有。我们在编写程序时，如果可以设计一个不变对象，那就尽量设计成不变对象。</p>
</blockquote>
<p><strong>可变参数</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(numbers)</span>:</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="number">14</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc((<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>))</span><br><span class="line"><span class="number">84</span></span><br></pre></td></tr></table></figure>
<p>如果利用可变参数，调用函数的方式可以简化成这样：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(*numbers)</span>:</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    <span class="keyword">return</span> sum</span><br></pre></td></tr></table></figure>
<p>定义可变参数和定义list或tuple参数相比，仅仅在参数前面加了一个*号。在函数内部，参数numbers接收到的是一个tuple，因此，函数代码完全不变。但是，调用该函数时，可以传入任意个参数，包括0个参数：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc()</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>这种写法相当有用，而且很常见，见如下 :</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc(*nums)</span><br><span class="line"><span class="number">14</span></span><br></pre></td></tr></table></figure>
<p><strong>关键字参数</strong></p>
<p><code>可变参数</code>允许你传入0个或任意个参数，这些可变参数在函数调用时自动组装为一个tuple。</p>
<p><code>关键字参数</code>允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict。</p>
<p>请看示例：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name, age, **kw)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'name:'</span>, name, <span class="string">'age:'</span>, age, <span class="string">'other:'</span>, kw</span><br></pre></td></tr></table></figure>
<p>函数<code>person</code>除了必选参数<code>name</code>和<code>age</code>外，还接受关键字参数<code>kw</code>。在调用该函数时，可以只传入必选参数; 也可以传入任意个数的关键字参数;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">'Bob'</span>, <span class="number">35</span>, city=<span class="string">'Beijing'</span>)</span><br><span class="line">name: Bob age: <span class="number">35</span> other: &#123;<span class="string">'city'</span>: <span class="string">'Beijing'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">'Adam'</span>, <span class="number">45</span>, gender=<span class="string">'M'</span>, job=<span class="string">'Engineer'</span>)</span><br><span class="line">name: Adam age: <span class="number">45</span> other: &#123;<span class="string">'gender'</span>: <span class="string">'M'</span>, <span class="string">'job'</span>: <span class="string">'Engineer'</span>&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>kw = &#123;<span class="string">'city'</span>: <span class="string">'Beijing'</span>, <span class="string">'job'</span>: <span class="string">'Engineer'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">'Jack'</span>, <span class="number">24</span>, **kw)</span><br><span class="line">name: Jack age: <span class="number">24</span> other: &#123;<span class="string">'city'</span>: <span class="string">'Beijing'</span>, <span class="string">'job'</span>: <span class="string">'Engineer'</span>&#125;</span><br></pre></td></tr></table></figure>
<p><strong>参数组合</strong></p>
<p>在Python中定义函数，可以用必选参数、默认参数、可变参数和关键字参数，这4种参数都可以一起使用，或者只用其中某些，但是请注意，参数定义的顺序必须是：必选参数、默认参数、可变参数和关键字参数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a, b, c=<span class="number">0</span>, *args, **kw)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'a ='</span>, a, <span class="string">'b ='</span>, b, <span class="string">'c ='</span>, c, <span class="string">'args ='</span>, args, <span class="string">'kw ='</span>, kw</span><br></pre></td></tr></table></figure>
<p>在函数调用的时候，Python解释器自动按照参数位置和参数名把对应的参数传进去。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>func(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">0</span> args = () kw = &#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func(<span class="number">1</span>, <span class="number">2</span>, c=<span class="number">3</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = () kw = &#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'a'</span>, <span class="string">'b'</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="string">'a'</span>, <span class="string">'b'</span>) kw = &#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, x=<span class="number">99</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="string">'a'</span>, <span class="string">'b'</span>) kw = &#123;<span class="string">'x'</span>: <span class="number">99</span>&#125;</span><br></pre></td></tr></table></figure>
<p>神奇的是通过一个tuple和dict，你也可以调用该函数：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>kw = &#123;<span class="string">'x'</span>: <span class="number">99</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func(*args, **kw)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="number">4</span>,) kw = &#123;<span class="string">'x'</span>: <span class="number">99</span>&#125;</span><br></pre></td></tr></table></figure>
<p>所以，对于任意函数，都可以通过类似<code>func(*args, **kw)</code>的形式调用它，无论它的参数是如何定义的。</p>
<p><strong>小结</strong></p>
<p>Python的函数具有非常灵活的参数形态，既可以实现简单的调用，又可以传入非常复杂的参数。</p>
<p>默认参数一定要用不可变对象，如果是可变对象，运行会有逻辑错误！</p>
<p>要注意定义可变参数和关键字参数的语法：</p>
<p><code>*args</code>是可变参数，args接收的是一个tuple；</p>
<p><code>**kw</code>是关键字参数，kw接收的是一个dict。</p>
<p>以及调用函数时如何传入可变参数和关键字参数的语法：</p>
<p>可变参数既可直接传入：<code>func(1, 2, 3)</code>，又可先组装list或tuple，再通过<code>*args</code>传入：<code>func(*(1, 2, 3))</code>；</p>
<p>关键字参数既可直接传入：<code>func(a=1, b=2)</code>，又可先组装dict，再通过<code>**kw</code>传入：<code>func(**{&#39;a&#39;: 1, &#39;b&#39;: 2})</code>。</p>
<p>使用<code>*args</code>和<code>**kw</code>是Python的习惯写法，当然也可以用其他参数名，但最好使用习惯用法。</p>
<h3 id="1-4-递归函数"><a href="#1-4-递归函数" class="headerlink" title="1.4 递归函数"></a>1.4 递归函数</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> n * fact(n - <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>使用递归函数需要注意防止栈溢出。在计算机中，函数调用是通过栈（stack）这种数据结构实现的，每当进入一个函数调用，栈就会加一层栈帧，每当函数返回，栈就会减一层栈帧。由于栈的大小不是无限的，所以，递归调用的次数过多，会导致栈溢出。</p>
<p>使用递归函数的优点是逻辑简单清晰，缺点是过深的调用会导致栈溢出。</p>
</blockquote>
<h2 id="2-高级特性"><a href="#2-高级特性" class="headerlink" title="2. 高级特性"></a>2. 高级特性</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">L = []</span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n &lt;= <span class="number">99</span>:</span><br><span class="line">    L.append(n)</span><br><span class="line">    n = n + <span class="number">2</span></span><br></pre></td></tr></table></figure>
<h3 id="2-1-切片"><a href="#2-1-切片" class="headerlink" title="2.1 切片"></a>2.1 切片</h3><p>list</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = [<span class="string">'Michael'</span>, <span class="string">'Sarah'</span>, <span class="string">'Tracy'</span>, <span class="string">'Bob'</span>, <span class="string">'Jack'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">[<span class="string">'Sarah'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">-2</span>:]</span><br><span class="line">[<span class="string">'Bob'</span>, <span class="string">'Jack'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = range(<span class="number">100</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">34</span>, <span class="number">35</span>, <span class="number">36</span>, <span class="number">37</span>, <span class="number">38</span>, <span class="number">39</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">42</span>, <span class="number">43</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">46</span>, <span class="number">47</span>, <span class="number">48</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">58</span>, <span class="number">59</span>, <span class="number">60</span>, <span class="number">61</span>, <span class="number">62</span>, <span class="number">63</span>, <span class="number">64</span>, <span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">74</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">77</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">80</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">85</span>, <span class="number">86</span>, <span class="number">87</span>, <span class="number">88</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">91</span>, <span class="number">92</span>, <span class="number">93</span>, <span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[:<span class="number">10</span>:<span class="number">2</span>]</span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[::<span class="number">5</span>]</span><br><span class="line">[<span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">35</span>, <span class="number">40</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">55</span>, <span class="number">60</span>, <span class="number">65</span>, <span class="number">70</span>, <span class="number">75</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">90</span>, <span class="number">95</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>tuple也是一种list，唯一区别是tuple不可变。因此，tuple也可以用切片操作，只是操作的结果仍是tuple</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)[:<span class="number">3</span>]</span><br><span class="line">(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>字符串<code>&#39;xxx&#39;</code>或Unicode字符串<code>u&#39;xxx&#39;</code>也可以看成是一种list，每个元素就是一个字符。因此，字符串也可以用切片操作，只是操作结果仍是字符串：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'ABCDEFG'</span>[:<span class="number">3</span>]</span><br><span class="line"><span class="string">'ABC'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'ABCDEFG'</span>[::<span class="number">2</span>]</span><br><span class="line"><span class="string">'ACEG'</span></span><br></pre></td></tr></table></figure>
<h3 id="2-2-Iteration"><a href="#2-2-Iteration" class="headerlink" title="2.2 Iteration"></a>2.2 Iteration</h3><p>只要是可迭代对象，无论有无下标，都可以迭代，比如dict就可以迭代</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;list.length; i++) &#123;</span><br><span class="line">    n = list[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">d = &#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> d:</span><br><span class="line">    <span class="keyword">print</span> key</span><br></pre></td></tr></table></figure>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> ch <span class="keyword">in</span> <span class="string">'ABC'</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> ch</span><br><span class="line">...</span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">C</span><br></pre></td></tr></table></figure>
<p>如何判断一个对象是可迭代对象呢？方法是通过<code>collections模块</code>的<code>Iterable</code>类型判断：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="string">'abc'</span>, Iterable) <span class="comment"># str是否可迭代</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], Iterable) <span class="comment"># list是否可迭代</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="number">123</span>, Iterable) <span class="comment"># 整数是否可迭代</span></span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure>
<p>如果要对list实现类似Java那样的下标循环怎么办？Python内置的<code>enumerate</code>函数可以把一个list变成索引-元素对，这样就可以在for循环中同时迭代索引和元素本身：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i, value <span class="keyword">in</span> enumerate([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> i, value</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span> A</span><br><span class="line"><span class="number">1</span> B</span><br><span class="line"><span class="number">2</span> C</span><br></pre></td></tr></table></figure>
<p><code>for</code>循环里，同时引用了两个变量，在Python里是很常见</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x, y <span class="keyword">in</span> [(<span class="number">1</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">4</span>), (<span class="number">3</span>, <span class="number">9</span>)]:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> x, y</span><br><span class="line">...</span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">9</span></span><br></pre></td></tr></table></figure>
<h3 id="2-3-列表生成式"><a href="#2-3-列表生成式" class="headerlink" title="2.3 列表生成式"></a>2.3 列表生成式</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line">[<span class="number">4</span>, <span class="number">16</span>, <span class="number">36</span>, <span class="number">64</span>, <span class="number">100</span>]</span><br></pre></td></tr></table></figure>
<p>还可以使用两层循环，可以生成全排列：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[m + n <span class="keyword">for</span> m <span class="keyword">in</span> <span class="string">'ABC'</span> <span class="keyword">for</span> n <span class="keyword">in</span> <span class="string">'XYZ'</span>]</span><br><span class="line">[<span class="string">'AX'</span>, <span class="string">'AY'</span>, <span class="string">'AZ'</span>, <span class="string">'BX'</span>, <span class="string">'BY'</span>, <span class="string">'BZ'</span>, <span class="string">'CX'</span>, <span class="string">'CY'</span>, <span class="string">'CZ'</span>]</span><br></pre></td></tr></table></figure>
<p>运用列表生成式，可以写出非常简洁的代码。</p>
<p>例如，列出当前目录下的所有文件和目录名</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os <span class="comment"># 导入os模块，模块的概念后面讲到</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[d <span class="keyword">for</span> d <span class="keyword">in</span> os.listdir(<span class="string">'.'</span>)] <span class="comment"># os.listdir可以列出文件和目录</span></span><br><span class="line">[<span class="string">'.emacs.d'</span>, <span class="string">'.ssh'</span>, <span class="string">'.Trash'</span>, <span class="string">'Adlm'</span>, <span class="string">'Applications'</span>, <span class="string">'Desktop'</span>, <span class="string">'Documents'</span>, <span class="string">'Downloads'</span>, <span class="string">'Library'</span>, <span class="string">'Movies'</span>, <span class="string">'Music'</span>, <span class="string">'Pictures'</span>, <span class="string">'Public'</span>, <span class="string">'VirtualBox VMs'</span>, <span class="string">'Workspace'</span>, <span class="string">'XCode'</span>]</span><br></pre></td></tr></table></figure>
<p>for循环其实可以同时使用两个甚至多个变量，比如<code>dict</code>的<code>iteritems()</code>可以同时迭代key和value：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">'x'</span>: <span class="string">'A'</span>, <span class="string">'y'</span>: <span class="string">'B'</span>, <span class="string">'z'</span>: <span class="string">'C'</span> &#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> k, v <span class="keyword">in</span> d.iteritems():</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> k, <span class="string">'='</span>, v</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">y = B</span><br><span class="line">x = A</span><br><span class="line">z = C</span><br></pre></td></tr></table></figure>
<p>列表生成式也可以使用两个变量来生成list：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">'x'</span>: <span class="string">'A'</span>, <span class="string">'y'</span>: <span class="string">'B'</span>, <span class="string">'z'</span>: <span class="string">'C'</span> &#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[k + <span class="string">'='</span> + v <span class="keyword">for</span> k, v <span class="keyword">in</span> d.iteritems()]</span><br><span class="line">[<span class="string">'y=B'</span>, <span class="string">'x=A'</span>, <span class="string">'z=C'</span>]</span><br></pre></td></tr></table></figure>
<p>最后把一个list中所有的字符串变成小写：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = [<span class="string">'Hello'</span>, <span class="string">'World'</span>, <span class="string">'IBM'</span>, <span class="string">'Apple'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[s.lower() <span class="keyword">for</span> s <span class="keyword">in</span> L]</span><br><span class="line">[<span class="string">'hello'</span>, <span class="string">'world'</span>, <span class="string">'ibm'</span>, <span class="string">'apple'</span>]</span><br></pre></td></tr></table></figure>
<p><strong>小结</strong></p>
<p>运用列表生成式，可以快速生成list，可以通过一个list推导出另一个list，而代码却十分简洁。</p>
<h3 id="2-4-生成器"><a href="#2-4-生成器" class="headerlink" title="2.4 生成器"></a>2.4 生成器</h3><p>如果列表元素可以按照某种算法推算出来，那我们是否可以在循环的过程中不断推算出后续的元素呢？这样就不必创建完整的list，从而节省大量的空间。在Python中，这种一边循环一边计算的机制，称为生成器（<code>Generator</code>）</p>
<p>要创建一个generator，有很多种方法。第一种方法很简单，只要把一个列表生成式的<code>[]</code>改成<code>()</code>，就创建了一个generator：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = [x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = (x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g</span><br><span class="line">&lt;generator object &lt;genexpr&gt; at <span class="number">0x104feab40</span>&gt;</span><br></pre></td></tr></table></figure>
<p>generator 是一个可迭代的对象</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = (x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> n <span class="keyword">in</span> g:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> n</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">16</span></span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="number">36</span></span><br><span class="line"><span class="number">49</span></span><br><span class="line"><span class="number">64</span></span><br><span class="line"><span class="number">81</span></span><br></pre></td></tr></table></figure>
<p>斐波拉契数列</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(max)</span>:</span></span><br><span class="line">    n, a, b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; max:</span><br><span class="line">        <span class="keyword">print</span> b</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p><code>fib</code>函数实际上是定义了斐波拉契数列的推算规则，可以从第一个元素开始，推算出后续任意的元素，这种逻辑其实非常类似generator。</p>
<p>把<code>fib</code>函数变成<code>generator</code>，只需要把 <code>print b</code> 改为 <code>yield b</code> 就可以了</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(max)</span>:</span></span><br><span class="line">    n, a, b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; max:</span><br><span class="line">        <span class="keyword">yield</span> b</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果一个函数定义中包含 <code>yield</code>关键字，那么这个函数就不再是一个普通函数，而是一个generator</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>fib(<span class="number">6</span>)</span><br><span class="line">&lt;generator object fib at <span class="number">0x104feaaa0</span>&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>函数是顺序执行，遇到<code>return</code>语句或者最后一行函数语句就返回。而变成<code>generator</code>的函数，在每次调用<code>next()</code>的时候执行，遇到<code>yield</code>语句返回，再次执行时从上次返回的<code>yield</code> 语句处继续执行。</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">odd</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> <span class="string">'step 1'</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> <span class="string">'step 2'</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> <span class="string">'step 3'</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">yield</span> <span class="number">5</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>o = odd()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>o.next()</span><br><span class="line">step <span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>o.next()</span><br><span class="line">step <span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>o.next()</span><br><span class="line">step <span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>o.next()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">StopIteration</span><br></pre></td></tr></table></figure>
<p><strong>小结</strong></p>
<p>generator是非常强大的工具，在Python中，可以简单地把列表生成式改成generator，也可以通过函数实现复杂逻辑的generator。</p>
<p>要理解generator的工作原理，它是在for循环的过程中不断计算出下一个元素，并在适当的条件结束<code>for</code>循环。对于函数改成的generator来说，遇到return语句或者执行到函数体最后一行语句，就是结束generator的指令，<code>for</code>循环随之结束。</p>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><ul>
<li><a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/0013868196169906eb9ca5864384546bf3405ae6a172b3e000" target="_blank" rel="external">廖雪峰的官方网站 liaoxuefeng</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Basic Learning I]]></title>
      <url>http://iequa.com/2017/05/31/python-basic-learning-I/</url>
      <content type="html"><![CDATA[<h2 id="1-Python-introduce"><a href="#1-Python-introduce" class="headerlink" title="1. Python introduce"></a>1. Python introduce</h2><ul>
<li><code>解释型</code>、<code>面向对象</code>、<code>动态数据类型</code> 的高级程序设计语言。</li>
</ul>
<h2 id="2-First-Python-program"><a href="#2-First-Python-program" class="headerlink" title="2. First Python program"></a>2. First Python program</h2><h3 id="2-1-output"><a href="#2-1-output" class="headerlink" title="2.1 output"></a>2.1 output</h3><p><code>print</code>语句也可以跟上多个字符串，用逗号“,”隔开，就可以连成一串输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; print &apos;The quick brown fox&apos;, &apos;jumps over&apos;, &apos;the lazy dog&apos;</span><br><span class="line">The quick brown fox jumps over the lazy dog</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p><code>print</code>会依次打印每个字符串，遇到逗号“,”会输出一个空格</p>
<h3 id="2-2-input"><a href="#2-2-input" class="headerlink" title="2.2 input"></a>2.2 input</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = raw_input()</span><br><span class="line">Blair</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'hello,'</span>, name</span><br><span class="line">hello, Blair</span><br></pre></td></tr></table></figure>
<p><code>raw_input</code> 和 <code>print</code> 是在命令行下面最基本的输入和输出</p>
<h2 id="3-Python-基础"><a href="#3-Python-基础" class="headerlink" title="3. Python 基础"></a>3. Python 基础</h2><h3 id="3-1-数据类型"><a href="#3-1-数据类型" class="headerlink" title="3.1 数据类型"></a>3.1 数据类型</h3><ol>
<li>int</li>
<li>float</li>
<li>str</li>
<li>boolean</li>
<li>None</li>
<li>常量</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;I\&apos;m \&quot;OK\&quot;!&apos;</span><br><span class="line">&apos;I\&apos;m &quot;OK&quot;!&apos;</span><br><span class="line">&gt;&gt;&gt; a = &apos;ABC&apos;</span><br><span class="line">&gt;&gt;&gt; b = a</span><br><span class="line">&gt;&gt;&gt; a = &apos;XYZ&apos;</span><br><span class="line">&gt;&gt;&gt; print b</span><br><span class="line">ABC</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h3 id="3-2-字符编码"><a href="#3-2-字符编码" class="headerlink" title="3.2 字符编码"></a>3.2 字符编码</h3><p>因为计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能处理。最早的计算机在设计时采用8个比特（bit）作为一个字节（byte），所以，一个字节能表示的最大的整数就是255（二进制11111111=十进制255），如果要表示更大的整数，就必须用更多的字节。比如两个字节可以表示的最大整数是65535，4个字节可以表示的最大整数是4294967295。</p>
<p>由于计算机是美国人发明的，因此，最早只有127个字母被编码到计算机里，也就是大小写英文字母、数字和一些符号，这个编码表被称为ASCII编码，比如大写字母A的编码是65，小写字母z的编码是122。</p>
<p>但是要处理中文显然一个字节是不够的，至少需要两个字节，而且还不能和ASCII编码冲突，所以，中国制定了GB2312编码，用来把中文编进去。</p>
<p><img src="/images/python/py_str_code.png" alt=""></p>
<p>因此，Unicode应运而生。Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了。</p>
<p>Unicode标准也在不断发展，但最常用的是用两个字节表示一个字符（如果要用到非常偏僻的字符，就需要4个字节）。现代操作系统和大多数编程语言都直接支持Unicode。</p>
<p>字母<code>A</code>用ASCII编码是十进制的<code>65</code>，二进制的01000001；</p>
<p>字符<code>0</code>用ASCII编码是十进制的<code>48</code>，二进制的00110000，注意字符’0’和整数0是不同的；</p>
<p>你可以猜测，如果把ASCII编码的<code>A</code>用Unicode编码，只需要在前面补0就可以，因此，A的Unicode编码是00000000 01000001。</p>
<p>新的问题又出现了：如果统一成Unicode编码，乱码问题从此消失了。但是，如果你写的文本基本上全部是英文的话，用Unicode编码比ASCII编码需要多一倍的存储空间，在存储和传输上就十分不划算。</p>
<p>所以，本着节约的精神，又出现了把Unicode编码转化为“可变长编码”的<code>UTF-8</code>编码。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。如果你要传输的文本包含大量英文字符，用UTF-8编码就能节省空间：</p>
<blockquote>
<p>在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。</p>
</blockquote>
<h3 id="3-3-Python的字符串"><a href="#3-3-Python的字符串" class="headerlink" title="3.3 Python的字符串"></a>3.3 Python的字符串</h3><p>因为Python的诞生比Unicode标准发布的时间还要早，所以最早的Python只支持ASCII编码，普通的字符串<code>&#39;ABC&#39;</code>在Python内部都是ASCII编码的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">'A'</span>)</span><br><span class="line"><span class="number">65</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">65</span>)</span><br><span class="line"><span class="string">'A'</span></span><br></pre></td></tr></table></figure>
<p>Python在后来添加了对Unicode的支持，以Unicode表示的字符串用<code>u&#39;...&#39;</code>表示，比如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">u'中文'</span></span><br><span class="line">中文</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">u'中'</span></span><br><span class="line"><span class="string">u'\u4e2d'</span></span><br></pre></td></tr></table></figure>
<p>写<code>u&#39;中&#39;</code>和<code>u&#39;\u4e2d&#39;</code>是一样的，<code>\u</code>后面是十六进制的Unicode码。因此，<code>u&#39;A&#39;</code>和<code>u&#39;\u0041&#39;</code>也一样的。</p>
<p>两种字符串如何相互转换？字符串<code>&#39;xxx&#39;</code>虽然是ASCII编码，但也可以看成是UTF-8编码，而<code>u&#39;xxx&#39;</code>则只能是Unicode编码。</p>
<p>把<code>u&#39;xxx&#39;</code>转换为UTF-8编码的<code>&#39;xxx&#39;</code>用<code>encode(&#39;utf-8&#39;)</code>方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">u'ABC'</span>.encode(<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="string">'ABC'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">u'中文'</span>.encode(<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="string">'\xe4\xb8\xad\xe6\x96\x87'</span></span><br></pre></td></tr></table></figure>
<p>英文字符转换后表示的UTF-8的值和Unicode值相等（但占用的存储空间不同），而中文字符转换后1个Unicode字符将变为3个UTF-8字符，你看到的<code>\xe4</code>就是其中一个字节，因为它的值是<code>228</code>，没有对应的字母可以显示，所以以十六进制显示字节的数值。<code>len()</code>函数可以返回字符串的长度：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">u'ABC'</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">'ABC'</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">u'中文'</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">'\xe4\xb8\xad\xe6\x96\x87'</span>)</span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>反过来，把UTF-8编码表示的字符串<code>&#39;xxx&#39;</code>转换为Unicode字符串<code>u&#39;xxx&#39;</code>用<code>decode(&#39;utf-8&#39;)</code>方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;abc&apos;.decode(&apos;utf-8&apos;)</span><br><span class="line">u&apos;abc&apos;</span><br><span class="line">&gt;&gt;&gt; &apos;\xe4\xb8\xad\xe6\x96\x87&apos;.decode(&apos;utf-8&apos;)</span><br><span class="line">u&apos;\u4e2d\u6587&apos;</span><br><span class="line">&gt;&gt;&gt; print &apos;\xe4\xb8\xad\xe6\x96\x87&apos;.decode(&apos;utf-8&apos;)</span><br><span class="line">中文</span><br></pre></td></tr></table></figure>
<p>py 源文件的头部</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br></pre></td></tr></table></figure>
<p>第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释；</p>
<p>第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，在源代码中写的中文输出可能会乱码。</p>
<p><strong>格式化</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Hello, %s'</span> % <span class="string">'world'</span></span><br><span class="line"><span class="string">'Hello, world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Hi, %s, you have $%d.'</span> % (<span class="string">'Michael'</span>, <span class="number">1000000</span>)</span><br><span class="line"><span class="string">'Hi, Michael, you have $1000000.'</span></span><br></pre></td></tr></table></figure>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%2d-%02d'</span> % (<span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line"><span class="string">' 3-01'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%.2f'</span> % <span class="number">3.1415926</span></span><br><span class="line"><span class="string">'3.14'</span></span><br></pre></td></tr></table></figure>
<h3 id="3-4-List-amp-Tuple"><a href="#3-4-List-amp-Tuple" class="headerlink" title="3.4 List &amp; Tuple"></a>3.4 List &amp; Tuple</h3><p><strong>List</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[<span class="number">-1</span>]</span><br><span class="line"><span class="string">'Tracy'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.append(<span class="string">'Adam'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>, <span class="string">'Adam'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.insert(<span class="number">1</span>, <span class="string">'Jack'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Jack'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>, <span class="string">'Adam'</span>]</span><br></pre></td></tr></table></figure>
<p>要删除list末尾的元素，用<code>pop()</code>方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.pop()</span><br><span class="line"><span class="string">'Adam'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Jack'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br></pre></td></tr></table></figure>
<p>要删除指定位置的元素，用<code>pop(i)</code>方法，其中<code>i</code>是索引位置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.pop(<span class="number">1</span>)</span><br><span class="line"><span class="string">'Jack'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br></pre></td></tr></table></figure>
<p>list里面的元素的数据类型也可以不同，比如：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = [<span class="string">'Apple'</span>, <span class="number">123</span>, <span class="keyword">True</span>]</span><br></pre></td></tr></table></figure>
<p>list元素也可以是另一个list，比如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = [<span class="string">'python'</span>, <span class="string">'java'</span>, [<span class="string">'asp'</span>, <span class="string">'php'</span>], <span class="string">'scheme'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(s)</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p = [<span class="string">'asp'</span>, <span class="string">'php'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = [<span class="string">'python'</span>, <span class="string">'java'</span>, p, <span class="string">'scheme'</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(L)</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><strong>Tuple</strong></p>
<p>另一种有序列表叫元组：tuple。tuple和list非常类似，但<code>tuple</code>一旦初始化就不能修改,元素指向不改变。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates = (<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>)</span><br></pre></td></tr></table></figure>
<p>另一种有序列表叫元组：tuple。tuple和list非常类似，但是tuple一旦初始化就不能修改</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>如果要定义一个空的tuple，可以写成<code>()</code>：</p>
<blockquote>
<p>tuple 的陷阱</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; t = (1)</span><br><span class="line">&gt;&gt;&gt; t</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>正确的方式如下 :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; t = (1,)</span><br><span class="line">&gt;&gt;&gt; t</span><br><span class="line">(1,)</span><br></pre></td></tr></table></figure>
<p>最后来看一个“可变的”tuple：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; t = (&apos;a&apos;, &apos;b&apos;, [&apos;A&apos;, &apos;B&apos;])</span><br><span class="line">&gt;&gt;&gt; t[2][0] = &apos;X&apos;</span><br><span class="line">&gt;&gt;&gt; t[2][1] = &apos;Y&apos;</span><br><span class="line">&gt;&gt;&gt; t</span><br><span class="line">(&apos;a&apos;, &apos;b&apos;, [&apos;X&apos;, &apos;Y&apos;])</span><br></pre></td></tr></table></figure>
<p>其实变的不是tuple的元素，而是list的元素。tuple一开始指向的list并没有改成别的list</p>
<p>小结</p>
<p>list和tuple是Python内置的有序集合，一个可变，一个不可变。根据需要来选择使用它们。</p>
<h3 id="3-5-条件与循环"><a href="#3-5-条件与循环" class="headerlink" title="3.5 条件与循环"></a>3.5 条件与循环</h3><p><strong>条件表达式</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age = <span class="number">20</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">6</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'teenager'</span></span><br><span class="line"><span class="keyword">elif</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'adult'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'kid'</span></span><br></pre></td></tr></table></figure>
<p><strong>循环</strong></p>
<p>for…in…</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">names = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="keyword">print</span> name</span><br></pre></td></tr></table></figure>
<p>for &amp; range</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">101</span>):</span><br><span class="line">    sum = sum + x</span><br><span class="line"><span class="keyword">print</span> sum</span><br></pre></td></tr></table></figure>
<p>while</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">sum = <span class="number">0</span></span><br><span class="line">n = <span class="number">99</span></span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    sum = sum + n</span><br><span class="line">    n = n - <span class="number">2</span></span><br><span class="line"><span class="keyword">print</span> sum</span><br></pre></td></tr></table></figure>
<h3 id="3-6-Dict-与-Set"><a href="#3-6-Dict-与-Set" class="headerlink" title="3.6 Dict 与 Set"></a>3.6 Dict 与 Set</h3><p><strong>Dict</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">'Michael'</span>: <span class="number">95</span>, <span class="string">'Bob'</span>: <span class="number">75</span>, <span class="string">'Tracy'</span>: <span class="number">85</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">'Michael'</span>]</span><br><span class="line"><span class="number">95</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">'Adam'</span>] = <span class="number">67</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">'Adam'</span>]</span><br><span class="line"><span class="number">67</span></span><br></pre></td></tr></table></figure>
<p>要避免key不存在的错误，有两种办法，一是通过in判断key是否存在：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Thomas'</span> <span class="keyword">in</span> d</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure>
<p>二是通过dict提供的get方法，如果key不存在，可以返回None，或者自己指定的value：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">'Thomas'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">'Thomas'</span>, <span class="number">-1</span>)</span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：返回None的时候Python的交互式命令行不显示结果。</p>
</blockquote>
<p>要删除一个key，用pop(key)方法，对应的value也会从dict中删除：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.pop(<span class="string">'Bob'</span>)</span><br><span class="line"><span class="number">75</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line">&#123;<span class="string">'Michael'</span>: <span class="number">95</span>, <span class="string">'Tracy'</span>: <span class="number">85</span>&#125;</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>dict</th>
<th>list</th>
</tr>
</thead>
<tbody>
<tr>
<td>查找和插入的速度极快，不会随着key的增加而增加</td>
<td>查找和插入的时间随着元素的增加而增加</td>
</tr>
<tr>
<td>需要占用大量的内存，内存浪费多</td>
<td>占用空间小，浪费内存很少</td>
</tr>
</tbody>
</table>
<p><strong>所以，dict是用空间来换取时间的一种方法。</strong></p>
<blockquote>
<p>dict可以用在需要高速查找的很多地方，在Python代码中几乎无处不在，正确使用dict非常重要，需要牢记的第一条就是dict的key必须是不可变对象。</p>
<p>是因为dict根据key来计算value的存储位置，如果每次计算相同的key得出的结果不同，那dict内部就完全混乱了。这个通过key计算位置的算法称为哈希算法（Hash）。</p>
<p>保证hash的正确性，作为key的对象就不能变。在Python中，字符串、整数等都是不可变的，因此，可以放心地作为key。而list是可变的，就不能作为key：</p>
</blockquote>
<p><strong>Set</strong></p>
<p>set和dict类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在set中，没有重复的key。</p>
<p>要创建一个set，需要提供一个list作为输入集合：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意，传入的参数<code>[1, 2, 3]</code>是一个list，而显示的<code>set([1, 2, 3])</code>只是告诉你这个set内部有1，2，3这3个元素，显示的[]不表示这是一个list。</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = set([<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.remove(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br></pre></td></tr></table></figure>
<p>set可以看成数学意义上的无序和无重复元素的集合，因此，两个set可以做数学意义上的交集、并集等操作：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s2 = set([<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 &amp; s2</span><br><span class="line">set([<span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 | s2</span><br><span class="line">set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br></pre></td></tr></table></figure>
<blockquote>
<p>set和dict的唯一区别仅在于没有存储对应的value，set的原理和dict一样.</p>
</blockquote>
<p><strong>再议不可变对象</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.sort()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">'abc'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.replace(<span class="string">'a'</span>, <span class="string">'A'</span>)</span><br><span class="line"><span class="string">'Abc'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="string">'abc'</span></span><br></pre></td></tr></table></figure>
<p>小结 :</p>
<p>使用key-value存储结构的dict在Python中非常有用，选择不可变对象作为key很重要，最常用的key是字符串。</p>
<p><code>tuple</code> 虽然是不变对象，但试试把 <code>(1, 2, 3)</code> 和 <code>(1, [2, 3])</code> 放入dict或set中，并解释结果。</p>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><ul>
<li><a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000" target="_blank" rel="external">廖雪峰的官方网站 liaoxuefeng</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EF 4 The Past]]></title>
      <url>http://iequa.com/2017/05/31/ef-l4u3-The-past/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
audio {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}

</style>

<h2 id="1-Asking-about-someone’s-day"><a href="#1-Asking-about-someone’s-day" class="headerlink" title="1. Asking about someone’s day"></a>1. Asking about someone’s day</h2><table>
<thead>
<tr>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td>I had a great day. I got up. I went for a run</td>
<td></td>
</tr>
<tr>
<td>I did the dishes. I ironed my clothes</td>
<td></td>
</tr>
<tr>
<td>Yesterday, What a bad day. I had a job interview.</td>
<td></td>
</tr>
<tr>
<td>I washed my clothes. I cleaned my apartment.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>iron[‘aɪən] n. 铁器;熨斗;脚镣 adj. 铁制的;坚强的;顽强的; vt. 熨烫;用铁铸成 vi. 熨衣;</p>
<p>dish [dɪʃ] 盘;餐具<br>eat - ate、drink - drank、let - let </p>
</blockquote>
<h2 id="1-1-dialog-about-todd"><a href="#1-1-dialog-about-todd" class="headerlink" title="1.1 dialog about todd"></a>1.1 dialog about todd</h2><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>JENNY: Todd, it’s good to see you again. How are you doing?</td>
<td></td>
</tr>
<tr>
<td>TODD: Fine, Jenny! I just got back from Tokyo two days ago.</td>
<td></td>
</tr>
<tr>
<td>JENNY: Business trip?</td>
<td></td>
</tr>
<tr>
<td>TODD: Yeah.</td>
<td></td>
</tr>
<tr>
<td>JENNY: How was it?</td>
<td></td>
</tr>
<tr>
<td>TODD: It was good, but Tokyo’s so busy!  and I was in Kyoto last week.</td>
<td></td>
</tr>
<tr>
<td>JENNY: How was that?</td>
<td></td>
</tr>
<tr>
<td>TODD: It was incredible! So how are you?</td>
<td></td>
</tr>
<tr>
<td>JENNY: I’m good. I was in Chicago the day before yesterday. I had  dinner with Mark and Paula.</td>
<td></td>
</tr>
<tr>
<td>TODD: How are they doing?</td>
<td></td>
</tr>
<tr>
<td>JENNY: They’re fine. Oh, you know they had a baby, right?</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>Kyoto [kiˈoto, ˈkjo-] 京都</p>
</blockquote>
<h3 id="1-2-description-questions"><a href="#1-2-description-questions" class="headerlink" title="1.2 description questions"></a>1.2 description questions</h3><ul>
<li>What was it like?</li>
<li>What was the wedding like?</li>
<li>What did he look like?</li>
</ul>
<ul>
<li>How did you like Beijing?</li>
<li>How was your vacation?</li>
</ul>
<ul>
<li>Did you go to Paris?</li>
<li>We did not meet John yesterday.</li>
<li>Frank wasn’t happy in Los Angeles.</li>
</ul>
<h2 id="2-Talking-about-your-weekend"><a href="#2-Talking-about-your-weekend" class="headerlink" title="2. Talking about your weekend"></a>2. Talking about your weekend</h2><ul>
<li>bring - brought</li>
<li>leave - left</li>
<li>sell - sold  </li>
<li>rise - rose</li>
<li>shut - shut</li>
</ul>
<p><img src="/images/english/ef-l4u3l2.png" alt=""></p>
<audio src="/voices/ef/l4u3-talking-about-your-weekend.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[LEO] In the afternoon, I went to Pete’s. We had lunch and watched a match.</td>
<td></td>
</tr>
<tr>
<td>[LEO] All right, man, I’m off.</td>
<td></td>
</tr>
<tr>
<td>[PETER] Yeah. Later. dude.</td>
<td></td>
</tr>
<tr>
<td>[LEO] Hey, are you going to throw that away?</td>
<td></td>
</tr>
<tr>
<td>[PETER] That one ?</td>
<td></td>
</tr>
<tr>
<td>[LEO] The coffee table</td>
<td></td>
</tr>
<tr>
<td>[PETER] Yup !</td>
<td></td>
</tr>
<tr>
<td>[LEO] Can I have it ?</td>
<td></td>
</tr>
<tr>
<td>[PETER] You take it.</td>
<td></td>
</tr>
<tr>
<td>[LEO] It would be great. I think it would suit my apartment perfectly</td>
<td></td>
</tr>
<tr>
<td>[PETER] take it.</td>
<td></td>
</tr>
<tr>
<td>[LEO] Great ! Thanks a lot.</td>
<td></td>
</tr>
<tr>
<td>[PETER] later</td>
<td></td>
</tr>
<tr>
<td>[LEO] Peter gave me a table.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] At 3, I started off for a job interview. My shoe broke.</td>
<td></td>
</tr>
<tr>
<td>[LEO] I got to the station at 3:30.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] I got to the station at 3:30.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-1-In-the-past"><a href="#2-1-In-the-past" class="headerlink" title="2.1 In the past"></a>2.1 In the past</h3><ul>
<li>I read a good novel last week.</li>
<li>He cooked dinner.</li>
<li>We drove to Las Vegas.</li>
<li>She brought a gift.</li>
<li>I ate some spaghetti. [spəˈɡɛti] </li>
<li>I went jogging.</li>
<li>brought a gift</li>
</ul>
<h3 id="2-2-General-questions"><a href="#2-2-General-questions" class="headerlink" title="2.2 General questions"></a>2.2 General questions</h3><ul>
<li>How was your weekend?</li>
<li>How is your mom feeling?     </li>
</ul>
<ul>
<li>A: Hey, there was a great movie on last night.</li>
<li>B: Really? What was it? </li>
</ul>
<h3 id="2-3-Changing-a-topic"><a href="#2-3-Changing-a-topic" class="headerlink" title="2.3 Changing a topic"></a>2.3 Changing a topic</h3><table>
<thead>
<tr>
<th>By the way</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: By the way, I saw Joe last night. He looked good.</td>
<td></td>
</tr>
<tr>
<td>B: Really? I’m so glad!</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>That reminds me</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: There was a great baseball game on TV last night.</td>
<td></td>
</tr>
<tr>
<td>B: Oh, that reminds me. I have two tickets to tonight’s game. Do you want to go?</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Anyway</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: That restaurant wasn’t very good.</td>
<td></td>
</tr>
<tr>
<td>B: No, it wasn’t! The meat tasted bad, and the salad wasn’t fresh. And the waiter was awful! His clothes were dirty!</td>
<td></td>
</tr>
<tr>
<td>A: Anyway, we’re not going there again. So, how’s Jane</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Dialog2</th>
</tr>
</thead>
<tbody>
<tr>
<td>JERRY: Jessica, how was your weekend ?</td>
<td></td>
</tr>
<tr>
<td>JESSICA: Oh, hi, Jerry! The weekend was great! On Friday night, Jim and I flew down to Acapulco. 阿卡普尔科</td>
<td></td>
</tr>
<tr>
<td>JERRY: You went to Mexico for the weekend?</td>
<td></td>
</tr>
<tr>
<td>JESSICA: Yeah. It’s only a short flight from here. The beaches were fantastic and the food, well, it was amazing – fresh fish and delicious fruit every day!</td>
<td></td>
</tr>
<tr>
<td>JERRY: Wow! It does sound amazing.</td>
<td></td>
</tr>
<tr>
<td>JESSICA: Yeah, and it wasn’t  expensive. The hotel was pretty cheap. Anyway  , it was a lot of fun – and relaxing, too. So, how was your weekend?</td>
<td></td>
</tr>
<tr>
<td>JERRY: It was OK. On Saturday night, Kerstin and I went to a party at a friend’s house.</td>
<td></td>
</tr>
<tr>
<td>JESSICA: Oh, that reminds me  . Jim and I are having people over next weekend on, uh, Sunday afternoon. Of course, we want you and Kerstin to come.</td>
<td></td>
</tr>
<tr>
<td>JERRY: Thanks! I really want to meet Jim.</td>
<td></td>
</tr>
<tr>
<td>JESSICA: And, by the way  , we have a meeting at 9 o’clock with Harry and his team.</td>
<td></td>
</tr>
<tr>
<td>JERRY: Really?</td>
<td></td>
</tr>
<tr>
<td>JESSICA: Yeah, and it’s 8:55 now.</td>
<td></td>
</tr>
<tr>
<td>JERRY: Oh. Well, see you at the meeting.</td>
<td></td>
</tr>
<tr>
<td>JESSICA: Yeah!</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="3-Telling-a-story"><a href="#3-Telling-a-story" class="headerlink" title="3. Telling a story"></a>3. Telling a story</h2><ul>
<li>crime [kraɪm]</li>
<li>economy [ɪˈkɑ:nəmi]</li>
<li>security guard  [siˈkjuəriti ɡɑ:d] </li>
<li>stole</li>
<li>robbery</li>
<li>thieves n.  [θi:vz] </li>
<li>scary</li>
<li>Corporation  [ˌkɔ:rpəˈreɪʃn] </li>
</ul>
<p><img src="/images/english/ef-l4u3l3.png" alt=""></p>
<audio src="/voices/ef/l4u3-telling-a-story.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[SALLY] Hey, Harry. Did you see the story about Apex Corporation?</td>
<td></td>
</tr>
<tr>
<td>[HARRY] No.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] There was a robbery there last Friday night.</td>
<td></td>
</tr>
<tr>
<td>[HARRY] Really?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Yeah. One of the thieves came in through a window, then he opened the door for the others.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] They stole all the computers in the office, and some money. The staff arrived the next day to find everything gone.</td>
<td></td>
</tr>
<tr>
<td>[HARRY] That’s a bit scary. Apex Corporation is just three blocks from us.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Yeah. There’s too much crime in this neighborhood.</td>
<td></td>
</tr>
<tr>
<td>[HARRY] Oh, it’s the economy. No one has any money right now.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Hey. I heard that Todd asked Joan two months ago about hiring a security guard, but Joan said no. A guard was too expensive.</td>
<td></td>
</tr>
<tr>
<td>[HARRY] Let me guess: We’re hiring a guard now.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Yep. She starts tomorrow.</td>
<td></td>
</tr>
<tr>
<td>[HARRY] She? A female guard?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Uh-huh.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="3-1-crime-story"><a href="#3-1-crime-story" class="headerlink" title="3.1 crime story"></a>3.1 crime story</h3><ul>
<li>break into</li>
<li>murder  [ˈmɜ:rdə(r)]</li>
<li>crime</li>
<li>police</li>
<li>thief [θif]  n. 小偷</li>
<li>theft [θɛft] n. 偷盗</li>
<li>arrest [əˈrɛst] </li>
<li>steal</li>
</ul>
<p>Jenny,</p>
<p>I’m visiting a friend in New Orleans. It’s a beautiful city. I love the buildings and the people. I’m having a good time, but a thief broke into my friend’s apartment and stole $130! That’s a lot of money. We called the police, and they are looking for the thief. I’m going home to Springdale tomorrow, and that’s OK with me. I’m really upset about the theft.</p>
<p>Sarah</p>
<blockquote>
<p>Chicago、London</p>
</blockquote>
<h3 id="3-2-somewhere-thing-one"><a href="#3-2-somewhere-thing-one" class="headerlink" title="3.2 somewhere / thing / one"></a>3.2 somewhere / thing / one</h3><ul>
<li>John lives somewhere in Tokyo. I don’t know his address.</li>
</ul>
<h2 id="4-Listening-to-a-story"><a href="#4-Listening-to-a-story" class="headerlink" title="4. Listening to a story"></a>4. Listening to a story</h2><ul>
<li>Yosemite 约塞米蒂</li>
<li>tent</li>
<li>bear</li>
<li>camped</li>
<li>tore</li>
<li>trail</li>
<li>backpack</li>
<li>boots</li>
<li>cabin</li>
<li>campfire</li>
</ul>
<p><img src="/images/english/ef-l4u3l4.png" alt=""></p>
<audio src="/voices/ef/l4u3-listening-to-a-story.m4a" controls="controls"><br>Your browser does not support the audio tag.<br></audio>

<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[SALLY] You guys are going to love Yosemite National Park.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] I can’t wait.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] We’re going to hike on a special trail. Very few people know about it.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] Sounds good.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] You feel so close to nature there. Especially when you see a deer, or a bear.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] Did you say, bear?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Yeah. There are black bears in Yosemite. They’re really beautiful. And big.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] Oh.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Actually, I have an interesting story about a bear. Last time I camped in Yosemite, we had a problem with one.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] A problem? With a bear?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Uh-huh.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] I don’t think I’m going to like this story.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] It was really late at night. We were asleep. Then, we heard a noise outside the tent.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] Go on.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] We left the tent, and outside we saw a huge bear.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] What did you do?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Oh, nothing.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] We just, uh, watched him, and he watched us. And then he tore open our backpacks, and sat down, and slowly ate all our food.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] Then what happened?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Finally, he just walked away. He didn’t even look at us, as he went back into the trees.</td>
<td></td>
</tr>
<tr>
<td>[JAKE] And we’re going to the same place?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Don’t worry, Jake. It’s very safe.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="4-1-Hiking-sentence"><a href="#4-1-Hiking-sentence" class="headerlink" title="4.1 Hiking sentence"></a>4.1 Hiking sentence</h3><ul>
<li>A: What did you do on the weekend?</li>
<li>B: I played badminton.</li>
</ul>
<ul>
<li>A: Where did you go for your vacation?</li>
<li>B: I went to Peru.</li>
</ul>
<ul>
<li>A: Whose backpack did you borrow?</li>
<li>B: I borrowed my brother’s.    </li>
</ul>
<ul>
<li>A: What kind of tent did you buy?</li>
<li>B: I bought a Shelty. It’s the best brand.</li>
</ul>
<ul>
<li>A: What kind of animals did you see?</li>
<li>B: We saw deer, wolves and a snake.</li>
</ul>
<blockquote>
<p>How far did you walk?<br>How difficult was the hike?</p>
</blockquote>
<h3 id="4-2-Connect-the-matching"><a href="#4-2-Connect-the-matching" class="headerlink" title="4.2 Connect the matching"></a>4.2 Connect the matching</h3><table>
<thead>
<tr>
<th>questions</th>
<th>answer</th>
</tr>
</thead>
<tbody>
<tr>
<td>How was your weekend?</td>
<td>It was great, thanks.</td>
</tr>
<tr>
<td>How long was your trip?</td>
<td>We hiked for two weeks.</td>
</tr>
<tr>
<td><code>How many times were you there ?</code></td>
<td>Six times.</td>
</tr>
<tr>
<td>How did you get home?</td>
<td>I walked</td>
</tr>
<tr>
<td>Where did you eat lunch</td>
<td>I ate at the mountain</td>
</tr>
</tbody>
</table>
<h3 id="4-3-Hiking-Dialog"><a href="#4-3-Hiking-Dialog" class="headerlink" title="4.3 Hiking Dialog"></a>4.3 Hiking Dialog</h3><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>KYLE: Hey, Jane! How was  your backpacking trip?</td>
<td></td>
</tr>
<tr>
<td>JANE: It was fantastic.</td>
<td></td>
</tr>
<tr>
<td>KYLE: Where did you go?</td>
<td></td>
</tr>
<tr>
<td>JANE: Uh, we went to Virginia and hiked part of the Appalachian Trail.</td>
<td></td>
</tr>
<tr>
<td>KYLE: Wow! The Appalachian Trail! How far did  you hike?</td>
<td></td>
</tr>
<tr>
<td>JANE: In five days, we hiked about 25 kilometers.</td>
<td></td>
</tr>
<tr>
<td>KYLE: Wow! That’s pretty far. How cold did it get?</td>
<td></td>
</tr>
<tr>
<td>JANE: Well, you know it’s October, so it was really cold at night.</td>
<td></td>
</tr>
<tr>
<td>KYLE: What kind of tent did you take?</td>
<td></td>
</tr>
<tr>
<td>JANE: No tent. There are little cabins on the trail. We all slept in them.</td>
<td></td>
</tr>
<tr>
<td>KYLE: Really? What kind of animals did you see? Any bears?</td>
<td></td>
</tr>
<tr>
<td>JANE: No bears. Just a lot of deer.</td>
<td></td>
</tr>
<tr>
<td>KYLE: That’s good.</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera 6 - Machine Learning System Design *]]></title>
      <url>http://iequa.com/2017/05/29/ml-coursera-ng-w6-Machine-Learning-System-Design/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>


<h2 id="1-Building-a-Spam-Classifier"><a href="#1-Building-a-Spam-Classifier" class="headerlink" title="1. Building a Spam Classifier"></a>1. Building a Spam Classifier</h2><h3 id="1-1-prioritize-what-to-work-on"><a href="#1-1-prioritize-what-to-work-on" class="headerlink" title="1.1 prioritize what to work on"></a>1.1 prioritize what to work on</h3><p>System Design Example:</p>
<p>Given a data set of emails, we could construct a vector for each email. Each entry in this vector represents a word. The vector normally contains 10,000 to 50,000 entries gathered by finding the most frequently used words in our data set. If a word is to be found in the email, we would assign its respective entry a 1, else if it is not found, that entry would be a 0. Once we have all our x vectors ready, we train our algorithm and finally, we could use it to classify if an email is a spam or not.</p>
<p><img src="/images/ml/ml-ng-w6-02-01.png" alt=""></p>
<p>So how could you spend your time to improve the accuracy of this classifier?</p>
<ul>
<li>Collect lots of data (for example “honeypot” project but doesn’t always work)</li>
<li>Develop sophisticated features (for example: using email header data in spam emails)</li>
<li>Develop algorithms to process your input in different ways (recognizing misspellings in spam).</li>
</ul>
<p>It is difficult to tell which of the options will be most helpful.</p>
<h3 id="1-2-error-analysis"><a href="#1-2-error-analysis" class="headerlink" title="1.2 error analysis"></a>1.2 error analysis</h3><p>The recommended approach to solving machine learning problems is to:</p>
<ul>
<li>Start with a simple algorithm, implement it quickly, and test it early on your cross validation data.</li>
<li>Plot learning curves to decide if more data, more features, etc. are likely to help.</li>
<li>Manually examine the errors on examples in the cross validation set and try to spot a trend where most of the errors were made.</li>
</ul>
<p>For example, assume that we have 500 emails and our algorithm misclassifies a 100 of them. We could manually analyze the 100 emails and categorize them based on what type of emails they are. We could then try to come up with new cues and features that would help us classify these 100 emails correctly. Hence, if most of our misclassified emails are those which try to steal passwords, then we could find some features that are particular to those emails and add them to our model. We could also see how classifying each word according to its root changes our error rate:</p>
<p><img src="/images/ml/ml-ng-w6-02-02.png" alt=""></p>
<p>It is very important to get error results as a single, numerical value. Otherwise it is difficult to assess your algorithm’s performance. For example if we use stemming, which is the process of treating the same word with different forms (fail/failing/failed) as one word (fail), and get a 3% error rate instead of 5%, then we should definitely add it to our model. However, if we try to distinguish between upper case and lower case letters and end up getting a 3.2% error rate instead of 3%, then we should avoid using this new feature. Hence, we should try new things, get a numerical value for our error rate, and based on our result decide whether we want to keep the new feature or not.</p>
<h2 id="2-Handling-Skewed-Data"><a href="#2-Handling-Skewed-Data" class="headerlink" title="2. Handling Skewed Data"></a>2. Handling Skewed Data</h2><h3 id="2-1-error-for-skewed-classes"><a href="#2-1-error-for-skewed-classes" class="headerlink" title="2.1 error for skewed classes"></a>2.1 error for skewed classes</h3><p><img src="/images/ml/ml-ng-w6-02-03.png" alt=""></p>
<p>So for the problem of skewed classes precision recall gives us more direct insight into how the learning algorithm is doing and this is often a much better way to evaluate our learning algorithms</p>
<h3 id="2-2-precision-and-recall"><a href="#2-2-precision-and-recall" class="headerlink" title="2.2 precision and recall"></a>2.2 precision and recall</h3><p><img src="/images/ml/ml-ng-w6-02-04.png" alt=""></p>
<h2 id="3-Using-Large-Data-Sets"><a href="#3-Using-Large-Data-Sets" class="headerlink" title="3. Using Large Data Sets"></a>3. Using Large Data Sets</h2><p><img src="/images/ml/ml-ng-w6-02-05.png" alt=""></p>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Shuping Yang's University of Maryland speech]]></title>
      <url>http://iequa.com/2017/05/28/en-Shuping-Yang-at-Maryyland/</url>
      <content type="html"><![CDATA[<h2 id="Shuping-Yang-Maryland-Graduation-Speech"><a href="#Shuping-Yang-Maryland-Graduation-Speech" class="headerlink" title="Shuping Yang Maryland Graduation Speech"></a>Shuping Yang Maryland Graduation Speech</h2><div class="video-container"><iframe src="//www.youtube.com/embed/9bMX-ctieHI" frameborder="0" allowfullscreen></iframe></div>
<h2 id="Speech-Full-Text"><a href="#Speech-Full-Text" class="headerlink" title="Speech Full Text"></a>Speech Full Text</h2><blockquote>
<p><strong>Good afternoon faculty, students, parents and friends.</strong></p>
<p>I am truly honored and grateful to speak at the commencement for the University of Maryland, Class of 2017. </p>
<p>People often ask me: Why did you come to the University of Maryland?<br>I always answer: Fresh air.</p>
<p>Five years ago, as I step off the plane from China, and left the terminal at Dallas Airport. I was ready to put on one of my five face masks, but when I took my first breath of American air. I put my mask away. </p>
<p>The air was so sweet and fresh, and utterly luxurious.</p>
<p>I was surprised by this. I grew up in a city in China, where I had to wear a face mask every time I went outside, otherwise, I might get sick.</p>
<p>However, the moment Iinhaled and exhaled outside the airport，I felt free.</p>
<p>No more fog on my glasses, no more difficult breathing, no more suppression.</p>
<p>Every breath was a delight. As I stand here today, I cannot help, but recall that feeling of freedom. </p>
</blockquote>
<p>&nbsp;</p>
<blockquote>
<p>At the University of Maryland, I will soon feel another kind of fresh air for which I will beforever grateful — the fresh air of free speech.</p>
<p>Before I came to the UnitedStates, I learned in history class about the Declaration of Independence, butthese words had no meaning to me— Life, Liberty and the Pursuit of happiness.</p>
<p>I was merely memorizing the words to get good grades.</p>
<p>These words sounded so strange, so abstract and foreign to me, until I came to University of Maryland.</p>
<p>I have learned the right to freely express oneself is sacred in American.</p>
<p>Each day in Maryland, I was encouraged to express my opinions on controversial issues. </p>
<p>I could challenge astatement made by my instructor. I could even rate my professors online.</p>
<p>But nothing prepared me forthe culture shock I experienced when I watched a university production of the play— Twilight: Los Angeles.</p>
<p>Twilight is a play by AnnaDeavere Smith about the 1992 Los Angeles Riots.</p>
<p>The riots followed acquittal of four Los Angeles police officers in the videotaped arrest and beating of Rodney King.</p>
<p>For six days, the city was in chaos as citizens took to the streets.</p>
<p>In Twilight, the student actors were openly talking about racism, sexism and politics.</p>
<p>I was shocked, I never thought such topic could be discussed openly.</p>
<p>The play was my first taste of political story telling, one that makes the audience think critically. </p>
<p>I have always had a burning desire to tell these kinds of stories, but I was convinced that only authorities on the narrative, only authorities could define the truth. </p>
<p>However, the opportunity toimmerse myself in the perse community at the University of Maryland exposed me to various, many different perspectives on truth.</p>
<p>I soon realized that here I have the opportunity to speak freely. </p>
<p>My voice matters. </p>
<p>Your voice matters.</p>
<p>Our voices matter.</p>
<p>Civil engagement is not at ask just for politicians. I have witnessed this when I saw my fellow student smarching in Washington DC, voting in the presidential election and raising money to support various causes.</p>
<p>I have seen that everyone has a right to participate and advocate for change.</p>
<p>I used to believe that one inpidual participation could not make a difference, but here we are, United Terps.</p>
<p>Together, we can push our society to be more just, open and peaceful.</p>
<p>Class of 2017, we are graduating from a university that embraces a liberal arts education that nurtures us to think critically, and also to care and feel for humanity. </p>
<p>We are equipped with the knowledge of various disciplines and we are ready to face  the challenges of our society.</p>
<p>Some of us may go to graduate school, some us may step into professions and some of us may begin ajourney of exploration.</p>
<p>But no matter what we do,remember, democracy and free speech should not be taken for granted.</p>
<p>Democracy and freedom are the fresh air that is worth fighting for.</p>
<p>Freedom is oxygen. Freedomis passion. Freedom is love.</p>
<p>And as a French philosopher Jean Paul Sartre once said: freedom is a choice, our future is dependent on the choices we make today and tomorrow.</p>
<p>We are all playwrights of the next chapters of our lives. Together, we write the human history.</p>
<p>My friends, enjoy the fresh air and never ever let it go.</p>
<p>Thank you.</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EF Describing people]]></title>
      <url>http://iequa.com/2017/05/27/ef-l4u2-Describing-people/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
</style>

<h2 id="1-Describing-someone-you-know"><a href="#1-Describing-someone-you-know" class="headerlink" title="1. Describing someone you know"></a>1. Describing someone you know</h2><ul>
<li>good-looking</li>
<li>long and dirty</li>
<li>tall, short</li>
<li>medium height</li>
<li>middle-aged</li>
<li>blond [blɑnd] 布隆；白肤金发碧眼的人</li>
<li>bald</li>
<li>curly</li>
</ul>
<p><img src="/images/english/ef-l4u2l1.png" alt=""></p>
<p>My boyfriend … he’s nice …, but , it’s over. He’s good-looking. He has a nice smile. Blue eyes. But his hair! It’s long and dirty. I don’t think he washes it. He’s an artist. He spends all day painting, and that’s all he does. He doesn’t have a job, he lives in his mum’s house! I want a boyfriend who has a plan. Successful, Smart, Funny, Handsome, I want something different now.</p>
<h3 id="2-Sencence"><a href="#2-Sencence" class="headerlink" title="2. Sencence"></a>2. Sencence</h3><ul>
<li>She is tall and thin.</li>
<li>Her hair is shorter and grayer than before.</li>
<li>That tall, young, blond man drives a truck.</li>
<li><p>He’s very attractive.        </p>
</li>
<li><p>A: What does he look like?  </p>
</li>
<li>B: He is tall and middle-aged. He’s very good-looking.</li>
</ul>
<ul>
<li>A: What color are his eyes?</li>
<li>B: They’re brown.    They’re brown.</li>
</ul>
<ul>
<li>A: How tall is she?</li>
<li>B: She’s very tall.</li>
</ul>
<h2 id="2-Describing-relationships"><a href="#2-Describing-relationships" class="headerlink" title="2. Describing relationships"></a>2. Describing relationships</h2><ul>
<li>granddaughter</li>
<li>grandson</li>
<li>niece [niːs]</li>
<li>nephew [‘nɛfju]</li>
<li>cousin [‘kʌzn]</li>
</ul>
<p><img src="/images/english/ef-l4u2l2.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>P: So how many people are coming?</td>
<td></td>
</tr>
<tr>
<td>S: Well. there’s the three of us.</td>
<td></td>
</tr>
<tr>
<td>P: We’re inviting Jake to the party?</td>
<td></td>
</tr>
<tr>
<td>J: Invite me to the party? I am the party. Oh. Can my cousin come?</td>
<td></td>
</tr>
<tr>
<td>S: Jake, this is a party for Simon, to celebrate his new job. We’re only inviting family and friends.</td>
<td></td>
</tr>
<tr>
<td>J: My cousin is family.</td>
<td></td>
</tr>
<tr>
<td>S: Yeah, your family, not Simon’s.</td>
<td></td>
</tr>
<tr>
<td>P: It’s a small apartment. We can’t invite too many people.</td>
<td></td>
</tr>
<tr>
<td>S: I think we should invite Todd, and his wife, Angela.</td>
<td></td>
</tr>
<tr>
<td>J: Yeah, he’s nice, and she’s cute.</td>
<td></td>
</tr>
<tr>
<td>S: Jake !</td>
<td></td>
</tr>
<tr>
<td>J: What did I say ?</td>
<td></td>
</tr>
<tr>
<td>P: What’s your boss’s name? I can never remember.</td>
<td></td>
</tr>
<tr>
<td>S: Joan. We should definitely invite Joan. And her husband, Al.</td>
<td></td>
</tr>
<tr>
<td>P: And, of course, we need to invite Simon’s mom.</td>
<td></td>
</tr>
<tr>
<td>J: Definitely. She makes great cheesecake.</td>
<td></td>
</tr>
<tr>
<td>S: OK, Who else?</td>
<td></td>
</tr>
<tr>
<td>P: Who’s your friend in the office? The guy from Seattle.</td>
<td></td>
</tr>
<tr>
<td>S: Oh, Harry! I can’t believe I almost forgot him.</td>
<td></td>
</tr>
<tr>
<td>P: And does he have a girlfriend?</td>
<td></td>
</tr>
<tr>
<td>S: He’s married.</td>
<td></td>
</tr>
<tr>
<td>P: This list is getting bigger.</td>
<td></td>
</tr>
<tr>
<td>S: Shall we talk about food ?</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-1-Relationshops"><a href="#2-1-Relationshops" class="headerlink" title="2.1 Relationshops"></a>2.1 Relationshops</h3><ul>
<li>I’m meeting my girlfriend tonight.</li>
<li>James and I are business partners. [‘pɑrtnɚ] </li>
</ul>
<p><strong>gerund (verb + -ing)</strong></p>
<ul>
<li>We spend time watching movies. </li>
<li>I always have fun talking with him.</li>
</ul>
<ul>
<li>We have a hard time getting together.</li>
<li>She has trouble making money.</li>
<li>They often waste time fighting.</li>
</ul>
<table>
<thead>
<tr>
<th>D1</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: How are you and your brother doing?</td>
<td></td>
</tr>
<tr>
<td>B: We’re doing well, thanks. We spend time talking on the phone.</td>
<td></td>
</tr>
<tr>
<td>A: What do you and Sylvia do for fun?</td>
<td></td>
</tr>
<tr>
<td>B: Let’s see … We have a lot of fun playing tennis together.</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>What do you and your partner do for fun?</li>
<li>We spend time taking nice walks.</li>
<li>Are you having trouble?</li>
<li>What else do you enjoying doing?</li>
</ul>
<h2 id="3-Evaluating-employees"><a href="#3-Evaluating-employees" class="headerlink" title="3. Evaluating employees"></a>3. Evaluating employees</h2><ul>
<li>appraisal [əˈprezəl]  考研 / IELTS / TOEFL / BEC</li>
<li>hardworking</li>
<li>efficient</li>
<li>creative [kriˈetɪv]</li>
<li>getting better</li>
<li>could do better </li>
<li>disorganized</li>
</ul>
<p><img src="/images/english/ef-l4u2l3.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[TODD] Thanks for taking the time to meet me, Joan?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] No problem. What’s up?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Well, the <code>performance appraisals</code> are next week, and I want to talk with you about Sally and Harry.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Okay. Let’s start with Harry.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Well, Harry hasn’t been with us that long, but I can see that he’s very hardworking. I think he does a really good job.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] So do I. He did a great job on his last project … What was it?</td>
<td></td>
</tr>
<tr>
<td>[TODD] The Smith Electric [ɪ’lɛktrɪk] project.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] That’s right.     He <code>worked really well</code> with the team.</td>
<td></td>
</tr>
<tr>
<td>[TODD] A real team player. But there is one thing. He’s often late.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yeah! he is</td>
<td></td>
</tr>
<tr>
<td>[TODD] Often late. Now. Sally.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Sally … I like Sally, but, umm …</td>
<td></td>
</tr>
<tr>
<td>[TODD] She’s just not <code>efficient enough</code> sometimes. She needs to be more organized. I mean, I don’t think she’s lazy.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] <code>Neither do I</code>. She works hard. And she’s good in meetings.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yeah. And she’s also very helpful. Sometimes I have a computer problem and …</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yes, you do sometimes have computer problems.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Well, I like them both.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] So do I. You have two great people on your team.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="3-1-Senctence"><a href="#3-1-Senctence" class="headerlink" title="3.1 Senctence"></a>3.1 Senctence</h3><ul>
<li>Her project is late because she’s too disorganized.</li>
<li>She’s too negative. She thinks too much about problems.</li>
<li>He’s not creative enough to work in marketing.   </li>
</ul>
<p>Use neither do I to agree with an opinion expressed by I don’t think that, or any other opinion expressed in the negative.</p>
<ul>
<li>She’s so disorganized. &gt; She needs to be more organized.</li>
<li>He’s too negative. &gt; He should be more positive.</li>
</ul>
<h2 id="4-giving-a-recommendation"><a href="#4-giving-a-recommendation" class="headerlink" title="4. giving a recommendation"></a>4. giving a recommendation</h2><ul>
<li>brochure  [‘brəʊʃə]</li>
</ul>
<p><img src="/images/english/ef-l4u2l4.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[JOAN] Oh, Martina’s letter of recommendation. When is she going to New York?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Next Friday. Her husband’s already there.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] That soon. I’m going to miss her.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yeah, so am I.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Last week I asked her to make a new company <code>brochure [bro&#39;ʃʊr]</code>. It only took her two days.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Really? I should put that in. Martina works quickly and efficiently …</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yeah. The brochure was really beautiful. She’s so creative. And her team really loves her.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Creative … Works well with a team. What else?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Well, she always wrote our marketing copy. She was really good at it.</td>
<td></td>
</tr>
<tr>
<td>[TODD] That’s right! Who’s going to do that now?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] <code>Why don’t you ask Sally? She’s smart. She can learn it pretty quickly, right?</code></td>
<td></td>
</tr>
<tr>
<td>[TODD] Not that quickly. But, yeah, she could learn it.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Great. So do you have enough for your letter?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Umm … I think so. Thanks.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Sure.</td>
<td></td>
</tr>
<tr>
<td>[TODD] I had the pleasure to work with Martina for three years, and I highly recommend her.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-Senctence"><a href="#2-Senctence" class="headerlink" title="2. Senctence"></a>2. Senctence</h3><ul>
<li>She was always organized.  </li>
<li>She can probably learn that in one or two days.</li>
<li>The project only took her one day.</li>
</ul>
<ul>
<li>The brochure was really beautiful.   </li>
<li>She’s so creative.</li>
<li>She can learn that pretty quickly.</li>
</ul>
<h3 id="3-So-amp-Such"><a href="#3-So-amp-Such" class="headerlink" title="3. So &amp; Such"></a>3. So &amp; Such</h3><p>Use so + adjective or so + adverb to emphasize a personal quality.</p>
<ul>
<li>Kyle is so disorganized.      </li>
<li>She works so quickly.       </li>
</ul>
<p>Use such + noun to emphasize a personal quality.</p>
<ul>
<li>Debra is such a team player.  </li>
<li>She shows such creativity.  </li>
<li>Oscar is such a hard worker.  </li>
</ul>
<table>
<thead>
<tr>
<th>Dialog So Such</th>
</tr>
</thead>
<tbody>
<tr>
<td>FRED: You’re already done with the Franco project?</td>
<td></td>
</tr>
<tr>
<td>LOUISE: Fantastic, right? It only  took us two weeks.</td>
<td></td>
</tr>
<tr>
<td>FRED: You finished that soon  ? Wow. You work so well  with your team.</td>
<td></td>
</tr>
<tr>
<td>LOUISE: Thanks! It’s such  a hardworking team.</td>
<td></td>
</tr>
<tr>
<td>FRED: Yeah. Liza’s great. She’s such a creative designer.</td>
<td></td>
</tr>
<tr>
<td>LOUISE: Yes, and Tom’s so efficient. Honestly, Jayden’s really helpful, too</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="4-Writing"><a href="#4-Writing" class="headerlink" title="4. Writing"></a>4. Writing</h3><p>Sep 21,2016</p>
<p>To whom it may concern:</p>
<p>I am writing to highly recommend Jim. I worked with Jim for 2 years at LLQ company.<br>Jim was product manager of R&amp;D. He was always hardworking, efficient and well-organized. Please feel free to contact me about Jim.</p>
<p>Sincerely<br>Blair</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera 6 - Advice for Applying Machine Learning *]]></title>
      <url>http://iequa.com/2017/05/24/ml-coursera-ng-w6-Advice-for-Applying-Machine-Learning/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>


<h2 id="1-Evaluating-a-Hypothesis"><a href="#1-Evaluating-a-Hypothesis" class="headerlink" title="1. Evaluating a Hypothesis"></a>1. Evaluating a Hypothesis</h2><p>Once we have done some <strong>trouble shooting</strong> for errors in our predictions by:</p>
<ul>
<li>Getting more training examples</li>
<li>Trying smaller sets of features</li>
<li>Trying additional features</li>
<li>Trying polynomial features</li>
<li>Increasing or decreasing $λ$</li>
</ul>
<p>We can move on to evaluate our new hypothesis.</p>
<p>A hypothesis may have a low error for the training examples but still be inaccurate (because of overfitting). Thus, to evaluate a hypothesis, given a dataset of training examples, we can split up the data into two sets: a training set and a test set. Typically, the training set consists of 70% of your data and the test set is the remaining 30%.</p>
<p>The new procedure using these two sets is then:</p>
<ol>
<li>Learn $\Theta$ and minimize $J_{train}(\Theta)$ using the training set</li>
<li>Compute the test set error $J_{test}(\Theta)$</li>
</ol>
<p><strong>The test set error</strong></p>
<ol>
<li>For linear regression: $J_{test}(\Theta) = \dfrac{1}{2m_{test}} \sum_{i=1}^{m_{test}}(h_\Theta(x^{(i)}_{test}) - y^{(i)}_{test})^2$</li>
<li>For classification ~ Misclassification error (aka 0/1 misclassification error):</li>
</ol>
<p>$$<br>err(h_\Theta(x),y) = \begin{matrix} 1 &amp; \mbox{if } h_\Theta(x) \geq 0.5\ and\ y = 0\ or\ h_\Theta(x) &lt; 0.5\ and\ y = 1\newline 0 &amp; \mbox otherwise \end{matrix}<br>$$</p>
<p>This gives us a binary 0 or 1 error result based on a misclassification. The average test error for the test set is:</p>
<p>$$<br>\text{Test Error} = \dfrac{1}{m_{test}} \sum^{m_{test}}_{i=1} err(h_\Theta(x^{(i)}_{test}), y^{(i)}_{test})<br>$$</p>
<p>This gives us the proportion of the test data that was misclassified.</p>
<blockquote>
<p>inaccurate[ɪn’ækjərət]、procedure [prə’sidʒɚ] 比例<br>remaining [ri’men..]、 Misclassification [‘mis,klæsifi’keiʃən]<br>validation [,vælə’deʃən] 确认，批准</p>
</blockquote>
<h2 id="2-Model-Selection"><a href="#2-Model-Selection" class="headerlink" title="2. Model Selection"></a>2. Model Selection</h2><p><strong>Train/Validtion/Test Sets</strong></p>
<p>Just because a learning algorithm fits a training set well, that does not mean it is a good hypothesis. It could over fit and as a result your predictions on the test set would be poor. The error of your hypothesis as measured on the data set with which you trained the parameters will be lower than the error on any other data set.</p>
<p>Given many models with different polynomial degrees, we can use a systematic approach to identify the ‘best’ function. In order to choose the model of your hypothesis, you can test each degree of polynomial and look at the error result.</p>
<p>One way to break down our dataset into the three sets is:</p>
<ul>
<li><font color="blue"> Training set: 60%</font></li>
<li><font color="blue"> Cross validation set: 20%</font></li>
<li><font color="blue"> Test set: 20%</font>

</li>
</ul>
<p>We can now calculate three separate error values for the three different sets using the following method:</p>
<ol>
<li>Optimize the parameters in Θ using the training set for each polynomial degree.</li>
<li>Find the polynomial degree d with the least error using the cross validation set.</li>
<li>Estimate the generalization error using the test set with $J_{test}(\Theta^{(d)})$, (d = theta from polynomial with lower error);</li>
</ol>
<blockquote>
<p>This way, the degree of the polynomial d has not been trained using the test set.</p>
</blockquote>
<h2 id="3-Diagnosing-Bias-vs-Variance"><a href="#3-Diagnosing-Bias-vs-Variance" class="headerlink" title="3. Diagnosing Bias vs. Variance"></a>3. Diagnosing Bias vs. Variance</h2><p>In this section we examine the relationship between the degree of the polynomial d and the underfitting or overfitting of our hypothesis.</p>
<ul>
<li>We need to distinguish whether <code>bias</code> or <code>variance</code> is the problem contributing to bad predictions.</li>
<li>High bias is underfitting and high variance is overfitting. Ideally, we need to find a golden mean between these two.</li>
</ul>
<p>The training error will tend to <code>decrease</code> as we increase the degree d of the polynomial.</p>
<p>At the same time, the cross validation error will tend to decrease as we increase d up to a point, and then it will increase as d is increased, forming a convex curve.</p>
<p><strong>High bias (underfitting)</strong>: both $J_{train}(\Theta)$ and $J_{CV}(\Theta)$ will be high. Also, $J_{CV}(\Theta) \approx J_{train}(\Theta)$.</p>
<p><strong>High variance (overfitting)</strong>: $J_{train}(\Theta)$ will be low and $J_{CV}(\Theta)$ will be much greater than $J_{train}(\Theta)$.</p>
<p>The is summarized in the figure below:</p>
<p><img src="/images/ml/ml-ng-w6-01-01.png" alt=""></p>
<h2 id="4-Regularization-Bias-Variance"><a href="#4-Regularization-Bias-Variance" class="headerlink" title="4. Regularization Bias/Variance"></a>4. Regularization Bias/Variance</h2><p>Note: [The regularization term below and through out the video should be $\frac \lambda {2m} \sum_{j=1}^n \theta_j ^2$ and NOT $\frac \lambda {2m} \sum_{j=1}^m \theta_j ^2$]</p>
<p><img src="/images/ml/ml-ng-w6-01-02.png" alt=""></p>
<p>In the figure above, we see that as λ increases, our fit becomes more rigid. On the other hand, as λ approaches 0, we tend to over overfit the data. So how do we choose our parameter λ to get it ‘just right’ ? In order to choose the model and the regularization term λ, we need to:</p>
<ol>
<li>Create a list of lambdas (i.e. λ∈{0,0.01,0.02,0.04,0.08,0.16,0.32,0.64,1.28,2.56,5.12,10.24});</li>
<li>Create a set of models with different degrees or any other variants.</li>
<li>Iterate through the λs and for each λ go through all the models to learn some Θ.</li>
<li>Compute the cross validation error using the learned Θ (computed with λ) on the $J_{CV}(\Theta)$ <strong>without</strong> regularization or λ = 0. <code>？？</code></li>
<li>Select the best combo that produces the lowest error on the cross validation set.</li>
<li>Using the best combo Θ and λ, apply it on $J_{test}(\Theta)$ to see if it has a good generalization of the problem.</li>
</ol>
<h2 id="5-Learning-Curves"><a href="#5-Learning-Curves" class="headerlink" title="5. Learning Curves"></a>5. Learning Curves</h2><p>Training an algorithm on a very few number of data points (such as 1, 2 or 3) will easily have 0 errors because we can always find a quadratic curve that touches exactly those number of points. Hence:</p>
<ul>
<li>As the training set gets larger, the error for a quadratic function increases.</li>
<li>The error value will plateau out after a certain m, or training set size.</li>
</ul>
<p><strong>Experiencing high bias:</strong></p>
<p>Low training set size: causes $J_{train}(\Theta)$ to be low and $J_{CV}(\Theta)$ to be high.</p>
<p>Large training set size: causes both $J_{train}(\Theta)$ and $J_{CV}(\Theta)$  to be high with $J_{train}(\Theta)$≈$J_{CV}(\Theta)$.</p>
<p>If a learning algorithm is suffering from high bias, getting more training data will not (by itself) help much.</p>
<p><img src="/images/ml/ml-ng-w6-01-03.png" alt=""></p>
<p>me : 随着train sets的增加，高偏差会降低，因为更容易找到合适的 Hypothesis 去拟合数据。所以CV error下降。</p>
<p><strong>Experiencing high variance:</strong></p>
<p><strong>Low training set size:</strong> $J_{train}(\Theta)$ will be low and $J_{CV}(\Theta)$ will be high.</p>
<p><strong>Large training set size:</strong> $J_{train}(\Theta)$ increases with training set size and $J_{CV}(\Theta)$ continues to decrease without leveling off. Also, $J_{train}(\Theta)$ &lt; $J_{CV}(\Theta)$ but the difference between them remains significant.</p>
<p>If a learning algorithm is suffering from high variance, getting more training data is likely to help.</p>
<p><img src="/images/ml/ml-ng-w6-01-04.png" alt=""></p>
<p>me : 随着 train sets 的增加，overfiting 越来越不容易。造成 CV error 下降。</p>
<blockquote>
<p>plateau out / leveling off 达到平稳状态<br><code>test error will be CV error on picture.</code></p>
</blockquote>
<h2 id="6-What-to-Do-Next-Revisited"><a href="#6-What-to-Do-Next-Revisited" class="headerlink" title="6. What to Do Next Revisited"></a>6. What to Do Next Revisited</h2><p><em>*Our decision process can be broken down as follows</em>:</p>
<table>
<thead>
<tr>
<th>Function</th>
<th>Result</th>
</tr>
</thead>
<tbody>
<tr>
<td>Getting more training examples</td>
<td>Fixes high variance</td>
</tr>
<tr>
<td>Trying smaller sets of features</td>
<td>Fixes high variance</td>
</tr>
<tr>
<td>Increasing λ</td>
<td>Fixes high variance</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>Adding features</td>
<td>Fixes high bias</td>
</tr>
<tr>
<td>Adding polynomial features</td>
<td>Fixes high bias</td>
</tr>
<tr>
<td>Decreasing λ</td>
<td>Fixes high bias</td>
</tr>
</tbody>
</table>
<h3 id="6-1-Diagnosing-NN"><a href="#6-1-Diagnosing-NN" class="headerlink" title="6.1 Diagnosing NN"></a>6.1 Diagnosing NN</h3><ul>
<li><p>A neural network with fewer parameters is <strong>prone to underfitting</strong>. It is also <strong>computationally cheaper</strong>.</p>
</li>
<li><p>A large neural network with more parameters is <strong>prone to overfitting</strong>. It is also <strong>computationally expensive</strong>. </p>
</li>
</ul>
<p>In this case you can use regularization (increase λ) to address the overfitting.</p>
<h3 id="6-2-Model-Complexity-Effects"><a href="#6-2-Model-Complexity-Effects" class="headerlink" title="6.2 Model Complexity Effects"></a>6.2 Model Complexity Effects</h3><ul>
<li><p>Lower-order polynomials (low model complexity) have high bias and low variance. In this case, the model fits poorly consistently.</p>
</li>
<li><p>Higher-order polynomials (high model complexity) fit the training data extremely well and the test data extremely poorly. These have low bias on the training data, but very high variance.</p>
</li>
<li><p>In reality, we would want to choose a model somewhere in between, that can generalize well but also fits the data reasonably well.</p>
</li>
</ul>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><ul>
<li><a href="https://www.coursera.org/learn/machine-learning/home/week/6" target="_blank" rel="external">coursera 6 @ng</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera 6 - Advice for Applying Machine Learning *]]></title>
      <url>http://iequa.com/2017/05/24/ml-coursera-ng-w6-Advice-for-Applying-Machine-Learning%20copy/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>


<h2 id="1-Evaluating-a-Hypothesis"><a href="#1-Evaluating-a-Hypothesis" class="headerlink" title="1. Evaluating a Hypothesis"></a>1. Evaluating a Hypothesis</h2><p>Once we have done some <strong>trouble shooting</strong> for errors in our predictions by:</p>
<ul>
<li>Getting more training examples</li>
<li>Trying smaller sets of features</li>
<li>Trying additional features</li>
<li>Trying polynomial features</li>
<li>Increasing or decreasing $λ$</li>
</ul>
<p>We can move on to evaluate our new hypothesis.</p>
<p>A hypothesis may have a low error for the training examples but still be inaccurate (because of overfitting). Thus, to evaluate a hypothesis, given a dataset of training examples, we can split up the data into two sets: a training set and a test set. Typically, the training set consists of 70% of your data and the test set is the remaining 30%.</p>
<p>The new procedure using these two sets is then:</p>
<ol>
<li>Learn $\Theta$ and minimize $J_{train}(\Theta)$ using the training set</li>
<li>Compute the test set error $J_{test}(\Theta)$</li>
</ol>
<p><strong>The test set error</strong></p>
<ol>
<li>For linear regression: $J_{test}(\Theta) = \dfrac{1}{2m_{test}} \sum_{i=1}^{m_{test}}(h_\Theta(x^{(i)}_{test}) - y^{(i)}_{test})^2$</li>
<li>For classification ~ Misclassification error (aka 0/1 misclassification error):</li>
</ol>
<p>$$<br>err(h_\Theta(x),y) = \begin{matrix} 1 &amp; \mbox{if } h_\Theta(x) \geq 0.5\ and\ y = 0\ or\ h_\Theta(x) &lt; 0.5\ and\ y = 1\newline 0 &amp; \mbox otherwise \end{matrix}<br>$$</p>
<p>This gives us a binary 0 or 1 error result based on a misclassification. The average test error for the test set is:</p>
<p>$$<br>\text{Test Error} = \dfrac{1}{m_{test}} \sum^{m_{test}}_{i=1} err(h_\Theta(x^{(i)}_{test}), y^{(i)}_{test})<br>$$</p>
<p>This gives us the proportion of the test data that was misclassified.</p>
<blockquote>
<p>inaccurate[ɪn’ækjərət]、procedure [prə’sidʒɚ] 比例<br>remaining [ri’men..]、 Misclassification [‘mis,klæsifi’keiʃən]<br>validation [,vælə’deʃən] 确认，批准</p>
</blockquote>
<h2 id="2-Model-Selection"><a href="#2-Model-Selection" class="headerlink" title="2. Model Selection"></a>2. Model Selection</h2><p><strong>Train/Validtion/Test Sets</strong></p>
<p>Just because a learning algorithm fits a training set well, that does not mean it is a good hypothesis. It could over fit and as a result your predictions on the test set would be poor. The error of your hypothesis as measured on the data set with which you trained the parameters will be lower than the error on any other data set.</p>
<p>Given many models with different polynomial degrees, we can use a systematic approach to identify the ‘best’ function. In order to choose the model of your hypothesis, you can test each degree of polynomial and look at the error result.</p>
<p>One way to break down our dataset into the three sets is:</p>
<ul>
<li><font color="blue"> Training set: 60%</font></li>
<li><font color="blue"> Cross validation set: 20%</font></li>
<li><font color="blue"> Test set: 20%</font>

</li>
</ul>
<p>We can now calculate three separate error values for the three different sets using the following method:</p>
<ol>
<li>Optimize the parameters in Θ using the training set for each polynomial degree.</li>
<li>Find the polynomial degree d with the least error using the cross validation set.</li>
<li>Estimate the generalization error using the test set with $J_{test}(\Theta^{(d)})$, (d = theta from polynomial with lower error);</li>
</ol>
<blockquote>
<p>This way, the degree of the polynomial d has not been trained using the test set.</p>
</blockquote>
<h2 id="3-Diagnosing-Bias-vs-Variance"><a href="#3-Diagnosing-Bias-vs-Variance" class="headerlink" title="3. Diagnosing Bias vs. Variance"></a>3. Diagnosing Bias vs. Variance</h2><p>In this section we examine the relationship between the degree of the polynomial d and the underfitting or overfitting of our hypothesis.</p>
<ul>
<li>We need to distinguish whether <code>bias</code> or <code>variance</code> is the problem contributing to bad predictions.</li>
<li>High bias is underfitting and high variance is overfitting. Ideally, we need to find a golden mean between these two.</li>
</ul>
<p>The training error will tend to <code>decrease</code> as we increase the degree d of the polynomial.</p>
<p>At the same time, the cross validation error will tend to decrease as we increase d up to a point, and then it will increase as d is increased, forming a convex curve.</p>
<p><strong>High bias (underfitting)</strong>: both $J_{train}(\Theta)$ and $J_{CV}(\Theta)$ will be high. Also, $J_{CV}(\Theta) \approx J_{train}(\Theta)$.</p>
<p><strong>High variance (overfitting)</strong>: $J_{train}(\Theta)$ will be low and $J_{CV}(\Theta)$ will be much greater than $J_{train}(\Theta)$.</p>
<p>The is summarized in the figure below:</p>
<p><img src="/images/ml/ml-ng-w6-01-01.png" alt=""></p>
<h2 id="4-Regularization-Bias-Variance"><a href="#4-Regularization-Bias-Variance" class="headerlink" title="4. Regularization Bias/Variance"></a>4. Regularization Bias/Variance</h2><p>Note: [The regularization term below and through out the video should be $\frac \lambda {2m} \sum_{j=1}^n \theta_j ^2$ and NOT $\frac \lambda {2m} \sum_{j=1}^m \theta_j ^2$]</p>
<p><img src="/images/ml/ml-ng-w6-01-02.png" alt=""></p>
<p>In the figure above, we see that as λ increases, our fit becomes more rigid. On the other hand, as λ approaches 0, we tend to over overfit the data. So how do we choose our parameter λ to get it ‘just right’ ? In order to choose the model and the regularization term λ, we need to:</p>
<ol>
<li>Create a list of lambdas (i.e. λ∈{0,0.01,0.02,0.04,0.08,0.16,0.32,0.64,1.28,2.56,5.12,10.24});</li>
<li>Create a set of models with different degrees or any other variants.</li>
<li>Iterate through the λs and for each λ go through all the models to learn some Θ.</li>
<li>Compute the cross validation error using the learned Θ (computed with λ) on the $J_{CV}(\Theta)$ <strong>without</strong> regularization or λ = 0. <code>？？</code></li>
<li>Select the best combo that produces the lowest error on the cross validation set.</li>
<li>Using the best combo Θ and λ, apply it on $J_{test}(\Theta)$ to see if it has a good generalization of the problem.</li>
</ol>
<h2 id="5-Learning-Curves"><a href="#5-Learning-Curves" class="headerlink" title="5. Learning Curves"></a>5. Learning Curves</h2><p>Training an algorithm on a very few number of data points (such as 1, 2 or 3) will easily have 0 errors because we can always find a quadratic curve that touches exactly those number of points. Hence:</p>
<ul>
<li>As the training set gets larger, the error for a quadratic function increases.</li>
<li>The error value will plateau out after a certain m, or training set size.</li>
</ul>
<p><strong>Experiencing high bias:</strong></p>
<p>Low training set size: causes $J_{train}(\Theta)$ to be low and $J_{CV}(\Theta)$ to be high.</p>
<p>Large training set size: causes both $J_{train}(\Theta)$ and $J_{CV}(\Theta)$  to be high with $J_{train}(\Theta)$≈$J_{CV}(\Theta)$.</p>
<p>If a learning algorithm is suffering from high bias, getting more training data will not (by itself) help much.</p>
<p><img src="/images/ml/ml-ng-w6-01-03.png" alt=""></p>
<p>me : 随着train sets的增加，高偏差会降低，因为更容易找到合适的 Hypothesis 去拟合数据。所以CV error下降。</p>
<p><strong>Experiencing high variance:</strong></p>
<p><strong>Low training set size:</strong> $J_{train}(\Theta)$ will be low and $J_{CV}(\Theta)$ will be high.</p>
<p><strong>Large training set size:</strong> $J_{train}(\Theta)$ increases with training set size and $J_{CV}(\Theta)$ continues to decrease without leveling off. Also, $J_{train}(\Theta)$ &lt; $J_{CV}(\Theta)$ but the difference between them remains significant.</p>
<p>If a learning algorithm is suffering from high variance, getting more training data is likely to help.</p>
<p><img src="/images/ml/ml-ng-w6-01-04.png" alt=""></p>
<p>me : 随着 train sets 的增加，overfiting 越来越不容易。造成 CV error 下降。</p>
<blockquote>
<p>plateau out / leveling off 达到平稳状态<br><code>test error will be CV error on picture.</code></p>
</blockquote>
<h2 id="6-What-to-Do-Next-Revisited"><a href="#6-What-to-Do-Next-Revisited" class="headerlink" title="6. What to Do Next Revisited"></a>6. What to Do Next Revisited</h2><p><em>*Our decision process can be broken down as follows</em>:</p>
<table>
<thead>
<tr>
<th>Function</th>
<th>Result</th>
</tr>
</thead>
<tbody>
<tr>
<td>Getting more training examples</td>
<td>Fixes high variance</td>
</tr>
<tr>
<td>Trying smaller sets of features</td>
<td>Fixes high variance</td>
</tr>
<tr>
<td>Increasing λ</td>
<td>Fixes high variance</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>Adding features</td>
<td>Fixes high bias</td>
</tr>
<tr>
<td>Adding polynomial features</td>
<td>Fixes high bias</td>
</tr>
<tr>
<td>Decreasing λ</td>
<td>Fixes high bias</td>
</tr>
</tbody>
</table>
<h3 id="6-1-Diagnosing-NN"><a href="#6-1-Diagnosing-NN" class="headerlink" title="6.1 Diagnosing NN"></a>6.1 Diagnosing NN</h3><ul>
<li><p>A neural network with fewer parameters is <strong>prone to underfitting</strong>. It is also <strong>computationally cheaper</strong>.</p>
</li>
<li><p>A large neural network with more parameters is <strong>prone to overfitting</strong>. It is also <strong>computationally expensive</strong>. </p>
</li>
</ul>
<p>In this case you can use regularization (increase λ) to address the overfitting.</p>
<h3 id="6-2-Model-Complexity-Effects"><a href="#6-2-Model-Complexity-Effects" class="headerlink" title="6.2 Model Complexity Effects"></a>6.2 Model Complexity Effects</h3><ul>
<li><p>Lower-order polynomials (low model complexity) have high bias and low variance. In this case, the model fits poorly consistently.</p>
</li>
<li><p>Higher-order polynomials (high model complexity) fit the training data extremely well and the test data extremely poorly. These have low bias on the training data, but very high variance.</p>
</li>
<li><p>In reality, we would want to choose a model somewhere in between, that can generalize well but also fits the data reasonably well.</p>
</li>
</ul>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><ul>
<li><a href="https://www.coursera.org/learn/machine-learning/home/week/6" target="_blank" rel="external">coursera 6 @ng</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EF Entertainment]]></title>
      <url>http://iequa.com/2017/05/24/ef-l4u1-Entertainment/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
</style>

<h2 id="1-describing-entertainment-options"><a href="#1-describing-entertainment-options" class="headerlink" title="1. describing entertainment options"></a>1. describing entertainment options</h2><ul>
<li>a concert</li>
<li>a musical</li>
<li>a lecture</li>
<li>a play</li>
</ul>
<p><img src="/images/english/ef-l4u1l1.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>S: Hey, Joe. <code>What are we going to do</code> tonight?</td>
<td></td>
</tr>
<tr>
<td>J: I know! Let’s go to that play downtown.</td>
<td></td>
</tr>
<tr>
<td>S: Nah, it’s too far.</td>
<td></td>
</tr>
<tr>
<td>J: Well, <code>what else is going on</code>?</td>
<td></td>
</tr>
<tr>
<td>S: Well, there’s a new movie at the theater. It’s ‘The Big Cheese’ with May Jackson.</td>
<td></td>
</tr>
<tr>
<td>J: Or we could go to the football game.</td>
<td></td>
</tr>
<tr>
<td>S: I do not enjoy watching football games.</td>
<td></td>
</tr>
<tr>
<td>J: Oh, yeah. So the movie sounds good.</td>
<td></td>
</tr>
<tr>
<td>S: Great!</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="1-1-gerunds-amp-infinitives"><a href="#1-1-gerunds-amp-infinitives" class="headerlink" title="1.1 gerunds &amp; infinitives"></a>1.1 gerunds &amp; infinitives</h3><ul>
<li>Frank enjoys cooking dinner for Lilei</li>
<li>Blair <code>plans to eat</code> out.</li>
<li>We’re <code>planning to go to</code> the soccer game. [‘sɒkə]</li>
<li>I need to get some money for the concert.</li>
<li>Bluce Lee <code>kept playing</code> his guitar until midnight</li>
<li>We’re <code>thinking about</code> going to a concert.</li>
</ul>
<table>
<thead>
<tr>
<th>gerunds &amp; infinitives</th>
<th>sentence</th>
</tr>
</thead>
<tbody>
<tr>
<td>like</td>
<td>I like going to musicals.</td>
</tr>
<tr>
<td>-</td>
<td>I like to go to musicals.     </td>
</tr>
<tr>
<td>love</td>
<td>June loves eating in restaurants.</td>
</tr>
<tr>
<td>-</td>
<td>June loves to eat in restaurants.     </td>
</tr>
<tr>
<td>begin</td>
<td>It began to snow.</td>
</tr>
<tr>
<td>-</td>
<td>It began snowing.</td>
</tr>
</tbody>
</table>
<h3 id="1-2-know-how-good-at"><a href="#1-2-know-how-good-at" class="headerlink" title="1.2 know how / good at"></a>1.2 know how / good at</h3><ul>
<li>I don’t know how to swim. </li>
<li>I’m terrible at driving.</li>
</ul>
<h3 id="1-3-describing-options"><a href="#1-3-describing-options" class="headerlink" title="1.3 describing options"></a>1.3 describing options</h3><ul>
<li>What do you want to do?  </li>
<li>What are we going to do tonight?</li>
<li>What’s going on?     </li>
</ul>
<ul>
<li>There are some great movies and plays going on this week.</li>
<li>You could go swimming or you could go hiking.  </li>
</ul>
<ul>
<li>What else is there to do?</li>
<li>What else is going on?</li>
</ul>
<h2 id="2-talking-about-upcoming-events"><a href="#2-talking-about-upcoming-events" class="headerlink" title="2. talking about upcoming events"></a>2. talking about upcoming events</h2><ul>
<li>bar</li>
<li>stadium [‘steɪdɪəm]</li>
<li>aquarium [ə’kweərɪəm]</li>
<li>concert hall</li>
<li>auditorium  [ɔːdɪ’tɔːrɪəm]</li>
<li>Theater  [‘θɪətə]</li>
<li>nightclub</li>
<li>check it out</li>
</ul>
<p><img src="/images/english/ef-l4u1l2.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[TODD] Hi, Could you <code>do me a favor</code>?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Sure, What do you need?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Well, Angela and I want to do <code>something special</code> this weekend. It’s our 20th <code>wedding anniversary</code>.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Wow! Twenty years together, Congratulations.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Thanks, Could you help me <code>find something interesting</code> ?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Springdale.com has all the events listed for the city.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] It covers the concert hall, the auditorium … , You really should check it out.</td>
<td></td>
</tr>
<tr>
<td>[TODD] That’s a good idea.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] There’s an incredible same band at the Blue Banana.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] That’s the <code>hottest nightclub</code> in town right now. Do you and Angela like to dance?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yes! But, Like a classical concert. Beethoven. Or Mozart.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Here is a play,  How about Shakespeare? It’s ‘Hamlet’.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] It’s in the Main Street <code>Theater</code>[ˈθi:ətər] on Saturday.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Angela loves plays. Thank you so much!</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="1-1-Prepositions-of-time-and-place"><a href="#1-1-Prepositions-of-time-and-place" class="headerlink" title="1.1 Prepositions of time and place"></a>1.1 Prepositions of time and place</h3><p><strong><code>on</code> for smaller areas, and for days and dates.</strong></p>
<ul>
<li>I live on Main Street.</li>
<li>The lecture is on Monday.    </li>
<li>My birthday is on April 17th.</li>
</ul>
<p><strong><code>at</code> for addresses</strong></p>
<ul>
<li>His house is at 465 Pine Street.</li>
<li>The lecture is at the auditorium.</li>
<li>At night, I like to read.</li>
</ul>
<p><strong><code>in</code></strong></p>
<ul>
<li>My brother is coming in February.</li>
<li>I lived in France for one year.</li>
</ul>
<h3 id="1-2-Asking-for-help"><a href="#1-2-Asking-for-help" class="headerlink" title="1.2 Asking for help"></a>1.2 Asking for help</h3><ul>
<li>Could you do me a favor? </li>
<li>I’m sorry, but I’m really busy right now.</li>
<li>The party will start at 10 in the morning and continue until 7 in the evening</li>
</ul>
<h3 id="1-3-Writing"><a href="#1-3-Writing" class="headerlink" title="1.3 Writing"></a>1.3 Writing</h3><p>This Saturday night, there is going to be a english lecture, ‘two minutes’. June is going to talk about “the important of time”. The lecture starts at 8 p.m. It’s at the Auditorium. Admission is free. I like learning english, so I am thinking about going.</p>
<h2 id="3-planning-a-night-out-with-friends"><a href="#3-planning-a-night-out-with-friends" class="headerlink" title="3. planning a night out with friends"></a>3. planning a night out with friends</h2><h3 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h3><ul>
<li>boring</li>
<li>loud</li>
<li>relaxing</li>
<li>incredible</li>
<li>horror [‘hɒrə]</li>
<li>romance [ro’mæns]</li>
<li>drama  [ˈdrɑmə] </li>
<li>comedy [‘kɑmədi]</li>
</ul>
<p><img src="/images/english/ef-l4u1l3.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>M: Why don’t we go to that new sports bar?</td>
<td></td>
</tr>
<tr>
<td>F: ~</td>
<td></td>
</tr>
<tr>
<td>M: Yup, There is a football game</td>
<td></td>
</tr>
<tr>
<td>F: I hate the sports bar</td>
<td></td>
</tr>
<tr>
<td>M: Really, why?</td>
<td></td>
</tr>
<tr>
<td>F: Because that is boring, the music is so loud and diffcult convasition.</td>
<td></td>
</tr>
<tr>
<td>F: How about a quiet, relaxing dinner?</td>
<td></td>
</tr>
<tr>
<td>M: We do that a name</td>
<td></td>
</tr>
<tr>
<td>F: OK ! you are right, Let’s do something different.</td>
<td></td>
</tr>
<tr>
<td>M: I know, Let’s go to the movie. the New York</td>
<td></td>
</tr>
<tr>
<td>F: The horror  movie, I don’t think so, How about a romance, or a drama</td>
<td></td>
</tr>
<tr>
<td>M: Oh, look, really, It is incredible !</td>
<td></td>
</tr>
<tr>
<td>F: I love it. Can you buy the ticket ?</td>
<td></td>
</tr>
<tr>
<td>M: Sure, Thanks</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-Adjectives-for-events"><a href="#2-Adjectives-for-events" class="headerlink" title="2. Adjectives for events"></a>2. Adjectives for events</h3><ul>
<li>interesting           </li>
<li>boring</li>
<li>relaxing</li>
<li>exciting</li>
<li>surprising</li>
<li>fun</li>
<li>incredible</li>
<li>loud</li>
<li>quiet</li>
<li>wonderful</li>
<li>terrible</li>
</ul>
<h3 id="3-New-York-text"><a href="#3-New-York-text" class="headerlink" title="3. New York, text"></a>3. New York, text</h3><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>J: Hi, Ann! Hey, how was your vacation? You went to New York, right?</td>
<td></td>
</tr>
<tr>
<td>A: Yeah.</td>
<td></td>
</tr>
<tr>
<td>J: How was it?</td>
<td></td>
</tr>
<tr>
<td>A: Oh, I love New York! It’s a really exciting  city.</td>
<td></td>
</tr>
<tr>
<td>J: Nah. It’s too big and too loud  for me. So, what did you do in New York?</td>
<td></td>
</tr>
<tr>
<td>A: Well, we went to a musical. That was fun  ! And we ate at some really interesting restaurants. The food was delicious.</td>
<td></td>
</tr>
<tr>
<td>J: It sounds wonderful.</td>
<td></td>
</tr>
<tr>
<td>A: And the Museum of Modern Art was incredible !</td>
<td></td>
</tr>
<tr>
<td>J: That’s great! Well, I have a meeting. See you later.</td>
<td></td>
</tr>
<tr>
<td>A: Bye.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="4-‘Why’-and-‘because’"><a href="#4-‘Why’-and-‘because’" class="headerlink" title="4. ‘Why’ and ‘because’"></a>4. ‘Why’ and ‘because’</h3><ul>
<li>Why did you go to Paris?</li>
<li>I went to Paris because it’s beautiful!</li>
</ul>
<ul>
<li>Why is Frank angry?</li>
<li>I go to that restaurant     because it’s cheap, and the food is delicious.  </li>
</ul>
<h3 id="5-Suggesting-activities"><a href="#5-Suggesting-activities" class="headerlink" title="5. Suggesting activities"></a>5. Suggesting activities</h3><p>‘Let’s’ + base form of verb</p>
<ul>
<li>Let’s go to the dance performance. </li>
</ul>
<p>‘How about’ or ‘what about’ + verb + ‘-ing’</p>
<ul>
<li>What about meeting some friends?</li>
</ul>
<p>‘Could’ + base form of verb</p>
<ul>
<li>We could go out for a drink at Harry’s Bar.</li>
</ul>
<p>‘Why don’t we’ + base form of verb</p>
<ul>
<li>Why don’t we try a new restaurant?</li>
</ul>
<h2 id="4-going-to-the-movies"><a href="#4-going-to-the-movies" class="headerlink" title="4. going to the movies"></a>4. going to the movies</h2><h3 id="1-Vocabulary-1"><a href="#1-Vocabulary-1" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h3><ul>
<li>The 8 o’clock show’s sold out now.</li>
<li>There are still some tickets left</li>
</ul>
<p><img src="/images/english/ef-l4u1l4.png" alt=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>S: Jake? Jake! It’s 7 o’clock! The movie starts at 8!</td>
<td></td>
</tr>
<tr>
<td>J: Okay, Okay. I am ready.</td>
<td></td>
</tr>
<tr>
<td>S: Did you book the tickets?</td>
<td></td>
</tr>
<tr>
<td>J: The tickets.</td>
<td></td>
</tr>
<tr>
<td>S: The tickets you book them. right?</td>
<td></td>
</tr>
<tr>
<td>J: Ohhh.</td>
<td></td>
</tr>
<tr>
<td>S: I can’t believe it. How Could you forget to book the tickets? The 8 o’clock show is sold out now.</td>
<td></td>
</tr>
<tr>
<td>J: Sally, I’m really sorry. Is there a second show?</td>
<td></td>
</tr>
<tr>
<td>S: The next show begins at 10:30. There are still some tickets left. But it’s over after midnight.</td>
<td></td>
</tr>
<tr>
<td>J: That sounds good. I’m so sorry. I can’t believe I forgot. So, Do you want to watch some TV?</td>
<td></td>
</tr>
<tr>
<td>S: This is stupid!</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-Simple-present"><a href="#2-Simple-present" class="headerlink" title="2. Simple present"></a>2. Simple present</h3><table>
<thead>
<tr>
<th>begin、start、open</th>
</tr>
</thead>
<tbody>
<tr>
<td>The dance performance begins at 8 o’clock tonight.</td>
<td></td>
</tr>
<tr>
<td>Jim Department Store opens at 9 a.m. tomorrow.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>close、end、be over、finish</th>
</tr>
</thead>
<tbody>
<tr>
<td>The movie is over at 9:15 p.m.</td>
<td></td>
</tr>
<tr>
<td>She closes her shop at 6 o’clock.</td>
<td></td>
</tr>
<tr>
<td>The movie ends at midnight.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="3-Asking-for-info-about-movies"><a href="#3-Asking-for-info-about-movies" class="headerlink" title="3. Asking for info about movies"></a>3. Asking for info about movies</h3><ul>
<li>Can you give me some information?</li>
<li>Do you have a website?</li>
<li>Can I buy tickets online?</li>
<li>What’s your address?</li>
<li>What time is the next show?</li>
<li>Are tickets still available?</li>
<li>How much are tickets?</li>
</ul>
<h3 id="4-Dialog-with-theater-‘θiətə"><a href="#4-Dialog-with-theater-‘θiətə" class="headerlink" title="4. Dialog with theater  [‘θiətə]"></a>4. Dialog with theater  [‘θiətə]</h3><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: Good afternoon. Springdale Theater.</td>
<td></td>
</tr>
<tr>
<td>B: Good afternoon. Can you give me some information  about the film ‘Mommy Mommy’?</td>
<td></td>
</tr>
<tr>
<td>A: Certainly. What would you like to know?</td>
<td></td>
</tr>
<tr>
<td>B: When is the next show  ?</td>
<td></td>
</tr>
<tr>
<td>A: It’s at 3:15.</td>
<td></td>
</tr>
<tr>
<td>B: That’s good. And are there still tickets for it?</td>
<td></td>
</tr>
<tr>
<td>A: Yes. That’s not a problem. Afternoons are never sold out.</td>
<td></td>
</tr>
<tr>
<td>B: OK. And can I buy tickets online?</td>
<td></td>
</tr>
<tr>
<td>A: Yes, just go to our website  , www.springdaletheater.com.</td>
<td></td>
</tr>
<tr>
<td>B: Thanks! Oh, and how much are tickets for adults  and children?</td>
<td></td>
</tr>
<tr>
<td>A: Adults are $13, and kids are $6.</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Jobs and companies]]></title>
      <url>http://iequa.com/2017/05/19/ef-l3u6-Jobs-and-companies/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
</style>

<h2 id="1-Asking-about-work-experience"><a href="#1-Asking-about-work-experience" class="headerlink" title="1. Asking about work experience"></a>1. Asking about work experience</h2><ul>
<li>bank &gt; banker</li>
<li>design &gt; designer</li>
<li>act  &gt; actor</li>
<li>direct &gt; director</li>
<li>supervise  &gt; supervisor    </li>
<li>illustrate &gt; illustrator [‘ɪləstreɪtə]</li>
<li>firefighter</li>
</ul>
<p><img src="/images/english/ef-l3u6l1.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog 1</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>[SIMON] hi, how do your job?</td>
<td></td>
</tr>
<tr>
<td>[KELLY] I love it! I’m so happy I got it.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] good.</td>
<td></td>
</tr>
<tr>
<td>[KELLY] The pay’s higher than my last job. My boss is really nice.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] <code>Where were you before</code>?</td>
<td></td>
</tr>
<tr>
<td>[KELLY] Sunset Computer Systems.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] How was it there?</td>
<td></td>
</tr>
<tr>
<td>[KELLY] It was terrible. The pay was low. My boss was horrible. Business was really bad.</td>
<td></td>
</tr>
<tr>
<td>[SIMON] <code>How long were you there for</code>?</td>
<td></td>
</tr>
<tr>
<td>[KELLY] I was there for eight months. Long enough. But I’m much happier at Nuway Networks.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong>Dialog 2</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>MAN: I’m very happy in my new job at Tomorrow Computers. I’m a programmer. My last  boss was awful. I wasn’t  happy there.</td>
<td></td>
</tr>
<tr>
<td>WOMAN: Where were you before  ?</td>
<td></td>
</tr>
<tr>
<td>MAN: I was at Dyno Systems. I was an engineer.</td>
<td></td>
</tr>
<tr>
<td>WOMAN: Was that your first job?</td>
<td></td>
</tr>
<tr>
<td>MAN: No. Before that  , I was at LM Computers.</td>
<td></td>
</tr>
<tr>
<td>WOMAN: Well, I’m happy that you like your new job.</td>
<td></td>
</tr>
<tr>
<td>MAN: Me, too. Thanks.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="1-2-expressions"><a href="#1-2-expressions" class="headerlink" title="1.2 expressions"></a>1.2 expressions</h3><ul>
<li>Where were you last night?</li>
<li>She was a waiter <code>before</code> she was a supervisor.</li>
<li>She was a supervisor. <code>After that</code>, she was the manager.</li>
</ul>
<h3 id="1-3-talkig-about-your-job"><a href="#1-3-talkig-about-your-job" class="headerlink" title="1.3 talkig about your job"></a>1.3 talkig about your job</h3><ul>
<li><code>How was your last job?</code></li>
<li><code>What was your last job like?</code></li>
</ul>
<ul>
<li>I like my job, but I work too many hours.</li>
<li>The pay is really good in my new job.</li>
<li>My boss is OK, but sometimes he’s difficult.</li>
</ul>
<ul>
<li>My last job was easier than this job.</li>
<li>My pay is better now, but I work longer hours.</li>
</ul>
<h2 id="2-Introducing-a-new-employee"><a href="#2-Introducing-a-new-employee" class="headerlink" title="2. Introducing a new employee"></a>2. Introducing a new employee</h2><ul>
<li>He worked in Paris for three years.</li>
<li>I moved to a new apartment last week.</li>
<li>We played tennis last weekend.</li>
</ul>
<ul>
<li>We didn’t study last night.</li>
<li>He didn’t work in London.</li>
<li>Did you study last night?</li>
<li>Where did you work before?</li>
</ul>
<ul>
<li>We lived in Beijing for two years.</li>
<li>The weekend was very busy. I didn’t relax for a minute!</li>
</ul>
<p><img src="/images/english/ef-l3u6l2.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog 1</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>[JOAN]: <code>I&#39;d like to introduce Simon</code>, our new director of engineering - a new employee</td>
<td></td>
</tr>
<tr>
<td>[JOAN]: Simon comes to us from Dyna-Tek Systems. He was the engineering manager there three years.</td>
<td></td>
</tr>
<tr>
<td>[JOAN]: He was the engineering manager.</td>
<td></td>
</tr>
<tr>
<td>[JOAN]: a master’s degree in computer science [‘saɪəns]</td>
<td></td>
</tr>
<tr>
<td>[JOAN]: He speaks fluent French.</td>
<td></td>
</tr>
<tr>
<td>[JOAN]: Simon is married and has one kids.</td>
<td></td>
</tr>
<tr>
<td>[JOAN]: Let’s welcome Simon to his new company!</td>
<td></td>
</tr>
<tr>
<td>[Simon]: Thanks, everyone, <code>for the warm welcome. I&#39;m excited to be here</code>.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-simple-verbs"><a href="#2-simple-verbs" class="headerlink" title="2. simple verbs"></a>2. simple verbs</h3><ul>
<li>What did you do last night?</li>
<li>I relaxed and played computer games.</li>
<li>How long did you work there?</li>
<li>I worked there for three years.</li>
</ul>
<table>
<thead>
<tr>
<th><strong>Dialog 2</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>[BOSS]: Julie, I’d like to introduce  Ken Stevens. Ken is our new  director of engineering.</td>
<td></td>
</tr>
<tr>
<td>[JULIE]: It’s a pleasure  to meet you, Ken. Welcome. I work in sales here.</td>
<td></td>
</tr>
<tr>
<td>[KEN]: Oh, thanks, Julie. Nice to meet you, too.</td>
<td></td>
</tr>
<tr>
<td>[BOSS]: Ken comes to us  from XYZ Systems. He was the engineering manager for five years.</td>
<td></td>
</tr>
<tr>
<td>[JULIE]: Oh, nice. How was it?</td>
<td></td>
</tr>
<tr>
<td>[KEN]: It was good, but I’m happy to be here now.</td>
<td></td>
</tr>
<tr>
<td>[JULIE]: This is a great place to work.</td>
<td></td>
</tr>
<tr>
<td>[BOSS]: Good answer, Julie!</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="3-Understanding-company-structure"><a href="#3-Understanding-company-structure" class="headerlink" title="3. Understanding company structure"></a>3. Understanding company structure</h2><ul>
<li>Human Resources (HR)</li>
<li>Operations</li>
<li>Finance   [faɪ’næns; fɪ-; ‘faɪnæns]</li>
<li>Sales and Marketing   </li>
<li>Customer Service   </li>
<li>Purchasing [ˈpɜ:rtʃəsɪŋ]</li>
<li>Research and Development (R&amp;D)</li>
<li>chief executive officer (CEO)        </li>
<li>vice president – VP</li>
<li>chief financial officer (CFO)</li>
<li>chief operations officer (COO)     </li>
<li>chief technology officer (CTO)</li>
<li>She is the director of IT.</li>
<li>buy - bought </li>
</ul>
<p><img src="/images/english/ef-l3u6l3.png" alt=""></p>
<table>
<thead>
<tr>
<th>Company departments and job titles</th>
</tr>
</thead>
<tbody>
<tr>
<td>[JOAN] So, <code>did you meet anyone good</code> last night?</td>
<td></td>
</tr>
<tr>
<td>[TODD] I got 20 business cards. I talked to a lot of people. A few of them, very interesting</td>
<td></td>
</tr>
<tr>
<td>[JOAN] How about for the <code>Finance Department</code>?</td>
<td></td>
</tr>
<tr>
<td>[TODD] <code>Take a look at this one</code>. I wrote some notes on the back.</td>
<td></td>
</tr>
<tr>
<td>[TODD] She has an MBA from Harvard. Right now, she’s working at Network Tek as the CFO.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Interesting. Is she available?</td>
<td></td>
</tr>
<tr>
<td>[TODD] She wants to talk to us.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Great! How about for HR?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Umm, This guy looks good.</td>
<td></td>
</tr>
<tr>
<td>[TODD] He’s an HR manager in a small company in Springdale. He has a BA in HR management.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] It’s not a problem. Thanks for going last night.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Use did + subject + base verb</strong></p>
<ul>
<li>Did you see him last night?</li>
<li>Did they have dinner at the hotel?</li>
</ul>
<h2 id="4-Describing-a-job"><a href="#4-Describing-a-job" class="headerlink" title="4. Describing a job"></a>4. Describing a job</h2><p><img src="/images/english/ef-l3u6l4.png" alt=""></p>
<table>
<thead>
<tr>
<th>Describing a job</th>
</tr>
</thead>
<tbody>
<tr>
<td>[TODD] Oh，Joan. <code>Do you have a minute?</code></td>
<td></td>
</tr>
<tr>
<td>[TODD] <code>I found someone good for production manager</code>.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Great. Let’s have a look.</td>
<td></td>
</tr>
<tr>
<td>[TODD] She worked at Parmatek for three years as a project manager. <code>She was responsible for</code> the production schedule.</td>
<td></td>
</tr>
<tr>
<td>[TODD] And <code>she reported to the vice president</code> of production.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Where is she working now?</td>
<td></td>
</tr>
<tr>
<td>[TODD] She’s at Blue Sky Tech.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] What’s her <code>job title</code> ?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Production manager. <code>She got her BS in computer engineering in 2007</code>.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] She does sound good.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Shall I call her for an interview?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yes, call her. send me her resume.</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>I worked there from 2009 to 2012.</li>
<li>I am responsible for marketing new products.</li>
<li>I reported to the vice president of production.</li>
</ul>
<p>My job now is at a restaurant. I’m a supervisor. I’m responsible for around 12 servers. It’s difficult work, but I like it. Before this job, I worked in a different restaurant as a server. I worked there for about 15 months. I wasn’t very happy there. I didn’t like my boss. She was very unfriendly. Before that, I was a student.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Money and buying]]></title>
      <url>http://iequa.com/2017/05/18/ef-l3u5-Money-and-buying/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
</style>

<h2 id="1-Choosing-a-product"><a href="#1-Choosing-a-product" class="headerlink" title="1. Choosing a product"></a>1. Choosing a product</h2><ul>
<li>attractive - unattractive</li>
<li>attractive - ugly</li>
<li>safe - unsafe</li>
<li>safe - dangerous</li>
<li>reliable - unreliable</li>
<li>fancy - plain</li>
<li>powerful - weak</li>
</ul>
<p><img src="/images/english/ef-l3u5l1.png" alt=""></p>
<table>
<thead>
<tr>
<th>Choosing a product</th>
</tr>
</thead>
<tbody>
<tr>
<td>[TODD] Can I ask you a question about computers?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Sure</td>
<td></td>
</tr>
<tr>
<td>[TODD] My son’s computer’s really old and slow. <code>He needs something faster for his classes. And for all those computer games he plays</code>.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] You want a laptop, not a desktop, right?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yes, I’m thinking about the B-Tek 13-72.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Hmm. <code>You need a better computer for gaming</code>.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] You should buy the 13-82. You see, the 82’s faster and more powerful than the 72.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yeah. And it’s also more expensive.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Twelve hundred dollars isn’t bad - for a fast, powerful laptop.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="1-1-expressions"><a href="#1-1-expressions" class="headerlink" title="1.1 expressions"></a>1.1 expressions</h3><ol>
<li>The desktop computer is <code>slower than</code> the laptop computer.</li>
<li>The desktop computer is <code>less</code> expensive <code>than</code> the laptop.</li>
<li>My old computer is slow. I <code>need something faster. (than my old computer)</code></li>
<li>For me, Chinese is more difficult than French.</li>
<li>The subway is faster than driving.</li>
</ol>
<h2 id="2-Making-a-purchase"><a href="#2-Making-a-purchase" class="headerlink" title="2. Making a purchase"></a>2. Making a purchase</h2><ul>
<li>cellphone</li>
<li>digital camera</li>
<li>tablet computer</li>
<li>smartphone</li>
<li>e-reader</li>
<li>game console</li>
<li>laptop computer [‘læptɒp]</li>
<li>desktop computer [‘desktɒp]</li>
</ul>
<p><img src="/images/english/ef-l3u5l2.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>A:  Excuse me. Could you help me? I want to buy a new laptop.</td>
<td></td>
</tr>
<tr>
<td>B: right over here. very good computer, powerful and fast and very popular for young people.</td>
<td></td>
</tr>
<tr>
<td>A: How much is it?</td>
<td></td>
</tr>
<tr>
<td>B: It’s on sale. 1120 <code>$</code></td>
<td></td>
</tr>
<tr>
<td>A: I’ll take it.</td>
<td></td>
</tr>
<tr>
<td>B: How would you like to pay?</td>
<td></td>
</tr>
<tr>
<td>A: By credit card.</td>
<td></td>
</tr>
<tr>
<td>B: Could I see some identification?</td>
<td></td>
</tr>
<tr>
<td>A: Here’s my driver’s license.</td>
<td></td>
</tr>
<tr>
<td>B: Please sign here. Thank you. Here’s your receipt.</td>
<td></td>
</tr>
<tr>
<td>A: Thank you.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-1-expressions"><a href="#2-1-expressions" class="headerlink" title="2.1 expressions"></a>2.1 expressions</h3><p>Once you have someone to help you, tell them what you need.</p>
<ul>
<li>I want to buy a new camera.  </li>
<li>I need a game console for my son.  </li>
<li>I’m looking for a TV.      </li>
<li>Could you tell me about your digital cameras?</li>
</ul>
<p>You can ask specific questions about the product you are interested in.</p>
<ul>
<li>How much is it?  </li>
<li>Is there a warranty?  </li>
<li>What’s it made of?    </li>
<li>Is it reliable?  </li>
<li>Is it easy to use?  </li>
</ul>
<p>The salesperson might tell you about the store’s promotions.</p>
<ul>
<li>It’s on sale today.</li>
<li>It’s 25% off. </li>
</ul>
<p>If you decide to buy the product, you can say:</p>
<ul>
<li>I’ll take it.  </li>
</ul>
<p>If you decide not to buy the product, you can say:</p>
<ul>
<li>I don’t think so.  </li>
<li>I need to think about it.       </li>
</ul>
<p>When you’re paying for a product, these phrases might come up:</p>
<ul>
<li>How would you like to pay?    </li>
<li>Cash or credit?</li>
</ul>
<h3 id="2-2-irregular-comparative-adjectives"><a href="#2-2-irregular-comparative-adjectives" class="headerlink" title="2.2 irregular comparative adjectives"></a>2.2 irregular comparative adjectives</h3><ul>
<li>This e-reader is easier to use than that one.</li>
<li>My new e-reader cost more than a smartphone.   </li>
</ul>
<ul>
<li>The woman is friendlier than the man.           </li>
<li>The woman is more friendly than the man.  </li>
</ul>
<ul>
<li>This store is (bad) worse than the first one.  </li>
<li>The train station is (far) farther from here than the bus station.  </li>
</ul>
<ul>
<li>Are you feeling better or worse?</li>
<li>It’s less expensive to buy online.</li>
<li>The online price is less than the store price.</li>
<li>I need something easier to use.</li>
<li>I’ll take this one. It’s better.</li>
<li>Do you have a cheaper one?</li>
</ul>
<h2 id="3-Returning-a-purchase"><a href="#3-Returning-a-purchase" class="headerlink" title="3. Returning a purchase"></a>3. Returning a purchase</h2><ul>
<li>jeans</li>
<li>jacket</li>
<li>skirt [skɜːt]</li>
<li>shirt</li>
<li>dress</li>
<li>shorts</li>
<li>socks</li>
</ul>
<p><img src="/images/english/ef-l3u5l3.png" alt=""></p>
<table>
<thead>
<tr>
<th>Returning a purchase</th>
</tr>
</thead>
<tbody>
<tr>
<td>JACK:  Oh! This digital camera!</td>
<td></td>
</tr>
<tr>
<td>NANCY: What’s the problem ?</td>
<td></td>
</tr>
<tr>
<td>JACK: It doesn’t work.</td>
<td></td>
</tr>
<tr>
<td>NANCY: Is it broken?</td>
<td></td>
</tr>
<tr>
<td>JACK: No, it’s just too difficult to use.</td>
<td></td>
</tr>
<tr>
<td>NANCY: Can I help ?</td>
<td></td>
</tr>
<tr>
<td>JACK: No, I don’t like it. I’m going to the store.</td>
<td></td>
</tr>
<tr>
<td>-</td>
<td></td>
</tr>
<tr>
<td>SALE: How can I help you?</td>
<td></td>
</tr>
<tr>
<td>JACK: I’d like to return this digital camera.</td>
<td></td>
</tr>
<tr>
<td>SALE: What’s the problem?</td>
<td></td>
</tr>
<tr>
<td>JACK: There’s nothing wrong. it’s just too difficult to use. I don’t like it.</td>
<td></td>
</tr>
<tr>
<td>SALE: Do you have the receipt?</td>
<td></td>
</tr>
<tr>
<td>JACK: Yes, Here it is.</td>
<td></td>
</tr>
<tr>
<td>SALE: Here’s your refund of <code>$</code>27.99.</td>
<td></td>
</tr>
<tr>
<td>JACK: Thank you!</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="3-1-some-wrong"><a href="#3-1-some-wrong" class="headerlink" title="3.1 some wrong"></a>3.1 some wrong</h3><ul>
<li>What’s the problem?</li>
<li>What’s wrong with it?</li>
<li>What’s the matter?</li>
<li>What seems to be the problem? （customer service..）</li>
</ul>
<ul>
<li>It’s too big.    </li>
<li>It doesn’t fit.    </li>
<li>There’s a hole in it.</li>
<li>It’s stained. [steɪnd]</li>
<li>It’s damaged.    </li>
<li>It doesn’t work.</li>
<li>It’s broken.</li>
<li>It’s too difficult to use.</li>
<li>I don’t like it.</li>
</ul>
<h3 id="3-2-returning-a-purchase"><a href="#3-2-returning-a-purchase" class="headerlink" title="3.2 returning a purchase"></a>3.2 returning a purchase</h3><ul>
<li>I’d like to return these shorts.</li>
<li>I’d like a refund, please.    </li>
<li>I’d like to exchange this dress.          </li>
<li>There’s nothing wrong. I just don’t like it</li>
</ul>
<p>The customer service representative will likely ask why you want to return or exchange the item.</p>
<ul>
<li>What seems to be the problem?    </li>
<li>Is there something wrong with it?</li>
<li>Do you have the receipt?</li>
<li>Here’s your refund of $27.99.</li>
</ul>
<h2 id="4-Talking-about-prices"><a href="#4-Talking-about-prices" class="headerlink" title="4. Talking about prices"></a>4. Talking about prices</h2><ul>
<li>gas</li>
<li>office supplies</li>
<li>healthcare  [‘helθkeə] </li>
<li>entertainment</li>
<li>utilities  [juː’tɪlɪtɪz]</li>
<li>housing [ˈhaʊzɪŋ] 住房</li>
<li>clothing</li>
<li>gasoline</li>
</ul>
<p><img src="/images/english/ef-l3u5l4.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>A: gas price is going up fast.</td>
<td></td>
</tr>
<tr>
<td>B: yeah ! I know</td>
<td></td>
</tr>
<tr>
<td>A: office supplies price is going up fast. .</td>
<td></td>
</tr>
<tr>
<td>B: Ouch !</td>
<td></td>
</tr>
<tr>
<td>A: going to hurt，also，next month，the building going to increase</td>
<td></td>
</tr>
<tr>
<td>B: That’s terrible !</td>
<td></td>
</tr>
<tr>
<td>A: everything is going up.</td>
<td></td>
</tr>
<tr>
<td>B: I do some good news. The company sales are up</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="4-1-expressions"><a href="#4-1-expressions" class="headerlink" title="4.1 expressions"></a>4.1 expressions</h3><p>Use these expressions to explain an increase in something:</p>
<ul>
<li>Prices are going up.</li>
<li>The rent is going to increase.</li>
<li>Company sales are up.    </li>
</ul>
<p>Use these expressions to explain a decrease in something:</p>
<ul>
<li>Company sales are going down.                          </li>
<li>The temperature is going to decrease.                             </li>
<li>Gas prices are down. </li>
</ul>
<p>When we get bad news about an increase or decrease, we can say that it hurts. </p>
<ul>
<li>A: The price of food is up 25%.</li>
<li>B: Ouch! That hurts.</li>
</ul>
<p>The amount of money we need to live on is called the cost of living. </p>
<ul>
<li>The cost of living is going up and up.    <h3 id="4-2-increases-and-decreases"><a href="#4-2-increases-and-decreases" class="headerlink" title="4.2 increases and decreases"></a>4.2 increases and decreases</h3></li>
</ul>
<p>More bad  news today: The prices of housing  and utilities are both up by more than 20%. Gas prices are going to increase  for the next few months. The cost  of education is also going up.  There is some good  news: The price of food is down by 10%.</p>
<ul>
<li>Technology prices are decreasing.</li>
<li>Gas prices are increasing.</li>
<li>The price of entertainment is up.</li>
<li>The cost of living is going down.</li>
<li>The cost of education is going up.</li>
<li>Food prices are down.</li>
</ul>
<h3 id="4-3-adverbs-with-‘-ly’-or-‘-ily’"><a href="#4-3-adverbs-with-‘-ly’-or-‘-ily’" class="headerlink" title="4.3 adverbs with ‘-ly’ or ‘-ily’"></a>4.3 adverbs with ‘-ly’ or ‘-ily’</h3><ul>
<li>The price is decreasing slowly.</li>
<li><p>The price is decreasing quickly.                  </p>
</li>
<li><p>The people in the office are working busily.        </p>
</li>
<li>He’s walking lazily down the street.                </li>
</ul>
<p>Not all adjectives can be turned into adverbs with -ly. Here are three important examples:</p>
<p><code>good &gt; well,  fast &gt; fast,  hard &gt; hard</code></p>
<ul>
<li>He is doing well in school.                        </li>
<li>Gas prices are going up fast.</li>
<li>She studies really hard.</li>
</ul>
<ul>
<li>People can’t pay for it easily.</li>
</ul>
<h3 id="4-4-reading"><a href="#4-4-reading" class="headerlink" title="4.4 reading"></a>4.4 reading</h3><p>In my country, prices are always increasing. Healthcare and housing costs are going up fast. Prices for food are also increasing, but more slowly. People live well, but the cost of living is difficult. The good news is that technology prices are decreasing. I want to buy a new tablet computer, but it’s too expensive right now.</p>
<h3 id="4-5-writing"><a href="#4-5-writing" class="headerlink" title="4.5 writing"></a>4.5 writing</h3><p>In my country, the price of everything is going up. Housing is very expensive, and the price of gasoline is increasing quickly. I donot know how people do it. The cost of living is very difficult. Transportation and food are not expensive, but they are going up. I need a good job.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Holidays and celebrations]]></title>
      <url>http://iequa.com/2017/05/16/ef-l3u4-Holidays-and-celebrations/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
</style>


<ul>
<li>soda</li>
<li>snacks [snæks]</li>
<li>dancing</li>
<li>wine  [waɪn] </li>
</ul>
<h2 id="1-Inviting-someone-to-a-party"><a href="#1-Inviting-someone-to-a-party" class="headerlink" title="1. Inviting someone to a party"></a>1. Inviting someone to a party</h2><p><img src="/images/english/ef-l3u4l1.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>A: Hi, Mona. What are you doing  tonight?</td>
<td></td>
</tr>
<tr>
<td>B: Umm, I’m going to the gym in an hour. Why?</td>
<td></td>
</tr>
<tr>
<td>A: I’m having people over for a little birthday party at seven.</td>
<td></td>
</tr>
<tr>
<td>B: Happy birthday! I’d love to come. And I know the perfect gift for you.</td>
<td></td>
</tr>
<tr>
<td>A: Thanks! Paul’s making  a big chocolate cake later.</td>
<td></td>
</tr>
<tr>
<td>B: Ooh, cake! I can bring some snacks, or wine and sodas.</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>Are you going to that party on Wednesday?</li>
<li>I’m getting together with some friends in an hour.</li>
<li>We’re having some friends <code>over to dinner later</code>.</li>
<li>She’s making the cake tomorrow.<br>&nbsp;</li>
<li>Are you free on Sunday?</li>
<li>Would you like to come to a party?<br>&nbsp;</li>
<li>What time should I come?</li>
<li>Thanks for the invitation</li>
<li>I’m afraid I’m busy.</li>
</ul>
<h2 id="2-Talking-with-people-at-a-party"><a href="#2-Talking-with-people-at-a-party" class="headerlink" title="2. Talking with people at a party"></a>2. Talking with people at a party</h2><p><img src="/images/english/ef-l3u4l2.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>[SALLY] Hey, Todd. Thanks for coming.</td>
<td></td>
</tr>
<tr>
<td>[TODD] <code>Thanks for inviting me</code>! It’s a great party.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] How’s your wife feeling?</td>
<td></td>
</tr>
<tr>
<td>[TODD] poor Angela. She had a cold.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] I’m sorry to hear that. Give her my best.</td>
<td></td>
</tr>
<tr>
<td>[TODD] I will. So, what’s happening with you?.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] not much. I’m going to the birthday party next week, My grandmother’s 87.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Eighty-seven! That’s amazing.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] yep, it is. <code>What about you? Anything new?</code></td>
<td></td>
</tr>
<tr>
<td>[TODD] Well, Take my wife go to the bangkok.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Wow! That sounds wonderful!</td>
<td></td>
</tr>
<tr>
<td>[TODD] Angela is sick. I should go.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] I understand. <code>Thanks again for the coming</code>.</td>
<td></td>
</tr>
<tr>
<td>[TODD] Bye! Have a good evening. Thanks for the party! See you soon.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-1-party-expressions"><a href="#2-1-party-expressions" class="headerlink" title="2.1 party expressions"></a>2.1 party expressions</h3><ul>
<li>Thanks for coming to the party.</li>
<li>Thanks for having this party.</li>
<li>Anything new?</li>
<li>Great snacks. Do you enjoy cooking?</li>
<li>How are you feeling?<br>&nbsp;</li>
<li>That sounds incredible.   [ɪn’kredɪb(ə)l] ，惊人的 </li>
<li>That’s awful!<br>&nbsp;</li>
<li>It’s late. I should go.</li>
<li>Say hello to Jose. (向若泽问好)</li>
<li>Thanks for the amazing party!</li>
</ul>
<h2 id="3-Discussing-vacation-plans"><a href="#3-Discussing-vacation-plans" class="headerlink" title="3. Discussing vacation plans"></a>3. Discussing vacation plans</h2><ul>
<li>tickets</li>
<li>film festival</li>
<li>films</li>
<li>parade [pəˈreɪd]</li>
<li>costume  [‘kɒstjuːm] n. 服装</li>
<li>entertaining [entə’xteɪnɪŋ]</li>
<li>crowded [‘kraʊdɪd]<br>&nbsp;</li>
<li>What are you going to do?</li>
<li>I’m going to go to the film festival.</li>
<li>How many films are you going to see?</li>
<li>Are you going to drive there?</li>
<li>I’m going to take the train.</li>
<li>Hmm. What are you going to do after that?</li>
</ul>
<p>A: Which costume are you going to wear?<br>B: Let me see … The red one, I think.</p>
<p>A: Is the festival going to be crowded?<br>B: Hmm … I don’t know.</p>
<p><img src="/images/english/ef-l3u4l3.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>A: Hi</td>
<td></td>
</tr>
<tr>
<td>B: I and my parents are going to go on vacaton.</td>
<td></td>
</tr>
<tr>
<td>A: you go on the vacation. Great! where are you going?</td>
<td></td>
</tr>
<tr>
<td>B: I’m going to travel to Scotland.</td>
<td></td>
</tr>
<tr>
<td>A: Nice, What are you doing to do there?</td>
<td></td>
</tr>
<tr>
<td>B: I’m going to see 7 films and 4 night</td>
<td></td>
</tr>
<tr>
<td>A: Fantastic! That’s a lot movies.</td>
<td></td>
</tr>
<tr>
<td>B: I’m going to the mountains. It’s beatiful.</td>
<td></td>
</tr>
<tr>
<td>B: We are going to go skiing.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>DONALD: I’m going to the Fresh Film Festival  this summer.</td>
<td></td>
</tr>
<tr>
<td>LIZA: Sounds like fun. What films are you seeing?</td>
<td></td>
</tr>
<tr>
<td>DONALD: Lots. Look – there are hundreds in the program  .</td>
<td></td>
</tr>
<tr>
<td>LIZA: Are the tickets expensive?</td>
<td></td>
</tr>
<tr>
<td>DONALD: Fifty dollars. But there are so many different events.</td>
<td></td>
</tr>
<tr>
<td>LIZA: What? You’re paying Fifty dollars a ticket? Sounds very entertaining.</td>
<td></td>
</tr>
<tr>
<td>DONALD: Yeah. There’s a big parade  on the first night. It has about a thousand people.</td>
<td></td>
</tr>
</tbody>
</table>
<p>LIZA: What are you going to do at the festival?<br>DONALD: We are going to dance in the parade.</p>
<h3 id="3-1-expressions"><a href="#3-1-expressions" class="headerlink" title="3.1 expressions"></a>3.1 expressions</h3><ul>
<li>I’m going to an exciting festival.</li>
<li>They’re showing films from many countries.</li>
<li>I know! The festival is a lot of fun.</li>
<li>Exactly. A good film is very entertaining.<br>&nbsp;</li>
<li>There are some cool events this weekend</li>
<li>People are wearing costumes</li>
<li>There’s a long parade with music and dancing.</li>
<li>I enjoy watching the fireworks.<br>&nbsp;</li>
<li>Wow! This place is really crowded.<br>&nbsp;</li>
</ul>
<h2 id="4-Describing-a-holiday-or-celebration"><a href="#4-Describing-a-holiday-or-celebration" class="headerlink" title="4. Describing a holiday or celebration"></a>4. Describing a holiday or celebration</h2><ul>
<li>partying</li>
<li>Diwali [diːˈwɑːli]</li>
<li>celebrate</li>
<li>How long does Carnaval last for?</li>
<li>The big events last four days.</li>
<li>We usually party for a week.</li>
</ul>
<p><img src="/images/english/ef-l3u4l4.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog main</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>A: Hi,Sorry, we are…</td>
<td></td>
</tr>
<tr>
<td>B: How are take? I like music.</td>
<td></td>
</tr>
<tr>
<td>A: Yup. It’s summer. you know everybody celebrate it right now</td>
<td></td>
</tr>
<tr>
<td>B: It’s Carnaval.</td>
<td></td>
</tr>
<tr>
<td>A: Carnaval.</td>
<td></td>
</tr>
<tr>
<td>C: How do you celebrate?</td>
<td></td>
</tr>
<tr>
<td>A: Some my friends are come to school.</td>
<td></td>
</tr>
<tr>
<td>C: Sounds good !</td>
<td></td>
</tr>
<tr>
<td>B: How long does Carnaval last?</td>
<td></td>
</tr>
<tr>
<td>A: The big events <strong>last</strong> a few days, We usually party for a week.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="4-1-expressions"><a href="#4-1-expressions" class="headerlink" title="4.1 expressions"></a>4.1 expressions</h3><ul>
<li>How long does it take to walk from the hotel to the parade? </li>
<li>It takes a half-hour.<br>&nbsp;</li>
<li>The big events <strong>last</strong> four days</li>
<li>We celebrate <strong>for</strong> a week.</li>
<li>I party a lot <strong>during</strong> the summer.</li>
<li>What do you do <strong>during</strong> Carnaval?<br>&nbsp;</li>
<li>How long does it <strong>take to walk</strong>?</li>
<li>I usually visit my family <strong>for</strong> 10 days.</li>
<li>We celebrate <strong>for</strong> a week.</li>
</ul>
<table>
<thead>
<tr>
<th><strong>Dialog two</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>LEAH: How long does the Sun Festival last ?</td>
<td></td>
</tr>
<tr>
<td>JASON: It lasts, um, six days.</td>
<td></td>
</tr>
<tr>
<td>LEAH: What do you do <strong>during</strong> the festival?</td>
<td></td>
</tr>
<tr>
<td>JASON: Let’s see … We eat and dance <strong>for</strong> a week. We celebrate the sun …</td>
<td></td>
</tr>
<tr>
<td>LEAH: Sounds fantastic  .</td>
<td></td>
</tr>
<tr>
<td>JASON: Definitely. I’m going to make my own costume this year.</td>
<td></td>
</tr>
<tr>
<td>LEAH: Wow! How long does it <strong>take</strong> to make a costume?</td>
<td></td>
</tr>
<tr>
<td>JASON: I’m slow. It <code>takes</code> me about three weeks.</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="4-2-asking-about-a-holiday-or-celebration"><a href="#4-2-asking-about-a-holiday-or-celebration" class="headerlink" title="4.2 asking about a holiday or celebration"></a>4.2 asking about a holiday or celebration</h3><ul>
<li>A: How do you celebrate New Year’s?</li>
<li>B: We usually watch the big fireworks show.</li>
<li>A: What do people usually do? </li>
<li>B: They usually have a big meal.<br>&nbsp;</li>
<li>A: How long does the holiday last?</li>
<li>B: People usually celebrate for six nights. </li>
<li>A: What do people do during the festival?</li>
<li>B: They dance and sing songs.</li>
</ul>
<h3 id="4-3-adjectives"><a href="#4-3-adjectives" class="headerlink" title="4.3 adjectives"></a>4.3 adjectives</h3><ul>
<li>special - ordinary </li>
<li>entertaining - dull </li>
<li>funny - serious</li>
<li>colorful - colorless     </li>
<li>gorgeous [‘gɔːdʒəs] - hideous  [‘hɪdɪəs]</li>
<li>popular - unpopular </li>
<li>noisy - quiet</li>
<li>crowded - empty </li>
</ul>
<h3 id="4-4-writing"><a href="#4-4-writing" class="headerlink" title="4.4 writing"></a>4.4 writing</h3><p>The Sziget Festival is my favorite. This big festival lasts for 4 days, The Sziget Festival is a special place with a forest. There are 10 entertaining, crowded events every day. They have popular music and art exhibitions. People usually camp in the forest and have great fun.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python sys 与 os 模块]]></title>
      <url>http://iequa.com/2017/05/12/python-os-sys-module/</url>
      <content type="html"><![CDATA[<h2 id="1-sys"><a href="#1-sys" class="headerlink" title="1. sys"></a>1. sys</h2><p>系统相关的信息模块: import sys</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">sys.argv 是一个 list,包含所有的命令行参数.    </span><br><span class="line">sys.stdout sys.stdin sys.stderr 分别表示标准输入输出,错误输出的文件对象.    </span><br><span class="line">sys.stdin.readline() 从标准输入读一行 sys.stdout.write(<span class="string">"a"</span>) 屏幕输出a    </span><br><span class="line">sys.exit(exit_code) 退出程序    </span><br><span class="line">sys.modules 是一个dictionary，表示系统中所有可用的module    </span><br><span class="line">sys.platform 得到运行的操作系统环境    </span><br><span class="line">sys.path 是一个list,指明所有查找module，package的路径.</span><br></pre></td></tr></table></figure>
<h2 id="2-os"><a href="#2-os" class="headerlink" title="2. os"></a>2. os</h2><p>操作系统相关的调用和操作: import os</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">os.environ 一个dictionary 包含环境变量的映射关系   </span><br><span class="line">os.environ[<span class="string">"HOME"</span>] 可以得到环境变量HOME的值     </span><br><span class="line">os.chdir(dir) 改变当前目录 os.chdir(<span class="string">'d:\\outlook'</span>)   </span><br><span class="line">注意windows下用到转义     </span><br><span class="line">os.getcwd() 得到当前目录     </span><br><span class="line">os.getegid() 得到有效组id os.getgid() 得到组id     </span><br><span class="line">os.getuid() 得到用户id os.geteuid() 得到有效用户id     </span><br><span class="line">os.setegid os.setegid() os.seteuid() os.setuid()     </span><br><span class="line">os.getgruops() 得到用户组名称列表     </span><br><span class="line">os.getlogin() 得到用户登录名称     </span><br><span class="line">os.getenv 得到环境变量     </span><br><span class="line">os.putenv 设置环境变量     </span><br><span class="line">os.umask 设置umask     </span><br><span class="line">os.system(cmd) 利用系统调用，运行cmd命令   os.environ 一个dictionary 包含环境变量的映射关系   </span><br><span class="line">os.environ[<span class="string">"HOME"</span>] 可以得到环境变量HOME的值     </span><br><span class="line">os.chdir(dir) 改变当前目录 os.chdir(<span class="string">'d:\\outlook'</span>)   </span><br><span class="line">注意windows下用到转义     </span><br><span class="line">os.getcwd() 得到当前目录     </span><br><span class="line">os.getegid() 得到有效组id os.getgid() 得到组id     </span><br><span class="line">os.getuid() 得到用户id os.geteuid() 得到有效用户id     </span><br><span class="line">os.setegid os.setegid() os.seteuid() os.setuid()     </span><br><span class="line">os.getgruops() 得到用户组名称列表     </span><br><span class="line">os.getlogin() 得到用户登录名称     </span><br><span class="line">os.getenv 得到环境变量     </span><br><span class="line">os.putenv 设置环境变量     </span><br><span class="line">os.umask 设置umask     </span><br><span class="line">os.system(cmd) 利用系统调用，运行cmd命令</span><br></pre></td></tr></table></figure>
<h2 id="3-内置函数"><a href="#3-内置函数" class="headerlink" title="3. 内置函数"></a>3. 内置函数</h2><p>内置模块(不用import就可以直接使用)常用内置函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">help(obj) 在线帮助, obj可是任何类型    </span><br><span class="line">callable(obj) 查看一个obj是不是可以像函数一样调用    </span><br><span class="line">repr(obj) 得到obj的表示字符串，可以利用这个字符串eval重建该对象的一个拷贝    </span><br><span class="line">eval_r(str) 表示合法的python表达式，返回这个表达式    </span><br><span class="line">dir(obj) 查看obj的name space中可见的name    </span><br><span class="line">hasattr(obj,name) 查看一个obj的name space中是否有name    </span><br><span class="line">getattr(obj,name) 得到一个obj的name space中的一个name    </span><br><span class="line">setattr(obj,name,value) 为一个obj的name   </span><br><span class="line">space中的一个name指向vale这个object    </span><br><span class="line">delattr(obj,name) 从obj的name space中删除一个name    </span><br><span class="line">vars(obj) 返回一个object的name space。用dictionary表示    </span><br><span class="line">locals() 返回一个局部name space,用dictionary表示    </span><br><span class="line">globals() 返回一个全局name space,用dictionary表示    </span><br><span class="line">type(obj) 查看一个obj的类型    </span><br><span class="line">isinstance(obj,cls) 查看obj是不是cls的instance    </span><br><span class="line">issubclass(subcls,supcls) 查看subcls是不是supcls的子类  </span><br><span class="line"></span><br><span class="line"><span class="comment">##################    类型转换  ##################</span></span><br><span class="line"></span><br><span class="line">chr(i) 把一个ASCII数值,变成字符    </span><br><span class="line">ord(i) 把一个字符或者unicode字符,变成ASCII数值    </span><br><span class="line">oct(x) 把整数x变成八进制表示的字符串    </span><br><span class="line">hex(x) 把整数x变成十六进制表示的字符串    </span><br><span class="line">str(obj) 得到obj的字符串描述    </span><br><span class="line">list(seq) 把一个sequence转换成一个list    </span><br><span class="line">tuple(seq) 把一个sequence转换成一个tuple    </span><br><span class="line">dict(),dict(list) 转换成一个dictionary    </span><br><span class="line">int(x) 转换成一个integer    </span><br><span class="line">long(x) 转换成一个long interger    </span><br><span class="line">float(x) 转换成一个浮点数    </span><br><span class="line">complex(x) 转换成复数    </span><br><span class="line">max(...) 求最大值    </span><br><span class="line">min(...) 求最小值</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark ALS]]></title>
      <url>http://iequa.com/2017/05/07/Spark-ALS/</url>
      <content type="html"><![CDATA[<p><a href="http://spark.apache.org/examples.html" target="_blank" rel="external">Spark.apache.org</a><br><a href="http://blog.javachen.com/2015/06/07/spark-configuration.html" target="_blank" rel="external">Java Chen Spark</a></p>
<p>以下为手动计算流程 :</p>
<h3 id="4-2-启动-spark-shell"><a href="#4-2-启动-spark-shell" class="headerlink" title="4.2 启动 spark-shell"></a>4.2 启动 spark-shell</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SPARK_CLASSPATH=/opt/cloudera/parcels/CDH/lib/sqoop/mysql-connector-java-5.1.40.jar spark-shell</span><br></pre></td></tr></table></figure>
<h3 id="4-3-输入输出-相关变量"><a href="#4-3-输入输出-相关变量" class="headerlink" title="4.3 输入输出:相关变量"></a>4.3 输入输出:相关变量</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">val inputTable = <span class="string">"mds_user_coupon_bhv"</span></span><br><span class="line">val inputUrl = <span class="string">"jdbc:mysql://192.168.xxx.xx:3306/com_profile?user=your_name&amp;password=your_password"</span></span><br><span class="line">val outputTable = <span class="string">"mds_rs_shop_coupon_tmp"</span></span><br></pre></td></tr></table></figure>
<h3 id="4-4-核心程序代码"><a href="#4-4-核心程序代码" class="headerlink" title="4.4 核心程序代码"></a>4.4 核心程序代码</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">package com.x.rs.service</span><br><span class="line"></span><br><span class="line">import java.text.SimpleDateFormat</span><br><span class="line">import java.util.Date</span><br><span class="line">import java.util.Properties</span><br><span class="line"></span><br><span class="line">import org.apache.spark.sql.Row</span><br><span class="line">import org.apache.spark.sql.types._</span><br><span class="line"></span><br><span class="line">import org.apache.spark.&#123;SparkConf, SparkContext&#125;</span><br><span class="line"></span><br><span class="line">import org.apache.spark.mllib.recommendation.&#123;ALS, Rating&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">  * Date : 2017-04-20</span><br><span class="line">  * Author : Blair Chan</span><br><span class="line">  */</span><br><span class="line">object RsCouponCalc &#123;</span><br><span class="line">  def main(args: Array[String]) &#123;</span><br><span class="line"></span><br><span class="line">    println("start...")</span><br><span class="line"></span><br><span class="line">    if (args.length &lt; 3) &#123;</span><br><span class="line">      System.err.println("Usage: &lt;file&gt;")</span><br><span class="line">      System.exit(1)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    val inputTable = args(0) // Should be some file on your system // conf = new SparkConf().setAppName(appName).setMaster("local");</span><br><span class="line">    val inputUrl = args(1)</span><br><span class="line">    val outputTable = args(2)</span><br><span class="line"></span><br><span class="line">    val conf = new SparkConf().setAppName("SparkRsOne");</span><br><span class="line">    val sc = new SparkContext(conf)</span><br><span class="line">    val sqlContext = new org.apache.spark.sql.SQLContext(sc)</span><br><span class="line"></span><br><span class="line">    //    val rawData = sc.textFile(inputFile)</span><br><span class="line">    //    val rawRatings = rawData.map(_.split("\t").take(3))</span><br><span class="line"></span><br><span class="line">    val url = inputUrl</span><br><span class="line">    val prop = new Properties()</span><br><span class="line"></span><br><span class="line">    val dfForRawData = sqlContext.read.jdbc(url, inputTable, prop)</span><br><span class="line"></span><br><span class="line">    val ratings_tmp = dfForRawData.map &#123; row =&gt; (row(1).toString().toInt, row(4).toString().toInt, row(6).toString().toDouble) &#125;</span><br><span class="line"></span><br><span class="line">    val ratings = ratings_tmp.map &#123; case (uid, couponId, rating) =&gt; Rating(uid.toInt, couponId.toInt, rating.toDouble) &#125;</span><br><span class="line"></span><br><span class="line">    val model = ALS.train(ratings, 50, 10, 0.01)</span><br><span class="line"></span><br><span class="line">    model.userFeatures.count</span><br><span class="line"></span><br><span class="line">    val K = 10</span><br><span class="line"></span><br><span class="line">    model.recommendProductsForUsers(K)</span><br><span class="line"></span><br><span class="line">    val originResultRdd1 = model.recommendProductsForUsers(K)</span><br><span class="line"></span><br><span class="line">    val curDate = new Date()</span><br><span class="line">    val createDateString = new SimpleDateFormat("yyyy-MM-dd").format(curDate)</span><br><span class="line"></span><br><span class="line">    val originResultRdd2 = originResultRdd1.map(tuple =&gt; &#123;</span><br><span class="line">      val uid = tuple._1</span><br><span class="line">      val product = tuple._2.map &#123; case Rating(user, product, score) =&gt; (product.toString, score.toString) &#125;</span><br><span class="line">      (uid, product)</span><br><span class="line">    &#125;).flatMap &#123;</span><br><span class="line">      case (uid, product) =&gt; &#123;</span><br><span class="line">        product.map &#123; case (itemId, score) =&gt; Row.apply(uid.toLong, itemId.toString, score.toDouble, createDateString.toString) &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // println(originResultRdd2.first())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    val schema = StructType(</span><br><span class="line">      StructField("uid", LongType) ::</span><br><span class="line">        StructField("coupon_id", LongType) ::</span><br><span class="line">        StructField("score", DoubleType) ::</span><br><span class="line">        StructField("calc_date", StringType) :: Nil)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    val df = sqlContext.createDataFrame(originResultRdd2, schema)</span><br><span class="line"></span><br><span class="line">    df.insertIntoJDBC(url, outputTable, false)</span><br><span class="line">    // 设置为 true，则为 删除表，然后自动创建，再插入</span><br><span class="line"></span><br><span class="line">    println("end !")</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>DF 通过插入 RMDB.  schema 可以通过反射来使得程序扩展性提高。</p>
</blockquote>
<p><a href="http://www.cnblogs.com/yaohaitao/articles/5681984.html" target="_blank" rel="external">spark sql internet</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python特殊语法：filter、map、reduce、lambda]]></title>
      <url>http://iequa.com/2017/05/01/ml-python-filter-map-reduce/</url>
      <content type="html"><![CDATA[<p>Python内置了一些非常有趣但非常有用的函数，充分体现了Python的语言魅力！</p>
<h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p>filter(function, sequence)：对sequence中的item依次执行function(item)，将执行结果为True的item组成一个List/String/Tuple（取决于sequence的类型）返回：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span> <span class="keyword">return</span> x % <span class="number">2</span> != <span class="number">0</span> <span class="keyword">and</span> x % <span class="number">3</span> != <span class="number">0</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>filter(f, range(<span class="number">2</span>, <span class="number">25</span>)) </span><br><span class="line">[<span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">23</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span> <span class="keyword">return</span> x != <span class="string">'a'</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>filter(f, <span class="string">"abcdef"</span>) </span><br><span class="line"><span class="string">'bcdef'</span></span><br></pre></td></tr></table></figure>
<h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>map(function, sequence) ：对sequence中的item依次执行function(item)，见执行结果组成一个List返回：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">cube</span><span class="params">(x)</span>:</span> <span class="keyword">return</span> x*x*x </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>map(cube, range(<span class="number">1</span>, <span class="number">11</span>)) </span><br><span class="line">[<span class="number">1</span>, <span class="number">8</span>, <span class="number">27</span>, <span class="number">64</span>, <span class="number">125</span>, <span class="number">216</span>, <span class="number">343</span>, <span class="number">512</span>, <span class="number">729</span>, <span class="number">1000</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">cube</span><span class="params">(x)</span> :</span> <span class="keyword">return</span> x + x </span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>map(cube , <span class="string">"abcde"</span>) </span><br><span class="line">[<span class="string">'aa'</span>, <span class="string">'bb'</span>, <span class="string">'cc'</span>, <span class="string">'dd'</span>, <span class="string">'ee'</span>]</span><br><span class="line">另外map也支持多个sequence，这就要求function也支持相应数量的参数输入：</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y)</span>:</span> <span class="keyword">return</span> x+y </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>map(add, range(<span class="number">8</span>), range(<span class="number">8</span>)) </span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>]</span><br></pre></td></tr></table></figure>
<h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p>reduce(function, sequence, starting_value)：对sequence中的item顺序迭代调用function，如果有starting_value，还可以作为初始值调用，例如可以用来对List求和：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span> <span class="keyword">return</span> x + y </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reduce(add, range(<span class="number">1</span>, <span class="number">11</span>)) </span><br><span class="line"><span class="number">55</span> （注：<span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>+<span class="number">4</span>+<span class="number">5</span>+<span class="number">6</span>+<span class="number">7</span>+<span class="number">8</span>+<span class="number">9</span>+<span class="number">10</span>）</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reduce(add, range(<span class="number">1</span>, <span class="number">11</span>), <span class="number">20</span>) </span><br><span class="line"><span class="number">75</span> （注：<span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>+<span class="number">4</span>+<span class="number">5</span>+<span class="number">6</span>+<span class="number">7</span>+<span class="number">8</span>+<span class="number">9</span>+<span class="number">10</span>+<span class="number">20</span>）</span><br></pre></td></tr></table></figure>
<h2 id="lambda"><a href="#lambda" class="headerlink" title="lambda"></a>lambda</h2><p>lambda：这是Python支持一种有趣的语法，它允许你快速定义单行的最小函数，类似与C语言中的宏，这些叫做lambda的函数，是从LISP借用来的，可以用在任何需要函数的地方： </p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = <span class="keyword">lambda</span> x: x * <span class="number">2</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g(<span class="number">3</span>) </span><br><span class="line"><span class="number">6</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="keyword">lambda</span> x: x * <span class="number">2</span>)(<span class="number">3</span>) </span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>我们也可以把filter map reduce 和lambda结合起来用，函数就可以简单的写成一行。<br>例如<br>kmpathes = filter(lambda kmpath: kmpath,<br>map(lambda kmpath: string.strip(kmpath),<br>string.split(l, ‘:’)))<br>看起来麻烦，其实就像用语言来描述问题一样，非常优雅。<br>对 l 中的所有元素以’:’做分割，得出一个列表。对这个列表的每一个元素做字符串strip，形成一个列表。对这个列表的每一个元素做直接返回操作(这个地方可以加上过滤条件限制)，最终获得一个字符串被’:’分割的列表，列表中的每一个字符串都做了strip，并可以对特殊字符串过滤。</p>
<p>[转] <a href="http://hi.baidu.com/black/item/307001d18715fc322a35c747" target="_blank" rel="external">http://hi.baidu.com/black/item/307001d18715fc322a35c747</a></p>
<hr>
<p>lambda表达式返回一个函数对象<br>例子：<br>func = lambda x,y:x+y<br>func相当于下面这个函数<br>def func(x,y):<br>    return x+y</p>
<p>注意def是语句而lambda是表达式<br>下面这种情况下就只能用lambda而不能用def<br>[(lambda x:x*x)(x) for x in range(1,11)]</p>
<p>map，reduce，filter中的function都可以用lambda表达式来生成！</p>
<p>map(function,sequence)<br>把sequence中的值当参数逐个传给function，返回一个包含函数执行结果的list。<br>如果function有两个参数，即map(function,sequence1,sequence2)。</p>
<p>例子：<br>求1<em>1,2</em>2,3<em>3,4</em>4<br>map(lambda x:x*x,range(1,5))<br>返回值是[1,4,9,16]</p>
<p>reduce(function,sequence)<br>function接收的参数个数只能为2<br>先把sequence中第一个值和第二个值当参数传给function，再把function的返回值和第三个值当参数传给<br>function，然后只返回一个结果。</p>
<p>例子：<br>求1到10的累加<br>reduce(lambda x,y:x+y,range(1,11))<br>返回值是55。</p>
<p>filter(function,sequence)<br>function的返回值只能是True或False<br>把sequence中的值逐个当参数传给function，如果function(x)的返回值是True，就把x加到filter的返回值里面。一般来说filter的返回值是list，特殊情况如sequence是string或tuple，则返回值按照sequence的类型。</p>
<p>例子：<br>找出1到10之间的奇数<br>filter(lambda x:x%2!=0,range(1,11))<br>返回值<br>[1,3,5,7,9]</p>
<p>如果sequence是一个string<br>filter(lambda x:len(x)!=0,’hello’)返回’hello’<br>filter(lambda x:len(x)==0,’hello’)返回’’</p>
<p>[转] <a href="http://blog.csdn.net/myzhan/article/details/7269471" target="_blank" rel="external">http://blog.csdn.net/myzhan/article/details/7269471</a></p>
<p>分类: Functional Programming</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark之路—Spark SQL编程]]></title>
      <url>http://iequa.com/2017/04/28/spark-SQL/</url>
      <content type="html"><![CDATA[<p>Spark SQL，可对不同格式的数据执行ETL操作（如JSON，Parquet，数据库）然后完成特定的查询操作。</p>
<ul>
<li>DataFrame</li>
<li>Data Sources</li>
<li>JDBC Server</li>
</ul>
<p>使用Spark SQL时，最主要的两个组件就是 <strong>DataFrame</strong> 和 <strong>SQLContext</strong>。</p>
<h2 id="1-DataFrame"><a href="#1-DataFrame" class="headerlink" title="1. DataFrame"></a>1. DataFrame</h2><p>DataFrame 是一个分布式的，按照命名列的形式组织的数据集合。DataFrame基于R语言中的dataframe概念，与关系型数据库中的数据库表类似。</p>
<blockquote>
<p>之前版本的Spark SQL API中的SchemaRDD已经更名为DataFrame</p>
</blockquote>
<p>调用将DataFrame的内容作为行RDD（RDD of Rows）返回的<a href="https://spark.apache.org/docs/1.3.0/api/scala/index.html#org.apache.spark.sql.DataFrame" target="_blank" rel="external">rdd方法</a>，可以将DataFrame转换成RDD。</p>
<p><strong>创建 DataFrame</strong></p>
<p>可以通过如下 <font color="#c7254e">数据源创建 DataFrame</font> : </p>
<ul>
<li>已有的RDD</li>
<li>结构化数据文件</li>
<li>JSON数据集</li>
<li>Hive表</li>
<li>外部数据库</li>
</ul>
<p><strong>DataFrame API</strong></p>
<p>Spark SQL和DataFrame API已经在下述几种程序设计语言中实现：</p>
<ul>
<li><a href="https://spark.apache.org/docs/1.3.0/api/scala/index.html#org.apache.spark.sql.package" target="_blank" rel="external">Scala DataFrame API</a></li>
<li><a href="https://spark.apache.org/docs/1.3.0/api/java/index.html?org/apache/spark/sql/api/java/package-summary.html" target="_blank" rel="external">Java DataFrame API</a></li>
<li><a href="https://spark.apache.org/docs/1.3.0/api/python/pyspark.sql.html" target="_blank" rel="external">Python DataFrame API</a></li>
</ul>
<h2 id="2-SQLContext"><a href="#2-SQLContext" class="headerlink" title="2. SQLContext"></a>2. SQLContext</h2><p>SQLContext封装Spark中的所有关系型功能。可以用之前的示例中的现有SparkContext创建SQLContext。</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> sqlContext = <span class="keyword">new</span> org.apache.spark.sql.<span class="type">SQLContext</span>(sc)</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="http://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.SQLContext" target="_blank" rel="external">SQLContext</a><br><a href="https://spark.apache.org/docs/1.3.0/api/scala/index.html#org.apache.spark.sql.hive.HiveContext" target="_blank" rel="external">HiveContext</a></p>
</blockquote>
<h2 id="3-JDBC数据源"><a href="#3-JDBC数据源" class="headerlink" title="3. JDBC数据源"></a>3. JDBC数据源</h2><p>JDBC 数据源 可用于通过JDBC API读取关系型数据库中的数据。相比于使用JdbcRDD，应该将JDBC数据源的方式作为首选，因为JDBC数据源能够将结果作为DataFrame对象返回，直接用Spark SQL处理或与其他数据源连接。</p>
<p>为确保Spark Shell程序有足够的内存，可以在运行spark-shell命令时，加入driver-memory命令行参数，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spark-shell.cmd --driver-memory 1G</span><br></pre></td></tr></table></figure>
<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><p><a href="http://www.infoq.com/cn/articles/apache-spark-sql" target="_blank" rel="external">用Apache Spark进行大数据处理——第二部分：Spark SQL</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark Read Mysql 的四种方式 (not finish)]]></title>
      <url>http://iequa.com/2017/04/20/spark-read-mysql-four-functions/</url>
      <content type="html"><![CDATA[<p>目前 <code>Spark</code> 支持四种方式从数据库中读取数据，这里以 <code>MySQL</code> 为例进行介绍。</p>
<h2 id="Startup-spark-shell"><a href="#Startup-spark-shell" class="headerlink" title="Startup spark-shell"></a>Startup spark-shell</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SPARK_CLASSPATH=/opt/cloudera/parcels/CDH/lib/sqoop/mysql-connector-java-5.1.40.jar spark-shell</span><br></pre></td></tr></table></figure>
<h2 id="1-不指定查询条件"><a href="#1-不指定查询条件" class="headerlink" title="1. 不指定查询条件"></a>1. 不指定查询条件</h2><h3 id="1-1-function-define"><a href="#1-1-function-define" class="headerlink" title="1.1 function define"></a>1.1 function define</h3><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jdbc</span></span>(url: <span class="type">String</span>, table: <span class="type">String</span>, properties: <span class="type">Properties</span>): <span class="type">DataFrame</span></span><br></pre></td></tr></table></figure>
<h3 id="1-2-detail-example"><a href="#1-2-detail-example" class="headerlink" title="1.2 detail example"></a>1.2 detail example</h3><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> url = <span class="string">"jdbc:mysql://192.168.***.**:3306/your_lib_name?user= your_username&amp;password=your_password"</span></span><br><span class="line"><span class="keyword">import</span> java.util.<span class="type">Properties</span></span><br><span class="line"><span class="keyword">val</span> prop = <span class="keyword">new</span> <span class="type">Properties</span>()</span><br><span class="line"><span class="keyword">val</span> df = sqlContext.read.jdbc(url, <span class="string">"mds_user_coupon_bhv"</span>, prop )</span><br><span class="line">println(df.count())</span><br><span class="line">println(df.rdd.partitions.size)</span><br></pre></td></tr></table></figure>
<p>我们运行上面的程序，可以看到df.rdd.partitions.size输出结果是1，这个结果的含义是iteblog表的所有数据都是由RDD的一个分区处理的，所以说，如果你这个表很大，很可能会出现OOM</p>
<blockquote>
<p>Note : 这种方式在数据量大的时候不建议使用。</p>
</blockquote>
<h2 id="2-指定数据库字段的范围"><a href="#2-指定数据库字段的范围" class="headerlink" title="2. 指定数据库字段的范围"></a>2. 指定数据库字段的范围</h2><p>这种方式就是通过指定数据库中某个字段的范围，但是<code>这个字段必须是数字</code>，来看看这个函数的函数原型：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jdbc</span></span>(</span><br><span class="line">    url: <span class="type">String</span>,</span><br><span class="line">    table: <span class="type">String</span>,</span><br><span class="line">    columnName: <span class="type">String</span>,</span><br><span class="line">    lowerBound: <span class="type">Long</span>,</span><br><span class="line">    upperBound: <span class="type">Long</span>,</span><br><span class="line">    numPartitions: <span class="type">Int</span>,</span><br><span class="line">    connectionProperties: <span class="type">Properties</span>): <span class="type">DataFrame</span></span><br></pre></td></tr></table></figure>
<p>… not finish</p>
<h2 id="3-根据任意字段进行分区"><a href="#3-根据任意字段进行分区" class="headerlink" title="3. 根据任意字段进行分区"></a>3. 根据任意字段进行分区</h2><p>… not finish</p>
<h2 id="4-通过-load-获取"><a href="#4-通过-load-获取" class="headerlink" title="4. 通过 load 获取"></a>4. 通过 load 获取</h2><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> df = sqlContext.load(<span class="string">"jdbc"</span>, <span class="type">Map</span>(<span class="string">"url"</span> -&gt; <span class="string">"jdbc:mysql://..."</span>, </span><br><span class="line">              <span class="string">"dbtable"</span> -&gt; <span class="string">"mds_user_coupon_bhv"</span>)</span><br><span class="line">         )</span><br></pre></td></tr></table></figure>
<p>换一种更正式的写法如下 :</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> df = sqlContext.read.format(<span class="string">"jdbc"</span>).options(<span class="type">Map</span>(</span><br><span class="line">      <span class="string">"url"</span> -&gt; <span class="string">"jdbc:mysql://192.168.***.**:3306/your_lib_name?user= your_username&amp;password=your_password"</span>,</span><br><span class="line">      <span class="string">"dbtable"</span> -&gt; <span class="string">"mds_user_coupon_bhv"</span>)</span><br><span class="line">   ).load()</span><br></pre></td></tr></table></figure>
<p>options函数支持url、driver、dbtable、partitionColumn、lowerBound、upperBound以及numPartitions选项，这个和方法二的参数一致。其内部实现原理部分和方法二大体一致。同时load方法还支持json、orc等数据源的读取。</p>
<blockquote>
<p>Reading notes</p>
</blockquote>
<h2 id="5-Ref"><a href="#5-Ref" class="headerlink" title="5. Ref"></a>5. Ref</h2><blockquote>
<p>尊重原创，转载请注明： 转载自过往记忆（<a href="http://www.iteblog.com/）" target="_blank" rel="external">http://www.iteblog.com/）</a> </p>
</blockquote>
<p><a href="http://blog.csdn.net/mlljava1111/article/details/50432569" target="_blank" rel="external">Spark Read Mysql-csdn</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[NodeJs Learning]]></title>
      <url>http://iequa.com/2017/03/30/frontend-nodejs/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Node.js 就是运行在服务端的 JavaScript。<br>Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。<br>Node.js 是一个事件驱动 I/O服务端 JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的非常快。</p>
</blockquote>
<h2 id="1-Hello-nodejs"><a href="#1-Hello-nodejs" class="headerlink" title="1. Hello nodejs"></a>1. Hello nodejs</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  nodejs git:(master) ✗ node -v</span><br><span class="line">v4.4.0</span><br><span class="line">➜  nodejs git:(master) ✗ cat helloworld.js</span><br><span class="line">console.log(<span class="string">"Hello World"</span>);</span><br><span class="line">➜  nodejs git:(master) ✗ node helloworld.js</span><br><span class="line">Hello World</span><br></pre></td></tr></table></figure>
<h2 id="2-Install-nodejs"><a href="#2-Install-nodejs" class="headerlink" title="2. Install nodejs"></a>2. Install nodejs</h2><p>…</p>
<h2 id="3-First-app-nodejs"><a href="#3-First-app-nodejs" class="headerlink" title="3. First app @nodejs"></a>3. First app @nodejs</h2><p>使用 Node.js 时，我们不仅仅 在实现一个应用，同时还实现了整个 HTTP 服务器。事实上，我们的 Web 应用以及对应的 Web 服务器基本上是一样的。</p>
<h3 id="3-1-nodejs-app-组成"><a href="#3-1-nodejs-app-组成" class="headerlink" title="3.1 nodejs app 组成"></a>3.1 nodejs app 组成</h3><p>Node.js 应用是由哪几部分组成的：</p>
<ol>
<li>引入 required 模块：我们可以使用 require 指令来载入 Node.js 模块。</li>
<li>创建服务器：服务器可以监听客户端的请求，类似于 Apache 、Nginx 等 HTTP 服务器。</li>
<li>接收请求与响应请求 服务器很容易创建，客户端可以使用浏览器或终端发送 HTTP 请求，服务器接收请求后返回响应数据。</li>
</ol>
<h3 id="3-2-创建-nodejs-app"><a href="#3-2-创建-nodejs-app" class="headerlink" title="3.2 创建 nodejs app"></a>3.2 创建 nodejs app</h3><p>server.js</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 我们使用 require 指令来载入 http 模块，并将实例化的 HTTP 赋值给变量 http，实例如下:</span><br><span class="line">var http = require(<span class="string">'http'</span>);</span><br><span class="line"></span><br><span class="line">// 使用 http.createServer() 方法创建服务器，并使用 listen 方法绑定 8888 端口。 函数通过 request, response 参数来接收和响应数据。</span><br><span class="line">http.createServer(<span class="keyword">function</span> (request, response) &#123;</span><br><span class="line"></span><br><span class="line">        // 发送 HTTP 头部</span><br><span class="line">        // HTTP 状态值: 200 : OK</span><br><span class="line">        // 内容类型: text/plain</span><br><span class="line">        response.writeHead(200, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>&#125;);</span><br><span class="line"></span><br><span class="line">        // 发送响应数据 <span class="string">"Hello World"</span></span><br><span class="line">        response.end(<span class="string">'Hello World\n'</span>);</span><br><span class="line">        &#125;).listen(8889);</span><br><span class="line"></span><br><span class="line">// 终端打印如下信息</span><br><span class="line">console.log(<span class="string">'Server running at http://127.0.0.1:8888/'</span>);</span><br></pre></td></tr></table></figure>
<p>run it</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node server.js</span><br></pre></td></tr></table></figure>
<h2 id="4-NPM-使用介绍"><a href="#4-NPM-使用介绍" class="headerlink" title="4. NPM 使用介绍"></a>4. NPM 使用介绍</h2><p>NPM 是 随同 NodeJS 一起安装的包管理工具，能解决NodeJS代码部署上的很多问题</p>
<ol>
<li>允许用户 从 NPM服务器下载别人编写的 <code>第三方包</code> 到本地使用。</li>
<li>允许用户 从 NPM服务器下载并安装别人 <code>编写的命令行程序</code> 到本地使用。</li>
<li>允许用户 将 自己编写的包或命令行程序 <code>上传到NPM服务器</code> 供别人使用。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  firstWebApp git:(master) ✗ npm -v</span><br><span class="line">2.14.20</span><br></pre></td></tr></table></figure>
<p>升级 npm</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo npm install npm -g</span><br></pre></td></tr></table></figure>
<p>安装模块</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install &lt;Module Name&gt;</span><br><span class="line">$ npm install express</span><br><span class="line">$ npm uninstall express</span><br><span class="line">$ npm ls</span><br><span class="line">$ npm update express</span><br><span class="line">$ npm search express</span><br><span class="line">npm <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt; 例如 : npm <span class="built_in">help</span> install。</span><br></pre></td></tr></table></figure>
<p>安装好之后，express 包就放在了工程目录下的 node_modules 目录中，因此在代码中只需要通过 require(‘express’) 的方式就好，无需指定第三方包路径。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var express = require(&apos;express&apos;);</span><br></pre></td></tr></table></figure>
<p><a href="http://www.runoob.com/nodejs/nodejs-npm.html" target="_blank" rel="external">more-info_runoob</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Recommendation System - 隐语义模型]]></title>
      <url>http://iequa.com/2017/03/24/rs-six-mouth-ALS/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<blockquote>
<p>隐语义模型</p>
<p>一个 User评分矩阵，但有些位置是空着的。(没打分)<br>我们要做的事情是，尽量填满未打分项</p>
<p>alternating least squares</p>
</blockquote>
<h2 id="1-Main-Idea"><a href="#1-Main-Idea" class="headerlink" title="1. Main Idea"></a>1. Main Idea</h2><p>应该有一些隐藏的因素，影响用户打分 :</p>
<ol>
<li><code>Movie</code> : 演员、题材、主题、年代 …</li>
<li>不一定是 人 直接可理解的隐藏因子</li>
<li>找到隐藏因子，可以对 user 和 item 进行关联</li>
</ol>
<h2 id="2-矩阵分解"><a href="#2-矩阵分解" class="headerlink" title="2. 矩阵分解"></a>2. 矩阵分解</h2><p><img src="/images/ml/rs-six-month-06.png" alt="Latent semantic model"></p>
<p><img src="/images/ml/rs-six-month-07.png" alt="Latent semantic model"></p>
<blockquote>
<p>总结: CF 简单直接可解释性强，但 <code>隐语义模型能更好地挖掘 User 和 Item 关联的 隐藏因子</code>。<br>SVD 时间复杂度太高，必须补充缺失的值 (上图数据不准确，别在意细节)</p>
</blockquote>
<table>
<thead>
<tr>
<th>-</th>
<th>D1</th>
<th>D2</th>
<th>D3</th>
<th>D4</th>
</tr>
</thead>
<tbody>
<tr>
<td>U1</td>
<td>5</td>
<td>3</td>
<td>-</td>
<td>1</td>
</tr>
<tr>
<td>U2</td>
<td>4</td>
<td>-</td>
<td>-</td>
<td>1</td>
</tr>
<tr>
<td>U3</td>
<td>1</td>
<td>1</td>
<td>-</td>
<td>5</td>
</tr>
<tr>
<td>U4</td>
<td>1</td>
<td>-</td>
<td>-</td>
<td>4</td>
</tr>
<tr>
<td>U5</td>
<td>-</td>
<td>1</td>
<td>5</td>
<td>4</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[New Mac Install Brew Iterm Zsh]]></title>
      <url>http://iequa.com/2017/03/22/ops-new-macosx-install-soft/</url>
      <content type="html"><![CDATA[<h2 id="1-install-homebrew"><a href="#1-install-homebrew" class="headerlink" title="1. install homebrew"></a>1. install homebrew</h2><p>Mac 下面的包管理工具，通过 Github 托管适合 Mac 的编译配置以及 Patch，可以方便的安装开发工具。</p>
<p>Mac 自带ruby 所以安装起来很方便，同时它也会自动把git也给你装上。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/ruby <span class="_">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>安装过程可能会有点慢，完成之后，建议执行一下自检，brew doctor<br>看到<br>Your system is ready to brew.<br>那么恭喜你的 brew 已经可以开始使用了。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install wget tree</span><br></pre></td></tr></table></figure>
<hr>
<p>brew 常用命令： （所有软件以PHP5.5为例子）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew update                        <span class="comment">#更新brew可安装包，建议每次执行一下</span></span><br><span class="line">brew search php55                  <span class="comment">#搜索php5.5</span></span><br><span class="line">brew tap josegonzalez/php          <span class="comment">#安装扩展&lt;gihhub_user/repo&gt; </span></span><br><span class="line">brew tap                          <span class="comment">#查看安装的扩展列表</span></span><br><span class="line">brew install php55                <span class="comment">#安装php5.5</span></span><br><span class="line">brew remove  php55                <span class="comment">#卸载php5.5</span></span><br><span class="line">brew upgrade php55                <span class="comment">#升级php5.5</span></span><br><span class="line">brew options php55                <span class="comment">#查看php5.5安装选项</span></span><br><span class="line">brew info    php55                <span class="comment">#查看php5.5相关信息</span></span><br><span class="line">brew home    php55                <span class="comment">#访问php5.5官方网站</span></span><br><span class="line">brew services list                <span class="comment">#查看系统通过 brew 安装的服务</span></span><br><span class="line">brew services cleanup              <span class="comment">#清除已卸载无用的启动配置文件</span></span><br><span class="line">brew services restart php55        <span class="comment">#重启php-fpm</span></span><br><span class="line"> </span><br><span class="line">注意：brew services 相关命令最好别经常用了，提示会被移除</span><br></pre></td></tr></table></figure>
<h2 id="2-install-zsh"><a href="#2-install-zsh" class="headerlink" title="2. install zsh"></a>2. install zsh</h2><p>ohmyzsh &amp; iTerm2 两个神器，在Mac os x下是一定要装的. </p>
<h3 id="2-1-install-onmyzsh"><a href="#2-1-install-onmyzsh" class="headerlink" title="2.1 install onmyzsh"></a>2.1 install onmyzsh</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -L http://install.ohmyz.sh | sh</span><br></pre></td></tr></table></figure>
<h3 id="2-2-install-zsh"><a href="#2-2-install-zsh" class="headerlink" title="2.2 install zsh"></a>2.2 install zsh</h3><p>在 Terminal 下，直接敲 zsh.</p>
<blockquote>
<p>下面请暂时忽略 </p>
</blockquote>
<hr>
<p>设置默认shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat /etc/shells </span><br><span class="line"># List of acceptable shells for chpass(1). </span><br><span class="line"># Ftpd will not allow users to connect who are not using </span><br><span class="line"># one of these shells. /bin/bash /bin/csh /bin/ksh /bin/sh /bin/tcsh /bin/zsh zsh --version zsh 5.0.2 (x86_64-apple-darwin13.0) chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>
<p>虽然Mac自带了zsh，如果你想要最新版的zsh，那么你用 brew install zsh安装一个最新的吧。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/usr/local/bin/zsh --version</span><br></pre></td></tr></table></figure>
<p>zsh 5.0.5 (x86_64-apple-darwin13.3.0) 区别也不会很大， 默认的版本已经很新了。  </p>
<p>安装后最好备份 : cp ~/.zshrc ~/.zshrc.orig</p>
<h2 id="3-homebrew-cask"><a href="#3-homebrew-cask" class="headerlink" title="3. homebrew-cask"></a>3. homebrew-cask</h2><p>install brew cask</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew tap phinze/homebrew-cask</span><br></pre></td></tr></table></figure>
<p>cask常用命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew cask search        #列出所有可以被安装的软件</span><br><span class="line">brew cask search php    #查找所有和php相关的应用</span><br><span class="line">brew cask list          #列出所有通过cask安装的软件</span><br><span class="line">brew cask info phpstorm #查看 phpstorm 的信息</span><br><span class="line">brew cask uninstall qq  #卸载 QQ</span><br></pre></td></tr></table></figure>
<blockquote>
<p>brew cask install sublime-text</p>
</blockquote>
<p>这里谈谈cask对比Mac App Store的优势：</p>
<ul>
<li>对常用软件支持更全面（特别是开发者），cask里面会给你一些惊喜；</li>
<li>软件更新速度快，一般都是最新版本 Store上很久很久才会更新版本；</li>
<li>命令安装感觉比打开Store方便，另外Store在国内的速度也是XXOO。</li>
</ul>
<blockquote>
<p>homebrew-cask 你可以先不安装</p>
</blockquote>
<h2 id="4-iterm2"><a href="#4-iterm2" class="headerlink" title="4. iterm2"></a>4. iterm2</h2><p> <a href="https://www.iterm2.com/" target="_blank" rel="external">https://www.iterm2.com/</a></p>
<h2 id="5-SimpleHTTPServer"><a href="#5-SimpleHTTPServer" class="headerlink" title="5. SimpleHTTPServer"></a>5. SimpleHTTPServer</h2><p>A computer</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer</span><br></pre></td></tr></table></figure>
<p>B computer</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http://192.168.xx.xx:8000/your-filename</span><br></pre></td></tr></table></figure>
<blockquote>
<p>nc 瑞士军刀，也可以两台电脑传输文件</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Recommendation System - CF]]></title>
      <url>http://iequa.com/2017/02/28/rs-six-mouth-CF/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>


<p>推荐算法</p>
<ul>
<li>基于内容的推荐</li>
<li>协同过滤 CF</li>
<li>矩阵分解 与 隐语义模型</li>
</ul>
<h2 id="1-推荐系统-What"><a href="#1-推荐系统-What" class="headerlink" title="1. 推荐系统 What?"></a>1. 推荐系统 What?</h2><h3 id="1-1-数学定义"><a href="#1-1-数学定义" class="headerlink" title="1.1 数学定义"></a>1.1 数学定义</h3><ul>
<li>设 C 为全体用户集合</li>
<li>设 S 为全部商品/推荐内容集合</li>
<li>设 u 是评判把 $s_i$ 推荐 $c_i$ 的好坏评判函数</li>
</ul>
<blockquote>
<p>推荐是对于 $c∈C$ ,找到 $s∈S$ ,使得 $u$ 最大</p>
</blockquote>
<h3 id="1-2-人话版本"><a href="#1-2-人话版本" class="headerlink" title="1.2 人话版本"></a>1.2 人话版本</h3><p>根据用户的 :</p>
<ol>
<li>历史行为</li>
<li>社交关系</li>
<li>兴趣点</li>
<li>上下文环境</li>
<li>…</li>
</ol>
<blockquote>
<p>去判断用户的当前需求 / 感兴趣的 Item</p>
</blockquote>
<h2 id="2-推荐系统-Why"><a href="#2-推荐系统-Why" class="headerlink" title="2. 推荐系统 Why?"></a>2. 推荐系统 Why?</h2><p>Infomation Overload<br>用户需求不明确</p>
<h3 id="2-1-对用户"><a href="#2-1-对用户" class="headerlink" title="2.1 对用户"></a>2.1 对用户</h3><ul>
<li>找到好玩的东西</li>
<li>发现新鲜事物 Surprise</li>
</ul>
<h3 id="2-2-对商家"><a href="#2-2-对商家" class="headerlink" title="2.2 对商家"></a>2.2 对商家</h3><ul>
<li>个性化服务、提高粘性</li>
<li>增加营收</li>
</ul>
<h2 id="3-评定标准"><a href="#3-评定标准" class="headerlink" title="3. 评定标准"></a>3. 评定标准</h2><ul>
<li>准确度</li>
<li>覆盖度</li>
<li>多样性</li>
<li>评估标准</li>
</ul>
<h3 id="3-1-准确度-Top-N"><a href="#3-1-准确度-Top-N" class="headerlink" title="3.1 准确度 Top N"></a>3.1 准确度 Top N</h3><p>设 $R(u)$ 为根据训练建立的模型在测试集上的推荐, $T(u)$ 为测试集上用户的选择。</p>
<p>$$<br>Precision =  \frac{\sum_{u∈U} | R(u) \bigcap T(u) | }{\sum_{u∈U} R(u)}<br>$$</p>
<p>$$<br>Recall =  \frac{\sum_{u∈U} | R(u) \bigcap T(u) | }{\sum_{u∈U} T(u)}<br>$$</p>
<blockquote>
<p>Recall 说明 : 用户看的 80 篇新闻，你到底给我 <code>推</code> 出来多少篇</p>
</blockquote>
<h3 id="3-2-覆盖率"><a href="#3-2-覆盖率" class="headerlink" title="3.2 覆盖率"></a>3.2 覆盖率</h3><p>表示对物品长尾的发掘能力 (推荐系统希望消除马太效应)</p>
<p>$$<br>Coverage = \frac{|U_{u∈U} R(u)|}{|I|}<br>$$</p>
<blockquote>
<p>覆盖率是对平台所有物品所言，淘宝推荐等会关切这个指标。</p>
<p>非常独特的商品和新闻, 被看到的量, 是一条下滑曲线</p>
<p>希望个性化推荐，把小众的商品 也推荐展示出来</p>
</blockquote>
<h3 id="3-3-多样性"><a href="#3-3-多样性" class="headerlink" title="3.3 多样性"></a>3.3 多样性</h3><p>表示推荐列表中物品两两之间的不相似性.</p>
<p>$$<br>Diversity(R(u)) = 1 - \frac {\sum_{i, j \in R(u), {i \neq j}, {s(i, j)} }} {\frac {1}{2} |R(u)|(|R(u) - 1|)}<br>$$</p>
<p>$$<br>Diversity = \frac {1} {|U|} {\sum_{u \in U} {Diversity(R(u))}}<br>$$</p>
<blockquote>
<p>全是牛仔裤的话，用户审美疲劳, tag(纯棉 0，圆领 1) 连衣裙, 计算 vector 距离。品类不同，相似度设为 0.</p>
</blockquote>
<h3 id="3-4-评估标准"><a href="#3-4-评估标准" class="headerlink" title="3.4 评估标准"></a>3.4 评估标准</h3><ul>
<li>新颖度 : 给用户 Surprise</li>
<li>惊喜度 : 推荐和用户历史兴趣不相似，却满意的</li>
<li>信任度 : 提供可靠的推荐理由</li>
<li>实时性 : 实时更新程度 (context, session …)</li>
<li>…</li>
</ul>
<h2 id="4-相似度-距离定义"><a href="#4-相似度-距离定义" class="headerlink" title="4. 相似度/距离定义"></a>4. 相似度/距离定义</h2><ul>
<li>欧氏距离</li>
<li>Jaccard 相似度</li>
<li>余弦相似度</li>
<li>Pearson 相似度</li>
</ul>
<h3 id="4-1-欧氏距离"><a href="#4-1-欧氏距离" class="headerlink" title="4.1 欧氏距离"></a>4.1 欧氏距离</h3><p>$$<br>dist(X, Y) = \left( \sum_{i=1}^n {| x_i - y_i|}^p \right)^{\frac {1}{p}}<br>$$</p>
<h3 id="4-2-Jaccard-相似度"><a href="#4-2-Jaccard-相似度" class="headerlink" title="4.2 Jaccard 相似度"></a>4.2 Jaccard 相似度</h3><p>$$<br>J(A, B) = \frac {|A \bigcap B|}{|A \bigcup B|}<br>$$</p>
<blockquote>
<p>适用于 top N 推荐，要么 看，要么 没看</p>
</blockquote>
<h3 id="4-3-余弦相似度"><a href="#4-3-余弦相似度" class="headerlink" title="4.3 余弦相似度"></a>4.3 余弦相似度</h3><p>$$<br>\cos(\theta) = \frac {a^Tb}{|a| \cdot |b|}<br>$$</p>
<h3 id="4-4-Pearson-相似度"><a href="#4-4-Pearson-相似度" class="headerlink" title="4.4 Pearson 相似度"></a>4.4 Pearson 相似度</h3><p>$$<br>\frac { \sum_{i=1}^n (X_i - {\mu}_x) (Y_i - {\mu}_y)} {\sqrt{ \sum_{i=1}^n (X_i - {\mu}_x)^2} \sqrt{ \sum_{i=1}^n (Y_i - {\mu}_y)^2}}<br>$$</p>
<blockquote>
<p>(5, 6, 9)<br>(1, 2, 6)</p>
</blockquote>
<h2 id="5-推荐算法"><a href="#5-推荐算法" class="headerlink" title="5. 推荐算法"></a>5. 推荐算法</h2><ol>
<li>基于内容的推荐</li>
<li>协同过滤CF</li>
<li>隐语义模型</li>
</ol>
<h3 id="5-1-基于内容推荐"><a href="#5-1-基于内容推荐" class="headerlink" title="5.1 基于内容推荐"></a>5.1 基于内容推荐</h3><ul>
<li>基于用户喜欢的 Item 的属性 / 内容进行挖掘</li>
<li>基于分析内容，无需考虑当前user与其他user的行为的交互关联等</li>
<li>通常使用在 <code>文本相关</code> 的产品上进行推荐</li>
<li>Item 通过内容 (比如 关键词) 关联</li>
</ul>
<p>在推荐电影中，也可以使用，但是效果不见得好. 你需要手动对 Item 进行离线挖掘，拿出 tag</p>
<blockquote>
<p>电影题材 : 爱情 / 探险 / 动作  / 喜剧<br>标志特征 : 黄晓明 / 王宝强<br>年代 : 1995, 2016 …<br>关键词</p>
</blockquote>
<p>两个Item根据 tag 的分值，进行求 距离.</p>
<hr>
<p><strong>举例文本挖掘 :</strong></p>
<p>One : 对于每个要推荐的内容,我们需要建立一份资料 :</p>
<blockquote>
<p>比如词 $k_i$ 在文档 $d_j$ 中的权重 $w_{ij}$ (常用的方法比如 TF-IDF)</p>
<p>有一个词表 Item [$w_1$, $w_2$, … ,$w_{4000}$], 对每个 document 建立一个词表 vector。</p>
</blockquote>
<p>Two : 需要对用户也建立一份资料 :</p>
<blockquote>
<p>比如说定义一个权重向量 ($w_{c1},…,w_{ck}$) , 其中 $w_{ci}$ 表示第 $k_i$ 个词对用户 $c$ 的重要度<br>user 之前有看过的 小说 或 文档。(看过的文档放在一起搞一个doc_vector，或者 将 doc_vector 加权平均)</p>
</blockquote>
<p>Three : 计算匹配度 </p>
<blockquote>
<p>余弦距离公式</p>
</blockquote>
<p>$$<br>u(c, s) = \cos(\vec{w_c}, \vec{w_s}) = \frac{\vec{w_c} \cdot \vec{w_s}}{\vec{||w_c||} \times \vec{||w_s||}}<br>$$</p>
<blockquote>
<p>总结三步 :</p>
<ol>
<li>对 每个 document 建立 vector</li>
<li>对 每个 user 建立 vector</li>
<li>比对 user 向量，与 该user 没有看过的 document 向量 之间的相似度</li>
</ol>
<p>TF-IDF : 评估一个 word 对当前 document 的重要性。 当前升高而升高，所有doc中，升高而下降。</p>
</blockquote>
<p><strong>Sample Example : 基于书名进行书推荐</strong></p>
<p>一个用户对《Building data mining applications for CRM》感兴趣，从以下书中进行推荐 :</p>
<ol>
<li><code>Building data mining applications for CRM</code></li>
<li>Accelerating Customer Relationships: Using CRM and Relationship Technologies</li>
<li>Mastering Data Mining: The Art and Science of Customer Relationship Management</li>
<li>Data Mining Your Website</li>
<li>Introduction to marketing</li>
<li>Consumer behavior</li>
<li>marketing research, a handbook </li>
<li>Customer knowledge manag</li>
</ol>
<p><img src="/images/ml/rs-six-month-01.png" alt="基于内容的推荐"></p>
<blockquote>
<p>TF-IDF Normed Vectors 值 (0.187、0.316) 代表 <code>Data</code> 对于当前 <code>标题</code> 的重要程度. </p>
<p>根据 TF-IDF，当前书名 与 图书馆所有书名 出现的次数, (去掉停用词, 如 and) 计算出来的权重。</p>
<p>所以 <code>《Building data mining applications for CRM》</code> 已经有一个列 vector， 与 其他所有 书 计算 相似度，相似度 高的，为推荐最好的。</p>
<p>This is only a sample show example， not the real method of thing.</p>
</blockquote>
<p>计算这本书和其余7本书的相似度，推荐最近的，这里结果为 :</p>
<blockquote>
<p>rank 1 : Data Mining Your Website<br>􏰅rank 2 : Accelerating Custom Relationships: Using CRM …<br>rank 3 : Mastering Data Mining: The Art and Science… 􏰬􏰭􏰮􏰀􏰁…</p>
</blockquote>
<p>结论 : 基于内容的推荐，无需用户行为的交互关联。</p>
<h3 id="5-2-协同过滤-User-based"><a href="#5-2-协同过滤-User-based" class="headerlink" title="5.2 协同过滤 (User-based)"></a>5.2 协同过滤 (User-based)</h3><p>找到和 User 最近的 其他 User􏰼􏰽􏰟􏰲􏰳􏰧􏰨􏰒􏰠􏰾􏰲􏰳 􏱅􏰲􏰳􏱆􏱀􏱁􏱂􏰕, 找到他们 看/买过但当前 User 没看/买过的 item，根据距离加权打分<br>找得分最高的推荐</p>
<blockquote>
<p>不需要提前挖掘 Item， 找品味接近的 5 个 friends。</p>
</blockquote>
<p><img src="/images/ml/rs-six-month-02.png" alt="User-based CF"></p>
<p>近邻怎么找 ?</p>
<table>
<thead>
<tr>
<th>U</th>
<th>a</th>
<th>b</th>
<th>c</th>
<th>d</th>
<th>e</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>5</td>
<td>1</td>
<td>5</td>
<td>3</td>
<td>2</td>
</tr>
<tr>
<td>B</td>
<td>4</td>
<td></td>
<td>3</td>
<td>1</td>
<td>1</td>
</tr>
</tbody>
</table>
<h3 id="5-3-协同过滤-Item-based"><a href="#5-3-协同过滤-Item-based" class="headerlink" title="5.3 协同过滤 (Item-based)"></a>5.3 协同过滤 (Item-based)</h3><blockquote>
<p>据现有 User 对 Item 的评级情况，来计算 Item 之间的某种相似度。已有Item 相似的 Item 被用来生成一个综合得分，而该得分用于评估未知物品的相似度。</p>
</blockquote>
<p>根据 User 对 Item 的行为，计算 item 和 item 相似度，找到和当前 item 最近的进行推荐。</p>
<p><img src="/images/ml/rs-six-month-03.png" alt="Item-based CF"></p>
<blockquote>
<p>Collaborative filtering 基于 近邻 的思想</p>
</blockquote>
<p>CF (Item-based) Summary :</p>
<ul>
<li>一个 User List ($u_i$, i = 1, …, n), 一个 Item List ($p_j$, j = 1, …, m)</li>
<li>一个 $n * m$ 矩阵 W, 每个元素 $W_{ij}$, 表示 ${User}_i$ 对 ${Item}_j$ 的打分</li>
<li>计算 item 和 item 之间的相似度</li>
</ul>
<p>$$<br>S(i, j) = \cos(\vec{i}, \vec{j}) = \frac{\vec{i} \cdot \vec{j}}{\vec{||i||} \times \vec{||j||}}<br>$$</p>
<ul>
<li>选取 Top K 推荐 或 加权预测得分</li>
</ul>
<p>$$<br>r_{xi} = \frac { {\sum_{j \in N (i;x)} S_{ij} \times r_{xj}}} { {\sum_{j \in N (i;x)} S_{ij}}}<br>$$</p>
<p><strong>Item-based Collaborative Filtering</strong></p>
<p><img src="/images/ml/rs-six-month-05.png" alt="CF-Item Collaborative Filtering"></p>
<blockquote>
<p>1 与 4 之间的相似度-0.10不对， 应该是 -0.83 等，数据有误。(按照 Pearson overlap 计算).</p>
<p>$r_{1.5}$ = (0.41*2 + 0.59*3) / (0.41 + 0.59) = 2.6</p>
<p>基于 Top N 来计算，这里是 Top 2.</p>
</blockquote>
<h4 id="User-CF-vs-Item-CF"><a href="#User-CF-vs-Item-CF" class="headerlink" title="User CF vs Item CF"></a>User CF vs Item CF</h4><table>
<thead>
<tr>
<th>属性</th>
<th>UserCF</th>
<th>ItemCF</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>性能</code></td>
<td>User多，计算User相似度矩阵代价很大</td>
<td>Item多，计算Item相似度矩阵代价很大</td>
</tr>
<tr>
<td><code>领域</code></td>
<td>User 个性化兴趣不太明显的领域</td>
<td>长尾物品丰富，用户个性化需求强烈的领域</td>
</tr>
<tr>
<td><code>实时性</code></td>
<td>用户有新行为，不一定推荐结果马上变化</td>
<td>用户有新行为，会导致推荐结果实时变化</td>
</tr>
<tr>
<td><code>冷启动</code></td>
<td>新用户行为，不能立即进行个性化推荐<br>(用户相似度是每隔一段时间离线计算的)</td>
<td>新用户对物品有行为，就可以给他推荐和该物品相关物品</td>
</tr>
<tr>
<td><code>推荐理由</code></td>
<td>很难提供令用户信服的推荐解释</td>
<td>利用用户的历史行为给用户做推荐解释</td>
</tr>
</tbody>
</table>
<h4 id="CF-优缺点"><a href="#CF-优缺点" class="headerlink" title="CF 优缺点"></a>CF 优缺点</h4><table>
<thead>
<tr>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td>基于用户行为，因此对推荐内容无需先验知识</td>
<td>需要大量的显性 / 隐性用户行为 (冷启动)</td>
</tr>
<tr>
<td>只需要用户和商品关联矩阵即可，结构简单</td>
<td>需要完全相同的商品关联，相似的不同</td>
</tr>
<tr>
<td>在用户行为丰富的情况下，效果好</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>(a, c) (b, c) 通过传递关系，可以近似的计算出来 (a, b) 相似度，矩阵稀疏的二度关联。</p>
</blockquote>
<h2 id="6-冷启动问题"><a href="#6-冷启动问题" class="headerlink" title="6. 冷启动问题"></a>6. 冷启动问题</h2><h3 id="6-1-New-User"><a href="#6-1-New-User" class="headerlink" title="6.1 New User"></a>6.1 New User</h3><ul>
<li>推荐 非常 热门 的商品，收集一些信息</li>
<li>用户注册的时候，收集信息，或者互动游戏，确定你喜欢否</li>
</ul>
<h3 id="6-2-New-Item"><a href="#6-2-New-Item" class="headerlink" title="6.2 New Item"></a>6.2 New Item</h3><ul>
<li>根据本身属性，求与原来 Item 相似度</li>
<li>Item-based CF 可推荐出去</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[About Keras Some Concepts]]></title>
      <url>http://iequa.com/2017/02/23/ml-keras-some-concept/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>


<h2 id="1-symbolic-computation"><a href="#1-symbolic-computation" class="headerlink" title="1. symbolic computation"></a>1. symbolic computation</h2><p>Keras的底层库使用Theano或TensorFlow，这两个库也称为Keras的后端。</p>
<blockquote>
<p>无论是Theano还是TensorFlow，都是一个“符号主义”的库。</p>
</blockquote>
<h2 id="2-tensor-张量"><a href="#2-tensor-张量" class="headerlink" title="2. tensor (张量)"></a>2. tensor (张量)</h2><p>张量可以看作是向量、矩阵的自然推广，我们用张量来表示广泛的数据类型。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line">sum0 = np.sum(a, axis=<span class="number">0</span>)</span><br><span class="line">sum1 = np.sum(a, axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> sum0</span><br><span class="line"><span class="keyword">print</span> sum1</span><br></pre></td></tr></table></figure>
<p>[4 6]<br>[3 7]</p>
<h2 id="3-‘th’与’tf’"><a href="#3-‘th’与’tf’" class="headerlink" title="3. ‘th’与’tf’"></a>3. ‘th’与’tf’</h2><p>在如何表示一组彩色图片的问题上，Theano和TensorFlow发生了分歧</p>
<h2 id="4-batch"><a href="#4-batch" class="headerlink" title="4. batch"></a>4. batch</h2><p><code>batch gradient descent</code></p>
<p>遍历全部数据集算一次损失函数，然后算函数对各个参数的梯度，更新梯度。这种方法每更新一次参数都要把数据集里的所有样本都看一遍，计算量开销大，计算速度慢，不支持在线学习，这称为Batch gradient descent，批梯度下降。</p>
<p><code>stochastic gradient descent</code></p>
<p>每看一个数据就算一下损失函数，然后求梯度更新参数，这个称为随机梯度下降，stochastic gradient descent。这个方法速度比较快，但是收敛性能不太好，可能在最优点附近晃来晃去，hit不到最优点。两次参数的更新也有可能互相抵消掉，造成目标函数震荡的比较剧烈。</p>
<p><code>mini batch gradient decent</code></p>
<p>为了克服 batch 和 stochastic 两种方法的缺点，现在一般采用的是一种折中手段，mini-batch gradient decent，小批的梯度下降，这种方法把数据分为若干个批，按批来更新参数，这样，一个批中的一组数据共同决定了本次梯度的方向，下降起来就不容易跑偏，减少了随机性。另一方面因为批的样本数与整个数据集相比小了很多，计算量也不是很大。</p>
<p>基本上现在的梯度下降都是基于mini-batch的，所以Keras的模块中经常会出现batch_size，就是指这个。</p>
<blockquote>
<p>Keras的优化器SGD是stochastic gradient descent的缩写，但不代表是一个样本就更新一回，还是mini-batch</p>
</blockquote>
<h2 id="5-to-new-beginner-explain"><a href="#5-to-new-beginner-explain" class="headerlink" title="5. to new beginner explain"></a>5. to new beginner explain</h2><p><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">Python Learning</a></p>
<ul>
<li>numpy, scipy, scikit-learn, pandas…</li>
<li>generator、lambda</li>
</ul>
<h2 id="6-about-deep-learning-concepts"><a href="#6-about-deep-learning-concepts" class="headerlink" title="6. about deep-learning concepts"></a>6. about deep-learning concepts</h2><blockquote>
<p>Keras 是为深度学习设计的工具</p>
</blockquote>
<ul>
<li>有监督学习，无监督学习，分类，聚类，回归</li>
<li>神经元模型，多层感知器，BP算法</li>
<li>目标函数（损失函数），激活函数，梯度下降法</li>
<li>全连接网络、卷积神经网络、递归神经网络</li>
<li>训练集，测试集，交叉验证，欠拟合，过拟合</li>
<li>数据规范化</li>
</ul>
<h2 id="Refence-article"><a href="#Refence-article" class="headerlink" title="Refence article"></a>Refence article</h2><p><a href="https://keras.io/getting-started/sequential-model-guide/" target="_blank" rel="external">keras.io</a><br><a href="http://keras-cn.readthedocs.io/en/latest/" target="_blank" rel="external">keras-cn.readthedocs.io</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python numpy.shape 和 numpy.reshape]]></title>
      <url>http://iequa.com/2017/02/21/ml-python-numpy-shape/</url>
      <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>Extension lib</th>
<th>introduction</th>
</tr>
</thead>
<tbody>
<tr>
<td>Numpy</td>
<td>提供数组支持，以及相应的高效处理函数</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *  </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure>
<h2 id="1-shape"><a href="#1-shape" class="headerlink" title="1. shape"></a>1. shape</h2><p>功能：给予数组一个新的形状，而不改变它的数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># list</span></span><br><span class="line">L=range(<span class="number">5</span>) <span class="comment"># [0, 1, 2, 3, 4]</span></span><br><span class="line">shape(L)   <span class="comment"># [5,]</span></span><br><span class="line">L=[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]] </span><br><span class="line">shape(L)</span><br></pre></td></tr></table></figure>
<p>(2, 3)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># array</span></span><br><span class="line"></span><br><span class="line">arr=array(range(<span class="number">5</span>)) </span><br><span class="line"><span class="keyword">print</span> arr</span><br><span class="line">shape(arr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"======  two dimension  ======"</span></span><br><span class="line"></span><br><span class="line">arr=array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line"><span class="keyword">print</span> arr</span><br><span class="line">shape(arr)</span><br></pre></td></tr></table></figure>
<p>======  two dimension  ======<br>[[1 2 3]<br>[4 5 6]]</p>
<p>(2, 3)</p>
<h2 id="2-reshape"><a href="#2-reshape" class="headerlink" title="2. reshape"></a>2. reshape</h2><p>newshape：整数值或整数元组。新的形状应该兼容于原始形状。<br>如果是一个整数值，表示一个一维数组的长度；<br>如果是元组，一个元素值可以为-1，此时该元素值表示为指定，此时会从数组的长度和剩余的维度中推断出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])  </span><br><span class="line">reshape(a, <span class="number">6</span>)</span><br></pre></td></tr></table></figure>
<p>array([1, 2, 3, 4, 5, 6])</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">reshape(a, (<span class="number">3</span>, <span class="number">-1</span>)) <span class="comment">#为指定的值将被推断出为2</span></span><br></pre></td></tr></table></figure>
<p>array([[1, 2],<br>       [3, 4],<br>       [5, 6]])</p>
<h2 id="Refence-article"><a href="#Refence-article" class="headerlink" title="Refence article"></a>Refence article</h2><p><a href="http://blog.csdn.net/u012005313/article/details/49383551" target="_blank" rel="external">numpy.shape</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mac install tensorFlow]]></title>
      <url>http://iequa.com/2017/02/21/ops-mac-install-tensorflow/</url>
      <content type="html"><![CDATA[<h2 id="1-instaled-pip"><a href="#1-instaled-pip" class="headerlink" title="1. instaled pip"></a>1. instaled pip</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装完后执行命令pip freeze列出安装的packages验证一下pip安装好没.</span></span><br><span class="line"></span><br><span class="line">$ pip freeze</span><br><span class="line">python-dateutil==1.5</span><br><span class="line">scikit-learn==0.18.dev0</span><br><span class="line">scipy==0.13.0b1</span><br><span class="line">six==1.10.0</span><br><span class="line">tensorflow==0.5.0</span><br><span class="line">terminado==0.6</span><br><span class="line">TFL==2.0.5</span><br><span class="line">tornado==4.3</span><br><span class="line">vboxapi==1.0</span><br><span class="line">virtualenv==15.1.0</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="2-install-tensorflow"><a href="#2-install-tensorflow" class="headerlink" title="2. install tensorflow"></a>2. install tensorflow</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Mac OS X, CPU only, Python 2.7:</span></span><br><span class="line">$ <span class="built_in">export</span> TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.0.0-py2-none-any.whl</span><br><span class="line"></span><br><span class="line"><span class="comment"># Only CPU-version is available at the moment.</span></span><br><span class="line">$ sudo pip install <span class="variable">$TF_BINARY_URL</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>maybe by vpn in China</p>
</blockquote>
<h2 id="3-install-virtualenv"><a href="#3-install-virtualenv" class="headerlink" title="3. install virtualenv"></a>3. install virtualenv</h2><p>virtualenv是python的沙箱工具.我们毕竟是在自己机器上做实验,为了不来回修改各种环境变量,我们一般还是弄个沙箱完比较好.测试完直接删除就行,不用再去改各种配置文件.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pip install --upgrade virtualenv</span><br><span class="line"></span><br><span class="line">Collecting virtualenv</span><br><span class="line">  Downloading virtualenv-15.1.0-py2.py3-none-any.whl (1.8MB)</span><br><span class="line">    100% |████████████████████████████████| 1.8MB 156kB/s</span><br><span class="line">Installing collected packages: virtualenv</span><br><span class="line">Successfully installed virtualenv-15.1.0</span><br></pre></td></tr></table></figure>
<p>安装好后创建一个工作目录,我直接在home里创建了个文件夹.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ virtualenv --system-site-packages ~/tensorflow</span><br></pre></td></tr></table></figure>
<p>然后进入目录激活沙箱.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd ~/tensorflow</span><br><span class="line">$ source bin/activate</span><br></pre></td></tr></table></figure>
<h2 id="4-install-tensorflow-in-virtualenv"><a href="#4-install-tensorflow-in-virtualenv" class="headerlink" title="4. install tensorflow in virtualenv"></a>4. install tensorflow in virtualenv</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(tensorflow) ➜  tensorflow pip install <span class="variable">$TF_BINARY_URL</span></span><br></pre></td></tr></table></figure>
<h2 id="5-run-tensorflow"><a href="#5-run-tensorflow" class="headerlink" title="5. run tensorflow"></a>5. run tensorflow</h2><p><a href="http://tensorflow.org/get_started/os_setup.md#try_your_first_tensorflow_program" target="_blank" rel="external">hello world</a></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">(tensorflow) ➜  tensorflow python</span><br><span class="line">Python 2.7.10 (default, Jul 14 2015, 19:46:27)</span><br><span class="line">[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.39)] on darwin</span><br><span class="line">Type "help", "copyright", "credits" or "license" for more information.</span><br><span class="line">&gt;&gt;&gt; import tensorflow as tf</span><br><span class="line">&gt;&gt;&gt; hello = tf.constant('Hello,TensorFlow!')</span><br><span class="line">&gt;&gt;&gt; sess = tf.Session()</span><br><span class="line">can't determine number of CPU cores: assuming 4</span><br><span class="line">I tensorflow/core/common_runtime/local_device.cc:25] Local device intra op parallelism threads: 4</span><br><span class="line">can't determine number of CPU cores: assuming 4</span><br><span class="line">I tensorflow/core/common_runtime/local_session.cc:45] Local session inter op parallelism threads: 4</span><br><span class="line">&gt;&gt;&gt; print sess.run(hello)</span><br><span class="line">Hello,TensorFlow!</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>let’s see this tensorflow dir</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  tensorflow ll</span><br><span class="line">total 4.0K</span><br><span class="line">drwxr-xr-x 16 hp staff 544 Feb 21 10:45 bin/</span><br><span class="line">drwxr-xr-x  3 hp staff 102 Feb 21 10:38 include/</span><br><span class="line">drwxr-xr-x  3 hp staff 102 Feb 21 10:38 lib/</span><br><span class="line">-rw-r--r--  1 hp staff  60 Feb 21 10:45 pip-selfcheck.json</span><br><span class="line">➜  tensorflow</span><br></pre></td></tr></table></figure>
<h2 id="6-install-keras"><a href="#6-install-keras" class="headerlink" title="6. install keras"></a>6. install keras</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pip install keras</span><br><span class="line"></span><br><span class="line">Successfully installed keras-1.2.2 pyyaml-3.12 theano-0.8.2</span><br></pre></td></tr></table></figure>
<h2 id="Refence"><a href="#Refence" class="headerlink" title="Refence"></a>Refence</h2><ol>
<li><a href="http://tensorflow.org" target="_blank" rel="external">tensorflow官方地址</a></li>
<li><a href="https://pypi.python.org/pypi/pip" target="_blank" rel="external">pip官方地址</a></li>
<li><a href="https://pypi.python.org/pypi/setuptools" target="_blank" rel="external">setuptools官方地址</a></li>
<li><a href="http://www.111cn.net/phper/python/66848.htm" target="_blank" rel="external">python安装setuptools步骤详解</a></li>
<li><a href="http://pan.baidu.com/s/1c1corG8" target="_blank" rel="external">about pdf文件下载</a></li>
<li><a href="http://tflearn.org/installation/#upgrade-tensorflow" target="_blank" rel="external">tflearn.org/installation</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Abalone's Age]]></title>
      <url>http://iequa.com/2017/02/17/ml-Abalone-Age-2017-02-17-1413/</url>
      <content type="html"><![CDATA[<h2 id="Abalone’s-Age"><a href="#Abalone’s-Age" class="headerlink" title="Abalone’s Age"></a><a href="http://www.pkbigdata.com/common/cmpt/成电大数据培训实践_竞赛信息.html" target="_blank" rel="external">Abalone’s Age</a></h2><p>『Abalone’s Age』</p>
<p>鲍鱼，在现代汉语中有多种含义。最常用的是指一种原始的海洋贝类，属于单壳软体动物，其只有半面外壳，壳坚厚、扁而宽，鲍鱼是中国传统的名贵食材，位居四大海味之首。<br>鲍鱼的优劣与年龄相关。一般来说，我们可以数鲍鱼的生长纹来确定鲍鱼的年龄，但数生长纹也是一件挺麻烦的事情。在这里，我们采用与鲍鱼年龄有关的因素来预测鲍鱼的年龄。</p>
<p>构建Pybrain神经网络的基本步骤：</p>
<ol>
<li>构建神经网路</li>
<li>构造数据集</li>
<li>训练神经网络</li>
<li>预测测试集结果</li>
<li>提交,验证和分析</li>
</ol>
<h2 id="1-分析问题"><a href="#1-分析问题" class="headerlink" title="1. 分析问题"></a>1. 分析问题</h2><p>分析什么特征是更重要的</p>
<p><strong><font color="red">先看看数据长什么样 </font></strong> 还是用pandas加载数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这个ipython notebook主要是我解决Kaggle Titanic问题的思路和过程</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd <span class="comment">#数据分析</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment">#科学计算</span></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"></span><br><span class="line">data_train = pd.read_csv(<span class="string">"traindata.csv"</span>)</span><br><span class="line"><span class="keyword">print</span> data_train.columns</span><br><span class="line"><span class="keyword">print</span> <span class="string">"============ df info ============"</span></span><br><span class="line">data_train.info()</span><br></pre></td></tr></table></figure>
<pre><code>Index([u&apos;Sex&apos;, u&apos;Length&apos;, u&apos;Diameter&apos;, u&apos;Hight&apos;, u&apos;Whole&apos;, u&apos;Shucked&apos;,
       u&apos;Viscera&apos;, u&apos;Shell&apos;, u&apos;Rings&apos;],
      dtype=&apos;object&apos;)
============ df info ============
&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;
RangeIndex: 3177 entries, 0 to 3176
Data columns (total 9 columns):
Sex         3177 non-null object
Length      3177 non-null float64
Diameter    3177 non-null float64
Hight       3177 non-null float64
Whole       3177 non-null float64
Shucked     3177 non-null float64
Viscera     3177 non-null float64
Shell       3177 non-null float64
Rings       3177 non-null int64
dtypes: float64(7), int64(1), object(1)
memory usage: 223.5+ KB
</code></pre><font color="blue">我们看大概有以下这些字段</font>

<ol>
<li>Sex</li>
<li>Length</li>
<li>Diameter</li>
<li>Hight</li>
<li>Whole</li>
<li>Shucked</li>
<li>Viscera</li>
<li>Shell</li>
<li>Rings =&gt; Age</li>
</ol>
<p>上面的数据说什么了？它告诉我们，一共有9 Column 数据，训练数据中总共有 3177 只 abalone，所有的数据都是全的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_train.describe()</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>~</th>
<th>Length</th>
<th>Diameter</th>
<th>Hight</th>
<th>Whole</th>
<th>Shucked</th>
<th>Viscera</th>
<th>Shell</th>
<th>Rings</th>
</tr>
</thead>
<tbody>
<tr>
<td>count</td>
<td>3177</td>
<td>3177</td>
<td>3177</td>
<td>3177</td>
<td>3177</td>
<td>3177</td>
<td>3177</td>
<td>3177</td>
</tr>
<tr>
<td>mean</td>
<td>0.52</td>
<td>0.41</td>
<td>0.14</td>
<td>0.83</td>
<td>0.36</td>
<td>0.18</td>
<td>0.24</td>
<td>9.92</td>
</tr>
</tbody>
</table>
<ul>
<li><font color="blue">『对数据的认识太重要了！』<font></font></font></li>
<li><font color="red">『对数据的认识太重要了！』<font></font></font></li>
<li><font color="green">『对数据的认识太重要了！』<font></font></font></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_train</span><br></pre></td></tr></table></figure>
<h2 id="2-准备数据"><a href="#2-准备数据" class="headerlink" title="2. 准备数据"></a>2. 准备数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 对 sex 进行 one-hot 编码</span></span><br><span class="line">dummies_Sex = pd.get_dummies(data_train[<span class="string">'Sex'</span>], prefix= <span class="string">'Sex'</span>)</span><br><span class="line"></span><br><span class="line">df = pd.concat([data_train, dummies_Sex], axis=<span class="number">1</span>)</span><br><span class="line">df.drop([<span class="string">'Sex'</span>], axis=<span class="number">1</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">train_df = df</span><br><span class="line">train_df</span><br></pre></td></tr></table></figure>
<h2 id="3-构造神经网络-NN"><a href="#3-构造神经网络-NN" class="headerlink" title="3. 构造神经网络 NN"></a>3. 构造神经网络 NN</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas.io.data <span class="keyword">as</span> wb</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pybrain.structure <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pybrain.datasets <span class="keyword">import</span> SupervisedDataSet</span><br><span class="line"><span class="keyword">from</span> pybrain.supervised.trainers <span class="keyword">import</span> BackpropTrainer</span><br><span class="line"></span><br><span class="line"><span class="comment"># createa neural network</span></span><br><span class="line">fnn = FeedForwardNetwork()</span><br><span class="line"></span><br><span class="line"><span class="comment"># create three layers, input layer:2 input unit; hidden layer: 10 units; output layer: 1 output</span></span><br><span class="line">inLayer = LinearLayer(<span class="number">10</span>, name=<span class="string">'inLayer'</span>)</span><br><span class="line">hiddenLayer0 = SigmoidLayer(<span class="number">3</span>, name=<span class="string">'hiddenLayer0'</span>)</span><br><span class="line">outLayer = LinearLayer(<span class="number">1</span>, name=<span class="string">'outLayer'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add three layers to the neural network</span></span><br><span class="line">fnn.addInputModule(inLayer)</span><br><span class="line">fnn.addModule(hiddenLayer0)</span><br><span class="line">fnn.addOutputModule(outLayer)</span><br><span class="line"></span><br><span class="line"><span class="comment"># link three layers</span></span><br><span class="line">in_to_hidden0 = FullConnection(inLayer,hiddenLayer0)</span><br><span class="line">hidden0_to_out = FullConnection(hiddenLayer0, outLayer)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add the links to neural network</span></span><br><span class="line">fnn.addConnection(in_to_hidden0)</span><br><span class="line">fnn.addConnection(hidden0_to_out)</span><br><span class="line"></span><br><span class="line"><span class="comment"># make neural network come into effect</span></span><br><span class="line">fnn.sortModules()</span><br></pre></td></tr></table></figure>
<h2 id="4-构造数据集"><a href="#4-构造数据集" class="headerlink" title="4. 构造数据集"></a>4. 构造数据集</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># obtain the original data</span></span><br><span class="line"></span><br><span class="line">x1 = train_df[<span class="string">'Length'</span>]</span><br><span class="line">x2 = train_df[<span class="string">'Diameter'</span>]</span><br><span class="line">x3 = train_df[<span class="string">'Hight'</span>]</span><br><span class="line">x4 = train_df[<span class="string">'Whole'</span>]</span><br><span class="line">x5 = train_df[<span class="string">'Shucked'</span>]</span><br><span class="line">x6 = train_df[<span class="string">'Viscera'</span>]</span><br><span class="line">x7 = train_df[<span class="string">'Shell'</span>]</span><br><span class="line">x8 = train_df[<span class="string">'Sex_F'</span>]</span><br><span class="line">x9 = train_df[<span class="string">'Sex_I'</span>]</span><br><span class="line">x10 = train_df[<span class="string">'Sex_M'</span>]</span><br><span class="line"></span><br><span class="line">y = train_df[<span class="string">'Rings'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># definite the dataset as two input , one output</span></span><br><span class="line">DS = SupervisedDataSet(<span class="number">10</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add data element to the dataset</span></span><br><span class="line"><span class="comment"># 往数据集内加样本点</span></span><br><span class="line"><span class="comment"># 假设x1，x2，x3是输入的三个维度向量，y是输出向量，并且它们的长度相同</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> np.arange(len(train_df)):</span><br><span class="line">    DS.addSample([x1[i],x2[i],x3[i],x4[i],x5[i],x6[i],x7[i],x8[i],x9[i],x10[i]],[y[i]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># you can get your input/output this way</span></span><br><span class="line"><span class="comment"># 如果要获得里面的输入／输出时，可以用</span></span><br><span class="line">X = DS[<span class="string">'input'</span>]</span><br><span class="line">Y = DS[<span class="string">'target'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># split the dataset into train dataset and test dataset</span></span><br><span class="line"><span class="comment"># 如果要把数据集切分成训练集和测试集，可以用下面的语句，训练集：测试集＝8:2</span></span><br><span class="line"><span class="comment"># 为了方便之后的调用，可以把输入和输出拎出来</span></span><br><span class="line">dataTrain, dataTest = DS.splitWithProportion(<span class="number">0.8</span>)</span><br><span class="line">xTrain, yTrain = dataTrain[<span class="string">'input'</span>],dataTrain[<span class="string">'target'</span>]</span><br><span class="line">xTest, yTest = dataTest[<span class="string">'input'</span>], dataTest[<span class="string">'target'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"bulid data sets end ！"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#print xTest[1]</span></span><br><span class="line">type(xTest)</span><br></pre></td></tr></table></figure>
<pre><code>bulid data sets end ！

numpy.ndarray
</code></pre><h2 id="5-训练神经网络"><a href="#5-训练神经网络" class="headerlink" title="5. 训练神经网络"></a>5. 训练神经网络</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># train the NN</span></span><br><span class="line"><span class="comment"># we use BP Algorithm</span></span><br><span class="line"><span class="comment"># verbose = True means print th total error</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"trainer start..."</span></span><br><span class="line">trainer = BackpropTrainer(fnn, dataTrain, verbose=<span class="keyword">False</span>,learningrate=<span class="number">0.01</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"run..."</span></span><br><span class="line"><span class="comment"># set the epoch times to make the NN  fit</span></span><br><span class="line">trainer.trainUntilConvergence(maxEpochs=<span class="number">500</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"trainer end!"</span></span><br></pre></td></tr></table></figure>
<pre><code>trainer start...
run...
trainer end!
</code></pre><h2 id="6-预测testdata"><a href="#6-预测testdata" class="headerlink" title="6. 预测testdata"></a>6. 预测testdata</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_test = pd.read_csv(<span class="string">"testdata.csv"</span>)</span><br><span class="line"><span class="comment"># 对 sex 进行 one-hot 编码</span></span><br><span class="line">dummies_Sex = pd.get_dummies(data_test[<span class="string">'Sex'</span>], prefix= <span class="string">'Sex'</span>)</span><br><span class="line"></span><br><span class="line">df = pd.concat([data_test, dummies_Sex], axis=<span class="number">1</span>)</span><br><span class="line">df.drop([<span class="string">'Sex'</span>], axis=<span class="number">1</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">df_test = df</span><br><span class="line">df_test</span><br><span class="line"></span><br><span class="line">test = df_test.filter(regex=<span class="string">'Length|Diameter|Hight|Whole|Shucked|Viscera|Shell|Sex_F|Sex_I|Sex_M'</span>)</span><br><span class="line">test</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">xTest = test.as_matrix()</span><br><span class="line">xTest</span><br><span class="line"><span class="comment"># prediction = fnn.activate(xTest[1])</span></span><br><span class="line"><span class="comment"># print("the prediction number is :",prediction," the real number is:  ",yTest[1])</span></span><br><span class="line">predict_resutl=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> np.arange(len(xTest)):</span><br><span class="line">    res = fnn.activate(xTest[i])[<span class="number">0</span>]</span><br><span class="line">    predict_resutl.append(round(res))</span><br><span class="line"></span><br><span class="line">final_res = np.array(predict_resutl).T</span><br><span class="line"></span><br><span class="line">result = pd.DataFrame(&#123;<span class="string">'ID'</span>:data_test[<span class="string">'ID'</span>].as_matrix(), <span class="string">'Rings'</span>:final_res&#125;)</span><br><span class="line">result</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result.to_csv(<span class="string">"abalone_predictions.csv"</span>, index=<span class="keyword">False</span>)</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Kaggle_Titanic]]></title>
      <url>http://iequa.com/2017/02/16/ml-NN-BPNN-Titanic-2017-02-16-1732-ipynb/</url>
      <content type="html"><![CDATA[<h2 id="泰坦尼克号"><a href="#泰坦尼克号" class="headerlink" title="泰坦尼克号"></a><a href="https://www.kaggle.com/c/titanic" target="_blank" rel="external">泰坦尼克号</a></h2><p>『Jack and Rose』的故事，豪华游艇倒了，大家都惊恐逃生，可是救生艇的数量有限，无法人人都有，副船长发话了『lady and kid first！』，所以是否获救其实并非随机，而是基于一些背景有rank先后的。<br><br>训练和测试数据是一些乘客的个人信息以及存活状况，要尝试根据它生成合适的模型并预测其他人的存活状况。<br></p>
<p>这是一个二分类问题，很多分类算法都可以解决。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">构建Pybrain神经网络的基本步骤：</span><br><span class="line"></span><br><span class="line">1. 构建神经网路</span><br><span class="line">2. 构造数据集</span><br><span class="line">3. 训练神经网络</span><br><span class="line">4. 预测测试集结果</span><br><span class="line">5. 验证和分析</span><br></pre></td></tr></table></figure>
<h2 id="1-分析问题"><a href="#1-分析问题" class="headerlink" title="1. 分析问题"></a>1. 分析问题</h2><blockquote>
<p>分析什么特征是更重要的</p>
</blockquote>
<p>先看看数据长什么样？ 还是用pandas加载数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这个ipython notebook主要是我解决Kaggle Titanic问题的思路和过程</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd <span class="comment">#数据分析</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment">#科学计算</span></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"></span><br><span class="line">data_train = pd.read_csv(<span class="string">"Train.csv"</span>)</span><br><span class="line"><span class="keyword">print</span> data_train.columns</span><br><span class="line"><span class="keyword">print</span> <span class="string">"============ df info ============"</span></span><br><span class="line">data_train.info()</span><br></pre></td></tr></table></figure>
<pre><code>Index([u&apos;PassengerId&apos;, u&apos;Survived&apos;, u&apos;Pclass&apos;, u&apos;Name&apos;, u&apos;Sex&apos;, u&apos;Age&apos;,
       u&apos;SibSp&apos;, u&apos;Parch&apos;, u&apos;Ticket&apos;, u&apos;Fare&apos;, u&apos;Cabin&apos;, u&apos;Embarked&apos;],
      dtype=&apos;object&apos;)
============ df info ============
&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
PassengerId    891 non-null int64
Survived       891 non-null int64
Pclass         891 non-null int64
Name           891 non-null object
Sex            891 non-null object
Age            714 non-null float64
SibSp          891 non-null int64
Parch          891 non-null int64
Ticket         891 non-null object
Fare           891 non-null float64
Cabin          204 non-null object
Embarked       889 non-null object
dtypes: float64(2), int64(5), object(5)
memory usage: 83.6+ KB
</code></pre><p>我们看大概有以下这些字段</p>
<p>PassengerId =&gt; 乘客ID<br>Pclass =&gt; 乘客等级(1/2/3等舱位)<br>Name =&gt; 乘客姓名<br>Sex =&gt; 性别<br>Age =&gt; 年龄<br>SibSp =&gt; 堂兄弟/妹个数<br>Parch =&gt; 父母与小孩个数<br>Ticket =&gt; 船票信息<br>Fare =&gt; 票价<br>Cabin =&gt; 客舱<br>Embarked =&gt; 登船港口</p>
<p>上面的数据说什么了？它告诉我们，训练数据中总共有891名乘客，但是很不幸，我们有些属性的数据不全，比如说：</p>
<ul>
<li>Age（年龄）属性只有714名乘客有记录</li>
<li>Cabin（客舱）更是只有204名乘客是已知的</li>
</ul>
<p>再瞄一眼具体数据数值情况，得到数值型数据的一些分布(因为有些属性，比如姓名，是文本型；而另外一些属性，比如登船港口，是类目型。这些我们用下面的函数是看不到的)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_train.describe()</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>-</th>
<th>PassengerId</th>
<th>Survived</th>
<th>Pclass</th>
<th>Age</th>
<th>SibSp</th>
<th>Parch</th>
<th>Fare</th>
</tr>
</thead>
<tbody>
<tr>
<td>count</td>
<td>891.000000</td>
<td>891.000000</td>
<td>891.000000</td>
<td>714.000000</td>
<td>891.000000</td>
<td>891.000000</td>
<td>891.000000</td>
</tr>
<tr>
<td>mean</td>
<td>446.000000</td>
<td>0.383838</td>
<td>2.308642</td>
<td>29.699118</td>
<td>0.523008</td>
<td>0.381594</td>
<td>32.204208</td>
</tr>
</tbody>
</table>
<p><font color="red">mean字段告诉我们，大概0.383838的人最后获救了，2/3等舱的人数比1等舱要多，平均乘客年龄大概是29.7岁(计算这个时候会略掉无记录的)等等…<font></font></font></p>
<ul>
<li><font color="blue">『对数据的认识太重要了！』<font></font></font></li>
<li><font color="red">『对数据的认识太重要了！』<font></font></font></li>
<li><font color="green">『对数据的认识太重要了！』<font></font></font></li>
</ul>
<p>总结 : </p>
<ol>
<li>Cabin，没看出什么明显特征，缺失值又太多</li>
<li>Age：可以尝试补全缺失的数据</li>
</ol>
<p><strong>通常遇到缺值的情况，我们会有几种常见的处理方式</strong><br><br></p>
<ol>
<li>如果缺值的样本占总数比例极高，我们可能就直接舍弃了，作为特征加入的话，可能反倒带入noise，影响最后的结果了</li>
<li>如果缺值的样本适中，而该属性非连续值特征属性(比如说类目属性)，那就把NaN作为一个新类别，加到类别特征中</li>
<li>如果缺值的样本适中，而该属性为连续值特征属性，有时候我们会考虑给定一个step(比如这里的age，我们可以考虑每隔2/3岁为一个步长)，然后把它离散化，之后把NaN作为一个type加到属性类目中。</li>
<li>有些情况下，缺失的值个数并不是特别多，那我们也可以试着根据已有的值，拟合一下数据，补充上。</li>
</ol>
<p>本例中，后两种处理方式应该都是可行的，我们先试试拟合补全吧(没有特别多的背景可供我们拟合，这不一定是一个好的选择)</p>
<p>我们这里用scikit-learn中的RandomForest来拟合一下缺失的年龄数据<br></p>
<ol>
<li>从数据来估计 Age 应该是比较重要的, 还有毕竟 副船长发话了『lady and kid first！』</li>
<li>Cabin 缺失值太多了，先按Cabin有无数据，将这个属性处理成Yes和No两种类型吧</li>
</ol>
<h2 id="2-准备数据"><a href="#2-准备数据" class="headerlink" title="2. 准备数据"></a>2. 准备数据</h2><ol>
<li>Age 与 cabin 补全</li>
<li>one-hot 编码</li>
<li>Feature Scaling</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我们这里用scikit-learn中的RandomForest来拟合一下缺失的年龄数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestRegressor</span><br><span class="line"> </span><br><span class="line"><span class="comment">### 使用 RandomForestClassifier 填补缺失的年龄属性</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_missing_ages</span><span class="params">(df)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 把已有的数值型特征取出来丢进Random Forest Regressor中</span></span><br><span class="line">    age_df = df[[<span class="string">'Age'</span>,<span class="string">'Fare'</span>, <span class="string">'Parch'</span>, <span class="string">'SibSp'</span>, <span class="string">'Pclass'</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 乘客分成已知年龄和未知年龄两部分</span></span><br><span class="line">    known_age = age_df[age_df.Age.notnull()].as_matrix()</span><br><span class="line">    unknown_age = age_df[age_df.Age.isnull()].as_matrix()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># y即目标年龄</span></span><br><span class="line">    y = known_age[:, <span class="number">0</span>] <span class="comment">## Age ‘s value list</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># X即特征属性值</span></span><br><span class="line">    X = known_age[:, <span class="number">1</span>:] <span class="comment">## Fare 的值 list</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># fit到RandomForestRegressor之中</span></span><br><span class="line">    rfr = RandomForestRegressor(random_state=<span class="number">0</span>, n_estimators=<span class="number">2000</span>, n_jobs=<span class="number">-1</span>)</span><br><span class="line">    rfr.fit(X, y)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 用得到的模型进行未知年龄结果预测</span></span><br><span class="line">    predictedAges = rfr.predict(unknown_age[:, <span class="number">1</span>::])</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 用得到的预测结果填补原缺失数据</span></span><br><span class="line">    df.loc[ (df.Age.isnull()), <span class="string">'Age'</span> ] = predictedAges </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> df, rfr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_Cabin_type</span><span class="params">(df)</span>:</span></span><br><span class="line">    df.loc[ (df.Cabin.notnull()), <span class="string">'Cabin'</span> ] = <span class="string">"Yes"</span></span><br><span class="line">    df.loc[ (df.Cabin.isnull()), <span class="string">'Cabin'</span> ] = <span class="string">"No"</span></span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line"></span><br><span class="line">data_train, rfr = set_missing_ages(data_train)</span><br><span class="line">data_train = set_Cabin_type(data_train)</span><br><span class="line">data_train</span><br></pre></td></tr></table></figure>
<p><strong>one-hot 编码</strong></p>
<p>因为逻辑回归建模时，需要输入的特征都是数值型特征，我们通常会先对类目型的特征因子化/one-hot编码。 <br><br>什么叫做因子化/one-hot编码？举个例子：<font><br></font></p>
<p>以Embarked为例，原本一个属性维度，因为其取值可以是[‘S’,’C’,’Q‘]，而将其平展开为’Embarked_C’,’Embarked_S’, ‘Embarked_Q’三个属性<font><br></font></p>
<ol>
<li>原Embarked取S的，在此处的”Embarked_S”下取值为1，在’Embarked_C’, ‘Embarked_Q’下取值为0<br></li>
<li>原Embarked取C的，在此处的”Embarked_C”下取值为1，在’Embarked_S’, ‘Embarked_Q’下取值为0<br></li>
<li>原Embarked取Q的，在此处的”Embarked_Q”下取值为1，在’Embarked_C’, ‘Embarked_S’下取值为0<br></li>
</ol>
<p>我们使用pandas的”get_dummies”来完成这个工作，并拼接在原来的”data_train”之上，如下所示。<br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 因为逻辑回归建模时，需要输入的特征都是数值型特征</span></span><br><span class="line"><span class="comment"># 我们先对类目型的特征离散/因子化</span></span><br><span class="line"><span class="comment"># 以Cabin为例，原本一个属性维度，因为其取值可以是['yes','no']，而将其平展开为'Cabin_yes','Cabin_no'两个属性</span></span><br><span class="line"><span class="comment"># 原本Cabin取值为yes的，在此处的'Cabin_yes'下取值为1，在'Cabin_no'下取值为0</span></span><br><span class="line"><span class="comment"># 原本Cabin取值为no的，在此处的'Cabin_yes'下取值为0，在'Cabin_no'下取值为1</span></span><br><span class="line"><span class="comment"># 我们使用pandas的get_dummies来完成这个工作，并拼接在原来的data_train之上，如下所示</span></span><br><span class="line">dummies_Cabin = pd.get_dummies(data_train[<span class="string">'Cabin'</span>], prefix= <span class="string">'Cabin'</span>)</span><br><span class="line"></span><br><span class="line">dummies_Embarked = pd.get_dummies(data_train[<span class="string">'Embarked'</span>], prefix= <span class="string">'Embarked'</span>)</span><br><span class="line"></span><br><span class="line">dummies_Sex = pd.get_dummies(data_train[<span class="string">'Sex'</span>], prefix= <span class="string">'Sex'</span>)</span><br><span class="line"></span><br><span class="line">dummies_Pclass = pd.get_dummies(data_train[<span class="string">'Pclass'</span>], prefix= <span class="string">'Pclass'</span>)</span><br><span class="line">df = pd.concat([data_train, dummies_Cabin, dummies_Embarked, dummies_Sex, dummies_Pclass], axis=<span class="number">1</span>)</span><br><span class="line">df.drop([<span class="string">'Pclass'</span>, <span class="string">'Name'</span>, <span class="string">'Sex'</span>, <span class="string">'Ticket'</span>, <span class="string">'Cabin'</span>, <span class="string">'Embarked'</span>], axis=<span class="number">1</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>PassengerId</th>
<th>…</th>
<th>Embarked_C</th>
<th>Embarked_Q</th>
<th>Embarked_S</th>
<th>Sex_female</th>
<th>Sex_male</th>
<th>Pclass_1</th>
<th>Pclass_2</th>
<th>Pclass_3</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>…</td>
<td>1.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>1.0</td>
<td>0.0</td>
<td>0.0</td>
<td>1.0</td>
</tr>
</tbody>
</table>
<p><strong>Feature Scaling</strong></p>
<p><font color="red">Age和Fare两个属性，乘客的数值幅度变化，scaling，其实就是将一些变化幅度较大的特征化到[-1,1]之内。<font></font></font></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 接下来我们要接着做一些数据预处理的工作，比如scaling，将一些变化幅度较大的特征化到[-1,1]之内</span></span><br><span class="line"><span class="comment"># 这样可以加速logistic regression的收敛</span></span><br><span class="line"><span class="keyword">import</span> sklearn.preprocessing <span class="keyword">as</span> preprocessing</span><br><span class="line">scaler = preprocessing.StandardScaler()</span><br><span class="line">age_scale_param = scaler.fit(df[<span class="string">'Age'</span>])</span><br><span class="line">df[<span class="string">'Age_scaled'</span>] = scaler.fit_transform(df[<span class="string">'Age'</span>], age_scale_param)</span><br><span class="line">fare_scale_param = scaler.fit(df[<span class="string">'Fare'</span>])</span><br><span class="line">df[<span class="string">'Fare_scaled'</span>] = scaler.fit_transform(df[<span class="string">'Fare'</span>], fare_scale_param)</span><br><span class="line">df</span><br><span class="line">train_df = df.filter(regex=<span class="string">'Survived|Age_.*|SibSp|Parch|Fare_.*|Cabin_.*|Embarked_.*|Sex_.*|Pclass_.*'</span>)</span><br><span class="line">train_df</span><br></pre></td></tr></table></figure>
<h2 id="3-构造神经网络"><a href="#3-构造神经网络" class="headerlink" title="3. 构造神经网络"></a>3. 构造神经网络</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas.io.data <span class="keyword">as</span> wb</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pybrain.structure <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pybrain.datasets <span class="keyword">import</span> SupervisedDataSet</span><br><span class="line"><span class="keyword">from</span> pybrain.supervised.trainers <span class="keyword">import</span> BackpropTrainer</span><br><span class="line"></span><br><span class="line"><span class="comment"># createa neural network</span></span><br><span class="line">fnn = FeedForwardNetwork()</span><br><span class="line"></span><br><span class="line"><span class="comment"># create three layers, input layer:2 input unit; hidden layer: 10 units; output layer: 1 output</span></span><br><span class="line">inLayer = LinearLayer(<span class="number">9</span>, name=<span class="string">'inLayer'</span>)</span><br><span class="line">hiddenLayer0 = SigmoidLayer(<span class="number">1</span>, name=<span class="string">'hiddenLayer0'</span>)</span><br><span class="line">outLayer = LinearLayer(<span class="number">1</span>, name=<span class="string">'outLayer'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add three layers to the neural network</span></span><br><span class="line">fnn.addInputModule(inLayer)</span><br><span class="line">fnn.addModule(hiddenLayer0)</span><br><span class="line">fnn.addOutputModule(outLayer)</span><br><span class="line"></span><br><span class="line"><span class="comment"># link three layers</span></span><br><span class="line">in_to_hidden0 = FullConnection(inLayer,hiddenLayer0)</span><br><span class="line">hidden0_to_out = FullConnection(hiddenLayer0, outLayer)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add the links to neural network</span></span><br><span class="line">fnn.addConnection(in_to_hidden0)</span><br><span class="line">fnn.addConnection(hidden0_to_out)</span><br><span class="line"></span><br><span class="line"><span class="comment"># make neural network come into effect</span></span><br><span class="line">fnn.sortModules()</span><br></pre></td></tr></table></figure>
<h2 id="4-构造数据集"><a href="#4-构造数据集" class="headerlink" title="4. 构造数据集"></a>4. 构造数据集</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># obtain the original data</span></span><br><span class="line"></span><br><span class="line">x1 = train_df[<span class="string">'SibSp'</span>]</span><br><span class="line">x2 = train_df[<span class="string">'Parch'</span>]</span><br><span class="line">x3 = train_df[<span class="string">'Sex_female'</span>]</span><br><span class="line">x4 = train_df[<span class="string">'Sex_male'</span>]</span><br><span class="line">x5 = train_df[<span class="string">'Pclass_1'</span>]</span><br><span class="line">x6 = train_df[<span class="string">'Pclass_2'</span>]</span><br><span class="line">x7 = train_df[<span class="string">'Pclass_3'</span>]</span><br><span class="line">x8 = train_df[<span class="string">'Age_scaled'</span>]</span><br><span class="line">x9 = train_df[<span class="string">'Fare_scaled'</span>]</span><br><span class="line"></span><br><span class="line">y = train_df[<span class="string">'Survived'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># definite the dataset as two input , one output</span></span><br><span class="line">DS = SupervisedDataSet(<span class="number">9</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add data element to the dataset</span></span><br><span class="line"><span class="comment"># 往数据集内加样本点</span></span><br><span class="line"><span class="comment"># 假设x1，x2，x3是输入的三个维度向量，y是输出向量，并且它们的长度相同</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> np.arange(len(train_df)):</span><br><span class="line">    DS.addSample([x1[i],x2[i],x3[i],x4[i],x5[i],x6[i],x7[i],x8[i],x9[i]],[y[i]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># you can get your input/output this way</span></span><br><span class="line"><span class="comment"># 如果要获得里面的输入／输出时，可以用</span></span><br><span class="line">X = DS[<span class="string">'input'</span>]</span><br><span class="line">Y = DS[<span class="string">'target'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># split the dataset into train dataset and test dataset</span></span><br><span class="line"><span class="comment"># 如果要把数据集切分成训练集和测试集，可以用下面的语句，训练集：测试集＝8:2</span></span><br><span class="line"><span class="comment"># 为了方便之后的调用，可以把输入和输出拎出来</span></span><br><span class="line">dataTrain, dataTest = DS.splitWithProportion(<span class="number">0.8</span>)</span><br><span class="line">xTrain, yTrain = dataTrain[<span class="string">'input'</span>],dataTrain[<span class="string">'target'</span>]</span><br><span class="line">xTest, yTest = dataTest[<span class="string">'input'</span>], dataTest[<span class="string">'target'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"bulid data sets end ！"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#print xTest[1]</span></span><br><span class="line">type(xTest)</span><br></pre></td></tr></table></figure>
<pre><code>bulid data sets end ！
numpy.ndarray
</code></pre><h2 id="5-训练神经网络"><a href="#5-训练神经网络" class="headerlink" title="5. 训练神经网络"></a>5. 训练神经网络</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># train the NN</span></span><br><span class="line"><span class="comment"># we use BP Algorithm</span></span><br><span class="line"><span class="comment"># verbose = True means print th total error</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"trainer start..."</span></span><br><span class="line">trainer = BackpropTrainer(fnn, dataTrain, verbose=<span class="keyword">False</span>,learningrate=<span class="number">0.01</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"run..."</span></span><br><span class="line"><span class="comment"># set the epoch times to make the NN  fit</span></span><br><span class="line">trainer.trainUntilConvergence(maxEpochs=<span class="number">500</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"trainer end!"</span></span><br></pre></td></tr></table></figure>
<pre><code>trainer start...
run...
trainer end!
</code></pre><h2 id="6-预测-test-csv"><a href="#6-预测-test-csv" class="headerlink" title="6. 预测 test.csv"></a>6. 预测 test.csv</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_test = pd.read_csv(<span class="string">"test.csv"</span>)</span><br><span class="line">data_test.loc[ (data_test.Fare.isnull()), <span class="string">'Fare'</span> ] = <span class="number">0</span></span><br><span class="line"><span class="comment"># 接着我们对test_data做和train_data中一致的特征变换</span></span><br><span class="line"><span class="comment"># 首先用同样的RandomForestRegressor模型填上丢失的年龄</span></span><br><span class="line">tmp_df = data_test[[<span class="string">'Age'</span>,<span class="string">'Fare'</span>, <span class="string">'Parch'</span>, <span class="string">'SibSp'</span>, <span class="string">'Pclass'</span>]]</span><br><span class="line">null_age = tmp_df[data_test.Age.isnull()].as_matrix()</span><br><span class="line"><span class="comment"># 根据特征属性X预测年龄并补上</span></span><br><span class="line">X = null_age[:, <span class="number">1</span>:]</span><br><span class="line">predictedAges = rfr.predict(X)</span><br><span class="line">data_test.loc[ (data_test.Age.isnull()), <span class="string">'Age'</span> ] = predictedAges</span><br><span class="line"></span><br><span class="line">data_test = set_Cabin_type(data_test)</span><br><span class="line">dummies_Cabin = pd.get_dummies(data_test[<span class="string">'Cabin'</span>], prefix= <span class="string">'Cabin'</span>)</span><br><span class="line">dummies_Embarked = pd.get_dummies(data_test[<span class="string">'Embarked'</span>], prefix= <span class="string">'Embarked'</span>)</span><br><span class="line">dummies_Sex = pd.get_dummies(data_test[<span class="string">'Sex'</span>], prefix= <span class="string">'Sex'</span>)</span><br><span class="line">dummies_Pclass = pd.get_dummies(data_test[<span class="string">'Pclass'</span>], prefix= <span class="string">'Pclass'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">df_test = pd.concat([data_test, dummies_Cabin, dummies_Embarked, dummies_Sex, dummies_Pclass], axis=<span class="number">1</span>)</span><br><span class="line">df_test.drop([<span class="string">'Pclass'</span>, <span class="string">'Name'</span>, <span class="string">'Sex'</span>, <span class="string">'Ticket'</span>, <span class="string">'Cabin'</span>, <span class="string">'Embarked'</span>], axis=<span class="number">1</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">df_test[<span class="string">'Age_scaled'</span>] = scaler.fit_transform(df_test[<span class="string">'Age'</span>], age_scale_param)</span><br><span class="line">df_test[<span class="string">'Fare_scaled'</span>] = scaler.fit_transform(df_test[<span class="string">'Fare'</span>], fare_scale_param)</span><br><span class="line">df_test</span><br><span class="line"></span><br><span class="line">test = df_test.filter(regex=<span class="string">'SibSp|Parch|Sex_female|Sex_male|Pclass_1|Pclass_2|Pclass_3|Age_scaled|Fare_scaled'</span>)</span><br><span class="line">xTest = test.as_matrix()</span><br><span class="line"><span class="comment"># prediction = fnn.activate(xTest[1])</span></span><br><span class="line"><span class="comment"># print("the prediction number is :",prediction," the real number is:  ",yTest[1])</span></span><br><span class="line">predict_resutl=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> np.arange(len(xTest)):</span><br><span class="line">    res = fnn.activate(xTest[i])[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> (res &gt; <span class="number">0.5</span>) :</span><br><span class="line">        res = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">    predict_resutl.append(res)</span><br><span class="line"></span><br><span class="line">final_res = np.array(predict_resutl).T</span><br><span class="line"></span><br><span class="line">result = pd.DataFrame(&#123;<span class="string">'PassengerId'</span>:data_test[<span class="string">'PassengerId'</span>].as_matrix(), <span class="string">'Survived'</span>:final_res&#125;)</span><br><span class="line">result</span><br></pre></td></tr></table></figure>
<h2 id="7-结果写入文件"><a href="#7-结果写入文件" class="headerlink" title="7. 结果写入文件"></a>7. 结果写入文件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result.to_csv(<span class="string">"logistic_regression_predictions.csv"</span>, index=<span class="keyword">False</span>)</span><br></pre></td></tr></table></figure>
<h2 id="8-验证和分析"><a href="#8-验证和分析" class="headerlink" title="8. 验证和分析"></a>8. 验证和分析</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> mod <span class="keyword">in</span> fnn.modules:</span><br><span class="line">  <span class="keyword">print</span> (<span class="string">"Module:"</span>, mod.name)</span><br><span class="line">  <span class="keyword">if</span> mod.paramdim &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"--parameters:"</span>, mod.params)</span><br><span class="line">  <span class="keyword">for</span> conn <span class="keyword">in</span> fnn.connections[mod]:</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"-connection to"</span>, conn.outmod.name)</span><br><span class="line">    <span class="keyword">if</span> conn.paramdim &gt; <span class="number">0</span>:</span><br><span class="line">       <span class="keyword">print</span> (<span class="string">"- parameters"</span>, conn.params)</span><br><span class="line">  <span class="keyword">if</span> hasattr(fnn, <span class="string">"recurrentConns"</span>):</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"Recurrent connections"</span>)</span><br><span class="line">    <span class="keyword">for</span> conn <span class="keyword">in</span> fnn.recurrentConns:</span><br><span class="line">       <span class="keyword">print</span> (<span class="string">"-"</span>, conn.inmod.name, <span class="string">" to"</span>, conn.outmod.name)</span><br><span class="line">       <span class="keyword">if</span> conn.paramdim &gt; <span class="number">0</span>:</span><br><span class="line">          <span class="keyword">print</span> (<span class="string">"- parameters"</span>, conn.params)</span><br></pre></td></tr></table></figure>
<pre><code>(&apos;Module:&apos;, &apos;outLayer&apos;)
(&apos;Module:&apos;, &apos;inLayer&apos;)
(&apos;-connection to&apos;, &apos;hiddenLayer0&apos;)
(&apos;- parameters&apos;, array([-0.47294263, -0.04334279,  0.77615167, -2.03865708,  2.38243634,
        0.69678661, -0.82062356, -0.70921933, -0.12044558]))
(&apos;Module:&apos;, &apos;hiddenLayer0&apos;)
(&apos;-connection to&apos;, &apos;outLayer&apos;)
(&apos;- parameters&apos;, array([ 1.08050317]))
</code></pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="http://blog.csdn.net/han_xiaoyang/article/details/49797143" target="_blank" rel="external">寒小阳-Titanic</a></li>
<li><a href="http://www.zengmingxia.com/topics/computing/" target="_blank" rel="external">一蓑烟雨任平生</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python pandas.DataFrame 类型数据操作函数 (not finish)]]></title>
      <url>http://iequa.com/2017/02/15/ml-python-pandas-2/</url>
      <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>Extension lib</th>
<th>introduction</th>
</tr>
</thead>
<tbody>
<tr>
<td>Numpy</td>
<td>提供数组支持，以及相应的高效处理函数</td>
</tr>
<tr>
<td>Scipy</td>
<td>提供矩阵支持，以及矩阵相关的数值计算模块</td>
</tr>
<tr>
<td>Matplotlib</td>
<td>数据可视化工具，作图库</td>
</tr>
<tr>
<td>Pandas</td>
<td>数据分析和探索工具</td>
</tr>
<tr>
<td>Scikit-Learn</td>
<td>支持回归，分类，聚类 等强大的机器学习库</td>
</tr>
</tbody>
</table>
<blockquote>
<p>Python数据分析工具pandas中DataFrame和Series作为主要的数据结构. 本文主要是介绍如何对DataFrame数据进行操作并结合一个实例测试操作函数。</p>
</blockquote>
<h2 id="1-查看DataFrame数据及属性"><a href="#1-查看DataFrame数据及属性" class="headerlink" title="1. 查看DataFrame数据及属性"></a>1. 查看DataFrame数据及属性</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df_obj = DataFrame() <span class="comment">#创建DataFrame对象</span></span><br><span class="line">df_obj.dtypes <span class="comment">#查看各行的数据格式</span></span><br><span class="line">df_obj[<span class="string">'列名'</span>].astype(int)<span class="comment">#转换某列的数据类型</span></span><br><span class="line">df_obj.head() <span class="comment">#查看前几行的数据,默认前5行</span></span><br><span class="line">df_obj.tail() <span class="comment">#查看后几行的数据,默认后5行</span></span><br><span class="line">df_obj.index <span class="comment">#查看索引</span></span><br><span class="line">df_obj.columns <span class="comment">#查看列名</span></span><br><span class="line">df_obj.values <span class="comment">#查看数据值</span></span><br><span class="line">df_obj.describe() <span class="comment">#描述性统计</span></span><br><span class="line">df_obj.T <span class="comment">#转置</span></span><br><span class="line">df_obj.sort_values(by=[<span class="string">''</span>,<span class="string">''</span>])<span class="comment">#同上</span></span><br></pre></td></tr></table></figure>
<h2 id="2-DataFrame选择数据"><a href="#2-DataFrame选择数据" class="headerlink" title="2. DataFrame选择数据"></a>2. DataFrame选择数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df_obj.ix[<span class="number">1</span>:<span class="number">3</span>] <span class="comment">#获取1-3行的数据,该操作叫切片操作,获取行数据</span></span><br><span class="line">df_obj.ix[columns_index] <span class="comment">#获取列的数据</span></span><br><span class="line">df_obj.ix[<span class="number">1</span>:<span class="number">3</span>，[<span class="number">1</span>,<span class="number">3</span>]]<span class="comment">#获取1列3列的1~3行数据</span></span><br><span class="line">df_obj[columns].drop_duplicates() <span class="comment">#剔除重复行数据</span></span><br></pre></td></tr></table></figure>
<h2 id="3-DataFrame重置数据"><a href="#3-DataFrame重置数据" class="headerlink" title="3. DataFrame重置数据"></a>3. DataFrame重置数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df_obj.ix[<span class="number">1</span>:<span class="number">3</span>，[<span class="number">1</span>,<span class="number">3</span>]]=<span class="number">1</span> <span class="comment">#所选位置数据替换为1</span></span><br></pre></td></tr></table></figure>
<h2 id="4-DataFrame筛选数据"><a href="#4-DataFrame筛选数据" class="headerlink" title="4. DataFrame筛选数据"></a>4. DataFrame筛选数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alist = [<span class="string">'023-18996609823'</span>]</span><br><span class="line">df_obj[<span class="string">'用户号码'</span>].isin(alist) <span class="comment">#将要过滤的数据放入字典中,使用isin对数据进行筛选,返回行索引以及每行筛选的结果,若匹配则返回ture</span></span><br><span class="line">df_obj[df_obj[<span class="string">'用户号码'</span>].isin(alist)] <span class="comment">#获取匹配结果为ture的行</span></span><br></pre></td></tr></table></figure>
<h2 id="Refence-article"><a href="#Refence-article" class="headerlink" title="Refence article"></a>Refence article</h2><p><a href="http://blog.csdn.net/ly_ysys629/article/details/54428838" target="_blank" rel="external">csdn-LY_ysys629</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera Week 5 - Neural Networks II]]></title>
      <url>http://iequa.com/2017/02/13/ml-coursera-ng-w4-nn-03/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p><img src="/images/ml/ml-ng-w4-02-02.png" alt=""></p>
<h2 id="1-Cost-Function"><a href="#1-Cost-Function" class="headerlink" title="1. Cost Function"></a>1. Cost Function</h2><p><img src="/images/ml/ml-ng-w4-02-04-2.png" alt=""></p>
<p>fmt.</p>
<p>$$<br>\begin{align} a_1^{(2)} = g(\Theta_{10}^{(1)}x_0 + \Theta_{11}^{(1)}x_1 + \Theta_{12}^{(1)}x_2 + \Theta_{13}^{(1)}x_3) \newline a_2^{(2)} = g(\Theta_{20}^{(1)}x_0 + \Theta_{21}^{(1)}x_1 + \Theta_{22}^{(1)}x_2 + \Theta_{23}^{(1)}x_3) \newline a_3^{(2)} = g(\Theta_{30}^{(1)}x_0 + \Theta_{31}^{(1)}x_1 + \Theta_{32}^{(1)}x_2 + \Theta_{33}^{(1)}x_3) \newline h_\Theta(x) = a_1^{(3)} = g(\Theta_{10}^{(2)}a_0^{(2)} + \Theta_{11}^{(2)}a_1^{(2)} + \Theta_{12}^{(2)}a_2^{(2)} + \Theta_{13}^{(2)}a_3^{(2)}) \newline \end{align}<br>$$</p>
<p>Let’s first define a few variables that we will need to use:</p>
<ul>
<li>$L$ = total number of layers in the network</li>
<li>$s_l$ = number of units (not counting bias unit) in layer l</li>
<li>$K$ = number of output units/classes</li>
</ul>
<p>Recall that in neural networks, we may have many output nodes. We denote $h_\Theta(x)_k$ as being a hypothesis that results in the $k^{th}$ output. Our cost function for neural networks is going to be a generalization of the one we used for logistic regression. Recall that the cost function for regularized logistic regression was:</p>
<p>$$<br>J(\theta) = - \frac{1}{m} \sum_{i=1}^m [ y^{(i)}\ \log (h_\theta (x^{(i)})) + (1 - y^{(i)})\ \log (1 - h_\theta(x^{(i)}))] + \frac{\lambda}{2m}\sum_{j=1}^n \theta_j^2<br>$$</p>
<p>For neural networks, it is going to be slightly more complicated:</p>
<p>$$<br>\begin{gather} J(\Theta) = - \frac{1}{m} \sum_{i=1}^m \sum_{k=1}^K \left[y^{(i)}_k \log ((h_\Theta (x^{(i)}))_k) + (1 - y^{(i)}_k)\log (1 - (h_\Theta(x^{(i)}))_k)\right] + \frac{\lambda}{2m}\sum_{l=1}^{L-1} \sum_{i=1}^{s_l} \sum_{j=1}^{s_{l+1}} ( \Theta_{j,i}^{(l)})^2\end{gather}<br>$$</p>
<p>We have added a few nested summations to account for our multiple output nodes. In the first part of the equation, before the square brackets, we have an additional nested summation that loops through the number of output nodes.</p>
<p>In the regularization part, after the square brackets, we must account for multiple theta matrices. The number of columns in our current theta matrix is equal to the number of nodes in our current layer (including the bias unit). The number of rows in our current theta matrix is equal to the number of nodes in the next layer (excluding the bias unit). As before with logistic regression, we square every term.</p>
<h2 id="2-Backpropagation-Algorithm"><a href="#2-Backpropagation-Algorithm" class="headerlink" title="2. Backpropagation Algorithm"></a>2. Backpropagation Algorithm</h2><p>“Backpropagation” is neural-network terminology for minimizing our cost function, just like what we were doing with gradient descent in logistic and linear regression. Our goal is to compute:</p>
<p>$$<br>\min_\Theta J(\Theta)<br>$$</p>
<p>That is, we want to minimize our cost function $J$ using an optimal set of parameters in theta. In this section we’ll look at the equations we use to compute the partial derivative of J(Θ):</p>
<p>$$<br>\dfrac{\partial}{\partial \Theta_{i,j}^{(l)}}J(\Theta)<br>$$</p>
<p>To do so, we use the following algorithm:</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera Week 4 - Neural Networks I]]></title>
      <url>http://iequa.com/2017/02/07/ml-coursera-ng-w4-nn-02/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p><img src="/images/ml/ml-ng-w4-02-02.png" alt="NN"></p>
<p>neuron is a computational unit that gets a number of inputs through it input wires and does some computation and then it says outputs via its axon to other nodes or to other neurons in the brain.</p>
<h2 id="1-Model-Representation-I"><a href="#1-Model-Representation-I" class="headerlink" title="1. Model Representation I"></a>1. Model Representation I</h2><p>Let’s examine how we will represent a hypothesis function using neural networks. At a very simple level, neurons are basically computational units that take inputs (<strong>dendrites</strong>) as electrical inputs (called “spikes”) that are channeled to outputs (<strong>axons</strong>). In our model, <strong>our dendrites are like the input features</strong> $x_1\cdots x_n$, and the <strong>output is the result of our hypothesis function</strong>. In this model our $x_0$ input node is sometimes called the “bias unit.” It is always equal to 1. In neural networks, we use the same logistic function as in classification, $\frac{1}{1 + e^{-\theta^Tx}}$, yet we sometimes call it a sigmoid (logistic) <strong>activation</strong> function. In this situation, our “theta” parameters are sometimes called “weights”.</p>
<p>Visually, a simplistic representation looks like:</p>
<p>$$<br>\begin{bmatrix}x_0 \newline x_1 \newline x_2 \newline \end{bmatrix}\rightarrow\begin{bmatrix}\ \ \ \newline \end{bmatrix}\rightarrow h_\theta(x)<br>$$</p>
<p><img src="/images/ml/ml-ng-w4-02-03.png" alt="NN"></p>
<p>Our input nodes (layer 1), also known as the “input layer”, go into another node (layer 2), which finally outputs the hypothesis function, known as the “output layer”.</p>
<p>We can have intermediate layers of nodes between the input and output layers called the “hidden layers.”</p>
<p>In this example, we label these intermediate or “hidden” layer nodes $a^2_0 \cdots a^2_n$ and call them “activation units.”</p>
<p>$$<br>\begin{align} &amp; a_i^{(j)} = \text{“activation” of unit $i$ in layer $j$} \newline&amp; \Theta^{(j)} = \text{matrix of weights controlling function mapping from layer $j$ to layer $j+1$} \end{align}<br>$$</p>
<p>If we had one hidden layer, it would <a href="/images/ml/ml-ng-w4-02-04-2.png">look like</a>:</p>
<p>$$<br>\begin{bmatrix}x_0 \newline x_1 \newline x_2 \newline x_3\end{bmatrix}\rightarrow\begin{bmatrix}a_1^{(2)} \newline a_2^{(2)} \newline a_3^{(2)} \newline \end{bmatrix}\rightarrow h_\theta(x)<br>$$</p>
<p>The values for each of the “activation” nodes is obtained as follows:</p>
<p>$$<br>\begin{align} a_1^{(2)} = g(\Theta_{10}^{(1)}x_0 + \Theta_{11}^{(1)}x_1 + \Theta_{12}^{(1)}x_2 + \Theta_{13}^{(1)}x_3) \newline a_2^{(2)} = g(\Theta_{20}^{(1)}x_0 + \Theta_{21}^{(1)}x_1 + \Theta_{22}^{(1)}x_2 + \Theta_{23}^{(1)}x_3) \newline a_3^{(2)} = g(\Theta_{30}^{(1)}x_0 + \Theta_{31}^{(1)}x_1 + \Theta_{32}^{(1)}x_2 + \Theta_{33}^{(1)}x_3) \newline h_\Theta(x) = a_1^{(3)} = g(\Theta_{10}^{(2)}a_0^{(2)} + \Theta_{11}^{(2)}a_1^{(2)} + \Theta_{12}^{(2)}a_2^{(2)} + \Theta_{13}^{(2)}a_3^{(2)}) \newline \end{align}<br>$$</p>
<p>This is saying that we compute our activation nodes by using a 3×4 matrix of parameters. We apply each row of the parameters to our inputs to obtain the value for one activation node. Our hypothesis output is the logistic function applied to the sum of the values of our activation nodes, which have been multiplied by yet another parameter matrix $\Theta^{(2)}$ containing the weights for our second layer of nodes.</p>
<p>Each layer gets its own matrix of weights, $\Theta^{(j)}$</p>
<p>The dimensions of these matrices of weights is determined as follows:</p>
<p>If network has $s_j$ units in layer $j$ and $s_{j+1}$ units in layer $j+1$, then $\Theta^{(j)}$ will be of dimension $s_{j+1} \times (s_j + 1)$</p>
<p>The +1 comes from the addition in $\Theta^{(j)}$ of the “bias nodes,” $x_0$ and $\Theta_0^{(j)}$. In other words the output nodes will not include the bias nodes while the inputs will. </p>
<h2 id="2-Model-Representation-II"><a href="#2-Model-Representation-II" class="headerlink" title="2. Model Representation II"></a>2. Model Representation II</h2><p>To re-iterate, the following is an example of a neural network:</p>
<p>$$<br>\begin{align} a_1^{(2)} = g(\Theta_{10}^{(1)}x_0 + \Theta_{11}^{(1)}x_1 + \Theta_{12}^{(1)}x_2 + \Theta_{13}^{(1)}x_3) \newline a_2^{(2)} = g(\Theta_{20}^{(1)}x_0 + \Theta_{21}^{(1)}x_1 + \Theta_{22}^{(1)}x_2 + \Theta_{23}^{(1)}x_3) \newline a_3^{(2)} = g(\Theta_{30}^{(1)}x_0 + \Theta_{31}^{(1)}x_1 + \Theta_{32}^{(1)}x_2 + \Theta_{33}^{(1)}x_3) \newline h_\Theta(x) = a_1^{(3)} = g(\Theta_{10}^{(2)}a_0^{(2)} + \Theta_{11}^{(2)}a_1^{(2)} + \Theta_{12}^{(2)}a_2^{(2)} + \Theta_{13}^{(2)}a_3^{(2)}) \newline \end{align}<br>$$</p>
<p>In this section we’ll do a vectorized implementation of the above functions. We’re going to define a new variable $z_k^{(j)}$ that encompasses the parameters inside our g function. In our previous example if we replaced by the variable z for all the parameters we would get:</p>
<p>$$<br>\begin{align}a_1^{(2)} = g(z_1^{(2)}) \newline a_2^{(2)} = g(z_2^{(2)}) \newline a_3^{(2)} = g(z_3^{(2)}) \newline \end{align}<br>$$</p>
<p>In other words, for layer $j=2$ and node $k$, the variable $z$ will be:</p>
<p>$$<br>z_k^{(2)} = \Theta_{k,0}^{(1)}x_0 + \Theta_{k,1}^{(1)}x_1 + \cdots + \Theta_{k,n}^{(1)}x_n<br>$$</p>
<p>The vector representation of $x$ and $z^{j}$ is:</p>
<p>$$<br>\begin{align}x = \begin{bmatrix}x_0 \newline x_1 \newline\cdots \newline x_n\end{bmatrix} &amp;z^{(j)} = \begin{bmatrix}z_1^{(j)} \newline z_2^{(j)} \newline\cdots \newline z_n^{(j)}\end{bmatrix}\end{align}<br>$$</p>
<p>Setting $x = a^{(1)}$, we can rewrite the equation as:</p>
<p>$$<br>z^{(j)} = \Theta^{(j-1)}a^{(j-1)}<br>$$</p>
<p>We are multiplying our matrix $\Theta^{(j-1)}$ with dimensions $s_j\times (n+1)$ (where $s_j$ is the number of our activation nodes) by our vector $a^{(j-1)}$ with height (n+1). This gives us our vector $z^{(j)}$ with height $s_j$. Now we can get a vector of our activation nodes for layer $j$ as follows:</p>
<p>$$<br>a^{(j)} = g(z^{(j)})<br>$$</p>
<p>Where our function $g$ can be applied element-wise to our vector $z^{(j)}$.</p>
<p>We can then add a bias unit (equal to 1) to layer j after we have computed $a^{(j)}$. This will be element $a_0^{(j)}$ and will be equal to 1. To compute our final hypothesis, let’s first compute another $z$ vector:</p>
<p>$$<br>z^{(j+1)} = \Theta^{(j)}a^{(j)}<br>$$</p>
<p>We get this final z vector by multiplying the next theta matrix after $\Theta^{(j-1)}$ with the values of all the activation nodes we just got. This last theta matrix $\Theta^{(j)}$ will have only one row which is multiplied by one column $a^{(j)}$ so that our result is a single number. We then get our final result with:</p>
<p>$$<br>h_\Theta(x) = a^{(j+1)} = g(z^{(j+1)})<br>$$</p>
<h2 id="3-Simple-Example"><a href="#3-Simple-Example" class="headerlink" title="3. Simple Example"></a>3. Simple Example</h2><p><img src="/images/ml/ml-ng-w4-02-06.png" alt="NN"></p>
<h3 id="3-1-x-1-AND-x-2"><a href="#3-1-x-1-AND-x-2" class="headerlink" title="3.1 $x_1$ AND $x_2$"></a>3.1 $x_1$ AND $x_2$</h3><p>A simple example of applying neural networks is by predicting $x_1$ AND $x_2$</p>
<p>$$<br>\begin{align} \begin{bmatrix}x_0 \newline x_1 \newline x_2\end{bmatrix} \rightarrow\begin{bmatrix}g(z^{(2)})\end{bmatrix} \rightarrow h_\Theta(x) \end{align}<br>$$</p>
<p>Let’s set our first theta matrix as:</p>
<p>$$<br>\Theta^{(1)} =\begin{bmatrix}-30 &amp; 20 &amp; 20\end{bmatrix}<br>$$</p>
<p>This will cause the output of our hypothesis to only be positive if both $x_1$ and $x_2$ are 1. In other words:</p>
<p>$$<br>\begin{align}&amp; h_\Theta(x) = g(-30 + 20x_1 + 20x_2) \newline \newline &amp; x_1 = 0 \ \ and \ \ x_2 = 0 \ \ then \ \ g(-30) \approx 0 \newline &amp; x_1 = 0 \ \ and \ \ x_2 = 1 \ \ then \ \ g(-10) \approx 0 \newline &amp; x_1 = 1 \ \ and \ \ x_2 = 0 \ \ then \ \ g(-10) \approx 0 \newline &amp; x_1 = 1 \ \ and \ \ x_2 = 1 \ \ then \ \ g(10) \approx 1\end{align}<br>$$</p>
<p><img src="/images/ml/ml-ng-w4-02-07.png" alt="NN"></p>
<h3 id="3-2-x-1-XNOR-x-2"><a href="#3-2-x-1-XNOR-x-2" class="headerlink" title="3.2 $x_1$ XNOR $x_2$"></a>3.2 $x_1$ XNOR $x_2$</h3><p>The $Θ^{(1)}$ matrices for AND, NOR, and OR are:</p>
<p>$$<br>\begin{align}AND:\newline\Theta^{(1)} &amp;=\begin{bmatrix}-30 &amp; 20 &amp; 20\end{bmatrix} \newline NOR:\newline\Theta^{(1)} &amp;= \begin{bmatrix}10 &amp; -20 &amp; -20\end{bmatrix} \newline OR:\newline\Theta^{(1)} &amp;= \begin{bmatrix}-10 &amp; 20 &amp; 20\end{bmatrix} \newline\end{align}<br>$$</p>
<p>We can combine these to get the XNOR logical operator (which gives 1 if $x_1$ and $x_2$ are both 0 or both 1).</p>
<p>$$<br>\begin{align} \begin{bmatrix}x_0 \newline x_1 \newline x_2\end{bmatrix} \rightarrow\begin{bmatrix}a_1^{(2)} \newline a_2^{(2)} \end{bmatrix} \rightarrow\begin{bmatrix}a^{(3)}\end{bmatrix} \rightarrow h_\Theta(x) \end{align}<br>$$</p>
<p>For the transition between the first and second layer, we’ll use a $Θ^{(1)}$ matrix that combines the values for AND and NOR:</p>
<p>$$<br>\Theta^{(1)} =\begin{bmatrix}-30 &amp; 20 &amp; 20 \newline 10 &amp; -20 &amp; -20\end{bmatrix}<br>$$</p>
<p>Let’s write out the values for all our nodes:</p>
<p>$$<br>\begin{align}&amp; a^{(2)} = g(\Theta^{(1)} \cdot x) \newline&amp; a^{(3)} = g(\Theta^{(2)} \cdot a^{(2)}) \newline&amp; h_\Theta(x) = a^{(3)}\end{align}<br>$$</p>
<p>And there we have the XNOR operator using one hidden layers! The following summarizes the above algorithm:</p>
<p><img src="/images/ml/ml-ng-w4-02-08.png" alt=""></p>
<h2 id="4-Multiclass-Classification"><a href="#4-Multiclass-Classification" class="headerlink" title="4. Multiclass Classification"></a>4. Multiclass Classification</h2><p>To classify data into multiple classes, we let our hypothesis function return a vector of values.</p>
<p><img src="/images/ml/ml-ng-w4-02-09.png" alt=""></p>
<p>We can define our set of resulting classes as y:</p>
<p><img src="/images/ml/ml-ng-w4-02-10.png" alt=""></p>
<p>Each $y^{(i)}$ represents a different image corresponding to either a car, pedestrian, truck, or motorcycle. </p>
<p><img src="/images/ml/ml-ng-w4-02-11.png" alt=""></p>
<p>Our resulting hypothesis for one set of inputs may look like:</p>
<p>$$<br>h_\Theta(x) =\begin{bmatrix}0 \newline 0 \newline 1 \newline 0 \newline\end{bmatrix}<br>$$</p>
<p>In which case our resulting class is the third one down, or $h_\Theta(x)_3$, which represents the motorcycle.</p>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[tensorflow]]></title>
      <url>http://iequa.com/2017/01/21/ml-tensorflow/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>


<p><a href="https://www.tensorflow.org/" target="_blank" rel="external">https://www.tensorflow.org/</a></p>
<p><a href="http://www.tensorfly.cn/" target="_blank" rel="external">http://www.tensorfly.cn/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[biggest bandit spy]]></title>
      <url>http://iequa.com/2017/01/21/life-China-modern-history/</url>
      <content type="html"><![CDATA[<h2 id="1-biggest-bandit-spy"><a href="#1-biggest-bandit-spy" class="headerlink" title="1. biggest bandit spy"></a>1. biggest bandit spy</h2><p>Guo Rugui</p>
<div class="video-container"><iframe src="//www.youtube.com/embed/O2tc43ceZ-c" frameborder="0" allowfullscreen></iframe></div>
<h2 id="2-Hold-down-Chiang-Kai-shek-pulse"><a href="#2-Hold-down-Chiang-Kai-shek-pulse" class="headerlink" title="2. Hold down Chiang Kai-shek pulse"></a>2. Hold down Chiang Kai-shek pulse</h2><p>Shen Anna</p>
<div class="video-container"><iframe src="//www.youtube.com/embed/dEy8yrB5ZIg" frameborder="0" allowfullscreen></iframe></div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Greenplum ods]]></title>
      <url>http://iequa.com/2017/01/20/db-greenplum-mysql-ext-ods/</url>
      <content type="html"><![CDATA[<h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h2><p><a href="https://github.com/blairchan/bigdata/tree/master/greenplum/ext_ods_table" target="_blank" rel="external">code : github ext_ods_table</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">运行本模块之前 :</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ext_ods_table</span><br><span class="line">mkdir <span class="built_in">log</span> flag</span><br><span class="line">mkdir -p <span class="built_in">log</span>/crontab</span><br><span class="line">mkdir data</span><br><span class="line"></span><br><span class="line">构造 datax json file， put it to **data** 目录</span><br></pre></td></tr></table></figure>
<h2 id="1-Needs"><a href="#1-Needs" class="headerlink" title="1. Needs"></a>1. Needs</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;程序自动化拉取数据进入原始层 ODS</p>
<h2 id="2-Data-Flow"><a href="#2-Data-Flow" class="headerlink" title="2. Data Flow"></a>2. Data Flow</h2><p><img src="/images/db/greenplum-ods-flow.png" alt="ods flow"></p>
<blockquote>
<p>具体请以实际线上代码 为准</p>
</blockquote>
<h2 id="3-Involved-technology"><a href="#3-Involved-technology" class="headerlink" title="3. Involved technology"></a>3. Involved technology</h2><ol>
<li><a href="https://zh.wikipedia.org/zh-hans/Unix_shell" target="_blank" rel="external">Shell</a></li>
<li><a href="https://github.com/alibaba/DataX/" target="_blank" rel="external">Datax</a></li>
<li><a href="https://en.wikipedia.org/wiki/PostgreSQL" target="_blank" rel="external">PostgreSQL</a></li>
<li><a href="http://dbaplus.cn/news-21-341-1.html" target="_blank" rel="external">Greenplum</a></li>
<li><a href="http://www.pentaho.com/" target="_blank" rel="external">Pentaho kettle</a></li>
</ol>
<blockquote>
<p><a href="http://www.greenplumdba.com/gpfdist" target="_blank" rel="external">gpfdist protocol</a></p>
</blockquote>
<h2 id="4-Main-Code-Flow"><a href="#4-Main-Code-Flow" class="headerlink" title="4. Main Code Flow"></a>4. Main Code Flow</h2><p>(1). linux crontab</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*/5 00-19 * * * <span class="built_in">source</span> /etc/bashrc; sh /data0/dm/online/ext_ods_table/crontab_job/crontab_job_ods_shop.sh</span><br></pre></td></tr></table></figure>
<blockquote>
<p>source /etc/bashrc; 环境设置</p>
</blockquote>
<p>(2). crontab_job_ods_shop.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">sh ods_dm_shop.sh <span class="variable">$&#123;d1&#125;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>(3). ods_dm_shop.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">###############################################################################</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @date:   2017.01.20</span></span><br><span class="line"><span class="comment"># @desc:   mysql data -&gt; ext shop -&gt; ods shop</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">###############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> `dirname <span class="variable">$0</span>`/.. &amp;&amp; wk_dir=`<span class="built_in">pwd</span>` &amp;&amp; <span class="built_in">cd</span> -</span><br><span class="line"><span class="built_in">source</span> <span class="variable">$&#123;wk_dir&#125;</span>/util/env</span><br><span class="line"><span class="built_in">source</span> <span class="variable">$&#123;util_dir&#125;</span>/my_<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line">begin_time=<span class="string">"2010-01-01"</span></span><br><span class="line">end_time=<span class="variable">$&#123;d1&#125;</span></span><br><span class="line"></span><br><span class="line">import_gpdata_from_rds1 <span class="variable">$&#123;begin_time&#125;</span> <span class="variable">$&#123;end_time&#125;</span> <span class="variable">$&#123;data_dir&#125;</span>/xkeshi_com.ext/mysql2textfile-shop.json</span><br><span class="line">check_success</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>_ex <span class="string">"<span class="variable">$&#123;data_integration&#125;</span>/kitchen.sh -file=<span class="variable">$&#123;ktrs_dir&#125;</span>/ods_shop.kjb"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;data_integration&#125;</span>/kitchen.sh -file=<span class="variable">$&#123;ktrs_dir&#125;</span>/ods_shop.kjb</span><br><span class="line">check_success</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>_ex <span class="string">"import shop end"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>
<h2 id="5-Code-Deploy"><a href="#5-Code-Deploy" class="headerlink" title="5. Code Deploy"></a>5. Code Deploy</h2><blockquote>
<p>/data0/dm/online/ext_ods_table  </p>
<p>注意： 版本控制中，涉及的敏感 库地址，用户名，密码 等 不上传。</p>
</blockquote>
<h2 id="6-Frnd-Link"><a href="#6-Frnd-Link" class="headerlink" title="6. Frnd Link"></a>6. Frnd Link</h2><ol>
<li><a href="https://github.com/blairchan/bigdata/tree/master/greenplum/ext_ods_table/doc" target="_blank" rel="external">pull data detail flow</a></li>
<li><a href="https://github.com/blairchan/bigdata/blob/master/greenplum/ext_ods_table/doc/scheduling-framework.md" target="_blank" rel="external">scheduling-framework</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Greenplum dev Flow]]></title>
      <url>http://iequa.com/2017/01/12/db-greenplum-manual-dev-steps/</url>
      <content type="html"><![CDATA[<p><img src="/images/db/greenplum-flow.png" alt=""></p>
<h2 id="1-Rds-import-oss"><a href="#1-Rds-import-oss" class="headerlink" title="1. Rds import oss"></a>1. Rds import oss</h2><p>通过 datax 从 mysql 导出数据到 OSS</p>
<p>组装 : mysql2oss-e_coupon.json</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "job": &#123;</span><br><span class="line">        "content": [</span><br><span class="line">        &#123;</span><br><span class="line">            "reader": &#123;</span><br><span class="line">                "name": "mysqlreader",</span><br><span class="line">                    "parameter": &#123;</span><br><span class="line">                        "username": "xx",</span><br><span class="line">                        "password": "xx",</span><br><span class="line">                        "connection": [</span><br><span class="line">                        &#123;</span><br><span class="line">                            "jdbcUrl": [</span><br><span class="line">                                "jdbc:mysql://192.168.184.xx:port"</span><br><span class="line">                                ],</span><br><span class="line">                            "table": [</span><br><span class="line">                                "rds-lib-name.e_coupon"</span><br><span class="line">                                ]</span><br><span class="line">                        &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        "column":[</span><br><span class="line">                            "id",</span><br><span class="line">                            "x_card_user_id",</span><br><span class="line">                            "coupon_discount_code",</span><br><span class="line">                            ...</span><br><span class="line">                            "order_merchant_id"</span><br><span class="line">                        ],</span><br><span class="line">                        "where": "created_time BETWEEN '2016-01-01 00:00:00' AND '2017-01-05 23:59:59'"</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">                "writer": &#123;</span><br><span class="line">                    "name": "osswriter",</span><br><span class="line">                    "parameter": &#123;</span><br><span class="line">                        "accessId": "xx",</span><br><span class="line">                        "accessKey": "xx",</span><br><span class="line">                        "bucket": "company-name-data",</span><br><span class="line">                        "encoding": "UTF-8",</span><br><span class="line">                        "endpoint": "http://oss-cn-hangzhou.aliyuncs.com",</span><br><span class="line">                        "fieldDelimiter": "\t",</span><br><span class="line">                        "object": "datax_dev/libin/e_coupon",</span><br><span class="line">                        "writeMode": "truncate"</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ],</span><br><span class="line">        "setting": &#123;</span><br><span class="line">            "speed": &#123;</span><br><span class="line">                "channel": 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>触发执行 :</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python datax.py mysql2oss-e_coupon.json</span><br></pre></td></tr></table></figure>
<h2 id="2-ext-table"><a href="#2-ext-table" class="headerlink" title="2. ext table"></a>2. ext table</h2><p>创建外部表，ext_dm_e_coupon，并将 location 指向为 oss</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">EXTERNAL</span> <span class="keyword">TABLE</span> <span class="keyword">PUBLIC</span>.ext_dm_e_coupon;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">EXTERNAL</span> <span class="keyword">TABLE</span> <span class="keyword">PUBLIC</span>.ext_dm_e_coupon (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">bigint</span>,</span><br><span class="line">    x_card_user_id <span class="built_in">varchar</span>,</span><br><span class="line">    coupon_discount_code <span class="built_in">varchar</span>,</span><br><span class="line">    ...</span><br><span class="line">    order_merchant_id <span class="built_in">bigint</span></span><br><span class="line">) LOCATION(</span><br><span class="line">    <span class="string">'oss://oss-cn-hangzhou.aliyuncs.com</span><br><span class="line">        dir=datax_dev/libin/</span><br><span class="line">        id=xx</span><br><span class="line">        key=xx</span><br><span class="line">        bucket=xkeshi-data'</span></span><br><span class="line">) <span class="keyword">FORMAT</span> <span class="string">'text'</span> (<span class="literal">NULL</span> <span class="keyword">AS</span> <span class="string">'null'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 45596 id comment 字段有回车 ,So del comment varchar, don't imported.</span></span><br></pre></td></tr></table></figure>
<h2 id="3-ods-table"><a href="#3-ods-table" class="headerlink" title="3. ods table"></a>3. ods table</h2><p>创建 ods_dm_e_coupon 表，并向其中导入数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> ods_dm_e_coupon;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ods_dm_e_coupon <span class="keyword">AS</span> <span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	ext_dm_e_coupon <span class="keyword">distributed</span> <span class="keyword">BY</span> (<span class="keyword">id</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意 : 这样建表 ods table id，不是 primary key</p>
<p>显示指定 distributed BY (id)，可读性更好</p>
</blockquote>
<h2 id="4-mds-table"><a href="#4-mds-table" class="headerlink" title="4. mds table"></a>4. mds table</h2><p>创建 mds_dm_e_coupon_profile 表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> mds_dm_e_coupon_profile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mds_dm_e_coupon_profile (</span><br><span class="line">	<span class="keyword">id</span> bigserial,</span><br><span class="line">	coupon_info_code <span class="built_in">VARCHAR</span>,</span><br><span class="line">	shop_id <span class="built_in">BIGINT</span>,</span><br><span class="line">	collected_avg_actual_price <span class="built_in">DECIMAL</span> (<span class="number">12</span>, <span class="number">2</span>),</span><br><span class="line">	collected_sum_actual_price <span class="built_in">DECIMAL</span> (<span class="number">12</span>, <span class="number">2</span>),</span><br><span class="line">	collected_count <span class="built_in">INT</span>,</span><br><span class="line">	verified_count <span class="built_in">INT</span>,</span><br><span class="line">	verified_rate <span class="built_in">DECIMAL</span> (<span class="number">12</span>, <span class="number">2</span>)</span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">	appendonly = <span class="literal">TRUE</span>,</span><br><span class="line">	compresslevel = <span class="number">5</span></span><br><span class="line">) <span class="keyword">distributed</span> <span class="keyword">BY</span> (<span class="keyword">id</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>创建表的时候，给一个自增 id. 每一个表都有一个自增 id，是一个比较好的规范</p>
</blockquote>
<h2 id="5-insert-mds-table"><a href="#5-insert-mds-table" class="headerlink" title="5. insert mds table"></a>5. insert mds table</h2><p>insert data to mds_dm_e_coupon_profile</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> mds_dm_e_coupon_profile (</span><br><span class="line">	coupon_info_code,</span><br><span class="line">	shop_id,</span><br><span class="line">	collected_avg_actual_price,</span><br><span class="line">	collected_sum_actual_price,</span><br><span class="line">	collected_count,</span><br><span class="line">	verified_count,</span><br><span class="line">	verified_rate</span><br><span class="line">) <span class="keyword">SELECT</span></span><br><span class="line">	tt1.coupon_info_code,</span><br><span class="line">	tt1.shop_id,</span><br><span class="line">	tt1.avg_actual_price <span class="keyword">AS</span> collected_avg_actual_price,</span><br><span class="line">	tt1.sum_actual_price <span class="keyword">AS</span> collected_sum_actual_price,</span><br><span class="line">	tt1.collected_count,</span><br><span class="line">	<span class="keyword">COALESCE</span> (tt2.verified_count, <span class="number">0</span>) <span class="keyword">AS</span> verified_count,</span><br><span class="line">	<span class="keyword">round</span>(</span><br><span class="line">		(</span><br><span class="line">			<span class="keyword">COALESCE</span> (tt2.verified_count, <span class="number">0</span>) * <span class="number">1.0</span></span><br><span class="line">		) / (tt1.collected_count * <span class="number">1.0</span>),</span><br><span class="line">		<span class="number">2</span></span><br><span class="line">	) <span class="keyword">AS</span> verified_rate</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	(</span><br><span class="line">		<span class="keyword">SELECT</span></span><br><span class="line">			t1.coupon_info_code,</span><br><span class="line">			t1.shop_id,</span><br><span class="line">			<span class="keyword">COUNT</span> (t1.<span class="keyword">ID</span>) <span class="keyword">AS</span> collected_count,</span><br><span class="line">			<span class="keyword">round</span>(<span class="keyword">AVG</span>(t1.actual_price), <span class="number">2</span>) <span class="keyword">AS</span> avg_actual_price,</span><br><span class="line">			<span class="keyword">SUM</span> (t1.actual_price) <span class="keyword">AS</span> sum_actual_price</span><br><span class="line">		<span class="keyword">FROM</span></span><br><span class="line">			(</span><br><span class="line">				<span class="keyword">SELECT</span></span><br><span class="line">					*</span><br><span class="line">				<span class="keyword">FROM</span></span><br><span class="line">					ods_dm_e_coupon</span><br><span class="line">				<span class="keyword">WHERE</span></span><br><span class="line">					<span class="keyword">status</span> = <span class="number">1</span></span><br><span class="line">			) t1</span><br><span class="line">		<span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">			(t1.coupon_info_code, t1.shop_id)</span><br><span class="line">		<span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">			t1.shop_id</span><br><span class="line">	) tt1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (</span><br><span class="line">	<span class="keyword">SELECT</span></span><br><span class="line">		t2.coupon_info_code,</span><br><span class="line">		t2.shop_id,</span><br><span class="line">		<span class="keyword">COUNT</span> (t2.<span class="keyword">ID</span>) <span class="keyword">AS</span> verified_count,</span><br><span class="line">		<span class="keyword">round</span>(<span class="keyword">AVG</span>(t2.actual_price), <span class="number">2</span>) <span class="keyword">AS</span> avg_actual_price,</span><br><span class="line">		<span class="keyword">SUM</span> (t2.actual_price) <span class="keyword">AS</span> sum_actual_price</span><br><span class="line">	<span class="keyword">FROM</span></span><br><span class="line">		(</span><br><span class="line">			<span class="keyword">SELECT</span></span><br><span class="line">				*</span><br><span class="line">			<span class="keyword">FROM</span></span><br><span class="line">				ods_dm_e_coupon</span><br><span class="line">			<span class="keyword">WHERE</span></span><br><span class="line">				<span class="keyword">status</span> = <span class="number">1</span></span><br><span class="line">			<span class="keyword">AND</span> <span class="keyword">RESULT</span> = <span class="number">2</span></span><br><span class="line">		) t2</span><br><span class="line">	<span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">		(t2.coupon_info_code, t2.shop_id)</span><br><span class="line">	<span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">		t2.shop_id</span><br><span class="line">) tt2 <span class="keyword">ON</span> tt1.coupon_info_code = tt2.coupon_info_code</span><br><span class="line"><span class="keyword">AND</span> tt1.shop_id = tt2.shop_id</span><br></pre></td></tr></table></figure>
<h2 id="6-validation-results"><a href="#6-validation-results" class="headerlink" title="6. validation results"></a>6. validation results</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> mds_dm_e_coupon_profile <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">limit</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure>
<p><img src="/images/db/greenplum-man-1.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Greenplum 学习笔记]]></title>
      <url>http://iequa.com/2017/01/04/db-greenplum-short-introduce/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 500px;
        margin-left: 180px !important;
}
</style>

<p><img src="/images/db/greenplum-1.1.png" alt=""></p>
<table>
<thead>
<tr>
<th>No.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
<th>OLTP</th>
<th>OLAP</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.</td>
<td>数据在系统中产生</td>
<td>本身不产生数据，基础数据来源于产生系统</td>
</tr>
<tr>
<td>2.</td>
<td>基于交易的处理系统</td>
<td>基于查询的分析系统</td>
</tr>
<tr>
<td>3.</td>
<td>牵扯的数据量很小</td>
<td>牵扯的数据量庞大 (复杂查询经常使用全表扫描等)</td>
</tr>
<tr>
<td>4.</td>
<td>对响应时间要求非常高</td>
<td>响应时间与具体查询有很大关系</td>
</tr>
<tr>
<td>5.</td>
<td>用户数量大，为操作用户</td>
<td>用户数量少，主要有技术人员与业务人员</td>
</tr>
<tr>
<td>6.</td>
<td>各种操作主要基于索引进行</td>
<td>业务问题不固定，数据库的各种操作不能完全基于索引进行</td>
</tr>
</tbody>
</table>
<h2 id="1-Greenplum-介绍"><a href="#1-Greenplum-介绍" class="headerlink" title="1. Greenplum 介绍"></a>1. Greenplum 介绍</h2><p>Greenplum 是 基于数据库的分布式数据存储和并行计算 框架</p>
<blockquote>
<p>Greenplum TB级别表现非常优秀，单机性能比Hadoop快好几倍</p>
</blockquote>
<h3 id="1-1-Greenplum-历程"><a href="#1-1-Greenplum-历程" class="headerlink" title="1.1 Greenplum 历程"></a>1.1 Greenplum 历程</h3><ul>
<li>2003 年 诞生 greenplum</li>
<li>2010 年 收购 被 EMC 整合</li>
<li>2014 年 发布 4.3 version</li>
<li>2015 年 重回 open source, apache</li>
</ul>
<h3 id="1-2-Greenplum-架构"><a href="#1-2-Greenplum-架构" class="headerlink" title="1.2 Greenplum 架构"></a>1.2 Greenplum 架构</h3><p><img src="/images/db/greenplum-1.2.png" alt=""></p>
<blockquote>
<p>Greenplum实现了基于<code>数据库的分布式</code>数据存储和并行计算<br>GoogleMapReduce实现的是基于<code>文件的分布式</code>数据存储和计算</p>
</blockquote>
<h3 id="1-3-Greenplum-amp-Pg"><a href="#1-3-Greenplum-amp-Pg" class="headerlink" title="1.3 Greenplum &amp; Pg"></a>1.3 Greenplum &amp; Pg</h3><p>PostgreSQL 非常先进的 ORDBMS， PostgreSQL 天生为扩展而生。</p>
<p>Mysql 查询优化器对于子查询、复制查询如多表关联、外关联的支持等较弱，Mysql 目前不支持<a href="https://en.wikipedia.org/wiki/Hash_join" target="_blank" rel="external">hash join</a>，缺少这关键功能非常致命，将难于在OLAP领域充当大任。基于MYSQL一到复杂多表关联性能就立马下降。</p>
<h3 id="1-4-Greenplum-应用"><a href="#1-4-Greenplum-应用" class="headerlink" title="1.4 Greenplum 应用"></a>1.4 Greenplum 应用</h3><p>Greenplum 数据引擎是为新一代数据仓库和<code>大规模分析处理</code>而建立的软件解决方案。 (Alibaba 2008年使用Greenplum)</p>
<blockquote>
<p>MPP : Massively Parallel Processing<br>OLTP: On-Line Transaction Processing<br>OLAP: On-Line Analytical Processing </p>
</blockquote>
<h3 id="1-5-MPP-与-Hadoop"><a href="#1-5-MPP-与-Hadoop" class="headerlink" title="1.5 MPP 与 Hadoop"></a>1.5 MPP 与 Hadoop</h3><table>
<thead>
<tr>
<th>&nbsp;&nbsp;Type &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
<th>Greenplum MPP</th>
<th>Hadoop</th>
</tr>
</thead>
<tbody>
<tr>
<td>存储模式</td>
<td>关系数据库行列表存储数据（有模式）</td>
<td>文件切片分布式存储（无模式）</td>
</tr>
<tr>
<td>数据耦合</td>
<td>Hash分布, 计算节点和存储紧密耦合</td>
<td>hdfs文件切块后随机分配，节点数据无耦合</td>
</tr>
<tr>
<td>数据粒度</td>
<td>记录级的更小粒度（一般在1k以下）</td>
<td>文件块级（缺省64MB）</td>
</tr>
<tr>
<td>查询计划</td>
<td>MPP采用SQL并行查询计划</td>
<td>Hadoop采用Mapreduce框架</td>
</tr>
</tbody>
</table>
<p>为保证数据的高性能计算，MPP数据库节点和数据之间是紧耦合的，相反，Hadoop的节点和数据是没有耦合关系的. Hadoop的架构更加灵活-存储节点和计算节点的无关性</p>
<p>Hadoop架构，需要在原生的Mapreduce开发框架基础上的开发，需要技术人员谙熟于JAVA开发和并行原理，不仅业务分析人员无法使用，甚至技术人员也难以学习和操控。为了解决易用性的问题，近年来SQL-0N-HADOOP技术大量涌现出来，几乎成为当前Hadoop开发使用的一个技术热点趋势。</p>
<p>这些技术包括：Hive、Pivotal HAWQ、SPARK SQL、Impala、Prest、Drill、Tajo等等很多，这些技术有些是在Mapreduce上做了优化，例如Spark采用内存中的Mapreduce技术，号称性能比基于文件的的Mapreduce提高10倍；而有些则直接绕开了Mapreduce另起炉灶，如Impala、hawq采用借鉴MPP计算思想来做查询优化和内存数据Pipeline计算，以此来提高性能。</p>
<blockquote>
<p>MapReduce 编程困难, 不如 SQL 方便</p>
</blockquote>
<h2 id="2-Quick-Start"><a href="#2-Quick-Start" class="headerlink" title="2. Quick Start"></a>2. Quick Start</h2><p>Master 和 Segment 都是单独的 PostgreSQL数据库。</p>
<h3 id="2-1-Greenplum-架构"><a href="#2-1-Greenplum-架构" class="headerlink" title="2.1 Greenplum 架构"></a>2.1 Greenplum 架构</h3><p><img src="/images/db/greenplum-2.1.png" alt=""></p>
<p>Client 只与 Master节点 交互，Client将SQL发给 Master，然后 Master对SQL分析后，分配给所有的 Segment 进行操作，并将汇总结果返回给客户端。</p>
<h3 id="2-2-Greenplum-集群"><a href="#2-2-Greenplum-集群" class="headerlink" title="2.2 Greenplum 集群"></a>2.2 Greenplum 集群</h3><p><img src="/images/db/greenplum-2.2.png" alt=""></p>
<h3 id="2-3-Greenplum-畅游"><a href="#2-3-Greenplum-畅游" class="headerlink" title="2.3 Greenplum 畅游"></a>2.3 Greenplum 畅游</h3><h4 id="2-3-1-访问方式"><a href="#2-3-1-访问方式" class="headerlink" title="2.3.1 访问方式"></a>2.3.1 访问方式</h4><ul>
<li>psql cmd</li>
<li>pgAdmin / navicat</li>
</ul>
<h4 id="2-3-2-整体概况"><a href="#2-3-2-整体概况" class="headerlink" title="2.3.2 整体概况"></a>2.3.2 整体概况</h4><ul>
<li>Greenplum 基于 PostgreSQL 8.2 开发</li>
<li>Master不存储数据，Segment为数据节点</li>
</ul>
<p>Student Table 存储在 GP 中</p>
<p><img src="/images/db/greenplum-2.3.png" alt=""></p>
<h4 id="2-3-3-基本语法"><a href="#2-3-3-基本语法" class="headerlink" title="2.3.3 基本语法"></a>2.3.3 基本语法</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[hdfs@node196 libin]$ psql -h 192.168.xx.xx -p xx <span class="_">-d</span> testdb -U xx</span><br><span class="line">psql (9.2.15, server 8.2.15)</span><br><span class="line">WARNING: psql version 9.2, server version 8.2.</span><br><span class="line">         Some psql features might not work.</span><br><span class="line">Type <span class="string">"help"</span> <span class="keyword">for</span> help.</span><br></pre></td></tr></table></figure>
<blockquote>
<p>psql -h192.168.181.xx -p2345 -dcom_db -Ucom_gp -c “select * from ods_dm_e_coupon limit 2”</p>
</blockquote>
<p><strong>1. 语法介绍</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">\h <span class="keyword">create</span></span><br></pre></td></tr></table></figure>
<p><strong>2. CREATE TABLE</strong></p>
<ul>
<li>需要指定表分布键</li>
<li>需要用某个字段分区，partition by</li>
<li>like 类似 create table t1 as select * from t2 limit x</li>
<li>inherits can extend table</li>
</ul>
<p>分类策略 </p>
<ol>
<li>Hash 分布 (默认第一个字段，推荐显示指定)</li>
<li>随机分布 (distributed randomly 性能较差， 主键分布一般)</li>
</ol>
<blockquote>
<p>like 创建的表，结构与原表一样，不指定分布键，默认与原表一样。</p>
<p>appendonly、压缩等特殊属性，不一定一样。</p>
</blockquote>
<p><strong>3. SELECT</strong></p>
<p><strong>4. CREATE TABLE AS 与 SELECT INTO</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test2 <span class="keyword">AS</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> test1 <span class="keyword">distributed</span> <span class="keyword">by</span> (<span class="keyword">id</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">INTO</span> test4 <span class="keyword">from</span> test1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>SELECT INTO 不能指定分布键，使用默认</p>
</blockquote>
<p><strong>5. INSERT</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test001 <span class="keyword">VALUES</span>(<span class="number">100</span>, <span class="string">'tom'</span>), (<span class="number">101</span>, <span class="string">'jim'</span>); <span class="keyword">INSERT</span> <span class="number">0</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意 : 分布键 绝对不能为空，否则为 null。数据分布到一个节点。</p>
</blockquote>
<p><strong>6. UPDATE</strong></p>
<p>不能批量对 分布key 执行 update 操作</p>
<p><strong>7. DELETE</strong></p>
<p>涉及 子查询，子查询结果还涉及数据重分布，这样报错</p>
<h4 id="2-3-4-数据类型"><a href="#2-3-4-数据类型" class="headerlink" title="2.3.4 数据类型"></a>2.3.4 数据类型</h4><table>
<thead>
<tr>
<th>type</th>
<th>space</th>
<th>description</th>
<th>range</th>
</tr>
</thead>
<tbody>
<tr>
<td>smallint</td>
<td>2</td>
<td></td>
<td>-32768 ~ +32767</td>
</tr>
<tr>
<td>integer</td>
<td>4</td>
<td></td>
<td>-2 147 483 648 ~ +2 147 483 647</td>
</tr>
<tr>
<td>bigint</td>
<td>8</td>
<td></td>
<td>-</td>
</tr>
<tr>
<td>decimal</td>
<td>变长</td>
<td></td>
<td>nolimit</td>
</tr>
<tr>
<td>numeric</td>
<td>变长</td>
<td></td>
<td>nolimit</td>
</tr>
<tr>
<td>double precision</td>
<td>4</td>
<td></td>
<td>-</td>
</tr>
<tr>
<td>serial</td>
<td>4</td>
<td>自增整数</td>
<td>1 ~ 2 147 483 647</td>
</tr>
<tr>
<td>bigserial</td>
<td>8</td>
<td>大范围自增整数</td>
<td></td>
</tr>
<tr>
<td>varchar(n)</td>
<td>变长</td>
<td></td>
<td>limit</td>
</tr>
<tr>
<td>char(n)</td>
<td>定长</td>
<td></td>
<td></td>
</tr>
<tr>
<td>text</td>
<td>变长</td>
<td></td>
<td>nolimit</td>
</tr>
<tr>
<td>timestamp</td>
<td>8</td>
<td>带不带时区，自己选择</td>
<td></td>
</tr>
<tr>
<td>date</td>
<td>4</td>
<td>表示日期</td>
<td></td>
</tr>
</tbody>
</table>
<h4 id="2-3-5-常用函数"><a href="#2-3-5-常用函数" class="headerlink" title="2.3.5 常用函数"></a>2.3.5 常用函数</h4><p><a href="http://www.postgres.cn/docs/9.3/" target="_blank" rel="external">postgres 9.3 doc</a></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://cread.jd.com/read/startRead.action?bookId=30189846&amp;readType=1" target="_blank" rel="external">JD阅读 : Greenplum企业级应用实战</a></li>
<li><a href="http://dbaplus.cn/news-21-341-1.html" target="_blank" rel="external">聊聊Greenplum的那些事</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Going to the doctor's L4 Accidents and injuries]]></title>
      <url>http://iequa.com/2016/12/27/ef-l6u2-Going-to-the-doctor's-l4/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 500px;
        margin-left: 200px !important;
}
</style>

<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>unconscious</li>
</ul>
<p><img src="/images/english/ef-l6u2l4.png" alt=""></p>
<table>
<thead>
<tr>
<th>A: JAKE - B: PAM - C: SIMON</th>
</tr>
</thead>
<tbody>
<tr>
<td>I fell down some stairs.</td>
<td></td>
</tr>
<tr>
<td>How did you do that?</td>
<td></td>
</tr>
<tr>
<td>I was walking down some stairs. I wasn’t paying attention.</td>
<td></td>
</tr>
<tr>
<td>You were paying attention. He was paying attention to a woman.</td>
<td></td>
</tr>
<tr>
<td>I think the stairs were wet.</td>
<td></td>
</tr>
<tr>
<td>When did this happen?</td>
<td></td>
</tr>
<tr>
<td>[JAKE] Yeah. I bruised three ribs and, sprained my right wrist.</td>
<td></td>
</tr>
<tr>
<td>[PAM] How are you coping with the crutches?</td>
<td></td>
</tr>
<tr>
<td>[JAKE] No problem at all.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-because-of-the-pain"><a href="#2-because-of-the-pain" class="headerlink" title="2. because of the pain"></a>2. because of the pain</h2><p>I was walking down the street when I slipped and fell down, and broke my leg. I haven’t been sleeping since it happened because of the pain. It really hurts!</p>
<table>
<thead>
<tr>
<th>because of the pain</th>
</tr>
</thead>
<tbody>
<tr>
<td>I was walking down the street …</td>
<td></td>
</tr>
<tr>
<td>… when I slipped and fell down …</td>
<td></td>
</tr>
<tr>
<td>… and broke my leg.</td>
<td></td>
</tr>
<tr>
<td>I haven’t been sleeping …</td>
<td></td>
</tr>
<tr>
<td>… since it happened.</td>
<td></td>
</tr>
<tr>
<td>It really hurts!</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="3-Expressions"><a href="#3-Expressions" class="headerlink" title="3. Expressions"></a>3. Expressions</h2><table>
<thead>
<tr>
<th>Ex</th>
</tr>
</thead>
<tbody>
<tr>
<td>I fell off a wall and broke my leg.</td>
<td></td>
</tr>
<tr>
<td>I sprained my wrist.</td>
<td></td>
</tr>
<tr>
<td>I have a bruise on my arm.</td>
<td></td>
</tr>
<tr>
<td>I fell down and bruised my shoulder.</td>
<td></td>
</tr>
<tr>
<td>I broke my arm while playing volleyball.</td>
<td></td>
</tr>
<tr>
<td>I was running for a bus when I sprained my ankle.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Possessive adjectives</th>
</tr>
</thead>
<tbody>
<tr>
<td>He called his doctor because he had a fever.</td>
<td></td>
</tr>
<tr>
<td>I’m a patient of Dr. Brennan’s. == I’m Dr. Brennan’s patient.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="4-Reading"><a href="#4-Reading" class="headerlink" title="4. Reading"></a>4. Reading</h2><p>I guess the strangest accident I have ever had was when I was at school. I was playing a game where you had to lie on the ground, and all the others jumped on top of you. It was fine until the biggest kid in school came and jumped on top, too! I broke my finger, <code>bruised my ribs</code> and <code>sprained</code> my wrist. I spent the night in the hospital, and it took me a couple of months to get better.</p>
<h2 id="5-Writing"><a href="#5-Writing" class="headerlink" title="5. Writing"></a>5. Writing</h2><p>I had an accident last winter when I was arriving at work. I was coming into the building, climbing the steps, when I slipped on the icy floor. I fell down the steps and <code>broke my ankle</code>. I also <code>sprained my left wrist and bruised my back badly</code>. I had to go to the hospital, and I stayed there for three days. I hurt a lot! I had to stay at home for two more weeks before I could go back to work.</p>
<hr>
<div class="video-container"><iframe src="//www.youtube.com/embed/XDm4bNQGwWE" frameborder="0" allowfullscreen></iframe></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Going to the doctor's L3 Filling a prescription]]></title>
      <url>http://iequa.com/2016/12/16/ef-l6u2-Going-to-the-doctor's-l3/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 500px;
        margin-left: 200px !important;
}
</style>

<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>I’m going to the pharmacy.</li>
<li>He talked to the pharmacist.</li>
<li>teaspoons</li>
</ul>
<table>
<thead>
<tr>
<th>allergic to</th>
<th>medications</th>
<th>dosage </th>
</tr>
</thead>
<tbody>
<tr>
<td>tablets</td>
<td>spicy</td>
<td>capsules</td>
</tr>
</tbody>
</table>
<p><img src="/images/english/ef-l6u2l3.png" alt=""></p>
<table>
<thead>
<tr>
<th>A: PAM - B: PHARMACIST</th>
</tr>
</thead>
<tbody>
<tr>
<td>[A] Hi. I’d like to fill a prescription. James. My first name is Pam. Does my insurance cover this?</td>
<td></td>
</tr>
<tr>
<td>[B] Yes, it does. I’ll be right back. Are you allergic to any other medications?</td>
<td></td>
</tr>
<tr>
<td>[A] Uh, no, I’m not.</td>
<td></td>
</tr>
<tr>
<td>[B] Okay. So this will help stop the diarrhea. The dosage is two tablets every six hours.</td>
<td></td>
</tr>
<tr>
<td>[A] Okay.</td>
<td></td>
</tr>
<tr>
<td>[B] It’s better if you take it with some plain food, like rice or scrambled eggs. Nothing spicy.</td>
<td></td>
</tr>
<tr>
<td>[A] I understand.</td>
<td></td>
</tr>
<tr>
<td>[B] And this is for the nausea and the vomiting. Take two capsules twice a day for three days.</td>
<td></td>
</tr>
<tr>
<td>[B] I hope you feel better.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Expressions"><a href="#2-Expressions" class="headerlink" title="2. Expressions"></a>2. Expressions</h2><table>
<thead>
<tr>
<th>PAM</th>
<th>PHARMACIST</th>
</tr>
</thead>
<tbody>
<tr>
<td>I’d like to fill a prescription.</td>
<td>Take two capsules twice a day for three days</td>
</tr>
<tr>
<td>I’m here to pick up my medication</td>
<td>It’s better if you take it with some plain food.</td>
</tr>
<tr>
<td>Does my insurance cover this?</td>
<td>Yes, it does.</td>
</tr>
<tr>
<td>I’m not currently taking any medication.</td>
<td>I hope you feel better. </td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Going to the doctor's L2 Talking with the doctor]]></title>
      <url>http://iequa.com/2016/12/13/ef-l6u2-Going-to-the-doctor's-l2/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 450px;
        margin-left: 200px !important;
}
</style>

<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><table>
<thead>
<tr>
<th>blood pressure</th>
<th>symptoms</th>
<th>stomach flu </th>
</tr>
</thead>
<tbody>
<tr>
<td>prescription</td>
<td>medicine</td>
<td>liquids</td>
</tr>
<tr>
<td>appetite</td>
<td>nauseous</td>
<td>fever</td>
</tr>
</tbody>
</table>
<p><img src="/images/english/ef-l6u2l2-1.png" alt=""></p>
<table>
<thead>
<tr>
<th>A: DOCTOR - B: PAM</th>
</tr>
</thead>
<tbody>
<tr>
<td>[DOC] How are you feeling?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Not so great.</td>
<td></td>
</tr>
<tr>
<td>[DOC] Hmm. I’m sorry to hear that. How long have you been feeling bad?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Um, since yesterday. But I got really sick in the middle of the night.</td>
<td></td>
</tr>
<tr>
<td>[DOC] Well, you do have a slight fever, but that’s nothing to worry about. And your blood pressure is good. Did you eat anything unusual yesterday?</td>
<td></td>
</tr>
<tr>
<td>[PAM] No, I don’t think so. I had pizza for lunch, and I didn’t eat dinner.</td>
<td></td>
</tr>
<tr>
<td>[DOC] Well, based on the symptoms you’ve described, I think that you have a stomach flu. It’s been going around.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Yeah, that’s what I thought.</td>
<td></td>
</tr>
<tr>
<td>[DOC] I’m going to write you a prescription for medicine to help your stomach and stop the diarrhea.</td>
<td></td>
</tr>
<tr>
<td>[DOC] Stay in bed and, uh, drink plenty of liquids. If you don’t feel better after 24 hours, I want you to call the nurse.</td>
<td></td>
</tr>
<tr>
<td>[DOC] And, uh, when you have an appetite again, take it easy. I’d recommend plain white rice and maybe some yoghurt.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Okay, doctor, thanks</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Grammar"><a href="#2-Grammar" class="headerlink" title="2. Grammar"></a>2. Grammar</h2><table>
<thead>
<tr>
<th>for、have been +ing</th>
<th>since</th>
</tr>
</thead>
<tbody>
<tr>
<td>Frank has been working hard <code>for two days</code>.</td>
<td>Oscar has been working hard <code>since yesterday</code>.</td>
</tr>
<tr>
<td>I’ve been waiting for the nurse for 20 minutes.</td>
<td>I’ve been having trouble sleeping since last Friday. </td>
</tr>
<tr>
<td>Since I got home, I’<code>ve been feeling</code> terrible.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>had..for</th>
<th>Since</th>
</tr>
</thead>
<tbody>
<tr>
<td>He’s had the same symptoms for three days.</td>
<td>I’ve been drinking lots of liquids since I got sick</td>
</tr>
<tr>
<td>She’s had the flu for a week.</td>
<td>Since I got sick, I’ve been drinking lots of liquids.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Doctor</th>
<th>Pam</th>
</tr>
</thead>
<tbody>
<tr>
<td>How long have you been feeling like this?</td>
<td>I got really sick in the middle of the night.</td>
</tr>
<tr>
<td>What are your symptoms ?</td>
<td>I have a stomachache and diarrhea.</td>
</tr>
<tr>
<td>I think that you have a stomach flu.</td>
<td>Do I have a favor ?</td>
</tr>
<tr>
<td>I’ll write you a prescription for some medicine.</td>
<td>What should I do?</td>
</tr>
<tr>
<td>Get rest and drink water.</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Going to the doctor's L1 Making a doctor's appointment]]></title>
      <url>http://iequa.com/2016/12/09/ef-l6u2-Going-to-the-doctor's-l1/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>I feel terrible.</li>
<li><code>vomiting</code></li>
<li>I have <code>diarrhea</code>. [,daɪə’riə]</li>
<li>patient</li>
<li>make an appointment</li>
<li><strong>dizzy</strong> [‘dɪzɪ]</li>
<li><strong>nauseous</strong> [‘nɔːsɪəs]</li>
<li><strong>sore throat</strong></li>
</ul>
<p><img src="/images/english/ef-l6u2l1.png" width="480" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Making a doctor’s appointment</th>
</tr>
</thead>
<tbody>
<tr>
<td>[SALLY] Pam, are you okay?</td>
<td></td>
</tr>
<tr>
<td>[PAM] No. I feel terrible.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] What’s up?</td>
<td></td>
</tr>
<tr>
<td>[PAM] <strong>I’ve been vomiting all night</strong>.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Oh, <strong>you poor thing</strong>. You need to call a doctor.</td>
<td></td>
</tr>
<tr>
<td>[PAM] I know.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Hey. Uh, I have to go, but I’ll call you later to see how you are.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Hello</td>
<td></td>
</tr>
<tr>
<td>[RECEPTIONIST] Good morning. Doctor Brennan’s office.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Hi. My name’s Pam James. I’m a <code>patient</code> of Doctor Brennan’s.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTIONIST] Oh, yes. Ms. James. How can I help you?</td>
<td></td>
</tr>
<tr>
<td>[PAM] I’m sick. I want to <strong>make an appointment</strong> to see the doctor today.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTIONIST] <strong>What seems to be the problem?</strong></td>
<td></td>
</tr>
<tr>
<td>[PAM] I’ve been vomiting. And I, uh, have diarrhea.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTIONIST] I’m very sorry to hear that. <strong>How long has this been going on?</strong></td>
<td></td>
</tr>
<tr>
<td>[PAM] All night. It started about 3 in the morning.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTIONIST] Oh, dear. Will you be able to get to the doctor’s office okay?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Yeah, I think so.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTIONIST] Okay. Let me just have a look here. The doctor has some time at 1 o’clock. <strong>Could you make it then</strong>?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Is there anything earlier?</td>
<td></td>
</tr>
<tr>
<td>[RECEPTIONIST] No, I’m sorry. The doctor’s really busy today.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Okay. One o’clock is fine.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTIONIST] Great. So, we’ll see you at 1 o’clock. Take care.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Thank you.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Expressions"><a href="#2-Expressions" class="headerlink" title="2. Expressions"></a>2. Expressions</h2><table>
<thead>
<tr>
<th>&nbsp;</th>
</tr>
</thead>
<tbody>
<tr>
<td>I have a headache, and I’m dizzy.</td>
<td></td>
</tr>
<tr>
<td>I have a stomachache, and I feel nauseous.</td>
<td></td>
</tr>
<tr>
<td>I have a bad cough and a sore throat.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>&nbsp;</th>
</tr>
</thead>
<tbody>
<tr>
<td>I had a fever last night.</td>
<td></td>
</tr>
<tr>
<td>I have diarrhea.</td>
<td></td>
</tr>
<tr>
<td>I’ve been vomiting.</td>
<td></td>
</tr>
<tr>
<td>How have you been feeling?</td>
<td></td>
</tr>
<tr>
<td>How long has this been <code>going on</code>?</td>
<td></td>
</tr>
<tr>
<td>I’ve been vomiting all night.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>&nbsp;</th>
</tr>
</thead>
<tbody>
<tr>
<td>I’ve been feeling sick for three days.</td>
<td></td>
</tr>
<tr>
<td>I’ve been having problems sleeping.</td>
<td></td>
</tr>
<tr>
<td>Good morning. I’m a patient of Doctor Brennan’s.</td>
<td></td>
</tr>
<tr>
<td>I want to make an appointment to see the doctor.</td>
<td></td>
</tr>
<tr>
<td>What seems to be the problem?</td>
<td></td>
</tr>
<tr>
<td>I’ve been feeling nauseous and tired.</td>
<td></td>
</tr>
<tr>
<td>The doctor has some time at 1 o’clock.</td>
<td></td>
</tr>
<tr>
<td>Is there anything earlier?</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="2-1-have"><a href="#2-1-have" class="headerlink" title="2.1 have"></a>2.1 have</h3><ul>
<li>I have a fever.</li>
<li>He has diarrhea.</li>
<li>She has a bad cough.</li>
</ul>
<h3 id="2-2-sore、-ache"><a href="#2-2-sore、-ache" class="headerlink" title="2.2 sore、-ache"></a>2.2 sore、-ache</h3><ul>
<li>I have a <strong>sore</strong> throat.</li>
<li>He has a headache.</li>
<li>I have a stomachache.</li>
</ul>
<h3 id="2-3-be、feel"><a href="#2-3-be、feel" class="headerlink" title="2.3 be、feel"></a>2.3 be、feel</h3><ul>
<li>I’m dizzy. I feel dizzy.</li>
<li>She’s nauseous. She feels nauseous.  [‘nɔːsɪəs]</li>
</ul>
<p>I’ve been vomiting for about an hour.</p>
<h2 id="3-Reading"><a href="#3-Reading" class="headerlink" title="3. Reading"></a>3. Reading</h2><p>I feel terrible. I didn’t sleep last night because I had a bad fever  . I was just too hot! I have a bad cough  , too – maybe because I smoke? My colleagues always complain about the noise I make, but I can’t answer them because I have a sore throat  and I can’t speak. I didn’t eat all day because I felt nauseous  and I had a stomachache  , and every time I wanted to stand up, I couldn’t because I was so dizzy.</p>
<ul>
<li>I have been feeling very bad <code>for</code> the last two days.</li>
<li>I have been having problems sleeping.</li>
<li>Have you been experiencing any other problems?</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Chinese Society's Common Trick]]></title>
      <url>http://iequa.com/2016/12/04/life-resorting-to-trickery/</url>
      <content type="html"><![CDATA[<blockquote>
<p>健身馆、技能培训机构、私立医院、婚恋中介、房屋中介、美容院等机构的骗术</p>
</blockquote>
<h2 id="1-健身会馆"><a href="#1-健身会馆" class="headerlink" title="1. 健身会馆"></a>1. 健身会馆</h2><p>这类机构，往往会采取低成本招聘一些找不到什么正规工作的人等来做号称各种专业的顾问，在各个人员密集的地方拉客，或者 在大地铁站附近发这传单等方式来宣传自己，还时候一般会有给你1~2次体验的机会等等，让你登记、免费体验、免费体检等等。</p>
<h3 id="1-1-套路-体检报告"><a href="#1-1-套路-体检报告" class="headerlink" title="1.1 套路 体检报告"></a>1.1 套路 体检报告</h3><p>身体虚，缺蛋白质，脂肪多、骨骼肌低 等等</p>
<blockquote>
<p>让消费者感到心里恐慌 及 需要健身的急迫性</p>
</blockquote>
<h3 id="1-2-套路-自吹自擂"><a href="#1-2-套路-自吹自擂" class="headerlink" title="1.2 套路 自吹自擂"></a>1.2 套路 自吹自擂</h3><p>说他们的课程多专业，老师多专业，连锁店多大等</p>
<h3 id="1-3-套路-费用咨询"><a href="#1-3-套路-费用咨询" class="headerlink" title="1.3 套路 费用咨询"></a>1.3 套路 费用咨询</h3><p>往往直接问这个，他们一般会给你闪烁其词，套你的心里，最后道出一个特别贵的天文数字费用，你如果说考虑考虑等，就给你来了个，我可以帮你向上边申请优惠，然后再来一个人，和你聊，号称给你优惠了多少多少，最后你如果走了，就给你来一个最后通牒，说你2天内不办这个优惠就没有了等等，造成你的进一步恐慌。</p>
<blockquote>
<p>中间过程，你不爽快定的话，很可能会伴随着你的各种被顾问的反问、质问、嘲讽等</p>
</blockquote>
<h3 id="1-4-套路-催签合同"><a href="#1-4-套路-催签合同" class="headerlink" title="1.4 套路 催签合同"></a>1.4 套路 催签合同</h3><p>消费者往往被店里人忽悠，签合同并没有仔细阅读每一个条款，签字之后，交了钱，以后再发生什么不愉快，退卡转卡之类的，基本会被各种理由所阻挠，钱给了人家，人家就是大爷了一般。</p>
<blockquote>
<p>办卡者请谨慎选择，去网上看看其他人对这家的评价等等三思而后行。</p>
<p>典型为 : 《唯瑜伽》 害人不浅 等</p>
</blockquote>
<h2 id="2-私立医院"><a href="#2-私立医院" class="headerlink" title="2. 私立医院"></a>2. 私立医院</h2><p>这类医院，我想大家都听说过 莆田系-魏则西事件，只是这个事件被公众关注了。其实内地这30年来，可以说类似普通民众被坑的事件无处不在，这类医院对人们造成了非常大的伤害。深度挖掘医院背景更是涉及权钱交易、官商勾结的巨大黑幕。不多讨论。</p>
<h3 id="2-1-套路-推广渠道"><a href="#2-1-套路-推广渠道" class="headerlink" title="2.1 套路 推广渠道"></a>2.1 套路 推广渠道</h3><p>这类医院会在社会上廉价招聘很多找不到什么正规工作的人，通过流行社交媒体或社交软件 如 ： 微博、微信、百度推广 等进行大面积推广。和咨询的病人进行非常热心礼貌的问答，当然第一步他们会想办法获取你的姓名、电话号等个人信息。</p>
<h3 id="2-2-套路-优惠检查"><a href="#2-2-套路-优惠检查" class="headerlink" title="2.2 套路 优惠检查"></a>2.2 套路 优惠检查</h3><p>为了吸引病人，可以去看病，会用优惠，免费给你申请的什么项目等来忽悠你去那看病。</p>
<h3 id="2-3-套路-夸大病情"><a href="#2-3-套路-夸大病情" class="headerlink" title="2.3 套路 夸大病情"></a>2.3 套路 夸大病情</h3><p>夸大病情，一般这时候你的医生(假学历或者是去不了正规医院的) 对你进行在事实的基础上夸大病情，用一些术语和你自己道出的实际情况，进行包装式忽悠，以让病人心里产生巨大的心里恐慌。会用非常快的速度让你去交钱、再检查什么、再做什么手术等等。</p>
<h3 id="2-4-套路-后续处理"><a href="#2-4-套路-后续处理" class="headerlink" title="2.4 套路 后续处理"></a>2.4 套路 后续处理</h3><p>可能会追踪你的后续情况，让你来复查等等，进行第二轮忽悠。最后你发现花了很多钱，你就算知道被忽悠了，但是也是一点办法没有，因为整体流程是正确的，你用法律的手段也是告不了他们的。</p>
<blockquote>
<p>推荐人们务必擦亮双眼，看病还是推荐去国家国有三级甲等、或者是其他国有甲等医院来看病治疗，如果对非常在意的大病，推荐去2家以上三甲医院进一步确诊，以防止误诊的万无一失。</p>
<p>千万别去内地每一个城市都有的很多莆田系医院，千万查询好三思而行，别去莆田系。</p>
</blockquote>
<h2 id="3-婚恋中介"><a href="#3-婚恋中介" class="headerlink" title="3. 婚恋中介"></a>3. 婚恋中介</h2><p>这种机构一般会通过各种渠道，比如公交车、电梯里、公交站、报纸 等打着巨大的广告进行宣传。</p>
<p>你去的话，一般号称是情感顾问的让你填写你个人的详细信息，包括非常敏感的信息全部写一遍，然后针对你的情况进行各种忽悠，最后费用忽悠的方式和健身瑜伽等会馆的忽悠方式可能类似，给你一个巨大的天文金额，然后给你申请优惠，也可能最后她没说服你今天马上办理，就会再给你换一个号称更资深的顾问来再和你聊一大堆，想办法让你马上签合同交钱等。</p>
<blockquote>
<p>如 ： 我主良缘 等机构，基本就是坑蒙拐骗，能骗就骗，和美容院推荐你办理会员，一个人员一个人员和你聊，直到你办理为止。推荐你这时候当机立断。</p>
</blockquote>
<h2 id="4-房屋中介"><a href="#4-房屋中介" class="headerlink" title="4. 房屋中介"></a>4. 房屋中介</h2><p>这类中介公司，特别多，经常见很多友人被 黑中介嘴上说的特别好，给你很多允诺，最后忽悠让你交定金什么的，交款之后，你就入道了，基本你不租定金也不会给你退了，之前和你打保证的，他很有可能说没和你说过。这时候你就完全被动了，签合同的话一定要认真阅读每一个条款，如果你有什么要求都要增加到合同上，否则一切黑中介说的话，全部都是可以不认账的。</p>
<blockquote>
<p>在这里，你不能相信任何人，你只能相信白纸黑字写下来的才是对的。</p>
</blockquote>
<h2 id="5-技能培训机构"><a href="#5-技能培训机构" class="headerlink" title="5. 技能培训机构"></a>5. 技能培训机构</h2><p>这类机构，比如各种 英孚英语、华尔街英语、樱花日语、跳舞班、书法班、绘画班等等，这类机构参差不齐，不能以偏概全。也有不乏一些顾问就像健身一样的方式来忽悠你，给你优惠，1~2内不决定优惠就没有了等语言来使得你感到恐慌性盲从，中间当然也不乏你嫌弃贵，顾问就嫌弃你屌丝，语气画风都变了的可能性非常大。</p>
<blockquote>
<p>有非常少的类似机构是不错的，当然也存在个别的顾问可能会存在势利眼，势力笑等。</p>
</blockquote>
<h2 id="To-summarize"><a href="#To-summarize" class="headerlink" title="To summarize"></a>To summarize</h2><p>中国这种实体利益恶霸，坑蒙拐骗、势力眼 比比皆是，我想电子商务淘宝、天猫等正是用7天无理由退换货以及平台监管方案才使得消费者的权益得到保障，直接解决了人与人之间的信任问题，从价值观的角度来看，这是使得各类电商取得快速发展的重要决定性推力。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark Machine Learning p4 - Build Recommendation System]]></title>
      <url>http://iequa.com/2016/11/23/spark-machine-learning-p4-rs/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<blockquote>
<p>推荐引擎试图对用户与某类物品之间的联系建模</p>
</blockquote>
<ul>
<li>推荐引擎的类型；</li>
<li>用用户偏好数据来建立一个推荐模型；</li>
<li>为用户进行推荐和求指定物品的类似物品；</li>
<li>评估该模型的预测能力。</li>
</ul>
<h2 id="1-推荐模型分类"><a href="#1-推荐模型分类" class="headerlink" title="1. 推荐模型分类"></a>1. 推荐模型分类</h2><ul>
<li>内容过滤</li>
<li>协同过滤</li>
<li>矩阵分解</li>
</ul>
<h3 id="1-1-内容过滤-类似物品"><a href="#1-1-内容过滤-类似物品" class="headerlink" title="1.1 内容过滤 - (类似物品)"></a>1.1 内容过滤 - (类似物品)</h3><p>利用物品相似度定义，来求出与该物品类似的物品。</p>
<blockquote>
<p>对用户的推荐可以根据用户的属性或描述得出，之后再通过相同的相似度定义来与物品属性做匹配。</p>
</blockquote>
<h3 id="1-2-协同过滤-估计未触"><a href="#1-2-协同过滤-估计未触" class="headerlink" title="1.2 协同过滤 - (估计未触)"></a>1.2 协同过滤 - (估计未触)</h3><p>协同过滤是一种利用大量已有的用户偏好来估计用户对其<code>未接触过</code>的物品的喜好程度。其内在思想是<strong>相似度的定义</strong>。</p>
<ul>
<li><p>基于用户</p>
<blockquote>
<p>如果两个用户表现出相似的偏好，认为他们的兴趣类似。要对他们中的一个用户推荐一个未知物品，便可选取若干与其类似的用户并根据他们的喜好计算出对各个物品的综合得分。</p>
</blockquote>
</li>
<li><p>基于物品</p>
<blockquote>
<p>据现有用户对物品的偏好或是评级情况，来计算物品之间的某种相似度。已有物品相似的物品被用来生成一个综合得分，而该得分用于评估未知物品的相似度。</p>
</blockquote>
</li>
</ul>
<p>基于<strong>用户</strong>或<strong>物品</strong>的方法得分取决于若干用户或是物品之间依据相似度所构成的集合（即邻居），故它们也常被称为KNN。</p>
<p>对“用户-物品”<code>偏好建模</code></p>
<h3 id="1-3-矩阵分解"><a href="#1-3-矩阵分解" class="headerlink" title="1.3 矩阵分解"></a>1.3 矩阵分解</h3><p>Spark推荐模型库 包含基于矩阵分解（matrix factorization）的实现，该模型在协同过滤中的表现十分出色。</p>
<h4 id="1-3-1-显式矩阵分解"><a href="#1-3-1-显式矩阵分解" class="headerlink" title="1.3.1 显式矩阵分解"></a>1.3.1 显式矩阵分解</h4><p>显式自身偏好数据</p>
<blockquote>
<p>这类数据包括如物品评级、赞、喜欢等用户对物品的评价。转换为以用户为行、物品为列的二维矩阵。</p>
<p>大部分情况下单个用户只会和少部分物品接触，所以该矩阵很稀疏。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Tom, Star Wars, 5</span><br><span class="line">Jane, Titanic,　4</span><br><span class="line">Bill, Batman,　3</span><br><span class="line">Jane, Star Wars, 2</span><br><span class="line">Bill, Titanic, 3</span><br></pre></td></tr></table></figure>
<p><img src="/images/spark/spark-ml-4.1.png" alt="一个简单的电影评级矩阵"></p>
<p>用户-物品 矩阵的维度为 U × I</p>
<p><img src="/images/spark/spark-ml-4.2.jpg" alt="图4-2 一个稀疏的评级矩阵"> </p>
<p><strong>为了降维</strong></p>
<ul>
<li>表示用户的 U × k 维矩阵</li>
<li>表征物品的 I × k 维矩阵</li>
</ul>
<blockquote>
<p>这两个矩阵也称作因子矩阵, 乘积是原始评级矩阵的一个近似.</p>
<p>原始评级矩阵通常很稀疏，但因子矩阵却是稠密的</p>
</blockquote>
<p><img src="/images/spark/spark-ml-4.3.jpg" alt="图4-3 用户因子矩阵和物品因子矩阵"></p>
<blockquote>
<p>因子可能表示了某些含义，比如对电影的某个导演、种类、风格或某些演员的偏好。</p>
</blockquote>
<p><code>要计算给定用户对某个物品的预计评级</code> = 行（用户因子向量） 与 列（物品因子向量），两者点积</p>
<p><img src="/images/spark/spark-ml-4.4.jpg" alt="图4-4 用用户因子矩阵和物品因子矩阵计算推荐"></p>
<blockquote>
<p>物品之间相似度的计算，转换为对两物品因子向量之间相似度的计算</p>
</blockquote>
<p><img src="/images/spark/spark-ml-4.5.jpg" alt="图4-5 用物品因子矩阵计算相似度"></p>
<table>
<thead>
<tr>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td>因子分解类模型建立，求解容易</td>
<td>物品或是用户的因子向量可能达到数以百万计。在存储和计算能力有挑战。</td>
</tr>
</tbody>
</table>
<h4 id="1-3-2-隐式矩阵分解"><a href="#1-3-2-隐式矩阵分解" class="headerlink" title="1.3.2. 隐式矩阵分解"></a>1.3.2. 隐式矩阵分解</h4><p>隐含在用户与物品的交互之中。二元数据（比如用户是否观看了某个电影或是否购买了某个商品）和计数数据（比如用户观看某电影的次数）便是这类数据。</p>
<p>MLlib 处理隐式数据：</p>
<ol>
<li>一个二元偏好矩阵 P </li>
<li>一个信心权重矩阵 C</li>
</ol>
<p><img src="/images/spark/spark-ml-4.6.png" alt="图4-6 用物品因子矩阵计算相似度"></p>
<p>隐式模型仍然会创建一个用户因子矩阵和一个物品因子矩阵。但是，模型所求解的是偏好矩阵而非评级矩阵的近似。</p>
<p><strong>3. 最小二乘法</strong></p>
<p>最小二乘法（Alternating Least Squares，ALS）是一种求解矩阵分解问题的最优化方法。且相对容易并行化。</p>
<blockquote>
<p>ALS的实现原理是迭代式求解一系列最小二乘回归问题。在每一次迭代时，固定用户因子矩阵或是物品因子矩阵中的一个，然后用固定的这个矩阵以及评级数据来更新另一个矩阵。之后，被更新的矩阵被固定住，再更新另外一个矩阵。如此迭代，直到模型收敛（或是迭代了预设好的次数）。</p>
</blockquote>
<h2 id="2-提取有效特征"><a href="#2-提取有效特征" class="headerlink" title="2. 提取有效特征"></a>2. 提取有效特征</h2><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">&gt;./bin/spark-shell –-driver-memory <span class="number">2</span>g</span><br><span class="line"><span class="keyword">val</span> rawData = sc.textFile(<span class="string">"/Users/hp/ghome/github/Recommendation/spark-ml/ml-100k/u.data"</span>)</span><br><span class="line">rawData.first()</span><br><span class="line"><span class="keyword">val</span> rawRatings = rawData.map(_.split(<span class="string">"\t"</span>).take(<span class="number">3</span>))</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.mllib.recommendation.<span class="type">ALS</span></span><br><span class="line"></span><br><span class="line"><span class="type">ALS</span>.</span><br><span class="line">asInstanceOf    isInstanceOf   main   toString        train           trainImplicit</span><br><span class="line"><span class="type">ALS</span>.train</span><br></pre></td></tr></table></figure>
<p>ALS模型需要一个由Rating记录构成的RDD，而Rating类则是对用户ID、影片ID（这里是通称product）和实际星级这些参数的封装。<br>我们可以调用map方法将原来的各ID和星级的数组转换为对应的Rating对象，从而创建所需的评级数据集。</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">scala&gt; <span class="keyword">import</span> org.apache.spark.mllib.recommendation.<span class="type">Rating</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.mllib.recommendation.<span class="type">Rating</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> ratings = rawRatings.map &#123; <span class="keyword">case</span> <span class="type">Array</span>(user, movie, rating) =&gt;</span><br><span class="line">     | <span class="type">Rating</span>(user.toInt, movie.toInt, rating.toDouble) &#125;</span><br><span class="line">ratings: org.apache.spark.rdd.<span class="type">RDD</span>[org.apache.spark.mllib.recommendation.<span class="type">Rating</span>] = <span class="type">MapPartitionsRDD</span>[<span class="number">3</span>] at map at &lt;console&gt;:<span class="number">27</span></span><br><span class="line"></span><br><span class="line">scala&gt; ratings.first()</span><br><span class="line">res3: org.apache.spark.mllib.recommendation.<span class="type">Rating</span> = <span class="type">Rating</span>(<span class="number">196</span>,<span class="number">242</span>,<span class="number">3.0</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; ratings.take(<span class="number">10</span>)</span><br><span class="line">res4: <span class="type">Array</span>[org.apache.spark.mllib.recommendation.<span class="type">Rating</span>] = <span class="type">Array</span>(<span class="type">Rating</span>(<span class="number">196</span>,<span class="number">242</span>,<span class="number">3.0</span>), <span class="type">Rating</span>(<span class="number">186</span>,<span class="number">302</span>,<span class="number">3.0</span>), <span class="type">Rating</span>(<span class="number">22</span>,<span class="number">377</span>,<span class="number">1.0</span>), <span class="type">Rating</span>(<span class="number">244</span>,<span class="number">51</span>,<span class="number">2.0</span>), <span class="type">Rating</span>(<span class="number">166</span>,<span class="number">346</span>,<span class="number">1.0</span>), <span class="type">Rating</span>(<span class="number">298</span>,<span class="number">474</span>,<span class="number">4.0</span>), <span class="type">Rating</span>(<span class="number">115</span>,<span class="number">265</span>,<span class="number">2.0</span>), <span class="type">Rating</span>(<span class="number">253</span>,<span class="number">465</span>,<span class="number">5.0</span>), <span class="type">Rating</span>(<span class="number">305</span>,<span class="number">451</span>,<span class="number">3.0</span>), <span class="type">Rating</span>(<span class="number">6</span>,<span class="number">86</span>,<span class="number">3.0</span>))</span><br></pre></td></tr></table></figure>
<h2 id="3-训练推荐模型"><a href="#3-训练推荐模型" class="headerlink" title="3. 训练推荐模型"></a>3. 训练推荐模型</h2><p>从原始数据提取出这些简单特征后，便可训练模型。MLlib已实现模型训练的细节，这不需要我们担心。我们只需提供上述指定类型的新RDD以及其他所需参数来作为训练的输入即可。</p>
<h3 id="3-1-Movie-100k-train-model"><a href="#3-1-Movie-100k-train-model" class="headerlink" title="3.1 Movie-100k train model"></a>3.1 Movie-100k train model</h3><p>现在开始训练模型了，所需的其他参数有以下几个</p>
<ul>
<li><code>rank</code>：对应ALS模型中的因子个数，也就是在低阶近似矩阵中的隐含特征个数。因子个数一般越多越好。但它也会直接影响模型训练和保存时所需的内存开销，尤其是在用户和物品很多的时候。因此实践中该参数常作为训练效果与系统开销之间的调节参数。通常，其合理取值为10到200。</li>
<li><code>iterations</code>：对应运行时的迭代次数。ALS能确保每次迭代都能降低评级矩阵的重建误差，但一般经少数次迭代后ALS模型便已能收敛为一个比较合理的好模型。这样，大部分情况下都没必要迭代太多次（10次左右一般就挺好）。</li>
<li><code>lambda</code>：该参数控制模型的正则化过程，从而控制模型的过拟合情况。其值越高，正则化越严厉。该参数的赋值与实际数据的大小、特征和稀疏程度有关。和其他的机器学习模型一样，正则参数应该通过用非样本的测试数据进行交叉验证来调整。</li>
</ul>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> model = <span class="type">ALS</span>.train(ratings, <span class="number">50</span>, <span class="number">10</span>, <span class="number">0.01</span>)</span><br><span class="line">model: org.apache.spark.mllib.recommendation.<span class="type">MatrixFactorizationModel</span> = org.apache.spark.mllib.recommendation.<span class="type">MatrixFactorizationModel</span>@<span class="number">2e835760</span></span><br><span class="line"></span><br><span class="line">scala&gt; model.userFeatures</span><br><span class="line">res5: org.apache.spark.rdd.<span class="type">RDD</span>[(<span class="type">Int</span>, <span class="type">Array</span>[<span class="type">Double</span>])] = users <span class="type">MapPartitionsRDD</span>[<span class="number">209</span>] at mapValues at <span class="type">ALS</span>.scala:<span class="number">255</span></span><br><span class="line"></span><br><span class="line">scala&gt; model.userFeatures.count</span><br><span class="line">res6: <span class="type">Long</span> = <span class="number">943</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>MatrixFactorizationModel</code> 对象将 用户因子和物品因子分别保存在一个 <code>(id,factor)</code> 对类型的RDD中。<br>它们分别称作<code>userFeatures</code> 和 <code>productFeatures</code>。</p>
</blockquote>
<h3 id="3-2-隐式反馈数据训练模型"><a href="#3-2-隐式反馈数据训练模型" class="headerlink" title="3.2 隐式反馈数据训练模型"></a>3.2 隐式反馈数据训练模型</h3><p>MLlib中标准的矩阵分解模型用于显式评级数据的处理。若要处理隐式数据，则可使用<code>trainImplicit</code>函数。其调用方式和标准的<code>train</code>模式类似，但多了一个可设置的<code>alpha</code>参数（也是一个正则化参数，<code>lambda</code>应通过测试和交叉验证法来设置）。</p>
<p>alpha参数指定了信心权重所应达到的基准线。该值越高则所训练出的模型越认为用户与他所没评级过的电影之间没有相关性。</p>
<h2 id="4-使用推荐模型"><a href="#4-使用推荐模型" class="headerlink" title="4. 使用推荐模型"></a>4. 使用推荐模型</h2><p>预测通常有两种：为某个用户推荐物品，或找出与某个物品相关或相似的其他物品。</p>
<h3 id="4-1-用户推荐"><a href="#4-1-用户推荐" class="headerlink" title="4.1 用户推荐"></a>4.1 用户推荐</h3><p>通过模型求出用户可能喜好程度最高的前K个商品。</p>
<ol>
<li>基于<strong>用户的模型</strong>，则会利用相似用户的评级来计算对某个用户的推荐。</li>
<li>基于<strong>物品的模型</strong>，则会依靠用户接触过的物品与候选物品之间的相似度来获得推荐。</li>
</ol>
<p>利用矩阵分解方法时，是直接对评级数据进行建模，所以预计得分可视作相应用户因子向量和物品因子向量的点积。</p>
<p><strong>1. 从MovieLens 100k数据集生成电影推荐</strong></p>
<p>MLlib的推荐模型基于矩阵分解，因此可用模型所求得的因子矩阵来计算用户对物品的预计评级。下面只针对利用MovieLens中显式数据做推荐的情形，使用隐式模型时的方法与之相同。</p>
<p><code>MatrixFactorizationModel</code>类 提供了一个<code>predict</code>函数，以方便地计算给定用户对给定物品的预期得分：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> predictedRating = model.predict(<span class="number">789</span>, <span class="number">123</span>)</span><br><span class="line"><span class="number">16</span>/<span class="number">05</span>/<span class="number">04</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">08</span> <span class="type">WARN</span> <span class="type">BLAS</span>: <span class="type">Failed</span> to load implementation from: com.github.fommil.netlib.<span class="type">NativeSystemBLAS</span></span><br><span class="line"><span class="number">16</span>/<span class="number">05</span>/<span class="number">04</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">08</span> <span class="type">WARN</span> <span class="type">BLAS</span>: <span class="type">Failed</span> to load implementation from: com.github.fommil.netlib.<span class="type">NativeRefBLAS</span></span><br><span class="line">predictedRating: <span class="type">Double</span> = <span class="number">1.8390368814083764</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> predictedRating = model.predict(<span class="number">789</span>, <span class="number">123</span>)</span><br><span class="line">predictedRating: <span class="type">Double</span> = <span class="number">1.8390368814083764</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> userId = <span class="number">789</span></span><br><span class="line">userId: <span class="type">Int</span> = <span class="number">789</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> <span class="type">K</span> = <span class="number">10</span></span><br><span class="line"><span class="type">K</span>: <span class="type">Int</span> = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> topKRecs = model.recommendProducts(userId, <span class="type">K</span>)</span><br><span class="line">topKRecs: <span class="type">Array</span>[org.apache.spark.mllib.recommendation.<span class="type">Rating</span>] = <span class="type">Array</span>(<span class="type">Rating</span>(<span class="number">789</span>,<span class="number">180</span>,<span class="number">5.352418839062572</span>), <span class="type">Rating</span>(<span class="number">789</span>,<span class="number">887</span>,<span class="number">5.289455638310055</span>), <span class="type">Rating</span>(<span class="number">789</span>,<span class="number">484</span>,<span class="number">5.0301818688410025</span>), <span class="type">Rating</span>(<span class="number">789</span>,<span class="number">475</span>,<span class="number">5.011219778604191</span>), <span class="type">Rating</span>(<span class="number">789</span>,<span class="number">150</span>,<span class="number">5.003965038415291</span>), <span class="type">Rating</span>(<span class="number">789</span>,<span class="number">663</span>,<span class="number">4.991126084946501</span>), <span class="type">Rating</span>(<span class="number">789</span>,<span class="number">56</span>,<span class="number">4.974685008959871</span>), <span class="type">Rating</span>(<span class="number">789</span>,<span class="number">48</span>,<span class="number">4.965402351329832</span>), <span class="type">Rating</span>(<span class="number">789</span>,<span class="number">9</span>,<span class="number">4.963265626841469</span>), <span class="type">Rating</span>(<span class="number">789</span>,<span class="number">127</span>,<span class="number">4.963069165947614</span>))</span><br><span class="line"></span><br><span class="line">scala&gt; println(topKRecs.mkString(<span class="string">"\n"</span>))</span><br><span class="line"><span class="type">Rating</span>(<span class="number">789</span>,<span class="number">180</span>,<span class="number">5.352418839062572</span>)</span><br><span class="line"><span class="type">Rating</span>(<span class="number">789</span>,<span class="number">887</span>,<span class="number">5.289455638310055</span>)</span><br><span class="line"><span class="type">Rating</span>(<span class="number">789</span>,<span class="number">484</span>,<span class="number">5.0301818688410025</span>)</span><br><span class="line"><span class="type">Rating</span>(<span class="number">789</span>,<span class="number">475</span>,<span class="number">5.011219778604191</span>)</span><br><span class="line"><span class="type">Rating</span>(<span class="number">789</span>,<span class="number">150</span>,<span class="number">5.003965038415291</span>)</span><br><span class="line"><span class="type">Rating</span>(<span class="number">789</span>,<span class="number">663</span>,<span class="number">4.991126084946501</span>)</span><br><span class="line"><span class="type">Rating</span>(<span class="number">789</span>,<span class="number">56</span>,<span class="number">4.974685008959871</span>)</span><br><span class="line"><span class="type">Rating</span>(<span class="number">789</span>,<span class="number">48</span>,<span class="number">4.965402351329832</span>)</span><br><span class="line"><span class="type">Rating</span>(<span class="number">789</span>,<span class="number">9</span>,<span class="number">4.963265626841469</span>)</span><br><span class="line"><span class="type">Rating</span>(<span class="number">789</span>,<span class="number">127</span>,<span class="number">4.963069165947614</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Reading notes</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[what is recommendation system]]></title>
      <url>http://iequa.com/2016/11/22/rsac-p1/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<h2 id="1-推荐系统"><a href="#1-推荐系统" class="headerlink" title="1. 推荐系统 ?"></a>1. 推荐系统 ?</h2><blockquote>
<p>为解决 information overload 的问题，解决方案是分类目录和搜索引擎。yahoo、google</p>
</blockquote>
<h3 id="1-1-搜索引擎"><a href="#1-1-搜索引擎" class="headerlink" title="1.1 搜索引擎"></a>1.1 搜索引擎</h3><table>
<thead>
<tr>
<th>Shop</th>
<th>用户买花生流程</th>
</tr>
</thead>
<tbody>
<tr>
<td>便利店 &nbsp;</td>
<td>转一圈找到花生米,然后比较几个牌子的口碑或者价格找到自己喜欢的牌子，掏钱付款</td>
</tr>
<tr>
<td>沃尔玛</td>
<td>按分类指示牌到食品楼层，按指示牌到卖干果的货架，后仔细寻找你需要的花生米，找到后付款</td>
</tr>
<tr>
<td>淘宝</td>
<td>搜索框的东西里输入花生米3个字，然后你会看到一堆花生米，找到喜欢的牌子，付费，然后等待送货上门</td>
</tr>
</tbody>
</table>
<blockquote>
<p>用户具有明确需求 : 搜索引擎</p>
</blockquote>
<h3 id="1-2-推荐系统"><a href="#1-2-推荐系统" class="headerlink" title="1.2 推荐系统"></a>1.2 推荐系统</h3><p>推荐系统和搜索引擎不同的是，推荐系统不需要用户提供明确的需求，而是通过分析用户的历史行为给用户的兴趣建模，从而主动给用户推荐能够满足他们兴趣和需求的信息。推荐系统 的基本任务是联系<strong>用户</strong>和<strong>物品</strong>，解决信息过载的问题</p>
<p><img src="/images/ml/rsac-1-1.png" alt="rsac-1"></p>
<blockquote>
<p>用户不具明确需求 : 推荐系统</p>
</blockquote>
<h3 id="1-3-推荐系统分类"><a href="#1-3-推荐系统分类" class="headerlink" title="1.3 推荐系统分类"></a>1.3 推荐系统分类</h3><p>按照数据分成 协同过滤、内容过滤、社会化过滤</p>
<ol>
<li>social recommendation</li>
<li>content-based filtering</li>
<li>collaborative filtering [kə’læbəretɪv]</li>
</ol>
<p><img src="/images/ml/rsac-1-2.png" alt="rsac-2"></p>
<p>按照算法分成 基于邻域的算法、基于图的算法、基于矩阵分解 或者 概率模型的算法</p>
<h2 id="2-个性化推荐系统应用"><a href="#2-个性化推荐系统应用" class="headerlink" title="2. 个性化推荐系统应用"></a>2. 个性化推荐系统应用</h2><table>
<thead>
<tr>
<th>推荐系统的应用</th>
<th>代表</th>
</tr>
</thead>
<tbody>
<tr>
<td>电子商务</td>
<td>Amazon、Taobao</td>
</tr>
<tr>
<td>电影视频</td>
<td>Youtube、Netflix</td>
</tr>
<tr>
<td>个性化电台</td>
<td>Pandora、豆瓣电台</td>
</tr>
<tr>
<td>移动新闻</td>
<td>Yahoo news、今日头条</td>
</tr>
<tr>
<td>社交网络</td>
<td>Facebook、Twitter</td>
</tr>
<tr>
<td>基于位置的服务</td>
<td>Maps nearby</td>
</tr>
<tr>
<td>个性化AD</td>
<td>Facebook、Sina、Ad百度联盟</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
<h2 id="3-推荐系统评测"><a href="#3-推荐系统评测" class="headerlink" title="3. 推荐系统评测"></a>3. 推荐系统评测</h2><p><img src="/images/ml/rsac-1-3.png" alt="rsac-3"></p>
<blockquote>
<p>tripartite win-win</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Pandas - Series、DataFrame]]></title>
      <url>http://iequa.com/2016/11/18/ml-python-pandas/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$'], ['\[','\]'] ],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<table>
<thead>
<tr>
<th>Extension lib</th>
<th>introduction</th>
</tr>
</thead>
<tbody>
<tr>
<td>Numpy</td>
<td>提供数组支持，以及相应的高效处理函数</td>
</tr>
<tr>
<td>Scipy</td>
<td>提供矩阵支持，以及矩阵相关的数值计算模块</td>
</tr>
<tr>
<td>Matplotlib</td>
<td>数据可视化工具，作图库</td>
</tr>
<tr>
<td>Pandas</td>
<td>数据分析和探索工具</td>
</tr>
<tr>
<td>StatsModels</td>
<td>统计建模和计量经济学，包括描述统计，统计模型估计和推断</td>
</tr>
<tr>
<td>Scikit-Learn</td>
<td>支持回归，分类，聚类 等强大的机器学习库</td>
</tr>
<tr>
<td>Keras</td>
<td>深度学习库，用于建立神经网络以及 deep learning model</td>
</tr>
<tr>
<td>Gensim</td>
<td>用来做 text topic model 的库</td>
</tr>
<tr>
<td>Pillow</td>
<td>旧版的PIL, 图片处理相关</td>
</tr>
<tr>
<td>OpenCV</td>
<td>video 处理相关</td>
</tr>
<tr>
<td>GMPY2</td>
<td>高精度计算相关</td>
</tr>
</tbody>
</table>
<h2 id="1-numpy-lib"><a href="#1-numpy-lib" class="headerlink" title="1. numpy lib"></a>1. numpy lib</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">In [<span class="number">2</span>]: a = np.array([<span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>])</span><br><span class="line">In [<span class="number">3</span>]: a</span><br><span class="line">Out[<span class="number">3</span>]: array([<span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>])</span><br><span class="line">In [<span class="number">4</span>]:</span><br></pre></td></tr></table></figure>
<h2 id="2-pandas-lib"><a href="#2-pandas-lib" class="headerlink" title="2. pandas lib"></a>2. pandas lib</h2><blockquote>
<p>pandas build on <strong>Numpy</strong></p>
<p>pandas 基本的数据结构是 : Series 和 DataFrame (它的每一列都是一个Series)。</p>
<p>每个 Series 都会有一个对应的 Index，用来标记元。(Index类似于 SQL 主键)</p>
</blockquote>
<h3 id="2-1-pandas-install"><a href="#2-1-pandas-install" class="headerlink" title="2.1 pandas install"></a>2.1 pandas install</h3><blockquote>
<p>sudo pip install numpy<br>sudo pip install pandas<br>sudo pip install xlrd<br>sudo pip install xlwt</p>
</blockquote>
<h3 id="2-2-pandas-function"><a href="#2-2-pandas-function" class="headerlink" title="2.2 pandas function"></a>2.2 pandas function</h3><blockquote>
<p>类SQL，CRUD<br>数据处理函数<br>时间序列分析功能<br>灵活处理缺失数据</p>
</blockquote>
<h2 id="3-pandas-Series"><a href="#3-pandas-Series" class="headerlink" title="3. pandas Series"></a>3. pandas Series</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">4</span>]: <span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line">In [<span class="number">5</span>]: <span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: obj = Series([<span class="number">4</span>, <span class="number">7</span>, <span class="number">-5</span>, <span class="number">3</span>])</span><br><span class="line">In [<span class="number">7</span>]: obj</span><br><span class="line">Out[<span class="number">7</span>]:</span><br><span class="line"><span class="number">0</span>    <span class="number">4</span></span><br><span class="line"><span class="number">1</span>    <span class="number">7</span></span><br><span class="line"><span class="number">2</span>   <span class="number">-5</span></span><br><span class="line"><span class="number">3</span>    <span class="number">3</span></span><br><span class="line">dtype: int64</span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: obj.values</span><br><span class="line">Out[<span class="number">8</span>]: array([ <span class="number">4</span>,  <span class="number">7</span>, <span class="number">-5</span>,  <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">9</span>]: obj.index</span><br><span class="line">Out[<span class="number">9</span>]: RangeIndex(start=<span class="number">0</span>, stop=<span class="number">4</span>, step=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: obj2 = Series([<span class="number">4</span>, <span class="number">7</span>, <span class="number">-5</span>, <span class="number">3</span>], index=[<span class="string">'d'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>, <span class="string">'c'</span>])</span><br></pre></td></tr></table></figure>
<h3 id="3-1-Series-index"><a href="#3-1-Series-index" class="headerlink" title="3.1 Series index"></a>3.1 Series index</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">11</span>]: obj2</span><br><span class="line">Out[<span class="number">11</span>]:</span><br><span class="line">d    <span class="number">4</span></span><br><span class="line">b    <span class="number">7</span></span><br><span class="line">a   <span class="number">-5</span></span><br><span class="line">c    <span class="number">3</span></span><br><span class="line">dtype: int64</span><br><span class="line"></span><br><span class="line">In [<span class="number">12</span>]: obj2.index</span><br><span class="line">Out[<span class="number">12</span>]: Index([<span class="string">u'd'</span>, <span class="string">u'b'</span>, <span class="string">u'a'</span>, <span class="string">u'c'</span>], dtype=<span class="string">'object'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">13</span>]: obj2[<span class="string">'a'</span>]</span><br><span class="line">Out[<span class="number">13</span>]: <span class="number">-5</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">14</span>]: obj2[[<span class="string">'c'</span>, <span class="string">'a'</span>]]</span><br><span class="line">Out[<span class="number">14</span>]:</span><br><span class="line">c    <span class="number">3</span></span><br><span class="line">a   <span class="number">-5</span></span><br><span class="line">dtype: int64</span><br></pre></td></tr></table></figure>
<h3 id="3-2-Series-like-dict"><a href="#3-2-Series-like-dict" class="headerlink" title="3.2 Series like dict"></a>3.2 Series like dict</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">16</span>]: <span class="string">'b'</span> <span class="keyword">in</span> obj2</span><br><span class="line">Out[<span class="number">16</span>]: <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">17</span>]: <span class="string">'e'</span> <span class="keyword">in</span> obj2</span><br><span class="line">Out[<span class="number">17</span>]: <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">24</span>]: sdata = &#123;<span class="string">'Ohio'</span>: <span class="number">35</span>, <span class="string">'Texas'</span>: <span class="number">71</span>, <span class="string">'Oregon'</span>: <span class="number">16</span>&#125;</span><br><span class="line"></span><br><span class="line">In [<span class="number">25</span>]: obj3 = Series(sdata)</span><br><span class="line"></span><br><span class="line">In [<span class="number">26</span>]: obj3</span><br><span class="line">Out[<span class="number">26</span>]:</span><br><span class="line">Ohio      <span class="number">35</span></span><br><span class="line">Texas     <span class="number">71</span></span><br><span class="line">Oregon    <span class="number">16</span></span><br><span class="line">dtype: int64</span><br><span class="line"></span><br><span class="line">In [<span class="number">30</span>]: states = [<span class="string">'California'</span>, <span class="string">'Ohio'</span>, <span class="string">'Oregon'</span>, <span class="string">'Texas'</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">32</span>]: obj4 = Series(sdata, index=states)</span><br><span class="line"></span><br><span class="line">In [<span class="number">33</span>]: obj4</span><br><span class="line">Out[<span class="number">33</span>]: /Library/Python/<span class="number">2.7</span>/site-packages/pandas/formats/format.py:<span class="number">2191</span>: RuntimeWarning: invalid value encountered <span class="keyword">in</span> greater</span><br><span class="line">  has_large_values = (abs_vals &gt; <span class="number">1e6</span>).any()</span><br><span class="line">/Library/Python/<span class="number">2.7</span>/site-packages/pandas/formats/format.py:<span class="number">2192</span>: RuntimeWarning: invalid value encountered <span class="keyword">in</span> less</span><br><span class="line">  has_small_values = ((abs_vals &lt; <span class="number">10</span>**(-self.digits)) &amp;</span><br><span class="line">/Library/Python/<span class="number">2.7</span>/site-packages/pandas/formats/format.py:<span class="number">2193</span>: RuntimeWarning: invalid value encountered <span class="keyword">in</span> greater</span><br><span class="line">  (abs_vals &gt; <span class="number">0</span>)).any()</span><br><span class="line"></span><br><span class="line">California     NaN</span><br><span class="line">Ohio          <span class="number">35.0</span></span><br><span class="line">Oregon        <span class="number">16.0</span></span><br><span class="line">Texas         <span class="number">71.0</span></span><br><span class="line">dtype: float64</span><br></pre></td></tr></table></figure>
<h3 id="3-3-Series-isnull"><a href="#3-3-Series-isnull" class="headerlink" title="3.3 Series isnull"></a>3.3 Series isnull</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">48</span>]: obj4.isnull()</span><br><span class="line">Out[<span class="number">48</span>]:</span><br><span class="line">California     <span class="keyword">True</span></span><br><span class="line">Ohio          <span class="keyword">False</span></span><br><span class="line">Oregon        <span class="keyword">False</span></span><br><span class="line">Texas         <span class="keyword">False</span></span><br><span class="line">Name: population, dtype: bool</span><br><span class="line"></span><br><span class="line">In [<span class="number">39</span>]: obj3</span><br><span class="line">Out[<span class="number">39</span>]:</span><br><span class="line">Ohio      <span class="number">35</span></span><br><span class="line">Oregon    <span class="number">16</span></span><br><span class="line">Texas     <span class="number">71</span></span><br><span class="line">dtype: int64</span><br><span class="line"></span><br><span class="line">In [<span class="number">40</span>]: obj4</span><br><span class="line">Out[<span class="number">40</span>]:</span><br><span class="line">California     NaN</span><br><span class="line">Ohio          <span class="number">35.0</span></span><br><span class="line">Oregon        <span class="number">16.0</span></span><br><span class="line">Texas         <span class="number">71.0</span></span><br><span class="line">dtype: float64</span><br><span class="line"></span><br><span class="line">In [<span class="number">41</span>]: obj3 + obj4</span><br><span class="line">Out[<span class="number">41</span>]:</span><br><span class="line">California      NaN</span><br><span class="line">Ohio           <span class="number">70.0</span></span><br><span class="line">Oregon         <span class="number">32.0</span></span><br><span class="line">Texas         <span class="number">142.0</span></span><br><span class="line">dtype: float64</span><br><span class="line"></span><br><span class="line">In [<span class="number">42</span>]: obj4.name</span><br><span class="line"></span><br><span class="line">In [<span class="number">43</span>]: obj4.name = <span class="string">'population'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">44</span>]: obj4.name</span><br><span class="line">Out[<span class="number">44</span>]: <span class="string">'population'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">45</span>]: obj4</span><br><span class="line">Out[<span class="number">45</span>]:</span><br><span class="line">California     NaN</span><br><span class="line">Ohio          <span class="number">35.0</span></span><br><span class="line">Oregon        <span class="number">16.0</span></span><br><span class="line">Texas         <span class="number">71.0</span></span><br><span class="line">Name: population, dtype: float64</span><br></pre></td></tr></table></figure>
<h2 id="3-pandas-DateFrame"><a href="#3-pandas-DateFrame" class="headerlink" title="3. pandas DateFrame"></a>3. pandas DateFrame</h2><blockquote>
<p>DateFrame 表格型数据结构</p>
<p>DataFrame 具有 行索引 和 列索引，由 Series 组成的 dict。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera Week 4 - Neural Networks Preface]]></title>
      <url>http://iequa.com/2016/11/17/ml-coursera-ng-w4-nn-01/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>


<h2 id="1-Non-linear-Hypotheses"><a href="#1-Non-linear-Hypotheses" class="headerlink" title="1. Non-linear Hypotheses"></a>1. Non-linear Hypotheses</h2><p><img src="/images/ml/ml-ng-w4-01-01.png" alt="Non-linear Hypotheses"></p>
<p>Performing linear regression with a complex set of data with many features is very unwieldy. Say you wanted to create a hypothesis from three features that included all the <code>quadratic [kwɑ&#39;drætɪk]</code> terms:</p>
<p>$$<br>\begin{align}&amp; g(\theta_0 + \theta_1x_1^2 + \theta_2x_1x_2 + \theta_3x_1x_3 \newline&amp; + \theta_4x_2^2 + \theta_5x_2x_3 \newline&amp; + \theta_6x_3^2 )\end{align}<br>$$</p>
<h2 id="1-1-Computer-Vision"><a href="#1-1-Computer-Vision" class="headerlink" title="1.1 Computer Vision"></a>1.1 Computer Vision</h2><blockquote>
<p>For many machine learning problems, <code>n will be pretty large</code>. Here’s an example. </p>
</blockquote>
<p><img src="/images/ml/ml-ng-w4-01-02.png" alt="Computer Vision"></p>
<blockquote>
<p>It turns out that where you and I see a car, the computer sees that. What it sees is this matrix, or this grid</p>
</blockquote>
<h2 id="1-2-Car-detection"><a href="#1-2-Car-detection" class="headerlink" title="1.2 Car detection"></a>1.2 Car detection</h2><p><img src="/images/ml/ml-ng-w4-01-03.png" alt="Computer Vision"></p>
<p><img src="/images/ml/ml-ng-w4-01-04.png" alt="Computer Vision"></p>
<p><img src="/images/ml/ml-ng-w4-01-05.png" alt="Computer Vision"></p>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Clothes and outfits L4 Complimenting people on their outfits]]></title>
      <url>http://iequa.com/2016/11/14/ef-l5u6-Clothes-and-outfits-l4/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>Fabrics</li>
<li>pants </li>
</ul>
<p><img src="/images/ef-l5u6l4.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[NINA] I always try to find the newest, coolest styles for my store.</td>
<td></td>
</tr>
<tr>
<td>[NINA] I read magazines, I go to fashion shows.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Fashion is always changing. I like to keep up with the latest trends.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Those are great shoes!</td>
<td></td>
</tr>
<tr>
<td>[NINA] See, I have a small shop and I’m always looking for new ideas.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Do you mind if I take a photo?</td>
<td></td>
</tr>
<tr>
<td>[LADY] Not at all. Go ahead.</td>
<td></td>
</tr>
<tr>
<td>[NINA] That’s lovely. Thank you.</td>
<td></td>
</tr>
<tr>
<td>[NINA] So, what are some of your favorite brands or designers?</td>
<td></td>
</tr>
<tr>
<td>[WOMAN 1] Merabi, definitely.</td>
<td></td>
</tr>
<tr>
<td>[WOMAN 2] Merabi, yeah, and YRed. I love YRed. My handbag is Yred.</td>
<td></td>
</tr>
<tr>
<td>[NINA] That’s lovely. This is leather?</td>
<td></td>
</tr>
<tr>
<td>[NINA] So what kinds of fabrics and colors do you like?</td>
<td></td>
</tr>
<tr>
<td>[WOMAN 3] I like natural fabrics, like silk and cotton.</td>
<td></td>
</tr>
<tr>
<td>[WOMAN 1] Yeah, me, too. It’s nice in the summer, but in the winter, I wear woolens.</td>
<td></td>
</tr>
<tr>
<td>[WOMAN 3] You really should add more color to your wardrobe.</td>
<td></td>
</tr>
<tr>
<td>[NINA] So, what are some of your favorite pieces of clothing?</td>
<td></td>
</tr>
<tr>
<td>[WOMAN 2] Red. Leather. Mini-skirt.</td>
<td></td>
</tr>
<tr>
<td>[WOMAN 3] What?</td>
<td></td>
</tr>
<tr>
<td>[NINA] Thanks, Here’s my shop. Pop in any time.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Expression"><a href="#2-Expression" class="headerlink" title="2. Expression"></a>2. Expression</h2><p><img src="/images/ef-l5u6l4-1.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Opinion</th>
<th>Size</th>
<th>Age</th>
<th>Color</th>
<th>Origin</th>
<th>Material</th>
</tr>
</thead>
<tbody>
<tr>
<td>fabulous</td>
<td>long</td>
<td>old</td>
<td>navy blue</td>
<td>Chinese</td>
<td>silk</td>
</tr>
</tbody>
</table>
<ul>
<li>Her hot Indian cotton dress.</li>
<li>A weird, long, old tie.</li>
<li>Chloe prefers silk to wool.</li>
</ul>
<p>Expression would rather. Notice that I would is usually contracted to I’d.</p>
<ul>
<li>I prefer cotton to wool in the summer.</li>
<li>I prefer cotton.</li>
<li>I’d rather wear light colors in the summer.</li>
<li>I’d rather wear wool clothes than cotton in the winter.</li>
</ul>
<h2 id="3-Writing"><a href="#3-Writing" class="headerlink" title="3. Writing"></a>3. Writing</h2><p>Most of my clothes are way too expensive. I’d rather wear cool brands from a small shop than a cheap, polyester thing from a department store. I prefer silk and wool to cotton and leather. I like wearing red, yellow and orange more than dark, boring colors. I just bought a fantastic, new, orange, Spanish, leather handbag. I absolutely love it!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Clothes and outfits L3 Discussing dress requirements]]></title>
      <url>http://iequa.com/2016/11/09/ef-l5u6-Clothes-and-outfits-l3/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>hottest</li>
</ul>
<p><img src="/images/ef-l5u6l3.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[KATE] You know, I could be a designer.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Every season, it’s something different.</td>
<td></td>
</tr>
<tr>
<td>[KATE] ‘Hats will be the hottest thing.’</td>
<td></td>
</tr>
<tr>
<td>[KATE] ‘Red could be the color this fall.’</td>
<td></td>
</tr>
<tr>
<td>[KATE] ‘Tight jeans will be so hot!’ Who decides these things?</td>
<td></td>
</tr>
<tr>
<td>[KATE] You know, I could be a designer.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] <strong>Well, can you draw?</strong></td>
<td></td>
</tr>
<tr>
<td>[KATE] I know clothes. I’m good at putting together outfits.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Sometimes I buy things <strong>before they’re even in style.</strong></td>
<td></td>
</tr>
<tr>
<td>[EMMA] True, but designers go to fashion school.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] They learn how to draw, how to sew … They work very hard to become designers.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Maybe I’ll go to fashion school.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Yeah. You should.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Expression"><a href="#2-Expression" class="headerlink" title="2. Expression"></a>2. Expression</h2><p><strong>Want to</strong></p>
<ul>
<li>Want to create your own brand and sell your clothes?</li>
<li>Want to learn how to sew your own clothes?</li>
<li>Want to learn which color shirt to put together with which pants?</li>
</ul>
<ul>
<li>This style is really hot right now.</li>
<li>She’s my favorite designer.</li>
<li>I love the design of this suit!</li>
<li>This is my favorite brand of jeans.</li>
</ul>
<p><strong>look</strong> + adj</p>
<ul>
<li>You look fantastic!</li>
<li>That shirt looks great on you.    </li>
<li>That color looks good with your hair.</li>
</ul>
<p><strong>good at</strong> + ing</p>
<ul>
<li>You’re good at putting together an outfit.</li>
<li>You’re great at creating new styles.</li>
</ul>
<table>
<thead>
<tr>
<th>not at all</th>
<th>Actually, no </th>
</tr>
</thead>
<tbody>
<tr>
<td>A: Do you think this outfit makes me look ugly?</td>
<td>A: You don’t think this necklace is weird?</td>
</tr>
<tr>
<td>B: Not at all!</td>
<td>B: Actually, no. Don’t worry, you look fabulous. [‘fæbjʊləs]</td>
</tr>
</tbody>
</table>
<h2 id="3-Expression"><a href="#3-Expression" class="headerlink" title="3. Expression"></a>3. Expression</h2><table>
<thead>
<tr>
<th>Seeking and giving reassurances</th>
</tr>
</thead>
<tbody>
<tr>
<td>CHRIS: Lauren, <strong>do you think</strong> this suit makes me look fat?</td>
<td></td>
</tr>
<tr>
<td>LAUREN: Fat? Actually, no. I think it makes you look thinner.</td>
<td></td>
</tr>
<tr>
<td>CHRIS: Really? It’s so cheap. <strong>You don’t think</strong> I should go buy some fancy brand?</td>
<td></td>
</tr>
<tr>
<td>LAUREN: <code>Not at all</code>! You look fine. Very handsome.</td>
<td></td>
</tr>
<tr>
<td>CHRIS: But <strong>I’m not sure about</strong> this <strong>tie</strong>. Horrible color. Maybe I should wear this one instead.</td>
<td></td>
</tr>
<tr>
<td>LAUREN: I wouldn’t worry about it. They both look great!</td>
<td></td>
</tr>
<tr>
<td>CHRIS: Hmm. I just don’t know. I never learned how to put together an outfit.</td>
<td></td>
</tr>
<tr>
<td>LAUREN: Don’t worry. You’ve got a classic style.</td>
<td></td>
</tr>
<tr>
<td>CHRIS: Aw, thanks, Lauren.</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Clothes and outfits L2 Talking about people's outfits]]></title>
      <url>http://iequa.com/2016/11/06/ef-l5u6-Clothes-and-outfits-l2/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>trends</li>
<li>in style</li>
<li>fun</li>
<li>tight</li>
<li>clothing</li>
<li>pants</li>
</ul>
<p><img src="/images/ef-l5u6l2.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[NINA] My business is fashion.</td>
<td></td>
</tr>
<tr>
<td>[NINA] People think that fashion is all about following the season’s trends.</td>
<td></td>
</tr>
<tr>
<td>[NINA] But it isn’t just about what the designers say is in style.</td>
<td></td>
</tr>
<tr>
<td>[NINA] It’s about finding your own style.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Fashion is personal.</td>
<td></td>
</tr>
<tr>
<td>[NINA] It’s about expressing yourself.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Having fun.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Wearing the clothes that you like.</td>
<td></td>
</tr>
<tr>
<td>[NINA] Is everything OK in there?</td>
<td></td>
</tr>
<tr>
<td>[CUSTOMER] Yeah. The magazines say tight jeans are going to be really in this autumn. What am I going to do?</td>
<td></td>
</tr>
<tr>
<td>[NINA] Tight jeans aren’t for everyone. If it doesn’t look good, don’t wear it.</td>
<td></td>
</tr>
<tr>
<td>[CUSTOMER] My legs don’t look good in pants like these.</td>
<td></td>
</tr>
<tr>
<td>[NINA] You know what? Skirts are also going to be important this season.</td>
<td></td>
</tr>
<tr>
<td>[NINA] This skirt will look great on you.</td>
<td></td>
</tr>
<tr>
<td>[NINA] What size are you? Ten?</td>
<td></td>
</tr>
<tr>
<td>[CUSTOMER] Twelve.</td>
<td></td>
</tr>
<tr>
<td>[NINA] That skirt looks great on you!</td>
<td></td>
</tr>
<tr>
<td>[CUSTOMER] Mmm. It does.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Grammar"><a href="#2-Grammar" class="headerlink" title="2. Grammar"></a>2. Grammar</h2><table>
<thead>
<tr>
<th>Fashion adjectives</th>
</tr>
</thead>
<tbody>
<tr>
<td>stylish / in style [‘staɪlɪʃ]</td>
<td>out of style</td>
</tr>
<tr>
<td>-</td>
<td>dreadful</td>
</tr>
<tr>
<td>fashionable</td>
<td>unfashionable</td>
</tr>
<tr>
<td>classic</td>
<td>trendy</td>
</tr>
<tr>
<td>loose</td>
<td>tight</td>
</tr>
<tr>
<td>fake</td>
<td>real</td>
</tr>
<tr>
<td>formal</td>
<td>casual</td>
</tr>
</tbody>
</table>
<ul>
<li>I don’t wear real fur, only fake.</li>
<li>Those jeans are way too trendy.</li>
<li>He doesn’t keep up with fashion trends.</li>
<li>How do you choose your clothes?</li>
</ul>
<h2 id="3-Reading"><a href="#3-Reading" class="headerlink" title="3. Reading"></a>3. Reading</h2><p>HAYLEY: So, I just went shopping, and there were just too many amazing clothes. In the first shop, I found this classic pair of jeans  . They are so cute. I also tried on a skirt, but it was too loose  . Then, at the second place, I tried some interesting jeans, but I decided they were way too baggy  . But I did find a skirt that is pretty, and tight. It looks great. Then, I couldn’t believe it: I also went to a hat store and bought this very stylish hat. Funny, because there were some hats there that were, like, totally out of  style. At the last shop, I tried on two dresses. One is very formal  , and the other one, here – it’s pretty casual. What do you think?</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Clothes and outfits L1 Shopping for an outfit]]></title>
      <url>http://iequa.com/2016/11/04/ef-l5u6-Clothes-and-outfits-l1/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><p><img src="/images/ef-l5u6l1-1.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>handbag</th>
<th>baggy jeans</th>
<th>necklace</th>
<th>sandals</th>
<th>suit</th>
</tr>
</thead>
<tbody>
<tr>
<td>makeup</td>
<td>ring</td>
<td>baseball cap</td>
<td>outfit [‘aʊtfɪt]</td>
<td>tie</td>
</tr>
</tbody>
</table>
<p><img src="/images/ef-l5u6l1.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[EMMA] That hair! Yeah, it’s horrid, it’s pretty terrible.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] So much <code>wax</code> in it.</td>
<td></td>
</tr>
<tr>
<td>[KATE] She’s wearing socks with sandals.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Ooooooh. It’s quite nasty, actually.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Oh. Look at that guy.</td>
<td></td>
</tr>
<tr>
<td>[KATE] I’m sorry, but he’s far too old to be wearing those baggy jeans and that baseball cap.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Come on. He wants to feel young again.</td>
<td></td>
</tr>
<tr>
<td>[KATE] I know, but it’s not a good look for a 40-year-old man.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Ooooh! <code>Too much makeup</code>.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Her shoes are cool.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Handbag’s plastic!</td>
<td></td>
</tr>
<tr>
<td>[KATE] Look - too much sun.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Oh, yeah. Way too much sun. So disgusting.</td>
<td></td>
</tr>
<tr>
<td>[KATE] And … not enough sun!</td>
<td></td>
</tr>
<tr>
<td>[EMMA] And not enough sun.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Look at him.</td>
<td></td>
</tr>
<tr>
<td>[KATE] Somebody call the fashion police!</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Kate! He can hear you!</td>
<td></td>
</tr>
<tr>
<td>[KATE] Look at his outfit!</td>
<td></td>
</tr>
<tr>
<td>[KATE] He’s wearing polyester.</td>
<td></td>
</tr>
<tr>
<td>[KATE] I’m sorry, but that jacket’s too small for him.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Well, keep it down.</td>
<td></td>
</tr>
<tr>
<td>[EMMA] Not everybody cares much about fashion as you do.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Grammar"><a href="#2-Grammar" class="headerlink" title="2. Grammar"></a>2. Grammar</h2><table>
<thead>
<tr>
<th>Too many / Too much</th>
<th>enough</th>
</tr>
</thead>
<tbody>
<tr>
<td>That’s <code>too many</code> hats!</td>
<td>I have enough handbags. I don’t need any more.</td>
</tr>
<tr>
<td>She’s wearing <code>too much</code> makeup.</td>
<td>I don’t have enough money to buy that dress.</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>way too</th>
<th>far too</th>
</tr>
</thead>
<tbody>
<tr>
<td>That dress looks <code>way too</code> baggy.</td>
<td>she’s wearing <code>far too</code> many necklaces.</td>
</tr>
</tbody>
</table>
<ul>
<li>A: This plastic handbag is nasty.</li>
<li>B: Come on. Maybe you’re being too critical.</li>
</ul>
<ul>
<li>A: I look terrible!</li>
<li>B: You look fine. Not everybody cares <code>as much about makeup as</code> you do.    </li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Movies L4 Writing about a movie]]></title>
      <url>http://iequa.com/2016/11/03/ef-l5u5-Movies-l4/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>sheriff</li>
</ul>
<p><img src="/images/ef-l5u5l4.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[IAN] I don’t agree with Kevin.</td>
<td></td>
</tr>
<tr>
<td>[IAN] He thinks that books are better than movies.</td>
<td></td>
</tr>
<tr>
<td>[IAN] I think movies are more fun.</td>
<td></td>
</tr>
<tr>
<td>[IAN] Some actors are amazing.</td>
<td></td>
</tr>
<tr>
<td>[IAN] They don’t have to be famous.</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>[KEVIN] Ian likes westerns.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] Some westerns are dreadful.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] The plot and the setting are always the same.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] The characters are too simple: a good guy and a bad guy.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] First, there’s a town.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] Everybody’s happy there.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] Then, the bad guys arrive, and the people aren’t happy anymore.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] And next, a new sheriff comes to town to help these poor people.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] And finally, there is a fight in the middle of the town between the new sheriff and the bad people.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] Guess who wins?</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] It’s so simple, you know - a good guy and a bad guy, good against evil, saving a girl, always a happy ending.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] I mean, that’s just me.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] I prefer dark stories.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Grammar"><a href="#2-Grammar" class="headerlink" title="2. Grammar"></a>2. Grammar</h2><ul>
<li>The special effects were created by 23 people.</li>
<li>The bank manager was shot by the bad guys.</li>
</ul>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: Guess what? The producer was fired.</td>
<td></td>
</tr>
<tr>
<td>B: Why?</td>
<td></td>
</tr>
<tr>
<td>A: The actors weren’t paid.</td>
<td></td>
</tr>
<tr>
<td>B: Oh, no! Was a new producer hired?</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>TIM: Wow. Amazing. ‘Shaun of the Dead.’ I can’t believe that movie was made with so little money.</td>
<td></td>
</tr>
<tr>
<td>MEGAN: Oh? How much money did they spend  ?</td>
<td></td>
</tr>
<tr>
<td>TIM: $6.1 million. It seemed like it was created for $50 million.</td>
<td></td>
</tr>
<tr>
<td>MEGAN: But $6.1 million is a lot of money!</td>
<td></td>
</tr>
<tr>
<td>TIM: Not really. Most Hollywood films cost, like, $100 million, or more.</td>
<td></td>
</tr>
<tr>
<td>MEGAN: Huh. How did they do it?</td>
<td></td>
</tr>
<tr>
<td>TIM: Well, it was directed by Edgar Wright. He’s brilliant.</td>
<td></td>
</tr>
<tr>
<td>MEGAN: Yeah?</td>
<td></td>
</tr>
<tr>
<td>TIM: He said they weren’t given much money, and they were told  to spend it carefully. So he was really careful and worked really hard.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="3-Reading-amp-Writing"><a href="#3-Reading-amp-Writing" class="headerlink" title="3. Reading &amp; Writing"></a>3. Reading &amp; Writing</h2><p><strong>Moneyball</strong></p>
<p>I don’t like baseball, but ‘Moneyball’ was a very interesting movie. The story is a little dark. You learn some dreadful things about sports, but ‘Moneyball’ has a happy ending. ‘Moneyball’ is about the Oakland A’s general manager, the famous Billy Beane. Beane wasn’t given much money. He had to get creative. Billy Beane was played by Brad Pitt, and ‘Moneyball’ was directed by Bennett Miller. I think that actors always do a good job when they work with Bennett Miller.</p>
<p>I just saw ‘Rear Window’. What an amazing movie! ‘Rear Window’ was made in 1954 and was directed by the famous Alfred Hitchcock. ‘Rear Window’ is a dark story, like most Hitchcock movies. L.B. is played by James Stewart. L.B. is a photographer, but his leg is broken. He has to stay home, so he watches his neighbors through their windows. I felt sorry for his poor neighbors!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Movies L3 Choosing a movie to see]]></title>
      <url>http://iequa.com/2016/11/01/ef-l5u5-Movies-l3/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>characters</li>
<li>remake</li>
</ul>
<p><img src="/images/ef-l5u5l3.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[KEVIN] What’s he doing to her?</td>
<td></td>
</tr>
<tr>
<td>[IAN] I think he’s about to shoot her in the head.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] I can’t believe he did that.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] That’s pretty bad acting, actually.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] Well, it’s OK.</td>
<td></td>
</tr>
<tr>
<td>[IAN] It’s in black and white.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] Why is it in black and white? What year is this movie?</td>
<td></td>
</tr>
<tr>
<td>[IAN] It’s like 1932.</td>
<td></td>
</tr>
<tr>
<td>[IAN] The <code>special effects</code> aren’t brilliant.</td>
<td></td>
</tr>
<tr>
<td>[IAN] It’s an old movie, but it’s a good story.</td>
<td></td>
</tr>
<tr>
<td>[IAN] Why the subtitles?</td>
<td></td>
</tr>
<tr>
<td>[IAN] We all speak English here, right?</td>
<td></td>
</tr>
<tr>
<td>[IAN] Oh! Oooh, I like her.</td>
<td></td>
</tr>
<tr>
<td>[IAN] Good actress.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] You think so?</td>
<td></td>
</tr>
<tr>
<td>[IAN] It’s a really good story.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] It’s not very original.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] I already know what’s going to happen.</td>
<td></td>
</tr>
<tr>
<td>[IAN] How do you know?</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] Westerns are always the same.</td>
<td></td>
</tr>
<tr>
<td>[IAN] You saw the remake.</td>
<td></td>
</tr>
<tr>
<td>[IAN] That’s how you know.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] No, I didn’t see the remake.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] No, I just know how it’s going to end.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Grammar"><a href="#2-Grammar" class="headerlink" title="2. Grammar"></a>2. Grammar</h2><table>
<thead>
<tr>
<th>sentence</th>
</tr>
</thead>
<tbody>
<tr>
<td>Beijing is the capital of China.</td>
<td></td>
</tr>
<tr>
<td><strong>Woody Allen directed the movie ‘Annie Hall.’</strong></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>I think that ‘Annie Hall’ is an incredible film.</td>
<td></td>
</tr>
<tr>
<td>In my opinion, he’s a terrible actor.</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Which movie do you want to see?</strong></td>
<td></td>
</tr>
<tr>
<td>What about this Tom Hanks movie?</td>
<td></td>
</tr>
<tr>
<td>What’s it called?</td>
<td></td>
</tr>
<tr>
<td>I’ve never heard of it.</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>The movie <strong>is directed</strong> by George Lucas.</td>
<td></td>
</tr>
<tr>
<td>The costumes <strong>are designed</strong> by Virginia Poole.</td>
<td></td>
</tr>
<tr>
<td>The main character <strong>is played</strong> by Bruce Willis.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="3-Reading"><a href="#3-Reading" class="headerlink" title="3. Reading"></a>3. Reading</h2><p>‘The Artist’ is just like one of those old films. This romance was made in gorgeous black and white and takes place in the 1920s. And, just like the old films, there’s no talking. There are only a few subtitles. But it’s certainly not a remake of one of the old films from the 1920s. <strong>Remember how some of those old movies had really bad acting</strong>? Well, the acting in ‘The Artist’ is brilliant, and actor  Berenice Bejo is incredible. This movie also has an original  plot. ‘The Artist’ shows us what happens when a famous person has really bad luck. I won’t tell you how it ends - see ‘The Artist’ for yourself.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Movies L2 Describing your favorite movie]]></title>
      <url>http://iequa.com/2016/10/30/ef-l5u5-Movies-l2/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>characters</li>
<li>soundtrack</li>
<li>actor, actress</li>
<li>ridiculous [rɪ’dɪkjʊləs]</li>
<li>genius</li>
<li>dramas</li>
<li>dull</li>
</ul>
<p><img src="/images/ef-l5u5l2.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[FELTON] I don’t agree. You know?</td>
<td></td>
</tr>
<tr>
<td>[FELTON] I think a soundtrack is very important to a movie.</td>
<td></td>
</tr>
<tr>
<td>[FELTON] Soundtracks aren’t boring.</td>
<td></td>
</tr>
<tr>
<td>[FELTON] OK, I agree that not all soundtracks are great.</td>
<td></td>
</tr>
<tr>
<td>[FELTON] But movies like ‘Superman’ and ‘Indiana Jones’ have some of the best action movie soundtracks of all time.</td>
<td></td>
</tr>
<tr>
<td>[FELTON] I think it was <strong>genius to use classical music</strong> in the science-fiction movie ‘2001: A Space Odyssey.’</td>
<td></td>
</tr>
<tr>
<td>[FELTON] ‘Love Story’ has one of the saddest soundtracks of all dramas.</td>
<td></td>
</tr>
<tr>
<td>[IAN] My favorite movies are westerns.</td>
<td></td>
</tr>
<tr>
<td>[IAN] … the characters are great, and there’s just never a dull or boring moment.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Grammar"><a href="#2-Grammar" class="headerlink" title="2. Grammar"></a>2. Grammar</h2><ul>
<li>‘The Birds’ has one of the most exciting plots I’ve ever seen.</li>
<li>‘Love Story’ has one of the worst soundtracks ever.</li>
<li>‘Emma’ has some of the best costumes of all time.</li>
<li>Marilyn Monroe is one of the biggest stars of all time.</li>
</ul>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>A: <strong>How did you like it?</strong></td>
<td></td>
</tr>
<tr>
<td>B: I didn’t like it at all!</td>
<td></td>
</tr>
<tr>
<td>A: <strong>Who directed it?</strong></td>
<td></td>
</tr>
<tr>
<td>B: It was directed by Woody Allen.</td>
<td></td>
</tr>
<tr>
<td>A: <strong>Who’s in it?</strong></td>
<td></td>
</tr>
<tr>
<td>B: It stars Glenda Smith.</td>
<td></td>
</tr>
<tr>
<td>A: <strong>How’s the acting?</strong></td>
<td></td>
</tr>
<tr>
<td>B: It’s really good.</td>
<td></td>
</tr>
<tr>
<td>A: <strong>Where does the film take place?</strong></td>
<td></td>
</tr>
<tr>
<td>B: It takes place in Paris in 1952.</td>
<td></td>
</tr>
<tr>
<td>A: <strong>How does it end?</strong></td>
<td></td>
</tr>
<tr>
<td>B: Sheila and Mark get married.</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[第二章 导数与微分]]></title>
      <url>http://iequa.com/2016/10/28/math-l1p2/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$'], ['\[','\]'] ],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<h2 id="1-导数概念"><a href="#1-导数概念" class="headerlink" title="1. 导数概念"></a>1. 导数概念</h2><h3 id="1-1-导数引例"><a href="#1-1-导数引例" class="headerlink" title="1.1 导数引例"></a>1.1 导数引例</h3><blockquote>
<p>物理意义</p>
</blockquote>
<ul>
<li><ol>
<li>瞬时速度</li>
</ol>
</li>
<li><ol>
<li>切线斜率 </li>
</ol>
</li>
</ul>
<p><img src="/images/math-l1p2-01.png" width="460" height="350" img=""></p>
<h3 id="1-2-导数的定义"><a href="#1-2-导数的定义" class="headerlink" title="1.2 导数的定义"></a>1.2 导数的定义</h3><p><img src="/images/math-l1p2-02.png" alt="concept"></p>
<h2 id="2-函数的求导法则"><a href="#2-函数的求导法则" class="headerlink" title="2. 函数的求导法则"></a>2. 函数的求导法则</h2><h2 id="3-高阶导数"><a href="#3-高阶导数" class="headerlink" title="3. 高阶导数"></a>3. 高阶导数</h2><h2 id="4-隐函数及由参数方程所确定的函数的导数"><a href="#4-隐函数及由参数方程所确定的函数的导数" class="headerlink" title="4. 隐函数及由参数方程所确定的函数的导数"></a>4. 隐函数及由参数方程所确定的函数的导数</h2><h2 id="5-函数的微分"><a href="#5-函数的微分" class="headerlink" title="5. 函数的微分"></a>5. 函数的微分</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Movies L1 Talking about a movie you recently saw]]></title>
      <url>http://iequa.com/2016/10/28/ef-l5u5-Movies-l1/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>horror</li>
<li>science fiction</li>
<li>romance</li>
<li>documentary</li>
<li>comedy</li>
<li>thriller</li>
<li>action</li>
<li>bioengineering</li>
<li>soundtrack</li>
</ul>
<p><img src="/images/ef-l5u5l1.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[IAN] Let me introduce you to … Kevin.</td>
<td></td>
</tr>
<tr>
<td>[IAN] Student.</td>
<td></td>
</tr>
<tr>
<td>[IAN] Popular with the ladies.</td>
<td></td>
</tr>
<tr>
<td>[IAN] So, tell our <strong>viewers</strong>, why are you studying <strong>bioengineering</strong>?</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] Well, I’ve always liked it, so <strong>that’s why I decided to study bioengineering</strong>.</td>
<td></td>
</tr>
<tr>
<td>[IAN] What are you reading ?</td>
<td></td>
</tr>
<tr>
<td>[IAN] I know the movies … So tell our viewers …</td>
<td></td>
</tr>
<tr>
<td>[IAN] What did you think about the movies?</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] Well, I hated the last one.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] The book is good, but the movie is like an action movie. It’s terrible.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] The first one is the best.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] It’s even <strong>a bit scary</strong>.</td>
<td></td>
</tr>
<tr>
<td>[IAN] So it’s a horror movie.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] No, I feel it’s not really a horror movie.</td>
<td></td>
</tr>
<tr>
<td>[KEVIN] I think it’s more of a thriller. [‘θrɪlə]</td>
<td></td>
</tr>
<tr>
<td>[IAN] So no happy ending.</td>
<td></td>
</tr>
<tr>
<td>[IAN] And <code>what do we have here?</code></td>
<td></td>
</tr>
<tr>
<td>[IAN] No girls, no life, and he’s an Econ major.</td>
<td></td>
</tr>
<tr>
<td>[FELTON] No hobbies?</td>
<td></td>
</tr>
<tr>
<td>[FELTON] I like music.</td>
<td></td>
</tr>
<tr>
<td>[IAN] Wow, that’s really interesting, Felton … the Third.</td>
<td></td>
</tr>
<tr>
<td>[FELTON] I also like movies, especially the soundtrack.</td>
<td></td>
</tr>
<tr>
<td>[IAN] Well, thanks for joining us.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>I’m in economics major</p>
</blockquote>
<h2 id="2-Expressions"><a href="#2-Expressions" class="headerlink" title="2. Expressions"></a>2. Expressions</h2><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>JENNY: I just saw another Joseph Fiennes movie.</td>
<td></td>
</tr>
<tr>
<td>LUCAS: Which one  ? Is it an action movie?</td>
<td></td>
</tr>
<tr>
<td>JENNY: Uh, ‘Shakespeare in Love.’ It’s a romantic comedy. But <strong>I think that there’s some good history in it</strong>, too. It’s funny because Shakespeare can’t think of any good ideas. I thought it was quite entertaining.</td>
<td></td>
</tr>
<tr>
<td>LUCAS: Me, too. I don’t usually like romances, but <strong>that’s one of my favorite movies. It’s an old one.</strong></td>
<td></td>
</tr>
<tr>
<td>JENNY: Yeah, it’s quite old, but it’s still good.</td>
<td></td>
</tr>
<tr>
<td>LUCAS: Mm-hmm. Did you watch it with your kids?</td>
<td></td>
</tr>
<tr>
<td>JENNY: No, but <strong>I think I could show this one to my kids.</strong></td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>I thought that they did a fantastic job.</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Shortest Path]]></title>
      <url>http://iequa.com/2016/10/27/acm-sp/</url>
      <content type="html"><![CDATA[<p>shortest path : <code>dijstra</code></p>
<a id="more"></a>
<h2 id="1-dijstra"><a href="#1-dijstra" class="headerlink" title="1. dijstra"></a>1. dijstra</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> data[M][M]; <span class="comment">// init INF</span></span><br><span class="line"><span class="keyword">int</span> lowc[M];</span><br><span class="line"><span class="keyword">int</span> vis[M];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">djst</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        vis[i] = <span class="number">0</span>;</span><br><span class="line">        lowc[i] = data[p][i];</span><br><span class="line">    &#125;</span><br><span class="line">    vis[p] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> minc = INF, c = <span class="number">0</span>, lk;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[j] == <span class="number">0</span> &amp;&amp; lowc[j] &lt; minc) &#123;</span><br><span class="line">                minc = lowc[j];</span><br><span class="line">                c = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c == <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">        vis[c] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[j] == <span class="number">0</span> &amp;&amp; data[c][j] + minc &gt; <span class="number">0</span> &amp;&amp; data[c][j] + minc &lt; lowc[j]) &#123;</span><br><span class="line">                lowc[j] = data[c][j] + minc;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; lowc[<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-Bellman"><a href="#2-Bellman" class="headerlink" title="2. Bellman"></a>2. Bellman</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF ((long long)(1))&lt;&lt;62</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 301</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">struct</span> edge&#123;</span><br><span class="line">   <span class="keyword">int</span> u;</span><br><span class="line">   <span class="keyword">int</span> v;</span><br><span class="line">   <span class="keyword">long</span> <span class="keyword">long</span> w; <span class="comment">// 注意</span></span><br><span class="line">&#125;e[N*N];</span><br><span class="line"><span class="keyword">int</span> m, n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> d[<span class="number">1005</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bellman_ford</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> di)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">     <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        d[i] = INF;</span><br><span class="line">     &#125;</span><br><span class="line">     d[s] = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(d[e[j].u] != INF &amp;&amp; d[e[j].u]+e[j].w &lt; d[e[j].v])    <span class="comment">// 对边进行操作 、松弛</span></span><br><span class="line">                d[e[j].v] = d[e[j].u] + e[j].w;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(d[e[j].u] != INF &amp;&amp; (d[e[j].v] &gt; d[e[j].u]+e[j].w))    <span class="comment">// 很理解</span></span><br><span class="line">            d[e[j].v] = -INF;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span>(d[di] == INF || d[di] == -INF) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-Floyd"><a href="#3-Floyd" class="headerlink" title="3. Floyd"></a>3. Floyd</h2><h2 id="4-SPFA"><a href="#4-SPFA" class="headerlink" title="4. SPFA"></a>4. SPFA</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x7fffffff</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5501</span>;</span><br><span class="line"><span class="keyword">struct</span> edge &#123;</span><br><span class="line">    <span class="keyword">int</span> to;</span><br><span class="line">    <span class="keyword">int</span> w;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;edge&gt; p[N]; <span class="comment">// vector 实现邻接表</span></span><br><span class="line"><span class="keyword">int</span> d[N];</span><br><span class="line"><span class="keyword">bool</span> inque[N];     <span class="comment">// 记录顶点是否在队列中，SPFA算法可以入队列多次</span></span><br><span class="line"><span class="keyword">int</span> cnt[N];        <span class="comment">// 记录顶点入队的次数</span></span><br><span class="line"><span class="keyword">int</span> n, m, q;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    <span class="keyword">while</span>(!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        d[i] = INF;</span><br><span class="line">    &#125;</span><br><span class="line">    d[s] = <span class="number">0</span>;      <span class="comment">// 源点的距离为 0</span></span><br><span class="line">    <span class="built_in">memset</span>(inque, <span class="number">0</span>, <span class="keyword">sizeof</span>(inque));</span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="keyword">sizeof</span>(cnt));</span><br><span class="line">    Q.push(s);</span><br><span class="line">    inque[s] = <span class="literal">true</span>;</span><br><span class="line">    cnt[s]++;      <span class="comment">// 源点入队列的次数增加</span></span><br><span class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> t = Q.front();</span><br><span class="line">        Q.pop();</span><br><span class="line">        inque[t] = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; p[t].size(); i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> to = p[t][i].to;</span><br><span class="line">            <span class="keyword">if</span>(d[t] &lt; INF &amp;&amp; d[to] &gt; d[t] + p[t][i].w) &#123;</span><br><span class="line">                d[to] = d[t] + p[t][i].w;</span><br><span class="line">                cnt[to]++;</span><br><span class="line">                <span class="keyword">if</span>(cnt[to] &gt;= n) &#123;  <span class="comment">//当一个点入队的次数&gt;=n时就证明出现了负环</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(!inque[to]) &#123;</span><br><span class="line">                    Q.push(to);</span><br><span class="line">                    inque[to] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Six Kinds of Sort algorithms]]></title>
      <url>http://iequa.com/2016/10/27/acm-sort/</url>
      <content type="html"><![CDATA[<blockquote>
<p>input ： 8, 5, 4, 9, 2, 3, 6</p>
</blockquote>
<a id="more"></a>
<h2 id="1-heapSort"><a href="#1-heapSort" class="headerlink" title="1. heapSort"></a>1. heapSort</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">heapify</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> i, <span class="keyword">int</span> size)</span> </span>&#123; <span class="comment">// 堆化的维持需要用递归</span></span><br><span class="line">    <span class="keyword">int</span> ls = <span class="number">2</span>*i, rs = <span class="number">2</span>*i + <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">int</span> large = i;</span><br><span class="line">    <span class="keyword">if</span>(ls &lt;= size &amp;&amp; a[ls] &gt; a[i]) &#123;</span><br><span class="line">        large = ls; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(rs &lt;= size &amp;&amp; a[rs] &gt; a[large]) &#123;</span><br><span class="line">        large = rs; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(large != i) &#123;</span><br><span class="line">        swap(a[i], a[large]);</span><br><span class="line">        heapify(a, large, size);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">buildHeap</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> size)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = size/<span class="number">2</span>; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        heapify(a, i, size);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">heapSort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">    buildHeap(a, size);</span><br><span class="line">    <span class="keyword">int</span> len = size;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = len; i &gt;= <span class="number">2</span>; i--) &#123;</span><br><span class="line">        swap(a[i], a[<span class="number">1</span>]);</span><br><span class="line">        len--;</span><br><span class="line">        heapify(a, <span class="number">1</span>, len); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-quickSort"><a href="#2-quickSort" class="headerlink" title="2. quickSort"></a>2. quickSort</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(left &lt; right) &#123; <span class="comment">// exit. good idea!</span></span><br><span class="line">        <span class="keyword">int</span> l = left, r = right, x = a[l];</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span>(l &lt; r &amp;&amp; a[r] &gt;= x) r--;</span><br><span class="line">            <span class="keyword">while</span>(l &lt; r &amp;&amp; a[l] &lt;= x) l++;</span><br><span class="line">            <span class="keyword">if</span>(l &gt;= r) <span class="keyword">break</span>;</span><br><span class="line">            swap(a[r], a[l]);</span><br><span class="line">        &#125;</span><br><span class="line">        swap(a[left], a[l]);</span><br><span class="line">        quickSort(a, left, l<span class="number">-1</span>);</span><br><span class="line">        quickSort(a, l+<span class="number">1</span>, right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-mergeSort"><a href="#3-mergeSort" class="headerlink" title="3. mergeSort"></a>3. mergeSort</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123; <span class="comment">//  8, 5, 4, 9, 2, 3, 6</span></span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;   <span class="comment">// exit.</span></span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) / <span class="number">2</span>; <span class="comment">// overflow  &lt;-&gt;  l + (r-l)/2</span></span><br><span class="line">    mergeSort(a, l, mid);</span><br><span class="line">    mergeSort(a, mid+<span class="number">1</span>, r);  </span><br><span class="line">    <span class="keyword">int</span> *arr = <span class="keyword">new</span> <span class="keyword">int</span>[r-l+<span class="number">1</span>];  </span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r) &#123;  </span><br><span class="line">        <span class="keyword">if</span>(a[i] &lt;= a[j]) &#123;</span><br><span class="line">            arr[k++] = a[i++]; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            arr[k++] = a[j++]; <span class="comment">// ans += (mid-i+1);  </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) arr[k++] = a[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) arr[k++] = a[j++];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt;= r; i++) &#123;</span><br><span class="line">        a[i] = arr[i-l];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span> []arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-insertSort"><a href="#4-insertSort" class="headerlink" title="4. insertSort"></a>4. insertSort</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;<span class="comment">// 新抓的每张扑克牌  </span></span><br><span class="line">        <span class="keyword">int</span> temp = a[i];</span><br><span class="line">        <span class="keyword">for</span>(j = i<span class="number">-1</span>; a[j] &gt; temp &amp;&amp; j &gt;= <span class="number">0</span>; j--) &#123;  </span><br><span class="line">            a[j+<span class="number">1</span>] = a[j];</span><br><span class="line">        &#125;</span><br><span class="line">        a[j+<span class="number">1</span>] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-bubbleSort"><a href="#5-bubbleSort" class="headerlink" title="5. bubbleSort"></a>5. bubbleSort</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len-i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j] &gt; a[j+<span class="number">1</span>]) swap(a[j], a[j+<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="6-selectSort"><a href="#6-selectSort" class="headerlink" title="6. selectSort"></a>6. selectSort</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++) &#123;  </span><br><span class="line">        k = i;  </span><br><span class="line">        <span class="keyword">for</span>(j = i+<span class="number">1</span>; j &lt; len; j++) &#123;  </span><br><span class="line">            <span class="keyword">if</span>(a[j] &lt; a[k]) k = j;  </span><br><span class="line">        &#125;  </span><br><span class="line">        swap(a[i], a[k]);  <span class="comment">// 将第i位小的数放入i位置  </span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Minimum Spanning Tree]]></title>
      <url>http://iequa.com/2016/10/27/acm-mst/</url>
      <content type="html"><![CDATA[<p>data structure - minimal spanning tree</p>
<a id="more"></a>
<h2 id="1-prim"><a href="#1-prim" class="headerlink" title="1. prim"></a>1. prim</h2><blockquote>
<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1233" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1233</a></p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x7fffffff</span>; <span class="comment">// max int value</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">101</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">map</span>[N][N];</span><br><span class="line"><span class="keyword">int</span> dis[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prim</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(dis, <span class="number">0</span>, <span class="keyword">sizeof</span>(dis));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">map</span>[<span class="number">1</span>][i] != <span class="number">-1</span>) &#123;</span><br><span class="line">            dis[i] = <span class="built_in">map</span>[<span class="number">1</span>][i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> dis[i] = INF;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> minv = INF, c = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[j] &amp;&amp; dis[j] &lt; minv) &#123;</span><br><span class="line">                minv = dis[j];</span><br><span class="line">                c = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[c] = <span class="literal">true</span>;</span><br><span class="line">        sum += minv;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[j] &amp;&amp; <span class="built_in">map</span>[c][j] != <span class="number">-1</span> &amp;&amp;  <span class="built_in">map</span>[c][j] &lt; dis[j]) &#123;</span><br><span class="line">                dis[j] = <span class="built_in">map</span>[c][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span> == <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(<span class="built_in">map</span>, <span class="number">255</span>, <span class="keyword">sizeof</span>(<span class="built_in">map</span>));</span><br><span class="line">        <span class="keyword">int</span> a, b, c;</span><br><span class="line">        m = (n * (n<span class="number">-1</span>)) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">            <span class="built_in">map</span>[a][b] = <span class="built_in">map</span>[b][a] = c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, prim(n));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-kruskal"><a href="#2-kruskal" class="headerlink" title="2. kruskal"></a>2. kruskal</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> pre[N];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">struct</span> Edge &#123;</span><br><span class="line">    <span class="keyword">int</span> u, v;</span><br><span class="line">    <span class="keyword">int</span> w;</span><br><span class="line">&#125;e[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Edge a, <span class="keyword">const</span> Edge b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_set</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">        pre[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_set</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(pre[a] == a) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> pre[a] = find_set(pre[a]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    sort(e, e + m, cmp);</span><br><span class="line">    make_set(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, fu, fv, cnt_e; i &lt; m; i++) &#123;</span><br><span class="line">        fu = find_set(e[i].u);</span><br><span class="line">        fv = find_set(e[i].v);</span><br><span class="line">        <span class="keyword">if</span> (fu != fv) &#123;</span><br><span class="line">            sum += e[i].w;</span><br><span class="line">            cnt_e++;</span><br><span class="line">            <span class="keyword">if</span> (cnt_e == n<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">            pre[fv] = fu;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Going to a restaurant L4 Asking for the check and paying the bill]]></title>
      <url>http://iequa.com/2016/10/27/ef-l5u4-going-to-a-restaurant-l4/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>check</li>
<li>tip</li>
<li>percent</li>
<li>Serene Grill</li>
<li>appetizers</li>
<li>shrimp cocktail</li>
<li>oysters</li>
<li>authentic</li>
<li>strawberries [‘strɔbɛriz]</li>
<li>entrees</li>
</ul>
<p><img src="/images/ef-l5u4l4.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[WAITRESS] Would you care for a dessert or coffee?</td>
<td></td>
</tr>
<tr>
<td>[PAM] No, just the check, please. Oh, and <strong>could I take the rest of my steak to go?</strong></td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Of course. Was everything okay?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Yes. The steak was delicious. It was just too big.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Here you go.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Thanks.</td>
<td></td>
</tr>
<tr>
<td>[PAM] <strong>Tell you what - I’ll pay for the meal, if you leave the tip.</strong></td>
<td></td>
</tr>
<tr>
<td>[SALLY] Are you sure?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Of course.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Okay. Thanks!</td>
<td></td>
</tr>
<tr>
<td>[SALLY] <strong>How much should I leave for the tip?</strong></td>
<td></td>
</tr>
<tr>
<td>[PAM] Um, I usually leave between 15 and 20 percent.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] This meal was really good. I think I’ll leave 20.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Thank you very much.</td>
<td></td>
</tr>
</tbody>
</table>
<hr>
<table>
<thead>
<tr>
<th>Taking food home</th>
</tr>
</thead>
<tbody>
<tr>
<td>Waiter: Would you like to take that home with you?</td>
<td></td>
</tr>
<tr>
<td>Customer: I’d like the rest of my steak to go.</td>
<td></td>
</tr>
<tr>
<td>Waiter: No problem. I’ll bring it back in just a minute.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Reading"><a href="#2-Reading" class="headerlink" title="2. Reading"></a>2. Reading</h2><p><strong>Restaurant review</strong></p>
<p><code>Serene Grill</code></p>
<p>by Carey Smith</p>
<p>Serene Grill is a great choice for dinner. Their specialty is steak, but they serve many other excellent entrees like roasted chicken and <code>grilled salmon</code>. My favorite is the salmon. There is also a great selection of <code>appetizers</code>. The <code>shrimp cocktail</code> is very popular, and the restaurant is famous for its fresh oysters. The desserts are delicious and authentic. You can choose from apple pie with vanilla ice cream to chocolate cake with fresh strawberries. Prices are reasonable, and the servers are friendly. Outdoor seating is available in the summer, and parking is free before 9 p.m.</p>
<p><strong>Writing</strong></p>
<p>The Great Wall is my favorite restaurant. They serve authentic Chinese food. They have many different appetizer and entrees. the spicy beef entree is delicious.most entrees are between $10 and $15. The restaurant is very busy on the weekends, so make a reservation. The restaurant is noisy, but all the servers are friendly and everybody has fun.Desserts are not their specialty.</p>
<h2 id="3-Expressions"><a href="#3-Expressions" class="headerlink" title="3. Expressions"></a>3. Expressions</h2><p>Could I have the bill, please?<br>We’re ready for our check.<br>Do you take credit cards?  </p>
<p>A: Did you leave a tip?<br>B: I left 20 percent. Everything was excellent!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Going to a restaurant L3 Ordering food in a restaurant]]></title>
      <url>http://iequa.com/2016/10/26/ef-l5u4-going-to-a-restaurant-l3/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>chef’s salad</li>
<li>sour cream on the side</li>
<li>a glass of iced tea</li>
<li>wild salmon</li>
<li>french fries</li>
<li>steak and baked potato</li>
<li>blue cheese dressing</li>
<li>tiramisu                          </li>
<li>chocolate mousse</li>
<li>lemon sorbet  </li>
</ul>
<p><img src="/images/ef-l5u4l3.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[PAM] The <strong>sirloin steak</strong> sounds really good.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] I’m more interested in the salmon.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Are you ready to order?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Umm, yes, I think so. I’ll have the sirloin steak, please.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Very good. And how would you like your steak?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Medium rare, please.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Okay. And would you like a <strong>baked potato</strong> or french fries with that?</td>
<td></td>
</tr>
<tr>
<td>[PAM] A baked potato, please. And I’d like a little sour cream on the side.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Sure. And would you like something to drink?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Yes. I’ll have a glass of iced tea.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Very good.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] I’ll have the <code>chef’s salad</code> to start. And then I’ll have the <strong>wild salmon</strong> with <strong>lemon</strong> and <strong>butter</strong>.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Okay. <strong>What kind of dressing</strong> would you like with your salad?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Blue cheese, please. And could I have that on the side?</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Of course. Anything to drink?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Uh, I’ll also have a glass of iced tea.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Excellent. <strong>I’ll be right back with your tea.</strong></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Grammar"><a href="#2-Grammar" class="headerlink" title="2. Grammar"></a>2. Grammar</h2><ul>
<li>A: Would you like a <strong>starter</strong>?</li>
<li>B: The <strong>cheese appetizer</strong> sounds really good. </li>
</ul>
<ul>
<li>A: Have you decided on your <strong>main course</strong>?</li>
<li>B: Does the <strong>chicken entree</strong> <strong>come with</strong> rice?</li>
</ul>
<ul>
<li>The steak is <strong>served with</strong> mashed potatoes and peas.</li>
<li>The fish <strong>comes with</strong> rice and beans. </li>
</ul>
<ul>
<li>Let’s get some extra side dishes for everybody at the table.</li>
</ul>
<h2 id="3-Sentence"><a href="#3-Sentence" class="headerlink" title="3. Sentence"></a>3. Sentence</h2><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>For dessert, there’s tiramisu or lemon sorbet</td>
<td></td>
</tr>
<tr>
<td>The chicken is served with ice and green beans</td>
<td></td>
</tr>
<tr>
<td>The salad has a choice of three dressings</td>
<td></td>
</tr>
<tr>
<td>DO you want an appetizer or just a main course?</td>
<td></td>
</tr>
<tr>
<td>Let’s get some extra side dishes for everyone</td>
<td></td>
</tr>
<tr>
<td>The apple pie comes with vanila ice cream.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>You can use a lot of with both countable and uncountable nouns</strong></p>
<ul>
<li>The garden salad has a lot of tomatoes.</li>
<li>Is there a lot of bacon in the soup? </li>
</ul>
<p><strong>Use a few with countable nouns</strong></p>
<ul>
<li>I can only eat a few oysters.</li>
</ul>
<p><strong>Use how many to ask about the amount of a countable noun.</strong></p>
<ul>
<li>How much bread would you like?</li>
</ul>
<p><strong>Use a little with uncountable nouns</strong></p>
<h2 id="4-Expressions"><a href="#4-Expressions" class="headerlink" title="4. Expressions"></a>4. Expressions</h2><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>WAITER: What can I get you ?</td>
<td></td>
</tr>
<tr>
<td>CUSTOMER: Um, could I have the Caesar salad to start?</td>
<td></td>
</tr>
<tr>
<td>WAITER: Certainly. And for your main course?</td>
<td></td>
</tr>
<tr>
<td>CUSTOMER: Does the chicken come with  any vegetables?</td>
<td></td>
</tr>
<tr>
<td>WAITER: Yes, it does. It comes with peas and carrots.</td>
<td></td>
</tr>
<tr>
<td>CUSTOMER: Great. I’ll have  the chicken, please.</td>
<td></td>
</tr>
<tr>
<td>WAITER: Would you like french fries or a baked potato with that?</td>
<td></td>
</tr>
<tr>
<td>CUSTOMER: Um, I’d like  the french fries.</td>
<td></td>
</tr>
<tr>
<td>WAITER: And what would you like to drink  ?</td>
<td></td>
</tr>
<tr>
<td>CUSTOMER: A cup of coffee, please.</td>
<td></td>
</tr>
<tr>
<td>WAITER: And would you like to order dessert now?</td>
<td></td>
</tr>
<tr>
<td>CUSTOMER: No, I’ll wait, thank you.</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Going to a restaurant L2 Arriving at a restaurant]]></title>
      <url>http://iequa.com/2016/10/25/ef-l5u4-going-to-a-restaurant-l2/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>mushroom soup</li>
<li>Caesar salad</li>
<li>fresh oysters</li>
<li>shrimp cocktail</li>
<li>roasted chicken with vegetables</li>
<li>steak and baked potato</li>
<li>fresh fish with rice</li>
<li>vanilla [və’nɪlə]</li>
<li>apple pie</li>
<li>chocolate mousse</li>
<li>lemon sorbet</li>
<li>As a starter</li>
<li>main course</li>
<li>dessert special</li>
</ul>
<p><img src="/images/ef-l5u4l2.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[MAITRE D’] Good evening. Do you have a reservation?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Yes, we do.</td>
<td></td>
</tr>
<tr>
<td>[MAITRE D’] What name is it under?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Sally Phillips.</td>
<td></td>
</tr>
<tr>
<td>[MAITRE D’] Ah, yes. Ms. Phillips. That’s two people, for inside.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] That’s right.</td>
<td></td>
</tr>
<tr>
<td>[MAITRE D’] come this way.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Good evening. My name is Barbara. I’ll be your waitress tonight. Here are your menus. Can I get you something to drink?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Uh, water’s fine for now.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Can I tell you about our specials for tonight?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] please.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] <strong>As a starter</strong>, we have a <strong>tomato salad with goat’s cheese and olives</strong>.</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] And we also have a lovely <code>mushroom soup</code>. For a main course, we have <code>wild salmon</code> with <code>lemon</code> and <code>butter</code>. And our dessert special is <code>fresh strawberries</code> with <code>vanilla</code> ice cream.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Thanks. Could we have some bread, please?</td>
<td></td>
</tr>
<tr>
<td>[WAITRESS] Certainly.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Grammar"><a href="#2-Grammar" class="headerlink" title="2. Grammar"></a>2. Grammar</h2><p>You can also use some to make requests and offers.</p>
<ul>
<li>Can I have some water, please?</li>
<li>Would you like some bread? </li>
</ul>
<ul>
<li>Do you have any fresh oysters this evening?</li>
<li>Do you have any lemon sorbet?</li>
</ul>
<ul>
<li>No, we don’t have any salad this evening.</li>
<li>I’m sorry. We don’t have any shrimp cocktail today.</li>
</ul>
<h2 id="3-Expressions"><a href="#3-Expressions" class="headerlink" title="3. Expressions"></a>3. Expressions</h2><table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>SERVER: Good evening. My name is Carol. I’ll be your server  tonight. Here are your menus. Can I get you something to drink?</td>
<td></td>
</tr>
<tr>
<td>PENNY: No, thank you. Water is fine for now.</td>
<td></td>
</tr>
<tr>
<td>SERVER: Can I tell you about our specials this evening?</td>
<td></td>
</tr>
<tr>
<td>PENNY: Yes, please.</td>
<td></td>
</tr>
<tr>
<td>SERVER: As a starter, we have fresh oysters. We also have a very nice shrimp cocktail. For the main course  , we have chicken with vegetables, and we also have a sirloin steak with baked potato.</td>
<td></td>
</tr>
<tr>
<td>JOHN: Oh, I’m getting hungry!</td>
<td></td>
</tr>
<tr>
<td>SERVER: Our dessert special is chocolate mousse with fresh strawberries.</td>
<td></td>
</tr>
<tr>
<td>PENNY: Thank you very much. I think we need a few minutes.</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera Week 3 - Logistic Regression]]></title>
      <url>http://iequa.com/2016/10/24/ml-coursera-ng-w3-LR/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>


<h2 id="1-Classification"><a href="#1-Classification" class="headerlink" title="1. Classification"></a>1. Classification</h2><p>Email: Spam / Not Spam<br>Online Transactions: Fraudulent (Yes/No)?<br>Tumor: Malignant / Benign ?  </p>
<p>$ y \in {0, 1}$</p>
<blockquote>
<p>[‘tju:mə(r)]  [mə’lɪgnənt] / [bɪ’naɪn]</p>
</blockquote>
<h2 id="2-Binary-Classification"><a href="#2-Binary-Classification" class="headerlink" title="2. Binary Classification"></a>2. Binary Classification</h2><p>Instead of our output vector y being a continuous range of values, it will only be 0 or 1.</p>
<p>y∈{0,1}</p>
<blockquote>
<p>Where 0 is usually taken as the “negative class” and 1 as the “positive class”, but you are free to assign any representation to it.</p>
</blockquote>
<table>
<thead>
<tr>
<th>Hypothesis Representation</th>
</tr>
</thead>
<tbody>
<tr>
<td>$ 0 \leq h_\theta (x) \leq 1 $</td>
<td></td>
</tr>
<tr>
<td>$ \begin{align} &amp; h_\theta (x) =  g ( \theta^T x ) \newline \newline&amp; z = \theta^T x \newline&amp; g(z) = \dfrac{1}{1 + e^{-z}} \end{align} $</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>“Sigmoid Function,” also called the “Logistic Function”:</p>
</blockquote>
<p><img src="/images/ml/ml-ng-w3-02.png" alt="Sigmoid Function"></p>
<blockquote>
<p>$h_θ$ will give us the probability that our output is 1. For example, $h_θ=0.7$ gives us the probability of 70% that our output is 1.</p>
</blockquote>
<p>$<br>\begin{align}<br>&amp; h_\theta(x) = P(y=1 | x ; \theta) = 1 - P(y=0 | x ; \theta) \newline&amp; P(y = 0 | x;\theta) + P(y = 1 | x ; \theta) = 1<br>\end{align}<br>$</p>
<p>Our probability that our prediction is 0 is just the complement of our probability that it is 1 (e.g. if probability that it is 1 is 70%, then the probability that it is 0 is 30%).</p>
<h2 id="3-Decision-Boundary"><a href="#3-Decision-Boundary" class="headerlink" title="3. Decision Boundary"></a>3. Decision Boundary</h2><p>$<br>\begin{align}<br>&amp; h_\theta(x) \geq 0.5 \rightarrow y = 1 \newline&amp; h_\theta(x) &lt; 0.5 \rightarrow y = 0 \newline\end{align}<br>$</p>
<table>
<thead>
<tr>
<th>logistic function</th>
</tr>
</thead>
<tbody>
<tr>
<td>$ \begin{align} &amp; g(z) \geq 0.5 \newline&amp; when \; z \geq 0 \end{align} $</td>
<td></td>
</tr>
<tr>
<td>$ \begin{align} z=0,  e^{0}=1 \Rightarrow  g(z)=1/2\newline z \to \infty, e^{-\infty} \to 0 \Rightarrow g(z)=1 \newline z \to -\infty, e^{\infty}\to \infty \Rightarrow g(z)=0 \end{align} $</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>g is $\theta^T X$, then that means:</th>
</tr>
</thead>
<tbody>
<tr>
<td>$ h_\theta(x) = g(\theta^T x) \geq 0.5 $ $ when \; \theta^T x \geq 0 $</td>
<td></td>
</tr>
<tr>
<td>$ \begin{align} &amp; \theta^T x \geq 0 \Rightarrow y = 1 \newline&amp; \theta^T x &lt; 0 \Rightarrow y = 0 \newline \end{align} $</td>
<td></td>
</tr>
</tbody>
</table>
<p>The decision boundary is the line that separates the area where y = 0 and where y = 1. It is created by our hypothesis function.</p>
<p><strong>Example:</strong></p>
<p>$<br>\begin{align}<br>&amp; \theta = \begin{bmatrix}5 \newline -1 \newline 0\end{bmatrix} \newline &amp; y = 1 \; if \; 5 + (-1) x_1 + 0 x_2 \geq 0 \newline &amp; 5 - x_1 \geq 0 \newline &amp; - x_1 \geq -5 \newline&amp; x_1 \leq 5 \newline \end{align}<br>$</p>
<p>In this case, our decision boundary is a straight vertical line placed on the graph where $x_1=5$, and everything to the left of that denotes $y = 1$, while everything to the right denotes $y = 0$.</p>
<p><strong>linear decision boundaries</strong></p>
<p><img src="/images/ml/ml-ng-w3-01.png" alt="linear decision boundaries"></p>
<p><strong>Non-linear decision boundaries</strong></p>
<p><img src="/images/ml/ml-ng-w3-03.png" alt="Non-linear decision boundaries"></p>
<h2 id="4-Cost-Function"><a href="#4-Cost-Function" class="headerlink" title="4. Cost Function"></a>4. Cost Function</h2><p>We cannot use the same cost function that we use for linear regression because the Logistic Function will cause the output to be wavy, causing many local optima. In other words, it will not be a convex function.</p>
<p><img src="/images/ml/ml-ng-w3-12.png" alt=" $h_\theta(x)$ Complex nonlinear function"></p>
<p><img src="/images/ml/ml-ng-w3-06.png" alt="Cost Function"></p>
<p><code>Instead, our cost function for logistic regression looks like</code>:</p>
<p>$<br>\begin{align}<br>&amp; J(\theta) = \dfrac{1}{m} \sum_{i=1}^m \mathrm{Cost}(h_\theta(x^{(i)}),y^{(i)}) \newline &amp; \mathrm{Cost}(h_\theta(x),y) = -\log(h_\theta(x)) \; &amp; \text{if y = 1} \newline &amp; \mathrm{Cost}(h_\theta(x),y) = -\log(1-h_\theta(x)) \; &amp; \text{if y = 0}<br>\end{align}<br>$</p>
<p><img src="/images/ml/ml-ng-w3-04.png" alt="Cost Function"></p>
<p><img src="/images/ml/ml-ng-w3-05.png" alt="Cost Function"></p>
<p>$<br>\begin{align}<br>&amp; \mathrm{Cost}(h_\theta(x),y) = 0 \text{  if  } h_\theta(x) = y \newline &amp; \mathrm{Cost}(h_\theta(x),y) \rightarrow \infty \text{  if  } y = 0 \; \mathrm{and} \; h_\theta(x) \rightarrow 1 \newline &amp; \mathrm{Cost}(h_\theta(x),y) \rightarrow \infty \text{  if  } y = 1 \; \mathrm{and} \; h_\theta(x) \rightarrow 0 \newline<br>\end{align}<br>$</p>
<p>If our correct answer ‘y’ is 0, then the cost function will be 0 if our hypothesis function also outputs 0. If our hypothesis approaches 1, then the cost function will approach infinity.</p>
<p>If our correct answer ‘y’ is 1, then the cost function will be 0 if our hypothesis function outputs 1. If our hypothesis approaches 0, then the cost function will approach infinity.</p>
<h2 id="5-Cost-Function-amp-Gradient-Desc"><a href="#5-Cost-Function-amp-Gradient-Desc" class="headerlink" title="5. Cost Function &amp; Gradient Desc"></a>5. Cost Function &amp; Gradient Desc</h2><p><code>We can compress our cost function&#39;s two conditional cases into one case:</code></p>
<p>$ \mathrm{Cost}(h_\theta(x),y) = - y \cdot \log(h_\theta(x)) - (1 - y) \cdot \log(1 - h_\theta(x))$</p>
<p>We can fully write out our entire cost function as follows:</p>
<p>$<br>J(\theta) = - \frac{1}{m} \displaystyle \sum_{i=1}^m [y^{(i)}\log (h_\theta (x^{(i)})) + (1 - y^{(i)})\log (1 - h_\theta(x^{(i)}))]<br>$</p>
<p>A <code>vectorized</code> implementation is:</p>
<p>$<br>\begin{align}<br>&amp; h = g(X\theta)\newline<br>&amp; J(\theta)  = \frac{1}{m} \cdot \left(-y^{T}\log(h)-(1-y)^{T}\log(1-h)\right)<br>\end{align}<br>$</p>
<h3 id="5-1-Gradient-Descent"><a href="#5-1-Gradient-Descent" class="headerlink" title="5.1 Gradient Descent"></a>5.1 Gradient Descent</h3><p>Remember that the general form of gradient descent is:</p>
<p>$<br>\begin{align}<br>&amp; Repeat \; \lbrace \newline &amp; \; \theta_j := \theta_j - \alpha \dfrac{\partial}{\partial \theta_j}J(\theta) \newline &amp; \rbrace<br>\end{align}<br>$</p>
<p>We can work out the derivative part using calculus to get:</p>
<p>$<br>\begin{align}<br>&amp; Repeat \; \lbrace \newline<br>&amp; \; \theta_j := \theta_j - \frac{\alpha}{m} \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)}) x_j^{(i)} \newline &amp; \rbrace<br>\end{align}<br>$</p>
<blockquote>
<p><code>seen 5.2 detailed</code></p>
</blockquote>
<p><strong>A vectorized implementation is:</strong></p>
<p>$<br>\theta := \theta - \frac{\alpha}{m} X^{T} (g(X \theta ) - \vec{y})<br>$</p>
<h3 id="5-2-Partial-derivative-of-J-θ"><a href="#5-2-Partial-derivative-of-J-θ" class="headerlink" title="5.2 Partial derivative of J(θ)"></a>5.2 Partial derivative of J(θ)</h3><blockquote>
<p>partial [‘pɑːʃ(ə)l]<br>derivative [dɪ’rɪvətɪv]</p>
</blockquote>
<p>$<br>\begin{align}<br>\sigma(x)’&amp;=\left(\frac{1}{1+e^{-x}}\right)’=\frac{-(1+e^{-x})’}{(1+e^{-x})^2}=\frac{-1’-(e^{-x})’}{(1+e^{-x})^2}=\frac{0-(-x)’(e^{-x})}{(1+e^{-x})^2}=\frac{-(-1)(e^{-x})}{(1+e^{-x})^2}=\frac{e^{-x}}{(1+e^{-x})^2} \newline &amp;=\left(\frac{1}{1+e^{-x}}\right)\left(\frac{e^{-x}}{1+e^{-x}}\right)=\sigma(x)\left(\frac{+1-1 + e^{-x}}{1+e^{-x}}\right)=\sigma(x)\left(\frac{1 + e^{-x}}{1+e^{-x}} - \frac{1}{1+e^{-x}}\right)=\sigma(x)(1 - \sigma(x))<br>\end{align}<br>$</p>
<p>Now we are ready to find out resulting partial derivative:</p>
<p>$<br>\begin{align}<br>\frac{\partial}{\partial \theta_j} J(\theta) &amp;= \frac{\partial}{\partial \theta_j} \frac{-1}{m}\sum_{i=1}^m \left [ y^{(i)} log (h_\theta(x^{(i)})) + (1-y^{(i)}) log (1 - h_\theta(x^{(i)})) \right ] \newline&amp;= - \frac{1}{m}\sum_{i=1}^m \left [     y^{(i)} \frac{\partial}{\partial \theta_j} log (h_\theta(x^{(i)}))   + (1-y^{(i)}) \frac{\partial}{\partial \theta_j} log (1 - h_\theta(x^{(i)}))\right ] \newline&amp;= - \frac{1}{m}\sum_{i=1}^m \left [     \frac{y^{(i)} \frac{\partial}{\partial \theta_j} h_\theta(x^{(i)})}{h_\theta(x^{(i)})}   + \frac{(1-y^{(i)})\frac{\partial}{\partial \theta_j} (1 - h_\theta(x^{(i)}))}{1 - h_\theta(x^{(i)})}\right ] \newline&amp;= - \frac{1}{m}\sum_{i=1}^m \left [     \frac{y^{(i)} \frac{\partial}{\partial \theta_j} \sigma(\theta^T x^{(i)})}{h_\theta(x^{(i)})}   + \frac{(1-y^{(i)})\frac{\partial}{\partial \theta_j} (1 - \sigma(\theta^T x^{(i)}))}{1 - h_\theta(x^{(i)})}\right ] \newline&amp;= - \frac{1}{m}\sum_{i=1}^m \left [     \frac{y^{(i)} \sigma(\theta^T x^{(i)}) (1 - \sigma(\theta^T x^{(i)})) \frac{\partial}{\partial \theta_j} \theta^T x^{(i)}}{h_\theta(x^{(i)})}   + \frac{- (1-y^{(i)}) \sigma(\theta^T x^{(i)}) (1 - \sigma(\theta^T x^{(i)})) \frac{\partial}{\partial \theta_j} \theta^T x^{(i)}}{1 - h_\theta(x^{(i)})}\right ] \newline&amp;= - \frac{1}{m}\sum_{i=1}^m \left [     \frac{y^{(i)} h_\theta(x^{(i)}) (1 - h_\theta(x^{(i)})) \frac{\partial}{\partial \theta_j} \theta^T x^{(i)}}{h_\theta(x^{(i)})}   - \frac{(1-y^{(i)}) h_\theta(x^{(i)}) (1 - h_\theta(x^{(i)})) \frac{\partial}{\partial \theta_j} \theta^T x^{(i)}}{1 - h_\theta(x^{(i)})}\right ] \newline&amp;= - \frac{1}{m}\sum_{i=1}^m \left [     y^{(i)} (1 - h_\theta(x^{(i)})) x^{(i)}_j - (1-y^{(i)}) h_\theta(x^{(i)}) x^{(i)}_j\right ] \newline&amp;= - \frac{1}{m}\sum_{i=1}^m \left [     y^{(i)} (1 - h_\theta(x^{(i)})) - (1-y^{(i)}) h_\theta(x^{(i)}) \right ] x^{(i)}_j \newline&amp;= - \frac{1}{m}\sum_{i=1}^m \left [     y^{(i)} - y^{(i)} h_\theta(x^{(i)}) - h_\theta(x^{(i)}) + y^{(i)} h_\theta(x^{(i)}) \right ] x^{(i)}_j \newline&amp;= - \frac{1}{m}\sum_{i=1}^m \left [ y^{(i)} - h_\theta(x^{(i)}) \right ] x^{(i)}_j  \newline&amp;= \frac{1}{m}\sum_{i=1}^m \left [ h_\theta(x^{(i)}) - y^{(i)} \right ] x^{(i)}_j<br>\end{align}<br>$</p>
<p>The vectorized version;</p>
<p>$<br>\nabla J(\theta) = \frac{1}{m} \cdot  X^T \cdot \left(g\left(X\cdot\theta\right) - \vec{y}\right)<br>$</p>
<h2 id="6-Advanced-Optimization"><a href="#6-Advanced-Optimization" class="headerlink" title="6. Advanced Optimization"></a>6. Advanced Optimization</h2><blockquote>
<p>We can apply regularization to both linear regression and logistic regression. We will approach linear regression first.</p>
</blockquote>
<p><img src="/images/ml/ml-ng-w3-07.png" alt="Advanced Optimization"></p>
<p>We first need to provide a function that evaluates the following two functions for a given input value θ:</p>
<p>$<br>\begin{align}<br>&amp; J(\theta) \newline &amp; \dfrac{\partial}{\partial \theta_j}J(\theta)<br>\end{align}<br>$</p>
<p>We can write a single function that returns both of these…</p>
<h2 id="7-Multiclass-Classification"><a href="#7-Multiclass-Classification" class="headerlink" title="7. Multiclass Classification"></a>7. Multiclass Classification</h2><p><img src="/images/ml/ml-ng-w3-09.png" alt="Multiclass"></p>
<p>$<br>\begin{align}<br>&amp; y \in \lbrace0, 1 … n\rbrace \newline&amp; h_\theta^{(0)}(x) = P(y = 0 | x ; \theta) \newline&amp; h_\theta^{(1)}(x) = P(y = 1 | x ; \theta) \newline&amp; \cdots \newline&amp; h_\theta^{(n)}(x) = P(y = n | x ; \theta) \newline&amp; \mathrm{prediction} = \max_i( h_\theta ^{(i)}(x) )\newline<br>\end{align}<br>$</p>
<p>Train a logistic regression classifier $h_\theta ^{(i)}(x)$ for each class $i$ to predict the probability that $y = i$ .</p>
<p>On a new input $x$, to make a prediction, pick the $i$ class that maximizes $\max_i( h_\theta ^{(i)}(x)$</p>
<p>@2017-02-10 review done.</p>
<h2 id="8-Regularization"><a href="#8-Regularization" class="headerlink" title="8. Regularization"></a>8. Regularization</h2><p><strong>The Problem of Overfitting</strong></p>
<p>Regularization is designed to address the problem of overfitting.</p>
<p><strong>High bias</strong> or <strong>underfitting</strong> is when the form of our hypothesis function h maps poorly to the trend of the data. It is usually caused by a function that is too simple or <strong>uses too few features</strong>. </p>
<p>eg. if we take $h_θ(x)=θ_0+θ_1 \cdot x_1+θ_2 \cdot x_2$ then we are making an initial assumption that a linear model will fit the training data well and will be able to generalize but that may not be the case.</p>
<p>At the other extreme, overfitting or high variance is caused by a hypothesis function that fits the available data but does not generalize well to predict new data. It is usually caused by a complicated function that creates a lot of unnecessary curves and angles unrelated to the data.</p>
<p><img src="/images/ml/ml-ng-w3-10.png" alt="Regularization"></p>
<p>This terminology is applied to both linear and logistic regression. There are two main options to address the issue of overfitting:</p>
<p>1) Reduce the number of features:</p>
<ul>
<li><p>a) Manually select which features to keep.</p>
</li>
<li><p>b) Use a model selection algorithm .</p>
</li>
</ul>
<p>2) Regularization</p>
<ul>
<li>Keep all the features, but reduce the parameters $θ_j$.</li>
</ul>
<p>Regularization works well when we have a lot of slightly useful features.</p>
<blockquote>
<p>to address 提出，去解决</p>
</blockquote>
<h2 id="9-Regularization-Cost-Function"><a href="#9-Regularization-Cost-Function" class="headerlink" title="9. Regularization Cost Function"></a>9. Regularization Cost Function</h2><p>If we have overfitting from our hypothesis function, we can reduce the weight that some of the terms in our function carry by increasing their cost.</p>
<p>Say we wanted to make the following function more quadratic [kwɒ’drætɪk]:</p>
<p>$<br>\theta_0 + \theta_1x + \theta_2x^2 + \theta_3x^3 + \theta_4x^4<br>$</p>
<p>We’ll want to eliminate the influence of $\theta_3x^3$ and $\theta_4x^4$. Without actually getting rid of these features or changing the form of our hypothesis, we can instead modify our cost function:</p>
<p><strong>$<br>min_\theta\ \dfrac{1}{2m}\sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})^2 + 1000 \cdot \theta_3^2 + 1000\cdot\theta_4^2<br>$</strong></p>
<p>We’ve added two extra terms at the end to inflate the cost of $\theta_3$ and $\theta_4$. Now, in order for the cost function to get close to zero, we will have to reduce the values of $\theta_3$ and $\theta_4$ to near zero. This will in turn greatly reduce the values of $\theta_3x^3$ and $\theta_4x^4$ in our hypothesis function.</p>
<p>We could also regularize all of our theta parameters in a single summation:</p>
<p>$<br>min_\theta\ \dfrac{1}{2m}\ \left[ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})^2 + \lambda\ \sum_{j=1}^n \theta_j^2 \right]<br>$</p>
<p>The λ, or lambda, is the <strong>regularization parameter</strong>. It determines how much the costs of our theta parameters are inflated. </p>
<blockquote>
<p>You can visualize the effect of regularization in this interactive plot : <a href="https://www.desmos.com/calculator/1hexc8ntqp" target="_blank" rel="external">https://www.desmos.com/calculator/1hexc8ntqp</a></p>
</blockquote>
<p>Using the above cost function with the extra summation, we can smooth the output of our hypothesis function to reduce overfitting. If lambda is chosen to be too large, it may smooth out the function too much and cause underfitting.</p>
<blockquote>
<p>我们可以平滑我们的假设函数的输出，以减少过度拟合</p>
</blockquote>
<h2 id="10-Regularized-Linear"><a href="#10-Regularized-Linear" class="headerlink" title="10. Regularized Linear"></a>10. Regularized Linear</h2><h3 id="10-1-Gradient-Descent"><a href="#10-1-Gradient-Descent" class="headerlink" title="10.1 Gradient Descent"></a>10.1 Gradient Descent</h3><p>$<br>\begin{align}<br>&amp; \text{Repeat}\ \lbrace \newline<br>&amp; \ \ \ \ \theta_0 := \theta_0 - \alpha\ \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_0^{(i)} \newline<br>&amp; \ \ \ \ \theta_j := \theta_j - \alpha\ \left[ \left( \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_j^{(i)} \right) + \frac{\lambda}{m}\theta_j \right] &amp;\ \ \ \ \ \ \ \ \ \ j \in \lbrace 1,2…n\rbrace\newline<br>&amp; \rbrace<br>\end{align}<br>$</p>
<p>The term $\frac{\lambda}{m}\theta_j$ performs our regularization.</p>
<p><strong>$<br>\theta_j := \theta_j(1 - \alpha\frac{\lambda}{m}) - \alpha\frac{1}{m}\sum_{i=1}^m(h_\theta(x^{(i)}) - y^{(i)})x_j^{(i)}<br>$</strong></p>
<p>The first term in the above equation, $1 - \alpha\frac{\lambda}{m}$ will always be less than 1. Intuitively you can see it as reducing the value of $\theta_j$ by some amount on every update.</p>
<h3 id="10-2-Normal-Equation"><a href="#10-2-Normal-Equation" class="headerlink" title="10.2 Normal Equation"></a>10.2 Normal Equation</h3><p>Use less, temporarily ignored</p>
<h2 id="11-Regularized-Logistic"><a href="#11-Regularized-Logistic" class="headerlink" title="11. Regularized Logistic"></a>11. Regularized Logistic</h2><p><strong>Cost Function</strong></p>
<p>$<br>J(\theta) = - \frac{1}{m} \sum_{i=1}^m \large[ y^{(i)}\ \log (h_\theta (x^{(i)})) + (1 - y^{(i)})\ \log (1 - h_\theta(x^{(i)})) \large]<br>$</p>
<p>We can regularize this equation by adding a term to the end:</p>
<p>$<br>J(\theta) = - \frac{1}{m} \sum_{i=1}^m \large[ y^{(i)}\ \log (h_\theta (x^{(i)})) + (1 - y^{(i)})\ \log (1 - h_\theta(x^{(i)}))\large] + \frac{\lambda}{2m}\sum_{j=1}^n \theta_j^2<br>$</p>
<p><strong>Gradient Descent</strong></p>
<p>Just like with linear regression, we will want to separately update $\theta_0$ and the rest of the parameters because we do not want to regularize $\theta_0$.</p>
<p>$<br>\begin{align}<br>&amp; \text{Repeat}\ \lbrace \newline&amp; \ \ \ \ \theta_0 := \theta_0 - \alpha\ \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_0^{(i)} \newline&amp; \ \ \ \ \theta_j := \theta_j - \alpha\ \left[ \left( \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_j^{(i)} \right) + \frac{\lambda}{m}\theta_j \right] &amp;\ \ \ \ \ \ \ \ \ \ j \in \lbrace 1,2…n\rbrace\newline&amp; \rbrace\end{align}<br>$</p>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><p><a href="https://www.kaggle.com/c/titanic" target="_blank" rel="external">Kaggle_Titanic</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Going to a restaurant L1 Making a restaurant reservation]]></title>
      <url>http://iequa.com/2016/10/24/ef-l5u4-going-to-a-restaurant-l1/</url>
      <content type="html"><![CDATA[<h2 id="1-Vocabulary"><a href="#1-Vocabulary" class="headerlink" title="1. Vocabulary"></a>1. Vocabulary</h2><ul>
<li>specialty</li>
<li>authentic</li>
<li>reputation</li>
<li>reviews</li>
<li>a wide variety of  [və’raɪətɪ]</li>
<li>choices</li>
<li>free parking</li>
<li>steak</li>
</ul>
<p><img src="/images/ef-l5u4l1.png" width="460" height="400" img=""></p>
<table>
<thead>
<tr>
<th>Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td>[PAM] So what <strong>do you feel like eating</strong> tonight?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] I was hoping to try that new place on 10th Street - The Kitchen.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Oh, yeah, I’ve heard about it. What kind of food do they have?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Seafood’s their specialty, I think.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Can I get a <strong>steak</strong>?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] I’m sure you can. And the <strong>prices are supposed to be very reasonable</strong>.</td>
<td></td>
</tr>
<tr>
<td>[PAM] Okay, let’s go to The Kitchen.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] I’ll give them a call. Let me just find the number … Here it is.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTION] The Kitchen. Can I help you?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Yes. I’d like to make a reservation.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTION] For toninght?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Yes. at 7.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTION] I’m sorry. <strong>Our first opening tonight</strong> is at 8:30. <strong>Is that okay for you?</strong></td>
<td></td>
</tr>
<tr>
<td>[SALLY] Umm, it’s a bit late. <strong>Let me check</strong>. Pam, their first opening’s at 8:30. What do you think?</td>
<td></td>
</tr>
<tr>
<td>[PAM] Yeah, I think that’s okay.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Okay. Eight-thirty will work.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTION] And how many people will that be?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Two people.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTION] And what’s the name?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Sally Phillips.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTION] Would you like indoor or outdoor seating?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] We’d like to sit inside.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTION] Okay. So that’s two people, inside, at 8:30, for Sally Phillips. Could you just give me your phone number?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] Sure. It’s 589-3420.</td>
<td></td>
</tr>
<tr>
<td>[RECEPTION] Okay. See you at 8:30.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="2-Expressions"><a href="#2-Expressions" class="headerlink" title="2. Expressions"></a>2. Expressions</h2><ul>
<li>Seafood is their specialty.</li>
<li>They serve <code>authentic Italian</code> food.</li>
<li>The menu has <strong>a wide variety of</strong> choices.</li>
<li>What’s the <code>specialty</code> of the restaurant?</li>
<li>Do you think the prices are reasonable?</li>
</ul>
<h2 id="3-Reading"><a href="#3-Reading" class="headerlink" title="3. Reading"></a>3. Reading</h2><p>Zen Garden is a great <code>choice</code> for lunch or dinner. Their <strong>specialty  is vegetarian dishes</strong>, but there are also some lovely fish and chicken choices. The restaurant is very popular, and many people come <strong>for the authentic French desserts</strong>. The menu doesn’t have <code>a wide variety of</code> choices, but everything is fresh and the prices are reasonable. Outdoor seating is available from June to August. Zen Garden is located at 1415 Grove Street. Call 760-434-9292 for reservations  .</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera Week 2 - Octave Tutorial By NG]]></title>
      <url>http://iequa.com/2016/10/21/ml-coursera-ng-w2-03/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p>ML:Octave Tutorial</p>
<h2 id="1-Basic-Operations"><a href="#1-Basic-Operations" class="headerlink" title="1. Basic Operations"></a>1. Basic Operations</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%% Change Octave prompt  </span></span><br><span class="line">PS1(<span class="string">'&gt;&gt; '</span>);</span><br><span class="line"><span class="comment">%% Change working directory in windows example:</span></span><br><span class="line">cd <span class="string">'c:/path/to/desired/directory name'</span></span><br><span class="line"><span class="comment">%% Note that it uses normal slashes and does not use escape characters for the empty spaces.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% elementary operations</span></span><br><span class="line"><span class="number">5</span>+<span class="number">6</span></span><br><span class="line"><span class="number">3</span><span class="number">-2</span></span><br><span class="line"><span class="number">5</span>*<span class="number">8</span></span><br><span class="line"><span class="number">1</span>/<span class="number">2</span></span><br><span class="line"><span class="number">2</span>^<span class="number">6</span></span><br><span class="line"><span class="number">1</span> == <span class="number">2</span> <span class="comment">% false</span></span><br><span class="line"><span class="number">1</span> ~= <span class="number">2</span> <span class="comment">% true.  note, not "!="</span></span><br><span class="line"><span class="number">1</span> &amp;&amp; <span class="number">0</span></span><br><span class="line"><span class="number">1</span> || <span class="number">0</span></span><br><span class="line">xor(<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%% variable assignment</span></span><br><span class="line">a = <span class="number">3</span>; <span class="comment">% semicolon suppresses output</span></span><br><span class="line">b = <span class="string">'hi'</span>;</span><br><span class="line">c = <span class="number">3</span>&gt;=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% Displaying them:</span></span><br><span class="line">a = <span class="built_in">pi</span></span><br><span class="line"><span class="built_in">disp</span>(a)</span><br><span class="line"><span class="built_in">disp</span>(sprintf(<span class="string">'2 decimals: %0.2f'</span>, a))</span><br><span class="line"><span class="built_in">disp</span>(sprintf(<span class="string">'6 decimals: %0.6f'</span>, a))</span><br><span class="line">format long</span><br><span class="line">a</span><br><span class="line">format short</span><br><span class="line">a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%  vectors and matrices</span></span><br><span class="line">A = [<span class="number">1</span> <span class="number">2</span>; <span class="number">3</span> <span class="number">4</span>; <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">v = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line">v = [<span class="number">1</span>; <span class="number">2</span>; <span class="number">3</span>]</span><br><span class="line">v = <span class="number">1</span>:<span class="number">0.1</span>:<span class="number">2</span>   <span class="comment">% from 1 to 2, with stepsize of 0.1. Useful for plot axes</span></span><br><span class="line">v = <span class="number">1</span>:<span class="number">6</span>       <span class="comment">% from 1 to 6, assumes stepsize of 1 (row vector)</span></span><br><span class="line"></span><br><span class="line">C = <span class="number">2</span>*<span class="built_in">ones</span>(<span class="number">2</span>,<span class="number">3</span>) <span class="comment">% same as C = [2 2 2; 2 2 2]</span></span><br><span class="line">w = <span class="built_in">ones</span>(<span class="number">1</span>,<span class="number">3</span>)   <span class="comment">% 1x3 vector of ones</span></span><br><span class="line">w = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line">w = <span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">3</span>) <span class="comment">% drawn from a uniform distribution </span></span><br><span class="line">w = <span class="built_in">randn</span>(<span class="number">1</span>,<span class="number">3</span>)<span class="comment">% drawn from a normal distribution (mean=0, var=1)</span></span><br><span class="line">w = <span class="number">-6</span> + <span class="built_in">sqrt</span>(<span class="number">10</span>)*(<span class="built_in">randn</span>(<span class="number">1</span>,<span class="number">10000</span>));  <span class="comment">% (mean = -6, var = 10) - note: add the semicolon</span></span><br><span class="line">hist(w)    <span class="comment">% plot histogram using 10 bins (default)</span></span><br><span class="line">hist(w,<span class="number">50</span>) <span class="comment">% plot histogram using 50 bins</span></span><br><span class="line"><span class="comment">% note: if hist() crashes, try "graphics_toolkit('gnu_plot')" </span></span><br><span class="line"></span><br><span class="line">I = <span class="built_in">eye</span>(<span class="number">4</span>)   <span class="comment">% 4x4 identity matrix</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% help function</span></span><br><span class="line">help <span class="built_in">eye</span></span><br><span class="line">help <span class="built_in">rand</span></span><br><span class="line">help help</span><br></pre></td></tr></table></figure>
<h2 id="2-Moving-Data-Around"><a href="#2-Moving-Data-Around" class="headerlink" title="2. Moving Data Around"></a>2. Moving Data Around</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%% dimensions</span></span><br><span class="line">sz = <span class="built_in">size</span>(A) <span class="comment">% 1x2 matrix: [(number of rows) (number of columns)]</span></span><br><span class="line"><span class="built_in">size</span>(A,<span class="number">1</span>) <span class="comment">% number of rows</span></span><br><span class="line"><span class="built_in">size</span>(A,<span class="number">2</span>) <span class="comment">% number of cols</span></span><br><span class="line"><span class="built_in">length</span>(v) <span class="comment">% size of longest dimension</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%% loading data</span></span><br><span class="line">pwd   <span class="comment">% show current directory (current path)</span></span><br><span class="line">cd <span class="string">'C:\Users\ang\Octave files'</span>  <span class="comment">% change directory </span></span><br><span class="line">ls    <span class="comment">% list files in current directory </span></span><br><span class="line">load q1y.dat   <span class="comment">% alternatively, load('q1y.dat')</span></span><br><span class="line">load q1x.dat</span><br><span class="line">who   <span class="comment">% list variables in workspace</span></span><br><span class="line">whos  <span class="comment">% list variables in workspace (detailed view) </span></span><br><span class="line">clear q1y      <span class="comment">% clear command without any args clears all vars</span></span><br><span class="line">v = q1x(<span class="number">1</span>:<span class="number">10</span>); <span class="comment">% first 10 elements of q1x (counts down the columns)</span></span><br><span class="line">save hello.mat v;  <span class="comment">% save variable v into file hello.mat</span></span><br><span class="line">save hello.txt v -ascii; <span class="comment">% save as ascii</span></span><br><span class="line"><span class="comment">% fopen, fread, fprintf, fscanf also work  [[not needed in class]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% indexing</span></span><br><span class="line">A(<span class="number">3</span>,<span class="number">2</span>)  <span class="comment">% indexing is (row,col)</span></span><br><span class="line">A(<span class="number">2</span>,:)  <span class="comment">% get the 2nd row. </span></span><br><span class="line">        <span class="comment">% ":" means every element along that dimension</span></span><br><span class="line">A(:,<span class="number">2</span>)  <span class="comment">% get the 2nd col</span></span><br><span class="line">A([<span class="number">1</span> <span class="number">3</span>],:) <span class="comment">% print all  the elements of rows 1 and 3</span></span><br><span class="line"></span><br><span class="line">A(:,<span class="number">2</span>) = [<span class="number">10</span>; <span class="number">11</span>; <span class="number">12</span>]     <span class="comment">% change second column</span></span><br><span class="line">A = [A, [<span class="number">100</span>; <span class="number">101</span>; <span class="number">102</span>]]; <span class="comment">% append column vec</span></span><br><span class="line">A(:) <span class="comment">% Select all elements as a column vector.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Putting data together </span></span><br><span class="line">A = [<span class="number">1</span> <span class="number">2</span>; <span class="number">3</span> <span class="number">4</span>; <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line">B = [<span class="number">11</span> <span class="number">12</span>; <span class="number">13</span> <span class="number">14</span>; <span class="number">15</span> <span class="number">16</span>] <span class="comment">% same dims as A</span></span><br><span class="line">C = [A B]  <span class="comment">% concatenating A and B matrices side by side</span></span><br><span class="line">C = [A, B] <span class="comment">% concatenating A and B matrices side by side</span></span><br><span class="line">C = [A; B] <span class="comment">% Concatenating A and B top and bottom</span></span><br></pre></td></tr></table></figure>
<h2 id="3-Computing-on-Data"><a href="#3-Computing-on-Data" class="headerlink" title="3. Computing on Data"></a>3. Computing on Data</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%% initialize variables</span></span><br><span class="line">A = [<span class="number">1</span> <span class="number">2</span>;<span class="number">3</span> <span class="number">4</span>;<span class="number">5</span> <span class="number">6</span>]</span><br><span class="line">B = [<span class="number">11</span> <span class="number">12</span>;<span class="number">13</span> <span class="number">14</span>;<span class="number">15</span> <span class="number">16</span>]</span><br><span class="line">C = [<span class="number">1</span> <span class="number">1</span>;<span class="number">2</span> <span class="number">2</span>]</span><br><span class="line">v = [<span class="number">1</span>;<span class="number">2</span>;<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">%% matrix operations</span></span><br><span class="line">A * C  <span class="comment">% matrix multiplication</span></span><br><span class="line">A .* B <span class="comment">% element-wise multiplication</span></span><br><span class="line"><span class="comment">% A .* C  or A * B gives error - wrong dimensions</span></span><br><span class="line">A .^ <span class="number">2</span> <span class="comment">% element-wise square of each element in A</span></span><br><span class="line"><span class="number">1.</span>/v   <span class="comment">% element-wise reciprocal</span></span><br><span class="line"><span class="built_in">log</span>(v)  <span class="comment">% functions like this operate element-wise on vecs or matrices </span></span><br><span class="line"><span class="built_in">exp</span>(v)</span><br><span class="line"><span class="built_in">abs</span>(v)</span><br><span class="line"></span><br><span class="line">-v  <span class="comment">% -1*v</span></span><br><span class="line"></span><br><span class="line">v + <span class="built_in">ones</span>(<span class="built_in">length</span>(v), <span class="number">1</span>)  </span><br><span class="line"><span class="comment">% v + 1  % same</span></span><br><span class="line"></span><br><span class="line">A'  <span class="comment">% matrix transpose</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% misc useful functions</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% max  (or min)</span></span><br><span class="line">a = [<span class="number">1</span> <span class="number">15</span> <span class="number">2</span> <span class="number">0.5</span>]</span><br><span class="line">val = max(a)</span><br><span class="line">[val,ind] = max(a) <span class="comment">% val -  maximum element of the vector a and index - index value where maximum occur</span></span><br><span class="line">val = max(A) <span class="comment">% if A is matrix, returns max from each column</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% compare values in a matrix &amp; find</span></span><br><span class="line">a &lt; <span class="number">3</span> <span class="comment">% checks which values in a are less than 3</span></span><br><span class="line"><span class="built_in">find</span>(a &lt; <span class="number">3</span>) <span class="comment">% gives location of elements less than 3</span></span><br><span class="line">A = <span class="built_in">magic</span>(<span class="number">3</span>) <span class="comment">% generates a magic matrix - not much used in ML algorithms</span></span><br><span class="line">[r,c] = <span class="built_in">find</span>(A&gt;=<span class="number">7</span>)  <span class="comment">% row, column indices for values matching comparison</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% sum, prod</span></span><br><span class="line">sum(a)</span><br><span class="line">prod(a)</span><br><span class="line"><span class="built_in">floor</span>(a) <span class="comment">% or ceil(a)</span></span><br><span class="line">max(<span class="built_in">rand</span>(<span class="number">3</span>),<span class="built_in">rand</span>(<span class="number">3</span>))</span><br><span class="line">max(A,[],<span class="number">1</span>) -  maximum along columns(defaults to columns - max(A,[]))</span><br><span class="line">max(A,[],<span class="number">2</span>) - maximum along rows</span><br><span class="line">A = <span class="built_in">magic</span>(<span class="number">9</span>)</span><br><span class="line">sum(A,<span class="number">1</span>)</span><br><span class="line">sum(A,<span class="number">2</span>)</span><br><span class="line">sum(sum( A .* <span class="built_in">eye</span>(<span class="number">9</span>) ))</span><br><span class="line">sum(sum( A .* <span class="built_in">flipud</span>(<span class="built_in">eye</span>(<span class="number">9</span>)) ))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% Matrix inverse (pseudo-inverse)</span></span><br><span class="line">pinv(A)        <span class="comment">% inv(A'*A)*A'</span></span><br></pre></td></tr></table></figure>
<h2 id="4-Plotting-Data"><a href="#4-Plotting-Data" class="headerlink" title="4. Plotting Data"></a>4. Plotting Data</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; t=[<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">0.98</span>];</span><br><span class="line">&gt;&gt; t</span><br><span class="line">t =</span><br><span class="line"></span><br><span class="line"> Columns <span class="number">1</span> through <span class="number">10</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.00000</span>   <span class="number">0.01000</span>   <span class="number">0.02000</span>   <span class="number">0.03000</span>   <span class="number">0.04000</span>   <span class="number">0.05000</span>   <span class="number">0.06000</span>   <span class="number">0.07000</span>   <span class="number">0.08000</span>   <span class="number">0.09000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">11</span> through <span class="number">20</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.10000</span>   <span class="number">0.11000</span>   <span class="number">0.12000</span>   <span class="number">0.13000</span>   <span class="number">0.14000</span>   <span class="number">0.15000</span>   <span class="number">0.16000</span>   <span class="number">0.17000</span>   <span class="number">0.18000</span>   <span class="number">0.19000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">21</span> through <span class="number">30</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.20000</span>   <span class="number">0.21000</span>   <span class="number">0.22000</span>   <span class="number">0.23000</span>   <span class="number">0.24000</span>   <span class="number">0.25000</span>   <span class="number">0.26000</span>   <span class="number">0.27000</span>   <span class="number">0.28000</span>   <span class="number">0.29000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">31</span> through <span class="number">40</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.30000</span>   <span class="number">0.31000</span>   <span class="number">0.32000</span>   <span class="number">0.33000</span>   <span class="number">0.34000</span>   <span class="number">0.35000</span>   <span class="number">0.36000</span>   <span class="number">0.37000</span>   <span class="number">0.38000</span>   <span class="number">0.39000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">41</span> through <span class="number">50</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.40000</span>   <span class="number">0.41000</span>   <span class="number">0.42000</span>   <span class="number">0.43000</span>   <span class="number">0.44000</span>   <span class="number">0.45000</span>   <span class="number">0.46000</span>   <span class="number">0.47000</span>   <span class="number">0.48000</span>   <span class="number">0.49000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">51</span> through <span class="number">60</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.50000</span>   <span class="number">0.51000</span>   <span class="number">0.52000</span>   <span class="number">0.53000</span>   <span class="number">0.54000</span>   <span class="number">0.55000</span>   <span class="number">0.56000</span>   <span class="number">0.57000</span>   <span class="number">0.58000</span>   <span class="number">0.59000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">61</span> through <span class="number">70</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.60000</span>   <span class="number">0.61000</span>   <span class="number">0.62000</span>   <span class="number">0.63000</span>   <span class="number">0.64000</span>   <span class="number">0.65000</span>   <span class="number">0.66000</span>   <span class="number">0.67000</span>   <span class="number">0.68000</span>   <span class="number">0.69000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">71</span> through <span class="number">80</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.70000</span>   <span class="number">0.71000</span>   <span class="number">0.72000</span>   <span class="number">0.73000</span>   <span class="number">0.74000</span>   <span class="number">0.75000</span>   <span class="number">0.76000</span>   <span class="number">0.77000</span>   <span class="number">0.78000</span>   <span class="number">0.79000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">81</span> through <span class="number">90</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.80000</span>   <span class="number">0.81000</span>   <span class="number">0.82000</span>   <span class="number">0.83000</span>   <span class="number">0.84000</span>   <span class="number">0.85000</span>   <span class="number">0.86000</span>   <span class="number">0.87000</span>   <span class="number">0.88000</span>   <span class="number">0.89000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">91</span> through <span class="number">99</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.90000</span>   <span class="number">0.91000</span>   <span class="number">0.92000</span>   <span class="number">0.93000</span>   <span class="number">0.94000</span>   <span class="number">0.95000</span>   <span class="number">0.96000</span>   <span class="number">0.97000</span>   <span class="number">0.98000</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y1=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">4</span>*t);</span><br><span class="line">&gt;&gt; plot(t,y1)</span><br><span class="line">&gt;&gt; y2=<span class="built_in">cos</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">4</span>*t);</span><br><span class="line">&gt;&gt; plot(t,y2)</span><br><span class="line">&gt;&gt; hold on</span><br><span class="line">&gt;&gt; plot(t,y1)</span><br><span class="line">&gt;&gt; plot(t,y2,<span class="string">'r'</span>)</span><br><span class="line">&gt;&gt; xlabel(<span class="string">'time'</span>)</span><br><span class="line">&gt;&gt; ylabel(<span class="string">'value'</span>)</span><br><span class="line">&gt;&gt; legend(<span class="string">'sin'</span>,<span class="string">'cos'</span>)</span><br><span class="line">&gt;&gt; title(<span class="string">'my plot'</span>)</span><br><span class="line">&gt;&gt; print -dpng <span class="string">'myPlot.png'</span></span><br><span class="line">warning: print.m: fig2dev binary is not available.</span><br><span class="line">Some output formats are not available.</span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; figure(<span class="number">2</span>); plot(t, y2)</span><br><span class="line">&gt;&gt; subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">&gt;&gt; plot(t,y1)</span><br><span class="line">&gt;&gt; subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">&gt;&gt; plot(t,y2)</span><br><span class="line">&gt;&gt; axis([<span class="number">0.5</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<p><img src="/images/ml/ml-ng-w2-11.png" alt="matric"></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; clf;</span><br><span class="line">&gt;&gt; A = <span class="built_in">magic</span>(<span class="number">5</span>)</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">17</span>   <span class="number">24</span>    <span class="number">1</span>    <span class="number">8</span>   <span class="number">15</span></span><br><span class="line">   <span class="number">23</span>    <span class="number">5</span>    <span class="number">7</span>   <span class="number">14</span>   <span class="number">16</span></span><br><span class="line">    <span class="number">4</span>    <span class="number">6</span>   <span class="number">13</span>   <span class="number">20</span>   <span class="number">22</span></span><br><span class="line">   <span class="number">10</span>   <span class="number">12</span>   <span class="number">19</span>   <span class="number">21</span>    <span class="number">3</span></span><br><span class="line">   <span class="number">11</span>   <span class="number">18</span>   <span class="number">25</span>    <span class="number">2</span>    <span class="number">9</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; imagesc(A)</span><br><span class="line">&gt;&gt; imagesc(A), colorbar, colormap gray;</span><br></pre></td></tr></table></figure>
<p><img src="/images/ml/ml-ng-w2-12.png" alt="matric"></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; imagesc(<span class="built_in">magic</span>(<span class="number">15</span>)), colorbar, colormap gray;</span><br><span class="line">&gt;&gt; a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span></span><br><span class="line">a =  <span class="number">1</span></span><br><span class="line">b =  <span class="number">2</span></span><br><span class="line">c =  <span class="number">3</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/ml/ml-ng-w2-13.png" alt="matric"></p>
<h2 id="5-Control-statements-for-while-if"><a href="#5-Control-statements-for-while-if" class="headerlink" title="5. Control statements:for,while,if"></a>5. Control statements:for,while,if</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">v = <span class="built_in">zeros</span>(<span class="number">10</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">10</span>, </span><br><span class="line">    v(<span class="built_in">i</span>) = <span class="number">2</span>^<span class="built_in">i</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"><span class="comment">% Can also use "break" and "continue" inside for and while loops to control execution.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">i</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">i</span> &lt;= <span class="number">5</span>,</span><br><span class="line">  v(<span class="built_in">i</span>) = <span class="number">100</span>; </span><br><span class="line">  <span class="built_in">i</span> = <span class="built_in">i</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">i</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> true, </span><br><span class="line">  v(<span class="built_in">i</span>) = <span class="number">999</span>; </span><br><span class="line">  <span class="built_in">i</span> = <span class="built_in">i</span>+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">i</span> == <span class="number">6</span>,</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> v(<span class="number">1</span>)==<span class="number">1</span>,</span><br><span class="line">  <span class="built_in">disp</span>(<span class="string">'The value is one!'</span>);</span><br><span class="line"><span class="keyword">elseif</span> v(<span class="number">1</span>)==<span class="number">2</span>,</span><br><span class="line">  <span class="built_in">disp</span>(<span class="string">'The value is two!'</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">disp</span>(<span class="string">'The value is not one or two!'</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>run example :</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">i</span> = <span class="number">1</span>;</span><br><span class="line">&gt;&gt; <span class="keyword">while</span> <span class="built_in">i</span> &lt;= <span class="number">5</span>,</span><br><span class="line">     v(<span class="built_in">i</span>) = <span class="number">100</span>;</span><br><span class="line">     <span class="built_in">i</span> = <span class="built_in">i</span>+<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">end</span>;</span><br><span class="line">&gt;&gt; v</span><br><span class="line">v =</span><br><span class="line"></span><br><span class="line">    <span class="number">100</span></span><br><span class="line">    <span class="number">100</span></span><br><span class="line">    <span class="number">100</span></span><br><span class="line">    <span class="number">100</span></span><br><span class="line">    <span class="number">100</span></span><br><span class="line">     <span class="number">64</span></span><br><span class="line">    <span class="number">128</span></span><br><span class="line">    <span class="number">256</span></span><br><span class="line">    <span class="number">512</span></span><br><span class="line">   <span class="number">1024</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">i</span> = <span class="number">1</span>;</span><br><span class="line">&gt;&gt; <span class="keyword">while</span> true,</span><br><span class="line">     v(<span class="built_in">i</span>) = <span class="number">999</span>;</span><br><span class="line">     <span class="built_in">i</span> = <span class="built_in">i</span> + <span class="number">1</span>;</span><br><span class="line">     <span class="keyword">if</span> <span class="built_in">i</span> == <span class="number">6</span>,</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">     <span class="keyword">end</span>;</span><br><span class="line">   <span class="keyword">end</span>;</span><br><span class="line">&gt;&gt; v</span><br><span class="line">v =</span><br><span class="line"></span><br><span class="line">    <span class="number">999</span></span><br><span class="line">    <span class="number">999</span></span><br><span class="line">    <span class="number">999</span></span><br><span class="line">    <span class="number">999</span></span><br><span class="line">    <span class="number">999</span></span><br><span class="line">     <span class="number">64</span></span><br><span class="line">    <span class="number">128</span></span><br><span class="line">    <span class="number">256</span></span><br><span class="line">    <span class="number">512</span></span><br><span class="line">   <span class="number">1024</span></span><br><span class="line">&gt;&gt; v(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">999</span></span><br><span class="line">&gt;&gt; v(<span class="number">1</span>) = <span class="number">2</span>;</span><br><span class="line">&gt;&gt; <span class="keyword">if</span> v(<span class="number">1</span>) == <span class="number">1</span>,</span><br><span class="line">     <span class="built_in">disp</span>(<span class="string">'The value is one'</span>);</span><br><span class="line">   <span class="keyword">elseif</span> v(<span class="number">1</span>) == <span class="number">2</span>,</span><br><span class="line">     <span class="built_in">disp</span>(<span class="string">'The value is two'</span>);</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">     <span class="built_in">disp</span>(<span class="string">'The value is not 1 or 2'</span>);</span><br><span class="line">   <span class="keyword">end</span>;</span><br><span class="line">The value is two</span><br></pre></td></tr></table></figure>
<h2 id="6-Functions"><a href="#6-Functions" class="headerlink" title="6. Functions"></a>6. Functions</h2><p>To call the function in Octave, do either:</p>
<p>1) Navigate to the directory of the functionName.m file and call the function:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">% Navigate to directory:</span><br><span class="line">  cd /path/to/function</span><br><span class="line"></span><br><span class="line">  % Call the function:</span><br><span class="line">  functionName(args)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>simple compute line regression</p>
</blockquote>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x = [<span class="number">1</span> <span class="number">1</span>; <span class="number">1</span> <span class="number">2</span>; <span class="number">1</span> <span class="number">3</span>;]</span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">1</span></span><br><span class="line">   <span class="number">1</span>   <span class="number">2</span></span><br><span class="line">   <span class="number">1</span>   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y = [<span class="number">1</span>; <span class="number">2</span>; <span class="number">3</span>]</span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; theta = [<span class="number">0</span>;<span class="number">1</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">j</span> = costFunctionJ(x,y,theta)</span><br><span class="line"><span class="built_in">j</span> = <span class="number">0</span></span><br><span class="line">&gt;&gt; theta = [<span class="number">0</span>:<span class="number">0</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">j</span> = costFunctionJ(x, y, theta)</span><br><span class="line">warning: operator -: automatic broadcasting operation applied</span><br><span class="line"><span class="built_in">j</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">2.3333</span>   <span class="number">2.3333</span></span><br><span class="line">   <span class="number">2.3333</span>   <span class="number">2.3333</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>应该为一个 2.3333， 而不是矩阵 2.3333</p>
</blockquote>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; (<span class="number">1</span>^<span class="number">2</span> + <span class="number">2</span>^<span class="number">2</span> + <span class="number">3</span>^<span class="number">2</span>) / (<span class="number">2</span>*<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">2.3333</span></span><br><span class="line">&gt;&gt; [<span class="number">-1</span>,<span class="number">-2</span>,<span class="number">-3</span>]*[<span class="number">-1</span>;<span class="number">-2</span>;<span class="number">-3</span>]</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">14</span></span><br><span class="line">&gt;&gt; <span class="number">14</span> / <span class="number">6</span></span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">2.3333</span></span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="7-Vectorization"><a href="#7-Vectorization" class="headerlink" title="7. Vectorization"></a>7. Vectorization</h2><p>Vectorization is the process of taking code that relies on loops and converting it into matrix operations. It is more efficient, more elegant, and more concise.</p>
<p>As an example, let’s compute our prediction from a hypothesis. Theta is the vector of fields for the hypothesis and x is a vector of variables.</p>
<p>With loops:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">prediction = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:n+<span class="number">1</span>,</span><br><span class="line">  prediction += theta(<span class="built_in">j</span>) * x(<span class="built_in">j</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>
<p>With vectorization:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">prediction = theta&apos; * x;</span><br></pre></td></tr></table></figure>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><blockquote>
<ol>
<li>coursera week 2 learning notes</li>
<li><a href="http://blog.chenming.info/blog/2012/07/15/learn-octave/" target="_blank" rel="external">学习一点</a></li>
</ol>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Country And City]]></title>
      <url>http://iequa.com/2016/10/15/en-knowledge-map-l1/</url>
      <content type="html"><![CDATA[<blockquote>
<p>knowledge map - country and city</p>
</blockquote>
<h2 id="Country-And-City"><a href="#Country-And-City" class="headerlink" title="Country And City"></a>Country And City</h2><table>
<thead>
<tr>
<th>country</th>
<th>capital</th>
<th>main city</th>
</tr>
</thead>
<tbody>
<tr>
<td>Britain　</td>
<td>London</td>
<td>London</td>
</tr>
<tr>
<td>The United States</td>
<td>Washington</td>
<td>New York、Boston、Los Angeles、San Francisco、Seattle、Chicago、 Miami、Hawaii</td>
</tr>
<tr>
<td>Canada</td>
<td>Ottawa</td>
<td>Toronto [tə’rɒntəʊ]</td>
</tr>
<tr>
<td>Japan</td>
<td>Tokyo</td>
<td>Osaka、Fukuoka、Hokkaido、Nagoya</td>
</tr>
<tr>
<td>South Korea</td>
<td>Seoul [səʊl]</td>
<td>Busan </td>
</tr>
<tr>
<td>Australien</td>
<td>Canberra</td>
<td>Sydney、Melbourne</td>
</tr>
<tr>
<td>New Zealand</td>
<td>Wellington</td>
<td>Auckland</td>
</tr>
<tr>
<td>Singapore</td>
<td>Singapore</td>
<td>Singapore</td>
</tr>
<tr>
<td>Malaysia</td>
<td>Kuala Lumpur</td>
<td>Kuala Lumpur [ˈkwɑ:ləˈlumpuə]、Malacca</td>
</tr>
<tr>
<td>Thailand</td>
<td>Bangkok</td>
<td>chiengmai、huahin、Phuket、Pattaya</td>
</tr>
<tr>
<td>Philippines</td>
<td>Manila  [mə’nilə]</td>
</tr>
<tr>
<td>India</td>
<td>New Delhi [‘deli]</td>
<td></td>
</tr>
<tr>
<td>Indonesia</td>
<td>Jakarta</td>
<td></td>
</tr>
<tr>
<td>Spain [spein]</td>
<td>Madrid</td>
<td></td>
</tr>
<tr>
<td>Germany</td>
<td>Berlin</td>
<td>Munich [‘mju:nik]</td>
</tr>
<tr>
<td>France</td>
<td>Paris</td>
</tr>
<tr>
<td>Italy</td>
<td>Rome</td>
</tr>
<tr>
<td>Russia</td>
<td>Moscow</td>
</tr>
<tr>
<td>Mexico</td>
<td>Mexico</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera Week 2 - Octave learning]]></title>
      <url>http://iequa.com/2016/10/12/ml-coursera-ng-w2-02/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p>Octave Tutorial, Octave Learning</p>
<h2 id="1-var"><a href="#1-var" class="headerlink" title="1. var"></a>1. var</h2><blockquote>
<p>不像matlab有图形界面，octave只提供了命令行接口。 要启动octave，只需要在命令行输入octave即可。</p>
</blockquote>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="number">2</span> * (<span class="number">3</span> + <span class="number">5</span>)</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">16</span></span><br><span class="line">&gt;&gt; <span class="number">2</span> ^ (<span class="number">3</span> + <span class="number">5</span>)</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">256</span></span><br><span class="line">&gt;&gt; x = <span class="number">2</span> * <span class="number">3</span></span><br><span class="line">x =  <span class="number">6</span></span><br><span class="line">&gt;&gt; who</span><br><span class="line">Variables in the current scope:</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span>  x</span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">disp</span>(x)</span><br><span class="line"> <span class="number">6</span></span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="2-constant"><a href="#2-constant" class="headerlink" title="2. constant"></a>2. constant</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt; <span class="built_in">pi</span></span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">3.1416</span></span><br><span class="line">&gt;&gt; e</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">2.7183</span></span><br><span class="line">&gt;&gt; format long</span><br><span class="line">&gt;&gt; <span class="built_in">pi</span></span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">3.14159265358979</span></span><br><span class="line">&gt;&gt; format short</span><br><span class="line">&gt;&gt; <span class="built_in">pi</span></span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">3.1416</span></span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>octave系统定义了圆周率pi和自然指数e这两个常量, octave 可以定义显示结果</p>
</blockquote>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="number">3</span>/<span class="number">0</span></span><br><span class="line">warning: division by zero</span><br><span class="line"><span class="built_in">ans</span> = Inf</span><br><span class="line">&gt;&gt; <span class="number">0</span>/<span class="number">0</span></span><br><span class="line">warning: division by zero</span><br><span class="line"><span class="built_in">ans</span> = NaN</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>系统定义了Inf和NaN（注意要区分大小写）。Inf(Infinity)表示被零除的结果，NaN(Not a Number)表示零除零的结果。</p>
</blockquote>
<h2 id="3-workspace"><a href="#3-workspace" class="headerlink" title="3. workspace"></a>3. workspace</h2><p>使用save命令保存当前工作区到文件 work1</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; save work1</span><br><span class="line">&gt;&gt; load work1</span><br><span class="line">&gt;&gt; <span class="built_in">pi</span></span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">3.1416</span></span><br></pre></td></tr></table></figure>
<h2 id="4-semicolon"><a href="#4-semicolon" class="headerlink" title="4. semicolon"></a>4. semicolon</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">octave:<span class="number">32</span>&gt; x = <span class="number">2</span> * <span class="number">3</span></span><br><span class="line">x =  <span class="number">6</span></span><br><span class="line">octave:<span class="number">33</span>&gt; x = <span class="number">2</span> * <span class="number">3</span>;</span><br><span class="line">octave:<span class="number">34</span>&gt; <span class="built_in">disp</span>(x)</span><br><span class="line"> <span class="number">6</span></span><br></pre></td></tr></table></figure>
<h2 id="5-matrix"><a href="#5-matrix" class="headerlink" title="5. matrix"></a>5. matrix</h2><p>矩阵使用方括号([])括起来，维度使用分号(;)分割。 同一维度之间的分隔符可以是空格或逗号(,)</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">octave:<span class="number">35</span>&gt; x = [ <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> ]</span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">   <span class="number">2</span>   <span class="number">3</span>   <span class="number">5</span></span><br><span class="line"></span><br><span class="line">octave:<span class="number">36</span>&gt; y = [ <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span> ]</span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">   <span class="number">2</span>   <span class="number">3</span>   <span class="number">5</span></span><br><span class="line"></span><br><span class="line">octave:<span class="number">37</span>&gt; z = [ <span class="number">2</span>; <span class="number">3</span>; <span class="number">5</span> ]</span><br><span class="line">z =</span><br><span class="line"></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line">   <span class="number">5</span></span><br><span class="line"></span><br><span class="line">octave:<span class="number">39</span>&gt; a = [ <span class="number">1</span> <span class="number">2</span>; <span class="number">1</span>, <span class="number">3</span>; <span class="number">1</span>   <span class="number">5</span> ]</span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">2</span></span><br><span class="line">   <span class="number">1</span>   <span class="number">3</span></span><br><span class="line">   <span class="number">1</span>   <span class="number">5</span></span><br></pre></td></tr></table></figure>
<p>使用冒号表达式快速构造连续的向量</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">octave:<span class="number">43</span>&gt; v = <span class="number">2</span>:<span class="number">5</span></span><br><span class="line">v =</span><br><span class="line"></span><br><span class="line">   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span></span><br><span class="line">   </span><br><span class="line">octave:<span class="number">44</span>&gt; v = <span class="number">2</span>:<span class="number">0.3</span>:<span class="number">3</span></span><br><span class="line">v =</span><br><span class="line"></span><br><span class="line">    <span class="number">2.0000</span>    <span class="number">2.3000</span>    <span class="number">2.6000</span>    <span class="number">2.9000</span></span><br></pre></td></tr></table></figure>
<p>构造矩阵的函数</p>
<blockquote>
<p><code>linspace(start, end, N)</code> 产生N个均匀分布于start和end之间的向量。 在绘图时用于产生x坐标特别有用。</p>
<p><code>logspace(start, end, N)</code> 产生N个指数分布于10^start和10^end之间的向量。 在绘图时用于产生x坐标特别有用。</p>
<p>zeros(M, N)</p>
<p>zeros(N) = zeros(N, N)。</p>
<p>ones(M, N)</p>
<p>ones(N) = ones(N, N)。</p>
<p>rand(M, N) 值位于0~1的随机数的矩阵。</p>
<p>rand(N) = rand(N, N)。</p>
</blockquote>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">octave:<span class="number">66</span>&gt; x = <span class="built_in">linspace</span> (<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line"> Columns <span class="number">1</span> through <span class="number">4</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">3.00000000000000</span>   <span class="number">3.25000000000000</span>   <span class="number">3.50000000000000</span>   <span class="number">3.75000000000000</span></span><br><span class="line"></span><br><span class="line"> Column <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">4.00000000000000</span></span><br><span class="line"></span><br><span class="line">octave:<span class="number">67</span>&gt; <span class="built_in">logspace</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line"> Columns <span class="number">1</span> through <span class="number">4</span>:</span><br><span class="line"></span><br><span class="line">    <span class="number">10.0000000000000</span>    <span class="number">15.8489319246111</span>    <span class="number">25.1188643150958</span>    <span class="number">39.8107170553497</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">5</span> and <span class="number">6</span>:</span><br><span class="line"></span><br><span class="line">    <span class="number">63.0957344480193</span>   <span class="number">100.0000000000000</span></span><br></pre></td></tr></table></figure>
<h2 id="6-matrix-operation"><a href="#6-matrix-operation" class="headerlink" title="6. matrix operation"></a>6. matrix operation</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A + B</span><br><span class="line">A - B</span><br><span class="line">A * B</span><br><span class="line">A \ B</span><br></pre></td></tr></table></figure>
<p>说明：A\B为矩阵左除，用于求解线性方程Wx=b，其中W为一个nxn的矩阵，b为一个n维的列向量。 求解线性方式示例：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">octave:<span class="number">15</span>&gt; W = [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>; <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>; <span class="number">3</span> <span class="number">4</span> <span class="number">6</span> <span class="number">2</span>; <span class="number">2</span> <span class="number">7</span> <span class="number">10</span> <span class="number">5</span>];</span><br><span class="line">octave:<span class="number">16</span>&gt; b = [<span class="number">3</span>; <span class="number">5</span>; <span class="number">5</span>; <span class="number">8</span>];</span><br><span class="line">octave:<span class="number">17</span>&gt; x = W\b</span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.0000</span></span><br><span class="line">   <span class="number">3.0000</span></span><br><span class="line">  <span class="number">-2.0000</span></span><br><span class="line">   <span class="number">1.0000</span></span><br></pre></td></tr></table></figure>
<p><strong>6.1 matrix transpose</strong></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">octave:<span class="number">9</span>&gt; x = <span class="built_in">rand</span>(<span class="number">3</span>)</span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.0052581</span>   <span class="number">0.4446771</span>   <span class="number">0.3970036</span></span><br><span class="line">   <span class="number">0.7844458</span>   <span class="number">0.3317067</span>   <span class="number">0.9633000</span></span><br><span class="line">   <span class="number">0.0577080</span>   <span class="number">0.9015905</span>   <span class="number">0.0344771</span></span><br><span class="line"></span><br><span class="line">octave:<span class="number">10</span>&gt; x'</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.0052581</span>   <span class="number">0.7844458</span>   <span class="number">0.0577080</span></span><br><span class="line">   <span class="number">0.4446771</span>   <span class="number">0.3317067</span>   <span class="number">0.9015905</span></span><br><span class="line">   <span class="number">0.3970036</span>   <span class="number">0.9633000</span>   <span class="number">0.034477</span></span><br></pre></td></tr></table></figure>
<h2 id="7-plotting"><a href="#7-plotting" class="headerlink" title="7. plotting"></a>7. plotting</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; t=[<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">0.98</span>];</span><br><span class="line">&gt;&gt; t</span><br><span class="line">t =</span><br><span class="line"></span><br><span class="line"> Columns <span class="number">1</span> through <span class="number">10</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.00000</span>   <span class="number">0.01000</span>   <span class="number">0.02000</span>   <span class="number">0.03000</span>   <span class="number">0.04000</span>   <span class="number">0.05000</span>   <span class="number">0.06000</span>   <span class="number">0.07000</span>   <span class="number">0.08000</span>   <span class="number">0.09000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">11</span> through <span class="number">20</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.10000</span>   <span class="number">0.11000</span>   <span class="number">0.12000</span>   <span class="number">0.13000</span>   <span class="number">0.14000</span>   <span class="number">0.15000</span>   <span class="number">0.16000</span>   <span class="number">0.17000</span>   <span class="number">0.18000</span>   <span class="number">0.19000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">21</span> through <span class="number">30</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.20000</span>   <span class="number">0.21000</span>   <span class="number">0.22000</span>   <span class="number">0.23000</span>   <span class="number">0.24000</span>   <span class="number">0.25000</span>   <span class="number">0.26000</span>   <span class="number">0.27000</span>   <span class="number">0.28000</span>   <span class="number">0.29000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">31</span> through <span class="number">40</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.30000</span>   <span class="number">0.31000</span>   <span class="number">0.32000</span>   <span class="number">0.33000</span>   <span class="number">0.34000</span>   <span class="number">0.35000</span>   <span class="number">0.36000</span>   <span class="number">0.37000</span>   <span class="number">0.38000</span>   <span class="number">0.39000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">41</span> through <span class="number">50</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.40000</span>   <span class="number">0.41000</span>   <span class="number">0.42000</span>   <span class="number">0.43000</span>   <span class="number">0.44000</span>   <span class="number">0.45000</span>   <span class="number">0.46000</span>   <span class="number">0.47000</span>   <span class="number">0.48000</span>   <span class="number">0.49000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">51</span> through <span class="number">60</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.50000</span>   <span class="number">0.51000</span>   <span class="number">0.52000</span>   <span class="number">0.53000</span>   <span class="number">0.54000</span>   <span class="number">0.55000</span>   <span class="number">0.56000</span>   <span class="number">0.57000</span>   <span class="number">0.58000</span>   <span class="number">0.59000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">61</span> through <span class="number">70</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.60000</span>   <span class="number">0.61000</span>   <span class="number">0.62000</span>   <span class="number">0.63000</span>   <span class="number">0.64000</span>   <span class="number">0.65000</span>   <span class="number">0.66000</span>   <span class="number">0.67000</span>   <span class="number">0.68000</span>   <span class="number">0.69000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">71</span> through <span class="number">80</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.70000</span>   <span class="number">0.71000</span>   <span class="number">0.72000</span>   <span class="number">0.73000</span>   <span class="number">0.74000</span>   <span class="number">0.75000</span>   <span class="number">0.76000</span>   <span class="number">0.77000</span>   <span class="number">0.78000</span>   <span class="number">0.79000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">81</span> through <span class="number">90</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.80000</span>   <span class="number">0.81000</span>   <span class="number">0.82000</span>   <span class="number">0.83000</span>   <span class="number">0.84000</span>   <span class="number">0.85000</span>   <span class="number">0.86000</span>   <span class="number">0.87000</span>   <span class="number">0.88000</span>   <span class="number">0.89000</span></span><br><span class="line"></span><br><span class="line"> Columns <span class="number">91</span> through <span class="number">99</span>:</span><br><span class="line"></span><br><span class="line">   <span class="number">0.90000</span>   <span class="number">0.91000</span>   <span class="number">0.92000</span>   <span class="number">0.93000</span>   <span class="number">0.94000</span>   <span class="number">0.95000</span>   <span class="number">0.96000</span>   <span class="number">0.97000</span>   <span class="number">0.98000</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y1=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">4</span>*t);</span><br><span class="line">&gt;&gt; plot(t,y1)</span><br><span class="line">&gt;&gt; y2=<span class="built_in">cos</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">4</span>*t);</span><br><span class="line">&gt;&gt; plot(t,y2)</span><br><span class="line">&gt;&gt; hold on</span><br><span class="line">&gt;&gt; plot(t,y1)</span><br><span class="line">&gt;&gt; plot(t,y2,<span class="string">'r'</span>)</span><br><span class="line">&gt;&gt; xlabel(<span class="string">'time'</span>)</span><br><span class="line">&gt;&gt; ylabel(<span class="string">'value'</span>)</span><br><span class="line">&gt;&gt; legend(<span class="string">'sin'</span>,<span class="string">'cos'</span>)</span><br><span class="line">&gt;&gt; title(<span class="string">'my plot'</span>)</span><br><span class="line">&gt;&gt; print -dpng <span class="string">'myPlot.png'</span></span><br><span class="line">warning: print.m: fig2dev binary is not available.</span><br><span class="line">Some output formats are not available.</span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; figure(<span class="number">2</span>); plot(t, y2)</span><br><span class="line">&gt;&gt; subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">&gt;&gt; plot(t,y1)</span><br><span class="line">&gt;&gt; subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">&gt;&gt; plot(t,y2)</span><br><span class="line">&gt;&gt; axis([<span class="number">0.5</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<p><img src="/images/ml/ml-ng-w2-11.png" alt="matric"></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; clf;</span><br><span class="line">&gt;&gt; A = <span class="built_in">magic</span>(<span class="number">5</span>)</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">17</span>   <span class="number">24</span>    <span class="number">1</span>    <span class="number">8</span>   <span class="number">15</span></span><br><span class="line">   <span class="number">23</span>    <span class="number">5</span>    <span class="number">7</span>   <span class="number">14</span>   <span class="number">16</span></span><br><span class="line">    <span class="number">4</span>    <span class="number">6</span>   <span class="number">13</span>   <span class="number">20</span>   <span class="number">22</span></span><br><span class="line">   <span class="number">10</span>   <span class="number">12</span>   <span class="number">19</span>   <span class="number">21</span>    <span class="number">3</span></span><br><span class="line">   <span class="number">11</span>   <span class="number">18</span>   <span class="number">25</span>    <span class="number">2</span>    <span class="number">9</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; imagesc(A)</span><br><span class="line">&gt;&gt; imagesc(A), colorbar, colormap gray;</span><br></pre></td></tr></table></figure>
<p><img src="/images/ml/ml-ng-w2-12.png" alt="matric"></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; imagesc(<span class="built_in">magic</span>(<span class="number">15</span>)), colorbar, colormap gray;</span><br><span class="line">&gt;&gt; a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span></span><br><span class="line">a =  <span class="number">1</span></span><br><span class="line">b =  <span class="number">2</span></span><br><span class="line">c =  <span class="number">3</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/ml/ml-ng-w2-13.png" alt="matric"></p>
<h2 id="8-ng"><a href="#8-ng" class="headerlink" title="8. ng"></a>8. ng</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A = [<span class="number">1</span> <span class="number">2</span>; <span class="number">3</span> <span class="number">4</span>; <span class="number">5</span> <span class="number">6</span>;]</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span>   <span class="number">4</span></span><br><span class="line">   <span class="number">5</span>   <span class="number">6</span></span><br><span class="line">&gt;&gt; </span><br><span class="line">save hello.mat v; (压缩比例很大)</span><br><span class="line">save hello.txt v -ascii <span class="comment">% save as text(ASCII)</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; who</span><br><span class="line">Variables in the current scope:</span><br><span class="line"></span><br><span class="line">A</span><br><span class="line"></span><br><span class="line">&gt;&gt; whos</span><br><span class="line">Variables in the current scope:</span><br><span class="line"></span><br><span class="line">   Attr Name        Size                     Bytes  Class</span><br><span class="line">   ==== ====        ====                     =====  =====</span><br><span class="line">        A           <span class="number">3</span>x2                         <span class="number">48</span>  double</span><br><span class="line"></span><br><span class="line">Total is <span class="number">6</span> elements using <span class="number">48</span> bytes</span><br><span class="line"></span><br><span class="line">&gt;&gt; clear</span><br><span class="line">&gt;&gt; A(<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">6</span></span><br><span class="line">&gt;&gt; A(:,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">4</span></span><br><span class="line">   <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A(<span class="number">2</span>,:)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">3</span>   <span class="number">4</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span>   <span class="number">4</span></span><br><span class="line">   <span class="number">5</span>   <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A([<span class="number">1</span> <span class="number">3</span>], :)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">2</span></span><br><span class="line">   <span class="number">5</span>   <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A(:,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">4</span></span><br><span class="line">   <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A(:,<span class="number">2</span>) = [<span class="number">10</span>; <span class="number">11</span>; <span class="number">12</span>]</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>   <span class="number">10</span></span><br><span class="line">    <span class="number">3</span>   <span class="number">11</span></span><br><span class="line">    <span class="number">5</span>   <span class="number">12</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A = [A, [<span class="number">100</span>; <span class="number">101</span>; <span class="number">102</span>]];</span><br><span class="line">&gt;&gt; A</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>    <span class="number">10</span>   <span class="number">100</span></span><br><span class="line">     <span class="number">3</span>    <span class="number">11</span>   <span class="number">101</span></span><br><span class="line">     <span class="number">5</span>    <span class="number">12</span>   <span class="number">102</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [<span class="number">100</span>;<span class="number">101</span>;<span class="number">102</span>]</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">100</span></span><br><span class="line">   <span class="number">101</span></span><br><span class="line">   <span class="number">102</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">size</span>(A)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">3</span>   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A(:)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line">    <span class="number">10</span></span><br><span class="line">    <span class="number">11</span></span><br><span class="line">    <span class="number">12</span></span><br><span class="line">   <span class="number">100</span></span><br><span class="line">   <span class="number">101</span></span><br><span class="line">   <span class="number">102</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A = [<span class="number">1</span> <span class="number">2</span>; <span class="number">3</span> <span class="number">4</span>; <span class="number">5</span> <span class="number">6</span>;]</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span>   <span class="number">4</span></span><br><span class="line">   <span class="number">5</span>   <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; B = [<span class="number">11</span> <span class="number">12</span>; <span class="number">13</span> <span class="number">14</span>; <span class="number">15</span> <span class="number">16</span>]</span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">   <span class="number">11</span>   <span class="number">12</span></span><br><span class="line">   <span class="number">13</span>   <span class="number">14</span></span><br><span class="line">   <span class="number">15</span>   <span class="number">16</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; C = [A B]</span><br><span class="line">C =</span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>    <span class="number">2</span>   <span class="number">11</span>   <span class="number">12</span></span><br><span class="line">    <span class="number">3</span>    <span class="number">4</span>   <span class="number">13</span>   <span class="number">14</span></span><br><span class="line">    <span class="number">5</span>    <span class="number">6</span>   <span class="number">15</span>   <span class="number">16</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; D = [A;B]</span><br><span class="line">D =</span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>    <span class="number">2</span></span><br><span class="line">    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">   <span class="number">11</span>   <span class="number">12</span></span><br><span class="line">   <span class="number">13</span>   <span class="number">14</span></span><br><span class="line">   <span class="number">15</span>   <span class="number">16</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">size</span>(D)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">6</span>   <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [A, B]</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>    <span class="number">2</span>   <span class="number">11</span>   <span class="number">12</span></span><br><span class="line">    <span class="number">3</span>    <span class="number">4</span>   <span class="number">13</span>   <span class="number">14</span></span><br><span class="line">    <span class="number">5</span>    <span class="number">6</span>   <span class="number">15</span>   <span class="number">16</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [A B]</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>    <span class="number">2</span>   <span class="number">11</span>   <span class="number">12</span></span><br><span class="line">    <span class="number">3</span>    <span class="number">4</span>   <span class="number">13</span>   <span class="number">14</span></span><br><span class="line">    <span class="number">5</span>    <span class="number">6</span>   <span class="number">15</span>   <span class="number">16</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;</span><br><span class="line">&gt;&gt;</span><br><span class="line">&gt;&gt;&gt;&gt; A .* B</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">11</span>   <span class="number">24</span></span><br><span class="line">   <span class="number">39</span>   <span class="number">56</span></span><br><span class="line">   <span class="number">75</span>   <span class="number">96</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A .^ <span class="number">2</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>    <span class="number">4</span></span><br><span class="line">    <span class="number">9</span>   <span class="number">16</span></span><br><span class="line">   <span class="number">25</span>   <span class="number">36</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; v = [<span class="number">1</span>; <span class="number">2</span>; <span class="number">3</span>]</span><br><span class="line">v =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">1</span> ./ v</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.00000</span></span><br><span class="line">   <span class="number">0.50000</span></span><br><span class="line">   <span class="number">0.33333</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">1</span> ./ A</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.00000</span>   <span class="number">0.50000</span></span><br><span class="line">   <span class="number">0.33333</span>   <span class="number">0.25000</span></span><br><span class="line">   <span class="number">0.20000</span>   <span class="number">0.16667</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">log</span>(v)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.00000</span></span><br><span class="line">   <span class="number">0.69315</span></span><br><span class="line">   <span class="number">1.09861</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">exp</span>(v)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">2.7183</span></span><br><span class="line">    <span class="number">7.3891</span></span><br><span class="line">   <span class="number">20.0855</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">abs</span>(v)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">abs</span>([<span class="number">-1</span>; <span class="number">-2</span>; <span class="number">-3</span>])</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; V = v</span><br><span class="line">V =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; V</span><br><span class="line">V =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; V</span><br><span class="line">V =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; -V</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  <span class="number">-1</span></span><br><span class="line">  <span class="number">-2</span></span><br><span class="line">  <span class="number">-3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; V + <span class="built_in">ones</span>(<span class="built_in">length</span>(V))</span><br><span class="line">warning: operator +: automatic broadcasting operation applied</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">2</span>   <span class="number">2</span>   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span>   <span class="number">3</span>   <span class="number">3</span></span><br><span class="line">   <span class="number">4</span>   <span class="number">4</span>   <span class="number">4</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">length</span>(V)</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">3</span></span><br><span class="line">&gt;&gt; <span class="built_in">ones</span>(<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; V + <span class="built_in">ones</span>(<span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line">   <span class="number">4</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; V + <span class="number">2</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">3</span></span><br><span class="line">   <span class="number">4</span></span><br><span class="line">   <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; V</span><br><span class="line">V =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span>   <span class="number">4</span></span><br><span class="line">   <span class="number">5</span>   <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A'</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">3</span>   <span class="number">5</span></span><br><span class="line">   <span class="number">2</span>   <span class="number">4</span>   <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; a  = [<span class="number">1</span> <span class="number">15</span> <span class="number">2</span> <span class="number">0.5</span>]</span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.00000</span>   <span class="number">15.00000</span>    <span class="number">2.00000</span>    <span class="number">0.50000</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; val = max(a)</span><br><span class="line">val =  <span class="number">15</span></span><br><span class="line">&gt;&gt; [val, ind] = max(a)</span><br><span class="line">val =  <span class="number">15</span></span><br><span class="line">ind =  <span class="number">2</span></span><br><span class="line">&gt;&gt; max(A)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">5</span>   <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span>   <span class="number">4</span></span><br><span class="line">   <span class="number">5</span>   <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; a</span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.00000</span>   <span class="number">15.00000</span>    <span class="number">2.00000</span>    <span class="number">0.50000</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; a &lt; <span class="number">3</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">find</span>(a &lt; <span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">3</span>   <span class="number">4</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A = magix(<span class="number">3</span>)</span><br><span class="line">error: <span class="string">'magix'</span> undefined near line <span class="number">1</span> column <span class="number">5</span></span><br><span class="line">&gt;&gt; A = <span class="built_in">magic</span>(<span class="number">3</span>)</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">8</span>   <span class="number">1</span>   <span class="number">6</span></span><br><span class="line">   <span class="number">3</span>   <span class="number">5</span>   <span class="number">7</span></span><br><span class="line">   <span class="number">4</span>   <span class="number">9</span>   <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [r, c] = <span class="built_in">find</span>(A &gt;= <span class="number">7</span>)</span><br><span class="line">r =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line"></span><br><span class="line">c =</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">7</span></span><br><span class="line">&gt;&gt; sum(a)</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">18.500</span></span><br><span class="line">&gt;&gt; prod(a)</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">15</span></span><br><span class="line">&gt;&gt; <span class="built_in">floor</span>(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>   <span class="number">15</span>    <span class="number">2</span>    <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">ceil</span>(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>   <span class="number">15</span>    <span class="number">2</span>    <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">rand</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.708800</span>   <span class="number">0.905101</span>   <span class="number">0.837562</span></span><br><span class="line">   <span class="number">0.264139</span>   <span class="number">0.265985</span>   <span class="number">0.671546</span></span><br><span class="line">   <span class="number">0.411435</span>   <span class="number">0.058028</span>   <span class="number">0.454436</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; max(<span class="built_in">rand</span>(<span class="number">3</span>), <span class="built_in">rand</span>(<span class="number">3</span>))</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.87641</span>   <span class="number">0.74541</span>   <span class="number">0.92027</span></span><br><span class="line">   <span class="number">0.61292</span>   <span class="number">0.57756</span>   <span class="number">0.95694</span></span><br><span class="line">   <span class="number">0.26555</span>   <span class="number">0.76822</span>   <span class="number">0.63566</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">8</span>   <span class="number">1</span>   <span class="number">6</span></span><br><span class="line">   <span class="number">3</span>   <span class="number">5</span>   <span class="number">7</span></span><br><span class="line">   <span class="number">4</span>   <span class="number">9</span>   <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; max(A, [], <span class="number">1</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">8</span>   <span class="number">9</span>   <span class="number">7</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; max(A, [], <span class="number">2</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">8</span></span><br><span class="line">   <span class="number">7</span></span><br><span class="line">   <span class="number">9</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; max(A)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">8</span>   <span class="number">9</span>   <span class="number">7</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; max(max(A))</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">9</span></span><br><span class="line">&gt;&gt; A(:)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">8</span></span><br><span class="line">   <span class="number">3</span></span><br><span class="line">   <span class="number">4</span></span><br><span class="line">   <span class="number">1</span></span><br><span class="line">   <span class="number">5</span></span><br><span class="line">   <span class="number">9</span></span><br><span class="line">   <span class="number">6</span></span><br><span class="line">   <span class="number">7</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; max(A(:))</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">9</span></span><br><span class="line">&gt;&gt;</span><br><span class="line">&gt;&gt;</span><br><span class="line">&gt;&gt; A = <span class="built_in">magic</span>(<span class="number">9</span>)</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">47</span>   <span class="number">58</span>   <span class="number">69</span>   <span class="number">80</span>    <span class="number">1</span>   <span class="number">12</span>   <span class="number">23</span>   <span class="number">34</span>   <span class="number">45</span></span><br><span class="line">   <span class="number">57</span>   <span class="number">68</span>   <span class="number">79</span>    <span class="number">9</span>   <span class="number">11</span>   <span class="number">22</span>   <span class="number">33</span>   <span class="number">44</span>   <span class="number">46</span></span><br><span class="line">   <span class="number">67</span>   <span class="number">78</span>    <span class="number">8</span>   <span class="number">10</span>   <span class="number">21</span>   <span class="number">32</span>   <span class="number">43</span>   <span class="number">54</span>   <span class="number">56</span></span><br><span class="line">   <span class="number">77</span>    <span class="number">7</span>   <span class="number">18</span>   <span class="number">20</span>   <span class="number">31</span>   <span class="number">42</span>   <span class="number">53</span>   <span class="number">55</span>   <span class="number">66</span></span><br><span class="line">    <span class="number">6</span>   <span class="number">17</span>   <span class="number">19</span>   <span class="number">30</span>   <span class="number">41</span>   <span class="number">52</span>   <span class="number">63</span>   <span class="number">65</span>   <span class="number">76</span></span><br><span class="line">   <span class="number">16</span>   <span class="number">27</span>   <span class="number">29</span>   <span class="number">40</span>   <span class="number">51</span>   <span class="number">62</span>   <span class="number">64</span>   <span class="number">75</span>    <span class="number">5</span></span><br><span class="line">   <span class="number">26</span>   <span class="number">28</span>   <span class="number">39</span>   <span class="number">50</span>   <span class="number">61</span>   <span class="number">72</span>   <span class="number">74</span>    <span class="number">4</span>   <span class="number">15</span></span><br><span class="line">   <span class="number">36</span>   <span class="number">38</span>   <span class="number">49</span>   <span class="number">60</span>   <span class="number">71</span>   <span class="number">73</span>    <span class="number">3</span>   <span class="number">14</span>   <span class="number">25</span></span><br><span class="line">   <span class="number">37</span>   <span class="number">48</span>   <span class="number">59</span>   <span class="number">70</span>   <span class="number">81</span>    <span class="number">2</span>   <span class="number">13</span>   <span class="number">24</span>   <span class="number">35</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; sum(A,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">369</span>   <span class="number">369</span>   <span class="number">369</span>   <span class="number">369</span>   <span class="number">369</span>   <span class="number">369</span>   <span class="number">369</span>   <span class="number">369</span>   <span class="number">369</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; sum(A,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">369</span></span><br><span class="line">   <span class="number">369</span></span><br><span class="line">   <span class="number">369</span></span><br><span class="line">   <span class="number">369</span></span><br><span class="line">   <span class="number">369</span></span><br><span class="line">   <span class="number">369</span></span><br><span class="line">   <span class="number">369</span></span><br><span class="line">   <span class="number">369</span></span><br><span class="line">   <span class="number">369</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">eye</span>(<span class="number">9</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">Diagonal Matrix</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">47</span>   <span class="number">58</span>   <span class="number">69</span>   <span class="number">80</span>    <span class="number">1</span>   <span class="number">12</span>   <span class="number">23</span>   <span class="number">34</span>   <span class="number">45</span></span><br><span class="line">   <span class="number">57</span>   <span class="number">68</span>   <span class="number">79</span>    <span class="number">9</span>   <span class="number">11</span>   <span class="number">22</span>   <span class="number">33</span>   <span class="number">44</span>   <span class="number">46</span></span><br><span class="line">   <span class="number">67</span>   <span class="number">78</span>    <span class="number">8</span>   <span class="number">10</span>   <span class="number">21</span>   <span class="number">32</span>   <span class="number">43</span>   <span class="number">54</span>   <span class="number">56</span></span><br><span class="line">   <span class="number">77</span>    <span class="number">7</span>   <span class="number">18</span>   <span class="number">20</span>   <span class="number">31</span>   <span class="number">42</span>   <span class="number">53</span>   <span class="number">55</span>   <span class="number">66</span></span><br><span class="line">    <span class="number">6</span>   <span class="number">17</span>   <span class="number">19</span>   <span class="number">30</span>   <span class="number">41</span>   <span class="number">52</span>   <span class="number">63</span>   <span class="number">65</span>   <span class="number">76</span></span><br><span class="line">   <span class="number">16</span>   <span class="number">27</span>   <span class="number">29</span>   <span class="number">40</span>   <span class="number">51</span>   <span class="number">62</span>   <span class="number">64</span>   <span class="number">75</span>    <span class="number">5</span></span><br><span class="line">   <span class="number">26</span>   <span class="number">28</span>   <span class="number">39</span>   <span class="number">50</span>   <span class="number">61</span>   <span class="number">72</span>   <span class="number">74</span>    <span class="number">4</span>   <span class="number">15</span></span><br><span class="line">   <span class="number">36</span>   <span class="number">38</span>   <span class="number">49</span>   <span class="number">60</span>   <span class="number">71</span>   <span class="number">73</span>    <span class="number">3</span>   <span class="number">14</span>   <span class="number">25</span></span><br><span class="line">   <span class="number">37</span>   <span class="number">48</span>   <span class="number">59</span>   <span class="number">70</span>   <span class="number">81</span>    <span class="number">2</span>   <span class="number">13</span>   <span class="number">24</span>   <span class="number">35</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A .* <span class="built_in">eye</span>(<span class="number">9</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">47</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span></span><br><span class="line">    <span class="number">0</span>   <span class="number">68</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span></span><br><span class="line">    <span class="number">0</span>    <span class="number">0</span>    <span class="number">8</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span></span><br><span class="line">    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>   <span class="number">20</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span></span><br><span class="line">    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>   <span class="number">41</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span></span><br><span class="line">    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>   <span class="number">62</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span></span><br><span class="line">    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>   <span class="number">74</span>    <span class="number">0</span>    <span class="number">0</span></span><br><span class="line">    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>   <span class="number">14</span>    <span class="number">0</span></span><br><span class="line">    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>    <span class="number">0</span>   <span class="number">35</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; sum(sum(A .* <span class="built_in">eye</span>(<span class="number">9</span>)))</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">369</span></span><br><span class="line">&gt;&gt; <span class="built_in">flipud</span>(<span class="built_in">eye</span>(<span class="number">9</span>))</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">Permutation Matrix</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line">   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; sum(sum(A.*<span class="built_in">flipud</span>(<span class="built_in">eye</span>(<span class="number">9</span>))))</span><br><span class="line"><span class="built_in">ans</span> =  <span class="number">369</span></span><br><span class="line">&gt;&gt; A</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">47</span>   <span class="number">58</span>   <span class="number">69</span>   <span class="number">80</span>    <span class="number">1</span>   <span class="number">12</span>   <span class="number">23</span>   <span class="number">34</span>   <span class="number">45</span></span><br><span class="line">   <span class="number">57</span>   <span class="number">68</span>   <span class="number">79</span>    <span class="number">9</span>   <span class="number">11</span>   <span class="number">22</span>   <span class="number">33</span>   <span class="number">44</span>   <span class="number">46</span></span><br><span class="line">   <span class="number">67</span>   <span class="number">78</span>    <span class="number">8</span>   <span class="number">10</span>   <span class="number">21</span>   <span class="number">32</span>   <span class="number">43</span>   <span class="number">54</span>   <span class="number">56</span></span><br><span class="line">   <span class="number">77</span>    <span class="number">7</span>   <span class="number">18</span>   <span class="number">20</span>   <span class="number">31</span>   <span class="number">42</span>   <span class="number">53</span>   <span class="number">55</span>   <span class="number">66</span></span><br><span class="line">    <span class="number">6</span>   <span class="number">17</span>   <span class="number">19</span>   <span class="number">30</span>   <span class="number">41</span>   <span class="number">52</span>   <span class="number">63</span>   <span class="number">65</span>   <span class="number">76</span></span><br><span class="line">   <span class="number">16</span>   <span class="number">27</span>   <span class="number">29</span>   <span class="number">40</span>   <span class="number">51</span>   <span class="number">62</span>   <span class="number">64</span>   <span class="number">75</span>    <span class="number">5</span></span><br><span class="line">   <span class="number">26</span>   <span class="number">28</span>   <span class="number">39</span>   <span class="number">50</span>   <span class="number">61</span>   <span class="number">72</span>   <span class="number">74</span>    <span class="number">4</span>   <span class="number">15</span></span><br><span class="line">   <span class="number">36</span>   <span class="number">38</span>   <span class="number">49</span>   <span class="number">60</span>   <span class="number">71</span>   <span class="number">73</span>    <span class="number">3</span>   <span class="number">14</span>   <span class="number">25</span></span><br><span class="line">   <span class="number">37</span>   <span class="number">48</span>   <span class="number">59</span>   <span class="number">70</span>   <span class="number">81</span>    <span class="number">2</span>   <span class="number">13</span>   <span class="number">24</span>   <span class="number">35</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A = <span class="built_in">magic</span>(<span class="number">3</span>)</span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">8</span>   <span class="number">1</span>   <span class="number">6</span></span><br><span class="line">   <span class="number">3</span>   <span class="number">5</span>   <span class="number">7</span></span><br><span class="line">   <span class="number">4</span>   <span class="number">9</span>   <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; temp = pinv(A)</span><br><span class="line">temp =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.147222</span>  <span class="number">-0.144444</span>   <span class="number">0.063889</span></span><br><span class="line">  <span class="number">-0.061111</span>   <span class="number">0.022222</span>   <span class="number">0.105556</span></span><br><span class="line">  <span class="number">-0.019444</span>   <span class="number">0.188889</span>  <span class="number">-0.102778</span></span><br></pre></td></tr></table></figure>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><blockquote>
<ol>
<li>coursera week 2 learning notes</li>
<li><a href="http://blog.chenming.info/blog/2012/07/15/learn-octave/" target="_blank" rel="external">学习一点</a></li>
</ol>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera Week 2 - Linear Regression with Multiple Variables]]></title>
      <url>http://iequa.com/2016/10/08/ml-coursera-ng-w2-01-Linear-Regression/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<h2 id="1-Multiple-Features"><a href="#1-Multiple-Features" class="headerlink" title="1. Multiple Features"></a>1. Multiple Features</h2><p><img src="/images/ml/ml-ng-w2-01.png" alt="Multiple Features"></p>
<p>$<br>\begin{align}x_j^{(i)} &amp;= \text{value of feature } j \text{ in the }i^{th}\text{ training example} \newline<br>x^{(i)}&amp; = \text{the column vector of all the feature inputs of the }i^{th}\text{ training example} \newline<br>m &amp;= \text{the number of training examples} \newline<br>n &amp;= \left| x^{(i)} \right| ; \text{(the number of features)} \end{align}<br>$</p>
<blockquote>
<p>Macdown Version 0.6.4 (786) MathJax the same this web</p>
</blockquote>
<h3 id="1-1-hypothesis-function"><a href="#1-1-hypothesis-function" class="headerlink" title="1.1 hypothesis function"></a>1.1 hypothesis function</h3><p>Now define the multivariable form of the hypothesis function as follows, accommodating these multiple features:</p>
<p>$<br>h_\theta (x) = \theta_0 + \theta_1 x_1 + \theta_2 x_2 + \theta_3 x_3 + \cdots + \theta_n x_n<br>$</p>
<p><strong>multivariable hypothesis function</strong></p>
<p>Using the definition of matrix multiplication, our multivariable hypothesis function can be concisely represented as:</p>
<blockquote>
<p>$<br>\begin{align}<br>h_\theta(x) =\begin{bmatrix}\theta_0 \hspace{2em}  \theta_1 \hspace{2em}  …  \hspace{2em}  \theta_n\end{bmatrix}\begin{bmatrix}x_0 \newline x_1 \newline \vdots \newline x_n\end{bmatrix}= \theta^T x<br>\end{align}<br>$</p>
</blockquote>
<p>The training examples are stored in X row-wise, like such:</p>
<blockquote>
<p>$<br>\begin{align}<br>X =<br>\begin{bmatrix}x^{(1)}_0 &amp; x^{(1)}_1  \newline x^{(2)}_0 &amp; x^{(2)}_1  \newline<br>x^{(3)}_0 &amp; x^{(3)}_1 \end{bmatrix}&amp;,\theta = \begin{bmatrix}\theta_0 \newline<br>\theta_1 \newline<br>\end{bmatrix}<br>\end{align}<br>$</p>
</blockquote>
<p>You can calculate the hypothesis as a column vector of size (m x 1) with:</p>
<blockquote>
<p>$<br>h_\theta(X) = X \theta<br>$</p>
<p>For the rest of these notes,  X will represent a matrix of training examples $x_{(i)}$ </p>
</blockquote>
<h2 id="2-Cost-function"><a href="#2-Cost-function" class="headerlink" title="2. Cost function"></a>2. Cost function</h2><p>For the parameter vector θ (of type $\mathbb{R}^{n+1}$ or in $\mathbb{R}^{(n+1) \times 1}$, the cost function is:</p>
<p>$<br>J(\theta) = \dfrac {1}{2m} \displaystyle \sum_{i=1}^m \left (h_\theta (x^{(i)}) - y^{(i)} \right)^2<br>$</p>
<p><code>The vectorized version is:</code></p>
<p>$<br>J(\theta) = \dfrac {1}{2m} (X\theta - \vec{y})^{T} (X\theta - \vec{y})<br>$</p>
<blockquote>
<p>vectorized version is very good!</p>
</blockquote>
<h2 id="3-Gradient-Desc-Multivariable"><a href="#3-Gradient-Desc-Multivariable" class="headerlink" title="3. Gradient Desc Multivariable"></a>3. Gradient Desc Multivariable</h2><p><code>Matrix Notation</code></p>
<p>The Gradient Descent rule can be expressed as:</p>
<p>$<br>\theta := \theta - \alpha \nabla J(\theta)<br>$</p>
<p>Where $\nabla J(\theta)$ is a column vector of the form:</p>
<p>$<br>\nabla J(\theta)  = \begin{bmatrix}\frac{\partial J(\theta)}{\partial \theta_0}   \newline \frac{\partial J(\theta)}{\partial \theta_1}   \newline \vdots   \newline \frac{\partial J(\theta)}{\partial \theta_n} \end{bmatrix}<br>$</p>
<p>The j-th component of the gradient is the summation of the product of two terms:</p>
<p>$<br>\begin{align}<br>\; &amp;\frac{\partial J(\theta)}{\partial \theta_j} &amp;=&amp;  \frac{1}{m} \sum\limits_{i=1}^{m}  \left(h_\theta(x^{(i)}) - y^{(i)} \right) \cdot x_j^{(i)} \newline<br>\; &amp; &amp;=&amp; \frac{1}{m} \sum\limits_{i=1}^{m}   x_j^{(i)} \cdot \left(h_\theta(x^{(i)}) - y^{(i)}  \right)<br>\end{align}<br>$</p>
<blockquote>
<p>在数学中，一个多变量的函数的偏导数是它关于其中一个变量的导数，而保持其他变量恒定。</p>
</blockquote>
<p>Sometimes, the summation of the product of two terms can be expressed as the product of two vectors.</p>
<blockquote>
<p>$<br>\begin{align}\; &amp;\frac{\partial J(\theta)}{\partial \theta_j} = \frac1m  \vec{x_j}^{T} (X\theta - \vec{y}) \newline<br>&amp;\nabla J(\theta)  =  \frac 1m X^{T} (X\theta - \vec{y}) \newline<br>\end{align}<br>$</p>
</blockquote>
<p>Finally, the matrix notation (vectorized) of the Gradient Descent rule is:</p>
<p>$<br>\theta := \theta - \frac{\alpha}{m} X^{T} (X\theta - \vec{y})<br>$</p>
<p>The gradient descent equation itself is generally the same form; we just have to repeat it for our ‘n’ features:</p>
<p>$<br>\begin{align}<br>&amp; \text{repeat until convergence:} \; \lbrace \newline<br>\; &amp; \theta_0 := \theta_0 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}  (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_0^{(i)}\newline<br>\; &amp; \theta_1 := \theta_1 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_1^{(i)} \newline<br>\; &amp; \theta_2 := \theta_2 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_2^{(i)} \newline<br>&amp; \cdots<br>\newline \rbrace<br>\end{align}<br>$</p>
<p>In other words:</p>
<p>$<br>\begin{align}<br>&amp; \text{repeat until convergence:} \; \lbrace \newline \;<br>&amp; \theta_j := \theta_j - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_j^{(i)} \;  &amp; \text{for j := 0..n}<br>\newline \rbrace<br>\end{align}<br>$</p>
<h3 id="3-1-Feature-Scaling"><a href="#3-1-Feature-Scaling" class="headerlink" title="3.1 Feature Scaling"></a>3.1 Feature Scaling</h3><p>Idea : Make sure features are on a similar scale 特征缩放</p>
<p><img src="/images/ml/ml-ng-w2-02.png" alt="Multiple Features"></p>
<blockquote>
<p>Get every feature into approximately a $-1 \leq x_i \leq 1$ range.</p>
<p>Replace $x_i$ with $x_i - u_i$ to make features have approximately zero mean (Do not apply to $x_0$ = 1).</p>
<p>如果多个特征值，大多处在一个相近的范围，梯度下降就能更快的收敛。</p>
</blockquote>
<p>因为 2000/5 比较大，所以轮廓图，使得椭圆更加的瘦长，好比 $J(\theta)$ 收敛的更慢。</p>
<h3 id="3-2-learning-rate"><a href="#3-2-learning-rate" class="headerlink" title="3.2 learning rate"></a>3.2 learning rate</h3><p>$<br>\begin{align}<br>\theta_j := \theta_j - \alpha \frac{\partial}{\partial \theta_j} J(\theta)<br>\end{align}<br>$</p>
<ul>
<li>Debugging : How to make sure gradient descent is working correctly</li>
<li>How to choose learning rate $\alpha$</li>
</ul>
<p><img src="/images/ml/ml-ng-w2-03.png" alt="Multiple Features"></p>
<p><strong>Summary</strong></p>
<ul>
<li>if $\alpha$ is too small: slow convergence [kən’vɜːdʒəns] 收敛</li>
<li>if $\alpha$ is too large: $J(\theta)$ may not decrease on every iteration; may not converge.</li>
</ul>
<p>To choose $\alpha$, try</p>
<p>…, 0.001, 0.01, 0.1, 1, …</p>
<h2 id="4-Polynomial-Regression"><a href="#4-Polynomial-Regression" class="headerlink" title="4. Polynomial Regression"></a>4. Polynomial Regression</h2><p><img src="/images/ml/ml-ng-w2-04.png" alt="Polynomial"></p>
<h3 id="4-1-Polynomial-Regression"><a href="#4-1-Polynomial-Regression" class="headerlink" title="4.1 Polynomial Regression"></a>4.1 Polynomial Regression</h3><p><img src="/images/ml/ml-ng-w2-05.png" alt="Polynomial [,pɒlɪ&#39;nəʊmɪəl]"></p>
<blockquote>
<p>Feature normalization is very important</p>
</blockquote>
<h3 id="4-2-Choice-of-features"><a href="#4-2-Choice-of-features" class="headerlink" title="4.2 Choice of features"></a>4.2 Choice of features</h3><p><img src="/images/ml/ml-ng-w2-06.png" alt="Choice of features"></p>
<p>@2017-02-10 review done</p>
<h2 id="5-Normal-Equation"><a href="#5-Normal-Equation" class="headerlink" title="5. Normal Equation"></a>5. Normal Equation</h2><p><img src="/images/ml/ml-ng-w2-07.png" alt="Normal Equation"></p>
<blockquote>
<p>$\theta = (X^T X)^{-1}X^T y$</p>
</blockquote>
<h3 id="5-1-num-and-vector"><a href="#5-1-num-and-vector" class="headerlink" title="5.1 num and vector"></a>5.1 num and vector</h3><p><img src="/images/ml/ml-ng-w2-08.png" alt="Normal Equation"></p>
<blockquote>
<p>$<br>J(\theta) = \dfrac {1}{2m} (X\theta - \vec{y})^{T} (X\theta - \vec{y})<br>$</p>
<p>$<br>\begin{align}\; &amp;\frac{\partial J(\theta)}{\partial \theta_j} = \frac1m  \vec{x_j}^{T} (X\theta - \vec{y}) \newline<br>&amp;\nabla J(\theta)  =  \frac 1m X^{T} (X\theta - \vec{y}) \newline<br>\end{align}<br>$</p>
</blockquote>
<h3 id="5-2-house-price-example"><a href="#5-2-house-price-example" class="headerlink" title="5.2 house price example"></a>5.2 house price example</h3><p><img src="/images/ml/ml-ng-w2-09.png" alt="Normal Equation"></p>
<blockquote>
<p>$<br>\begin{align}<br>\nabla J(\theta)  =  \frac 1m X^{T} (X\theta - \vec{y}) \newline<br>\end{align}<br>$</p>
<p>令 $\nabla J(\theta)  =  0 $</p>
<p>So, $\theta = (X^T X)^{-1}X^T y $</p>
</blockquote>
<h3 id="5-3-m-training-n-features"><a href="#5-3-m-training-n-features" class="headerlink" title="5.3 $m$ training, $n$ features"></a>5.3 $m$ training, $n$ features</h3><table>
<thead>
<tr>
<th>Gradient Descent</th>
<th>Normal Equation</th>
</tr>
</thead>
<tbody>
<tr>
<td>Need to choose $\alpha$</td>
<td>No need to choose $\alpha$ </td>
</tr>
<tr>
<td>Needs many iterations</td>
<td>Don’t need to iterate</td>
</tr>
<tr>
<td>Works well even when $n$ is large</td>
<td>Slow if $n$ is very large</td>
</tr>
</tbody>
</table>
<blockquote>
<p>it is usually around ten thousand that I might start to consider switching over to gradient descents or maybe, some other algorithms that we’ll talk about later in this class</p>
</blockquote>
<h3 id="5-4-X-T-X-is-non-invertible"><a href="#5-4-X-T-X-is-non-invertible" class="headerlink" title="5.4 $X^T X$ is non-invertible"></a>5.4 $X^T X$ is non-invertible</h3><p> $\theta = (X^T X)^{-1}X^T y $</p>
<p>What $X^T X$ is non-invertible? （singular / degenerate）</p>
<blockquote>
<p>When $X^T X$ is non-invertible, this is very few.</p>
</blockquote>
<p><strong>What $X^T X$ is non-invertible?</strong></p>
<p><img src="/images/ml/ml-ng-w2-10.png" alt="non-invertible"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera Week 1 - Linear Algebra Matrices And Vectors]]></title>
      <url>http://iequa.com/2016/09/30/ml-coursera-ng-w1-03-Linear-Algebra/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<h2 id="1-Matrix-Elements"><a href="#1-Matrix-Elements" class="headerlink" title="1. Matrix Elements"></a>1. Matrix Elements</h2><p>$$<br>A =<br>\begin{bmatrix}<br>   1 &amp; 2 \\<br>   4 &amp; 5 \\<br>   7 &amp; 8<br>  \end{bmatrix} \tag{fmt.1  R^{32}}<br>$$</p>
<p>$ A_{ij} = $ “$i, j$ entry”  in the $i^{th}$ row, $j^{th}$ column</p>
<p>$ A_{32} = 8 $</p>
<h2 id="2-Vector-A-n-n-1-matrix"><a href="#2-Vector-A-n-n-1-matrix" class="headerlink" title="2. Vector $A_n$ n*1 matrix"></a>2. Vector $A_n$ n*1 matrix</h2><p>$$<br>y =<br>\begin{bmatrix}<br>   460 \\<br>   232 \\<br>   315 \\<br>   178<br>  \end{bmatrix} \tag{fmt.2}<br>$$</p>
<blockquote>
<p>$R^4$ 4 dimensional vector<br>$y_i = i^{th} element$</p>
</blockquote>
<h3 id="2-1-math-1-indexed"><a href="#2-1-math-1-indexed" class="headerlink" title="2.1 math 1-indexed"></a>2.1 math 1-indexed</h3><p>$$<br>y =<br>\begin{bmatrix}<br>   y1 \\<br>   y2 \\<br>   y3 \\<br>   y4<br>  \end{bmatrix} \tag{fmt.3}<br>$$</p>
<h3 id="2-2-machine-learning-0-indexed"><a href="#2-2-machine-learning-0-indexed" class="headerlink" title="2.2 machine-learning 0-indexed"></a>2.2 machine-learning 0-indexed</h3><p>$$<br>y =<br>\begin{bmatrix}<br>   y0 \\<br>   y1 \\<br>   y2 \\<br>   y3<br>  \end{bmatrix} \tag{fmt.4}<br>$$</p>
<h2 id="3-Matrix-Addition"><a href="#3-Matrix-Addition" class="headerlink" title="3. Matrix Addition"></a>3. Matrix Addition</h2><p>$$ \begin{bmatrix} 1 &amp; 0 \\ 2 &amp; 5 \\ 3 &amp; 1 \end{bmatrix} + \begin{bmatrix} 4 &amp; 0.5 \\ 2 &amp; 5 \\ 0 &amp; 1 \end{bmatrix} =<br>\begin{bmatrix}<br>   5 &amp; 0.5 \\<br>   4 &amp; 10 \\<br>   3 &amp; 2<br> \end{bmatrix} $$</p>
<h2 id="4-Scalar-Multiplication"><a href="#4-Scalar-Multiplication" class="headerlink" title="4. Scalar Multiplication"></a>4. Scalar Multiplication</h2><p>$$ 3 \times \begin{bmatrix} 1 &amp; 0 \\ 2 &amp; 5 \\ 3 &amp; 1 \end{bmatrix}<br>= \begin{bmatrix}<br>   3 &amp; 0 \\<br>   6 &amp; 15 \\<br>   9 &amp; 3<br> \end{bmatrix}<br>$$</p>
<h2 id="5-Combination-of-Operands"><a href="#5-Combination-of-Operands" class="headerlink" title="5. Combination of Operands"></a>5. Combination of Operands</h2><p>$$ 3 \times<br>\begin{bmatrix}<br>1 \\<br>4 \\<br>2<br>\end{bmatrix}<br>+<br>\begin{bmatrix}<br>0 \\<br>0 \\<br>5<br>\end{bmatrix} -<br>\begin{bmatrix}<br>   3 \\<br>   0 \\<br>   2<br> \end{bmatrix} / 3 =<br>\begin{bmatrix}<br>2 \\<br>12 \\<br>31/3<br>\end{bmatrix}<br>$$</p>
<h2 id="6-Matrix-Vector-Multiplication"><a href="#6-Matrix-Vector-Multiplication" class="headerlink" title="6. Matrix Vector Multiplication"></a>6. Matrix Vector Multiplication</h2><p>$$<br>\begin{bmatrix}<br>1 &amp; 3 \\<br>4 &amp; 0 \\<br>2 &amp; 1<br>\end{bmatrix}<br>\times<br>\begin{bmatrix}<br>1 \\<br>5<br>\end{bmatrix} =<br>\begin{bmatrix}<br>16 \\<br>4 \\<br>7<br>\end{bmatrix}<br>$$</p>
<p><strong>Matrix Vector Multiplication Fmt :</strong></p>
<p><img src="/images/ml/ml-ng-w1-03-1.png" alt="Matrix Vector"></p>
<h3 id="6-1-House-sizes-example"><a href="#6-1-House-sizes-example" class="headerlink" title="6.1 House sizes example"></a>6.1 House sizes example</h3><p>$$<br>h_{\theta}  (x) = -40 + 0.25 x<br>$$</p>
<table>
<thead>
<tr>
<th>House sizes</th>
<th>Price</th>
</tr>
</thead>
<tbody>
<tr>
<td>2104</td>
<td>?</td>
</tr>
<tr>
<td>1416</td>
<td>?</td>
</tr>
<tr>
<td>1534</td>
<td>?</td>
</tr>
<tr>
<td>852</td>
<td>?</td>
</tr>
</tbody>
</table>
<p>$$ \begin{bmatrix}<br>1 &amp; 2104 \\<br>1 &amp; 1416 \\<br>1 &amp; 1534 \\<br>1 &amp; 852<br>\end{bmatrix} \times<br>\begin{bmatrix}<br>-40 \\<br>0.25<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>-40 \times 1 + 0.25 \times 2104 \\<br>… \\<br>… \\<br>…<br>\end{bmatrix}<br>$$</p>
<h2 id="7-Practice-Example"><a href="#7-Practice-Example" class="headerlink" title="7. Practice Example"></a>7. Practice Example</h2><p>$$ \begin{bmatrix}<br>1 &amp; 3 &amp; 2 \\<br>4 &amp; 0 &amp; 1<br>\end{bmatrix}<br>\begin{bmatrix}<br>1 &amp; 3 \\<br>0 &amp; 1 \\<br>5 &amp; 2<br>\end{bmatrix} =<br>\begin{bmatrix}<br>   11 &amp; 10 \\<br>   9 &amp; 14<br> \end{bmatrix} $$</p>
<blockquote>
<p>$ A_{2 \times 3} \times A_{3 \times 2} = A_{2 \times 2} $</p>
</blockquote>
<p><img src="/images/ml/ml-ng-w1-03-2.png" alt="Matrix"></p>
<h2 id="8-House-Example"><a href="#8-House-Example" class="headerlink" title="8. House Example"></a>8. House Example</h2><p><img src="/images/ml/ml-ng-w1-03-3.png" alt="Matrix"></p>
<h2 id="9-Matrix-A-times-B-neq-B-times-A"><a href="#9-Matrix-A-times-B-neq-B-times-A" class="headerlink" title="9. Matrix $A \times B \neq B \times A$"></a>9. Matrix $A \times B \neq B \times A$</h2><p>But, 结合律，可以的</p>
<p>$ A \times B \times C = (A \times B) \times C = A \times (B \times C) $</p>
<h2 id="10-Identity-Matrix"><a href="#10-Identity-Matrix" class="headerlink" title="10. Identity Matrix"></a>10. Identity Matrix</h2><p>Denoted I (or I_{n*n}).</p>
<h3 id="10-1-2-times-2"><a href="#10-1-2-times-2" class="headerlink" title="10.1 $2 \times 2$"></a>10.1 $2 \times 2$</h3><p>$$<br>\begin{bmatrix}<br>   1 &amp; 0 \\<br>   0 &amp; 1<br>  \end{bmatrix} \tag{fmt.1  R^{32}}<br>$$</p>
<h3 id="10-2-3-times-3"><a href="#10-2-3-times-3" class="headerlink" title="10.2 $3 \times 3$"></a>10.2 $3 \times 3$</h3><p>$$<br>\begin{bmatrix}<br>   1 &amp; 0 &amp; 0 \\<br>   0 &amp; 1 &amp; 0 \\<br>   0 &amp; 0 &amp; 1<br>  \end{bmatrix} \tag{fmt.1  R^{32}}<br>$$</p>
<blockquote>
<p>$Z \times I = I \times Z = Z$</p>
</blockquote>
<h2 id="11-Matrix-Inverse"><a href="#11-Matrix-Inverse" class="headerlink" title="11. Matrix Inverse"></a>11. Matrix Inverse</h2><p>$3 \times 3^{-1} = 1$</p>
<blockquote>
<p>Not all numbers have an inverse.</p>
</blockquote>
<p>if $A$ is an $m \times m$ matrix, and if it has an inverse</p>
<p>$A \times A^{-1} = A^{-1} \times A = I$</p>
<p>$$<br>A =<br>\begin{bmatrix}<br>   3 &amp; 4 \\<br>   2 &amp; 16 \\<br>  \end{bmatrix}<br>$$</p>
<p>$$<br>A^{-1} =<br>\begin{bmatrix}<br>   0.4 &amp; -0.1 \\<br>   -0.05 &amp; 0.075 \\<br>  \end{bmatrix}<br>$$</p>
<p>$ A \times A^{-1} = I_{2 \times 2} $</p>
<p>$$<br>I_{2 \times 2} =<br>\begin{bmatrix}<br>   1 &amp; 0 \\<br>   0 &amp; 1 \\<br>  \end{bmatrix}<br>$$</p>
<h2 id="12-Matrix-Transpose"><a href="#12-Matrix-Transpose" class="headerlink" title="12. Matrix Transpose"></a>12. Matrix Transpose</h2><p>$$<br>A =<br>\begin{bmatrix}<br>   1 &amp; 2 &amp; 0 \\<br>   3 &amp; 5 &amp; 9 \\<br>  \end{bmatrix}<br>$$</p>
<p>$$<br>A^T =<br>\begin{bmatrix}<br>   1 &amp; 3 \\<br>   2 &amp; 5 \\<br>   0 &amp; 9<br>  \end{bmatrix}<br>$$</p>
<p>Let $A$ be an $m \times n$ matrix, and let $B = A^T$.<br>Then $B$ is an $n \times m$ matrix, and $B_{ij} = A_{ji}$</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera Week 1 - Linear Regression Cost Function & Gradient descent]]></title>
      <url>http://iequa.com/2016/09/28/ml-coursera-ng-w1-02-cost-function-gradient-descent/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<h2 id="1-Linear-Regression"><a href="#1-Linear-Regression" class="headerlink" title="1. Linear Regression"></a>1. Linear Regression</h2><p><img src="/images/ml/ml-ng-w1-02-1.png" alt="How to choose parameters"></p>
<h2 id="2-Cost-Function"><a href="#2-Cost-Function" class="headerlink" title="2. Cost Function"></a>2. Cost Function</h2><blockquote>
<p>Choose $\theta_0，\theta_1$ so that $h_{\theta} (x) $ is close to $y$ for our training examples ${(x, y)}$</p>
</blockquote>
<table>
<thead>
<tr>
<th>ml</th>
<th>fmt</th>
</tr>
</thead>
<tbody>
<tr>
<td>Hypothesis</td>
<td>$h_{\theta}  (x) = \theta_0 + \theta_1 x$</td>
</tr>
<tr>
<td>Parameters</td>
<td>$\theta_0 、\theta_1$</td>
</tr>
<tr>
<td>Cost Function</td>
<td>$J(\theta_0，\theta_1) = {\frac {1} {2m}} \sum_{i=1}^m (h_{\theta} (x^{i}) - (y^{i}))^2$</td>
</tr>
<tr>
<td>Goal</td>
<td>$minimize J(\theta_0，\theta_1)$</td>
</tr>
</tbody>
</table>
<h2 id="3-Simplified-Fmt"><a href="#3-Simplified-Fmt" class="headerlink" title="3. Simplified Fmt"></a>3. Simplified Fmt</h2><blockquote>
<p>$\theta_0$ = 0</p>
</blockquote>
<p><strong>hypothesis function $h_{\theta} (x)$  cost function $J(\theta_1)$</strong></p>
<p><img src="/images/ml/ml-ng-w1-02-3.png" alt="cost"></p>
<h2 id="4-Cost-function-visable"><a href="#4-Cost-function-visable" class="headerlink" title="4. Cost function visable"></a>4. Cost function visable</h2><p><img src="/images/ml/ml-ng-w1-02-4.png" alt="cost"></p>
<blockquote>
<p>把 x, y 想象成向量，确定的向量，向量再想象为一个确定的数，总之它是一个二次函数，抽象的想一下，会不会理解</p>
</blockquote>
<ul>
<li>contour plots</li>
<li>contour figures</li>
</ul>
<p><img src="/images/ml/ml-ng-w1-02-5.png" alt="cost"></p>
<h2 id="5-Gradient-descent-target"><a href="#5-Gradient-descent-target" class="headerlink" title="5. Gradient descent target"></a>5. Gradient descent target</h2><p><img src="/images/ml/ml-ng-w1-02-6.png" alt="Gradient descent"></p>
<h2 id="6-Gradient-descent-visable"><a href="#6-Gradient-descent-visable" class="headerlink" title="6. Gradient descent visable"></a>6. Gradient descent visable</h2><p><img src="/images/ml/ml-ng-w1-02-7.png" alt="Local optimization"></p>
<p><strong>Convex function</strong></p>
<p><img src="/images/ml/ml-ng-w1-02-8.png" alt="Global optimization"></p>
<h2 id="7-Gradient-descent-algorithm"><a href="#7-Gradient-descent-algorithm" class="headerlink" title="7. Gradient descent algorithm"></a>7. Gradient descent algorithm</h2><blockquote>
<p>$ \alpha $ : learning rate</p>
</blockquote>
<p><img src="/images/ml/ml-ng-w1-02-9.png" alt="Gradient descent"></p>
<h2 id="8-Gradient-descent-only-theta-1"><a href="#8-Gradient-descent-only-theta-1" class="headerlink" title="8. Gradient descent only $ \theta_{1} $"></a>8. Gradient descent only $ \theta_{1} $</h2><p><img src="/images/ml/ml-ng-w1-02-10.png" alt="Gradient descent for one param : $ \theta\_{1} $"></p>
<p><img src="/images/ml/ml-ng-w1-02-11.png" alt="Gradient descent"></p>
<p><img src="/images/ml/ml-ng-w1-02-12.png" alt="Gradient descent"></p>
<p><img src="/images/ml/ml-ng-w1-02-13.png" alt="Gradient descent"></p>
<h2 id="9-Linear-Regression-Model"><a href="#9-Linear-Regression-Model" class="headerlink" title="9. Linear Regression Model"></a>9. Linear Regression Model</h2><p><img src="/images/ml/ml-ng-w1-02-14.png" alt="Gradient descent"></p>
<h3 id="9-1-Batch-Gradient-Descent"><a href="#9-1-Batch-Gradient-Descent" class="headerlink" title="9.1 Batch Gradient Descent"></a>9.1 Batch Gradient Descent</h3><blockquote>
<p>Batch : Each step of gradient descent uses all the training examples</p>
</blockquote>
<p><img src="/images/ml/ml-ng-w1-02-15.png" alt="Gradient descent"></p>
<blockquote>
<p>Coursera Learning Notes</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Coursera Week 1 - Machine Learning Introduction]]></title>
      <url>http://iequa.com/2016/09/20/ml-coursera-ng-w1-01-introduce/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<h2 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h2><ul>
<li>Grew out of work in Artificial Intelligence</li>
<li>New capability for computers</li>
</ul>
<blockquote>
<p>search engine, recommendation system, image recognition</p>
<p>web click data, medical records , biology, engineering</p>
<p>Natural Language Processing (NLP), Computer Vision</p>
</blockquote>
<p><strong>Machine Learning definition</strong></p>
<p>Field of study that gives computers the ability to learn without being explicitly programmed. by ArthurSamuel(1959)</p>
<h2 id="1-Supervised-learning"><a href="#1-Supervised-learning" class="headerlink" title="1. Supervised learning"></a>1. Supervised learning</h2><p><img src="/images/ml/ml-ng-w1-01-1.png" alt="Supervised"></p>
<h2 id="2-Regression-amp-Classification"><a href="#2-Regression-amp-Classification" class="headerlink" title="2. Regression &amp; Classification"></a>2. Regression &amp; Classification</h2><p><img src="/images/ml/ml-ng-w1-01-2.png" alt="Classification"></p>
<h2 id="3-Unsupervised-learning"><a href="#3-Unsupervised-learning" class="headerlink" title="3. Unsupervised learning"></a>3. Unsupervised learning</h2><p><img src="/images/ml/ml-ng-w1-01-3.png" alt="Unsupervised"></p>
<p><strong>Unsupervised Examples</strong></p>
<p><img src="/images/ml/ml-ng-w1-01-4.png" alt="news.google"></p>
<blockquote>
<p>What Google News does is everyday it goes and looks at tens of thousands or hundreds of thousands of new stories on the web and it groups them into cohesive news stories. </p>
</blockquote>
<h2 id="4-Experience"><a href="#4-Experience" class="headerlink" title="4. Experience"></a>4. Experience</h2><p><strong>Xiaoyang 语录</strong> :</p>
<p>『解决一个问题的方法和思路不止一种』<br>『没有所谓的机器学习算法优劣，也没有绝对高性能的机器学习算法，只有在特定的场景、数据和特征下更合适的机器学习算法。』</p>
<p><strong>Andrew Ng 语录</strong></p>
<p>应用机器学习，不要一上来就试图做到完美，先lu一个baseline的model出来，再进行后续的分析步骤，一步步提高，所谓后续步骤可能包括『分析model现在的状态(欠/过拟合)，分析我们使用的feature的作用大小，进行feature selection，以及我们模型下的bad case和产生的原因』等等。</p>
<p><strong>Kaggle大神们 experience 总结</strong> ：</p>
<ol>
<li>『对数据的认识太重要了！』</li>
<li>『数据中的特殊点/离群点的分析和处理太重要了！』</li>
<li>『特征工程(feature engineering)太重要了！在很多Kaggle的场景下，甚至比model本身还要重要』</li>
<li>『要做模型融合(model ensemble)啊啊啊！』</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java程序员需要知道的计算机原理 (not finish)]]></title>
      <url>http://iequa.com/2016/09/13/java-special-arms-p2-computer-principle/</url>
      <content type="html"><![CDATA[<h2 id="1-计算机原理"><a href="#1-计算机原理" class="headerlink" title="1. 计算机原理"></a>1. 计算机原理</h2><p>计算机总体体系结构的变化，一直不是特别大，基础原理将引导我们从整体上认识计算机本身。</p>
<h2 id="2-CPU"><a href="#2-CPU" class="headerlink" title="2. CPU"></a>2. CPU</h2><p>每个进程 or 线程 发出请求, 最后会由 CPU 来分配时间片处理，处理时 操作数 传递给 CPU, CPU 计算将其回写到本地变量。这个本地变量通常会存在程序所谓的 栈 中，多次对其操作，它可能会被 Cache 到 CPU 的缓存之中。CPU 有 寄存器，一级缓存，二级缓存 … , 其实设计这些组件就是为了那四个字 <code>就近原则</code>。</p>
<h3 id="2-1-Cpu-联系-Java"><a href="#2-1-Cpu-联系-Java" class="headerlink" title="2.1 Cpu 联系 Java"></a>2.1 Cpu 联系 Java</h3><blockquote>
<p>在 编译阶段，Java 就可以决定方法的 LocalVariable 的个数，在方法调用的时候，就可直接分配一个 LocalVariable 区域，这个空间是基于 slot 来分配的，每个 slot 占用 32 bit，boolean 占用 1 slot，long and double 占 2 个 slot。</p>
</blockquote>
<p>LocalVariableTable :</p>
<table>
<thead>
<tr>
<th>Start</th>
<th>Length</th>
<th>Slot</th>
<th>Name</th>
<th>Signature</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>9</td>
<td>0</td>
<td>args</td>
<td>Ljava/lang/String;</td>
</tr>
<tr>
<td>2</td>
<td>7</td>
<td>1</td>
<td>a</td>
<td>I</td>
</tr>
<tr>
<td>..</td>
<td>..</td>
<td>..</td>
<td>..</td>
<td>..</td>
</tr>
</tbody>
</table>
<ul>
<li>Start :  代表LocalVariable在虚指令作用域的起始位置</li>
<li>Length : 代表LocalVariable在虚指令作用域的长度(如第1个本地变量args是9条指令的作用域)</li>
</ul>
<h3 id="2-2-多核"><a href="#2-2-多核" class="headerlink" title="2.2 多核"></a>2.2 多核</h3><p>为了多个计算中心同时做事情，增加效率。</p>
<p><strong>考虑需要和解决的问题</strong></p>
<p>  一个指令来了，哪个Cpu来处理？ 同一份数据被多个 Cpu 处理，如何协调并让其他Cpu都知道。<br>  当发起一个计算请求，例如一个中断，这么多 Cpu 会干什么？</p>
<blockquote>
<p>中断 : 指当出现需要时，CPU暂时停止当前程序的执行转而执行处理新情况的程序和执行过程。</p>
</blockquote>
<p>Cpu 的计算速度非常快，OS不希望它等待或者停止，所以在出现 I/O 等待 (网络I/O 和 磁盘I/O), 它中途基本不参与，而以事件注册的方式来实现回调，对于某些执行时间长的task，Cpu会分配一些时间片执行其他的task.</p>
<blockquote>
<p>当 Cpu 不断去切换 task 处理时，这就会涉及到 <code>上下文切换</code>.</p>
</blockquote>
<h3 id="2-3-Cache-line"><a href="#2-3-Cache-line" class="headerlink" title="2.3 Cache line"></a>2.3 Cache line</h3><p>办事就近原则，可以一次办多件事情 或 一件事情的多个步骤可以一次办完。</p>
<blockquote>
<p>Cache line 就是 将 连续的一段内存区域 进行 Cache，不是每次就 Cache 一个内存单元，而是一系列内存单元。计算机中，通常以连续 64bit 进行Cache。</p>
</blockquote>
<p>感悟 : Cache Line 就是 一次拿一批信息去处理。 Cache line 的目的是为了 快速访问。</p>
<h3 id="2-4-缓存一致性协议"><a href="#2-4-缓存一致性协议" class="headerlink" title="2.4 缓存一致性协议"></a>2.4 缓存一致性协议</h3><p>当有 来自于 内存 中的同一份数据 Cache 在多个 CPU 中，且要求这些数据的读写一致时，多个 CPU 之间就需要遵循缓存共享的一致性原则。</p>
<blockquote>
<p>相当于大家都来修改一份设计报告，大家都拷贝了一份，回家修改，每个人修改要及时让其他人都知道。有点像版本控制</p>
</blockquote>
<table>
<thead>
<tr>
<th>内存单元的状态</th>
</tr>
</thead>
<tbody>
<tr>
<td>Modified</td>
<td>修改</td>
</tr>
<tr>
<td>Exclusive</td>
<td>独占</td>
</tr>
<tr>
<td>Shared</td>
<td>共享</td>
</tr>
<tr>
<td>Invalid</td>
<td>失效</td>
</tr>
</tbody>
</table>
<p>多个 CPU 通过总线相互连接，每个 CPU 的cache处理器 要响应本身所对应的CPU读写操作外，还需要监听总线上其他CPU操作，通过监听对自己的Cache做处理，形成虚共享，这个协议叫做 MESI 协议。</p>
<blockquote>
<p>一个数据修改了，它需要告诉其他 CPU 这份数据被修改了，现在Intel通过 QPI 来完成。不同CPU之间交互需要时间 20~40 ns 级别。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VolatileInteger</span> </span>&#123;</span><br><span class="line">  <span class="keyword">volatile</span> <span class="keyword">int</span> number;</span><br><span class="line">&#125;</span><br><span class="line">VolatileInteger[] values = <span class="keyword">new</span> VolatileInteger[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  values[i] = <span class="keyword">new</span> VolatileInteger();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码的例子，很可能使的每个CPU可能只修改到某个元素，但会有大量 QPI 存在。</p>
<blockquote>
<p> QPI : Quick Path Interconnect</p>
</blockquote>
<h3 id="2-5-Context-switch"><a href="#2-5-Context-switch" class="headerlink" title="2.5 Context switch"></a>2.5 Context switch</h3><p>线程已经执行了一部分内容，需要记录下它的内容和状态，中途由于调度算法。</p>
<p>CPU 调度 的最基本单位是线程，Java也是基于多线程模式。由于多线程模型中多个线程共享进程的资源，所以Java程序，如某一个线程占用资源过大时，就可能导致整个JVM进程挂掉。(影响都是相对的)</p>
<blockquote>
<p>在实际运行中会有代码段和数据段，内容切换时要保存这些运行中的上下文信息，再使用的时候，再加载回来。</p>
<p>日志写操作 (如 : log4j) 都采用 <code>异步</code> 模式 实现，而程序通常不直接参与这个过程。 实现方式 (日志写操作只是将日志写入一个消息队列中，由单独的线程来完成写操作)</p>
</blockquote>
<h3 id="2-6-并发与争用"><a href="#2-6-并发与争用" class="headerlink" title="2.6 并发与争用"></a>2.6 并发与争用</h3><p>只要是服务器端程序，迟早会遇到并发。当 并发 时，就会存在对各种资源的争用，包括对各个部件(如CPU)的争用。</p>
<blockquote>
<p>Web 程序也会经常遇到并发问题的，编写者，没有遇到是因为 Web 容器帮助处理好了线程的本地变量分配，我们几乎不用关注并发。</p>
</blockquote>
<h4 id="2-6-1-临界区"><a href="#2-6-1-临界区" class="headerlink" title="2.6.1 临界区"></a>2.6.1 临界区</h4><blockquote>
<p>当程序出现 “加锁” 时 (如 Java的 synchronized) 说明这一块是临界区，只允许一个线程访问，其他线程来回进行等待队列。<br>争用带来的是同步的开销，它会发出许多指令要求所有CPU处理中不允许其他线程进入临界区，且需要将等待线程放入队列阻塞。<br>争用 CPU 的访问也不仅仅体现在锁上面，CPU本身数量也有限。 单个CPU会对任务进行 基于 时间片、优先级、任务大小分别调度。</p>
</blockquote>
<h4 id="2-6-2-线程池数"><a href="#2-6-2-线程池数" class="headerlink" title="2.6.2 线程池数"></a>2.6.2 线程池数</h4><p>在理想的 CPU 密集型系统，线程数是 CPU数+1 / CPU-1</p>
<ul>
<li>系统CPU密集度</li>
</ul>
<p>一般系统分为 计算密集型 和 I/O 密集型。</p>
<blockquote>
<p>系统中关键程序访问总共花费 120ms, I/O操作 占用 100ms，100ms时间内 CPU是可以被其他线程访问的。此时，这个程序在单核系统中的线程数理论上可以设置为 6， 在多核系统就是乘以CPU个数 左右这个数字。</p>
</blockquote>
<p>一般这个线程数的决定是通过测试的。</p>
<h4 id="2-6-3-锁"><a href="#2-6-3-锁" class="headerlink" title="2.6.3 锁"></a>2.6.3 锁</h4><p><code>锁</code> 就是临界区的范围，有粒度。如果在 锁  内部发送 I/O, 大循环、递归等，那么就必须等待这些操作处理完成后才能有下一个线程进入处理。如果这段程序是 <code>关键程序</code>, 当系统真正并发的时候，很多线程都会阻塞在这里。这时要计算线程数，要看锁对象 是不是静态对象或Class, (如果是，则是一个JVM全局锁)，无论配置多少线程效果都一样。<code>锁是全局的，无论多少个CPU也是无济于事的。</code></p>
<blockquote>
<p>结论 : 锁尽量不要设置为 全局锁，能用粒度控制，尽量粒度控制</p>
</blockquote>
<h4 id="2-6-4-JVM自身调节"><a href="#2-6-4-JVM自身调节" class="headerlink" title="2.6.4 JVM自身调节"></a>2.6.4 JVM自身调节</h4><p>不论 CPU 跑多快，如 JVM hold不住节奏，不断做GC，那么如何配置线程池，系统性能还是上不来。</p>
<p>可以根据 JVM 运行日志中，平均做 Young GC 的时间间隔 (通过 Young GC 与 运行时长对比)，以及系统的QPS，来估算每个请求大致占用的内存大小，有时不准，但具有参考价值。</p>
<p><strong>如何计算</strong></p>
<blockquote>
<p>Eden 空间的大小我们是知道的。通常一个请求分配空间都在 Eden 区域，Eden区域满发生Young GC。Young GC 时间间隔就是Eden满的时间间隔，例如 3s， 进一步通过 QPS*3 得到多少个请求可以填充满 Eden 区域。这可初步估算每个请求占用的内存空间。</p>
</blockquote>
<h2 id="3-内存"><a href="#3-内存" class="headerlink" title="3. 内存"></a>3. 内存</h2><p>基本所有的程序猿与程序媛都知道，它是跑程序的地方。</p>
<p>磁盘存储 与 CPU 之间的桥梁。拥有比 CPU缓存 大几百倍、上千倍的空间。CPU三级缓存也就 几十M。</p>
<blockquote>
<p>磁盘 到达 CPU需要经过 (主板-南桥、北桥) 才能到达CPU。很慢。</p>
</blockquote>
<p>内存的容量都是 GB 单位，大量程序运行都依赖内存，又 OS 来管理和调度。</p>
<blockquote>
<p>地址位数、逻辑地址、虚拟地址、物理地址、线性地址、内核区域等，很多人看到这，直接疯了，但是你需要淡定。</p>
</blockquote>
<h3 id="3-1-虚拟地址"><a href="#3-1-虚拟地址" class="headerlink" title="3.1 虚拟地址"></a>3.1 虚拟地址</h3><p>所有的程序中使用的地址都是虚拟地址 (在段式管理中也叫逻辑地址)，这些地址在不同的进程之间是可以重复的。</p>
<blockquote>
<p>程序为什么要使用 虚拟地址?</p>
<p>C语言来说，编译后的指令中，许多调用的地址在编译阶段就得确定下来，许多方法入口和变量位置在编译时确定了虚拟地址，真正运行时要由OS来分配实际的地址给程序。<br>使用虚拟地址后，地址是可以被复用的，程序不关心与其他进程是否会使用同一地址，OS会分配确保。</p>
</blockquote>
<h3 id="3-2-分段机制"><a href="#3-2-分段机制" class="headerlink" title="3.2 分段机制"></a>3.2 分段机制</h3><p>也就是为进程分配的一段内存区 (连续的区域)，它的 <code>起始位置</code> + <code>逻辑地址</code> = 线性地址 (就是物理地址)</p>
<blockquote>
<p>本进程访问其他进程内存，内存不能read 错误。</p>
</blockquote>
<h3 id="3-3-分页机制"><a href="#3-3-分页机制" class="headerlink" title="3.3 分页机制"></a>3.3 分页机制</h3><p>分页机制 可支撑较大的内存，物理上大多将其划分为 4KB/页</p>
<h3 id="3-4-Java-Heap"><a href="#3-4-Java-Heap" class="headerlink" title="3.4 Java Heap"></a>3.4 Java Heap</h3><p>Java语言，主要看 Heap 区域，系统参数设置为 -Xms, -Xmx 时，JVM 通常是申请一个连续的虚拟地址。OS预先分配的物理内存空间是  -Xms 的大小， -Xmx 许多空间真正使用的时候才会分配。</p>
<blockquote>
<p>32 bit 系统中，1.5GB 的 Heap 区域是比较合适的。64bit 空间不会受到限制 (JVM也必须换成64bit模式)</p>
</blockquote>
<h2 id="4-Disk"><a href="#4-Disk" class="headerlink" title="4. Disk"></a>4. Disk</h2><p>disk 一直在拖着计算机的后腿, SSD好一些.</p>
<h2 id="5-Cache"><a href="#5-Cache" class="headerlink" title="5. Cache"></a>5. Cache</h2><p>CPU 有 cache，系统架构有 cache，存储上有cache，分布式上有 cache，数据库上有cache，ORM框架上有cache …</p>
<blockquote>
<p>Cache 就是  <code>靠近原则</code></p>
</blockquote>
<h2 id="6-网络与数据库"><a href="#6-网络与数据库" class="headerlink" title="6. 网络与数据库"></a>6. 网络与数据库</h2><h3 id="6-1-Java-基本-IO"><a href="#6-1-Java-基本-IO" class="headerlink" title="6.1 Java 基本 IO"></a>6.1 Java 基本 IO</h3><p>只要是内存程序的通信，都可以理解为 <strong>I</strong>nput / <strong>O</strong>utput</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[数学之美 03 statistical language model]]></title>
      <url>http://iequa.com/2016/09/13/ml-beauty-of-mathematics-03-statistical-language-model/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<h2 id="1-用数学的方法描述语言规律"><a href="#1-用数学的方法描述语言规律" class="headerlink" title="1. 用数学的方法描述语言规律"></a>1. 用数学的方法描述语言规律</h2><blockquote>
<p>数学的美妙在于<code>简单的模型可以干大事</code></p>
</blockquote>
<h3 id="1-1-S-在文本中出现的可能性"><a href="#1-1-S-在文本中出现的可能性" class="headerlink" title="1.1 S 在文本中出现的可能性"></a>1.1 S 在文本中出现的可能性</h3><p>S 这个序列出现的概率等于每个词出现的概率相乘</p>
<p>$$<br>P(w_1, w_2, …, w_n) = P(w_1) \cdot P(w_2|w_1) \cdot P(w_3|w_1, w_2)…P(w_n|w_1, w_2, …, w_{n-1}) \qquad (fml.1.1)<br>$$</p>
<blockquote>
<p>$ P(w_3|w_1, w_2)  $ 的概率已经非常难算，每个变量的可能性都是一种语言字典的大小了。$P(w_n|w_1, w_2, …, w_{n-1})$ 更是可能性太多，无法估算。怎么办 ?</p>
</blockquote>
<h3 id="1-2-马尔科夫假设"><a href="#1-2-马尔科夫假设" class="headerlink" title="1.2 马尔科夫假设"></a>1.2 马尔科夫假设</h3><p>20世纪初，Andrey Markov 提出偷懒但有效的方法,任意一个词 $w_i$ 出现的概率只同它前面的 $w_{i-1}$ 有关 ， 数学上称为 <code>马尔科夫假设</code></p>
<p>$$<br>P(w_1, w_2, …, w_n) = P(w_1) \cdot P(w_2|w_1) \cdot P(w_3|w_2)…P(w_n| w_{n-1}) \qquad (fml.1.2)<br>$$</p>
<p>公式 $ (fml.1.2) $ 对应的  Statistical language model 是 二元模型 Bigram Model</p>
<p>因为</p>
<p>$$<br>p(w_{i-1}, w_i) \approx \frac {\kappa (w_{i-1}, w_i)} {\kappa}<br>$$</p>
<p>$$<br>p(w_{i-1}) \approx \frac {\kappa (w_{i-1})} {\kappa}<br>$$</p>
<p>所以</p>
<p>$$<br>P(w_i|w_{i-1}) = \frac { p(w_{i-1}, w_i)} {p(w_{i-1})}<br>$$</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[深入浅出 Entropy Based]]></title>
      <url>http://iequa.com/2016/09/12/ml-entropy-base/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>


<h2 id="1-Entropy-的含义？"><a href="#1-Entropy-的含义？" class="headerlink" title="1. Entropy 的含义？"></a>1. Entropy 的含义？</h2><blockquote>
<p>自然界的事物，如果任其自身发展，最终都会达到尽可能的平衡或互补状态</p>
<p>一盒火柴，（人为或外力）有序地将其摆放在一个小盒子里，如果不小心火柴盒打翻了，火柴会“散乱”地洒在地板上。此时火柴虽然很乱，但这是它自身发展的结果。</p>
</blockquote>
<p>熵Entropy是描述事物无序性的参数，熵越大则无序性越强。</p>
<blockquote>
<p>在信息论中，我们用熵表示一个随机变量的不确定性，那么如何量化信息的不确定性呢？<br>设一次随机事件（用随机变量$X$表示）它可能会有 $x_1，x_2，⋯，x_m$ 共 m 个不同的结果，每个结果出现的概率分别为 $p_1，p_2，⋯，p_m$，那么 $X$ 的不确定度，即信息Entropy为：</p>
</blockquote>
<p>$$<br>H(X) =\sum_{i=1}^{m} p_i \cdot \log_{2} \frac{1}{p_i} = - \sum_{i=1}^{m} p_i \cdot \log_{2} p_i<br>$$</p>
<h2 id="2-Entropy"><a href="#2-Entropy" class="headerlink" title="2. Entropy"></a>2. Entropy</h2><p>Information Entropy [‘entrəpɪ]</p>
<p>Entropy 表示的是不确定度的度量，如果某个数据集的类别的不确定程度越高，则其 entropy 就越大。</p>
<p><strong><em>example</em></strong> : </p>
<p>将一个立方体A抛向空中，记落地时着地的面为 $c$, $c$ 的取值为{1,2,3,4,5,6} </p>
<blockquote>
<p>$$<br>info(c) = - (1/6 \cdot log_{2}(1/6)+…+1/6 \cdot log_{2}(1/6)) = -1 \cdot log(1/6) = 2.58；<br>$$</p>
</blockquote>
<p>四面体抛入空中 :</p>
<blockquote>
<p>$$<br>info(c) = - (1/4 \cdot log_{2}(1/4)+…+1/4 \cdot log_{2}(1/4)) = -1 \cdot log(1/4) = 2；<br>$$</p>
</blockquote>
<p>球体抛入空中 :</p>
<blockquote>
<p>$$<br>info(c) = -1 \cdot log(1) = 0；<br>$$<br>此时表示不确定程度为0，也就是着地时向下的面是确定的。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[数学之美 19 数学模型的重要性 & 20 最大熵模型]]></title>
      <url>http://iequa.com/2016/09/12/ml-beauty-of-mathematics-19&20-entropy/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p>《数学之美》 19 数学模型的重要性 &amp; 20 最大熵模型 Reading Notes</p>
<h2 id="1-数学模型的重要性"><a href="#1-数学模型的重要性" class="headerlink" title="1. 数学模型的重要性"></a>1. 数学模型的重要性</h2><blockquote>
<p>伟大的天文学家托勒密<br>哥白尼、伽利略、牛顿</p>
</blockquote>
<p>吴军博士的总结</p>
<ol>
<li>一个正确的数学模型应当在形式上是简单的</li>
<li>一个正确的模型一开始可能还不如一个精雕细琢过的错误模型准确，但如认定大方向是对的，就应该坚持下去</li>
<li>大量准确的数据对研发很重要</li>
<li>正确的模型也可能受 噪声 干扰，而显得不准确；这时应该找到噪声的根源，这也许能通往重大的发现。</li>
</ol>
<h2 id="2-不把所有鸡蛋放到一个篮子里"><a href="#2-不把所有鸡蛋放到一个篮子里" class="headerlink" title="2. 不把所有鸡蛋放到一个篮子里"></a>2. 不把所有鸡蛋放到一个篮子里</h2><p>人们常说不要把所有的鸡蛋放在一个篮子里，可以降低风险。在信息处理中，这个原理同样适用。数学上这个原理称为 - The Maximum Entropy Principle.</p>
<p>Wang XiaoBo 是 王小波 or 王晓波， 需要根据 <code>上下文</code></p>
<p>数学上解决该问题最漂亮的方法就是 ： Maximum Entropy，它相当于 行星运动的椭圆模型。</p>
<p>Maximum Entropy 的原理很简单，就是保留 全部的不确定性，将风险降到最小。</p>
<h3 id="2-1-Maximum-Entropy"><a href="#2-1-Maximum-Entropy" class="headerlink" title="2.1 Maximum Entropy"></a>2.1 Maximum Entropy</h3><p> 对一个随机事件的概率分布进行预测时，我们的预测应当满足全部已知的条件，而对未知的情况<code>不要做任何主观假设</code>。</p>
<p>匈牙利数学家，信息论最高奖香农奖得主 希萨 Csiszar 证明 : 对任一组不自相矛盾的信息，这个最大熵模型存在，且唯一。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[秧秧教你发美音 （not finish）]]></title>
      <url>http://iequa.com/2016/09/11/en-yangyangjiaonifameiyin/</url>
      <content type="html"><![CDATA[<p><strong>world</strong></p>
<h2 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h2><p>what would you like ?</p>
<h2 id="6-i-i"><a href="#6-i-i" class="headerlink" title="6. i: / i"></a>6. i: / i</h2><table>
<thead>
<tr>
<th>word i: / i</th>
<th>sentence</th>
</tr>
</thead>
<tbody>
<tr>
<td>beat, bit</td>
<td>The beat is a bit strong.</td>
</tr>
<tr>
<td>keys, kiss</td>
<td>Give me a kiss for the keys.</td>
</tr>
<tr>
<td>cheek, chick</td>
<td>The chick’s cheek is soft.</td>
</tr>
<tr>
<td>deed, did</td>
<td>He did the deed.</td>
</tr>
<tr>
<td>feet, fit</td>
<td>These shoes fit my feet.</td>
</tr>
<tr>
<td>peel, pill</td>
<td>Don’t peel that pill.</td>
</tr>
<tr>
<td>seek, sick</td>
<td>We were seeking that sick person.</td>
</tr>
<tr>
<td>sheep, ship</td>
<td>There are sheep on the ship.</td>
</tr>
<tr>
<td>these, this</td>
<td>These are better than this one.</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark Machine Learning p3 - 数据的获取、处理与准备]]></title>
      <url>http://iequa.com/2016/09/09/spark-machine-learning-p3/</url>
      <content type="html"><![CDATA[<blockquote>
<p>《Spark Machine Learing》 Reading Notes</p>
</blockquote>
<p>MovieStream 包括网站提供的电影数据、用户的服务信息数据以及行为数据。</p>
<p>这些数据涉及电影和相关内容（比如标题、分类、图片、演员和导演）、用户信息（比如用户属性、位置和其他信息）以及用户活动数据（比如浏览数、预览的标题和次数、评级、评论，以及如赞、分享之类的社交数据，还有包括像Facebook和Twitter之类的社交网络属性）。</p>
<p>其外部数据来源则可能包括天气和地理定位信息，以及如IMDB和Rotten Tomators之类的第三方电影评级与评论信息等。</p>
<p>一个预测精准的好模型有着极高的商业价值（Netflix Prize 和 <strong>Kaggle</strong> 上机器学习比赛的成功就是很好的见证）</p>
<p><strong>focus on</strong></p>
<ul>
<li>数据的处理、清理、探索和可视化方法；</li>
<li>原始数据转换为可用于机器学习算法特征的各种技术；</li>
<li>学习如何使用外部库或Spark内置函数来正则化输入特征.</li>
</ul>
<h2 id="1-获取公开数据集"><a href="#1-获取公开数据集" class="headerlink" title="1. 获取公开数据集"></a>1. 获取公开数据集</h2><p><strong>UCL机器学习知识库</strong></p>
<blockquote>
<p>包括近300个不同大小和类型的数据集，可用于分类、回归、聚类和推荐系统任务。数据集列表位于：<a href="http://archive.ics.uci.edu/ml/。" target="_blank" rel="external">http://archive.ics.uci.edu/ml/。</a></p>
</blockquote>
<p><strong>Amazon AWS公开数据集</strong></p>
<blockquote>
<p>包含的通常是大型数据集，可通过Amazon S3访问。这些数据集包括人类基因组项目、Common Crawl网页语料库、维基百科数据和Google Books Ngrams。<br>相关信息可参见：<a href="http://aws.amazon.com/publicdatasets/。" target="_blank" rel="external">http://aws.amazon.com/publicdatasets/。</a></p>
</blockquote>
<p><strong>Kaggle</strong></p>
<blockquote>
<p>这里集合了Kaggle举行的各种机器学习竞赛所用的数据集。<br>它们覆盖分类、回归、排名、推荐系统以及图像分析领域，可从Competitions区域下载：<a href="http://www.kaggle.com/competitions。" target="_blank" rel="external">http://www.kaggle.com/competitions。</a></p>
</blockquote>
<p><strong>KDnuggets</strong></p>
<blockquote>
<p>这里包含一个详细的公开数据集列表，其中一些上面提到过的。<br>该列表位于：<a href="http://www.kdnuggets.com/datasets/index.html。" target="_blank" rel="external">http://www.kdnuggets.com/datasets/index.html。</a></p>
</blockquote>
<p><strong>MovieLens 100k数据集</strong></p>
<p>MovieLens 100k数据集包含表示多个用户对多部电影的10万次评级数据，也包含电影元数据和用户属性信息</p>
<p><a href="http://files.grouplens.org/datasets/movielens/ml-100k.zip" target="_blank" rel="external">http://files.grouplens.org/datasets/movielens/ml-100k.zip</a></p>
<p>ml-100k/  u.user（用户属性文件）、u.item（电影元数据）和u.data（用户对电影的评级）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;unzip ml-100k.zip</span><br><span class="line">  inflating: ml-100k/allbut.pl</span><br><span class="line">  inflating: ml-100k/mku.sh</span><br><span class="line">  inflating: ml-100k/README</span><br><span class="line">  ...</span><br><span class="line">  inflating: ml-100k/ub.base</span><br><span class="line">  inflating: ml-100k/ub.test</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>u.user</strong></p>
<p>user.id、age、gender、occupation、ZIP code</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;head -5 u.user</span><br><span class="line">  1|24|M|technician|85711</span><br><span class="line">  2|53|F|other|94043</span><br><span class="line">  3|23|M|writer|32067</span><br><span class="line">  4|24|M|technician|43537</span><br><span class="line">  5|33|F|other|15213</span><br></pre></td></tr></table></figure>
<p><strong>u.item</strong></p>
<p>movie id、title、release date以及若干与IMDB link和电影分类相关的属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;head -5 u.item</span><br><span class="line">  1|Toy Story (1995)|01-Jan-1995||http://us.imdb.com/M/title-exact?Toy%20 Story%20(1995)|0|0|0|1|1|1|0|0|0|0|0|0|0|0|0|0|0|0|0</span><br><span class="line">  2|GoldenEye (1995)|01-Jan-1995||http://us.imdb.com/M/title- exact?GoldenEye%20(1995)|0|1|1|0|0|0|0|0|0|0|0|0|0|0|0|0|1|0|0</span><br><span class="line">  3|Four Rooms (1995)|01-Jan-1995||http://us.imdb.com/M/title- exact?Four%20Rooms%20(1995)|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|1|0|0</span><br><span class="line">  4|Get Shorty (1995)|01-Jan-1995||http://us.imdb.com/M/title- exact?Get%20Shorty%20(1995)|0|1|0|0|0|1|0|0|1|0|0|0|0|0|0|0|0|0|0</span><br><span class="line">  5|Copycat (1995)|01-Jan-1995||http://us.imdb.com/M/title- exact?Copycat%20(1995)|0|0|0|0|0|0|1|0|1|0|0|0|0|0|0|0|1|0|0</span><br></pre></td></tr></table></figure>
<p><strong>u.data</strong></p>
<p>user id、movie id、rating（从1到5）和timestamp属性，各属性间用制表符（\t）分隔</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;head -5 u.data</span><br><span class="line">196    242    3    881250949</span><br><span class="line">186    302    3    891717742</span><br><span class="line">22     377    1    878887116</span><br><span class="line">244    51     2    880606923</span><br><span class="line">166    346    1    886397596</span><br></pre></td></tr></table></figure>
<h2 id="2-探索与可视化数据"><a href="#2-探索与可视化数据" class="headerlink" title="2. 探索与可视化数据"></a>2. 探索与可视化数据</h2><p>IPython的安装方法可参考如下指引：<a href="http://ipython.org/install.html。" target="_blank" rel="external">http://ipython.org/install.html。</a></p>
<p>如果这是你第一次使用IPython，这里有一个教程：<a href="http://ipython.org/ipython-doc/stable/interactive/tutorial.html。" target="_blank" rel="external">http://ipython.org/ipython-doc/stable/interactive/tutorial.html。</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;IPYTHON=1 IPYTHON_OPTS=&quot;--pylab&quot; ./bin/pyspark</span><br></pre></td></tr></table></figure>
<blockquote>
<p>终端里的IPython 2.3.1 – An enhanced Interactive Python和Using matplotlib backend: MacOSX输出行表示IPython和pylab均已被PySpark启用。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Welcome to</span><br><span class="line">      ____              __</span><br><span class="line">     / __/__  ___ _____/ /__</span><br><span class="line">    _\ \/ _ \/ _ `/ __/  &apos;_/</span><br><span class="line">   /__ / .__/\_,_/_/ /_/\_\   version 1.5.2</span><br><span class="line">      /_/</span><br><span class="line"></span><br><span class="line">Using Python version 2.7.10 (default, Jul 14 2015 19:46:27)</span><br><span class="line">SparkContext available as sc, HiveContext available as sqlContext.</span><br><span class="line"></span><br><span class="line">In [1]:</span><br></pre></td></tr></table></figure>
<blockquote>
<p>可以将样本代码输入到IPython终端，也可通过IPython提供的Notebook 应用来完成。Notebook支持HTML显示，且在IPython终端的基础上提供了一些增强功能，如即时绘图、HTML标记，以及独立运行代码片段的功能。</p>
<p>IPython Notebook 使用指南：<a href="http://ipython.org/ipython-doc/stable/interactive/notebook.html" target="_blank" rel="external">http://ipython.org/ipython-doc/stable/interactive/notebook.html</a></p>
</blockquote>
<h3 id="2-1-探索用户数据"><a href="#2-1-探索用户数据" class="headerlink" title="2.1 探索用户数据"></a>2.1 探索用户数据</h3><figure class="highlight plain"><figcaption><span>python</span></figcaption><table><tr><td class="code"><pre><span class="line">user_data = sc.textFile(&quot;/Users/hp/ghome/ml/ml-100k/u.user&quot;)</span><br><span class="line">user_data.first()</span><br><span class="line">user_data.take(5)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><figcaption><span>python</span></figcaption><table><tr><td class="code"><pre><span class="line">user_fields = user_data.map(lambda line: line.split(&quot;|&quot;))</span><br><span class="line">num_users = user_fields.map(lambda fields: fields[0]).count()</span><br><span class="line">num_genders = user_fields.map(lambda fields: fields[2]).distinct().count()</span><br><span class="line">num_occupations = user_fields.map(lambda fields: fields[3]).distinct().count()</span><br><span class="line">num_zipcodes = user_fields.map(lambda fields: fields[4]).distinct().count()</span><br><span class="line">print &quot;Users: %d, genders: %d, occupations: %d, ZIP codes: %d&quot; % (num_users, num_genders, num_occupations, num_zipcodes)</span><br></pre></td></tr></table></figure>
<p>Output</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Users: 943, genders: 2, occupations: 21, ZIP codes: 795</span><br></pre></td></tr></table></figure>
<p>matplotlib的hist个直方图，以分析用户年龄的分布情况：</p>
<p><strong>age distribution</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ages = user_fields.map(lambda x: int(x[1])).collect()</span><br><span class="line">hist(ages, bins=20, color=&apos;lightblue&apos;, normed=True)</span><br><span class="line">fig = matplotlib.pyplot.gcf()</span><br><span class="line">fig.set_size_inches(16, 10)</span><br></pre></td></tr></table></figure>
<p><img src="/images/spark/spark-ml-3.1.png" alt="screenshow?key=15055650f47cff956148"></p>
<p><strong>occupation distribution</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">count_by_occupation = user_fields.map(lambda fields: (fields[3], 1)).reduceByKey(lambda x, y: x + y).collect()</span><br><span class="line"></span><br><span class="line">x_axis1 = np.array([c[0] for c in count_by_occupation])</span><br><span class="line"></span><br><span class="line">y_axis1 = np.array([c[1] for c in count_by_occupation])</span><br><span class="line"></span><br><span class="line">print x_axis1</span><br><span class="line">[u&apos;administrator&apos; u&apos;retired&apos; u&apos;lawyer&apos; u&apos;none&apos; u&apos;student&apos; u&apos;technician&apos;</span><br><span class="line"> u&apos;programmer&apos; u&apos;salesman&apos; u&apos;homemaker&apos; u&apos;writer&apos; u&apos;doctor&apos;</span><br><span class="line"> u&apos;entertainment&apos; u&apos;marketing&apos; u&apos;executive&apos; u&apos;scientist&apos; u&apos;educator&apos;</span><br><span class="line"> u&apos;healthcare&apos; u&apos;librarian&apos; u&apos;artist&apos; u&apos;other&apos; u&apos;engineer&apos;]</span><br><span class="line"></span><br><span class="line">print y_axis1</span><br><span class="line">[ 79  14  12   9 196  27  66  12   7  45   7  18  26  32  31  95  16  51</span><br><span class="line">  28 105  67]</span><br></pre></td></tr></table></figure>
<p>plt.xticks(rotation=30)之类的代码 是 美化条形图</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pos = np.arange(len(x_axis))</span><br><span class="line">width = 1.0</span><br><span class="line"></span><br><span class="line">ax = plt.axes()</span><br><span class="line">ax.set_xticks(pos + (width / 2))</span><br><span class="line">ax.set_xticklabels(x_axis)</span><br><span class="line"></span><br><span class="line">plt.bar(pos, y_axis, width, color=&apos;lightblue&apos;)</span><br><span class="line">plt.xticks(rotation=30)</span><br><span class="line">fig = matplotlib.pyplot.gcf()</span><br><span class="line">fig.set_size_inches(16, 10)</span><br></pre></td></tr></table></figure>
<p><img src="/images/spark/spark-ml-3.2.png" alt="screenshow?key=15057f015ac5712d9a83"></p>
<p>Spark对RDD提供了一个名为countByValue的便捷函数</p>
<figure class="highlight plain"><figcaption><span>python</span></figcaption><table><tr><td class="code"><pre><span class="line">count_by_occupation2 = user_fields.map(lambda fields: fields[3]).countByValue()</span><br><span class="line">print &quot;Map-reduce approach:&quot;</span><br><span class="line">print dict(count_by_occupation2)</span><br><span class="line">print &quot;&quot;</span><br><span class="line">print &quot;countByValue approach:&quot;</span><br><span class="line">print dict(count_by_occupation)</span><br></pre></td></tr></table></figure>
<h3 id="2-2-探索电影数据"><a href="#2-2-探索电影数据" class="headerlink" title="2.2 探索电影数据"></a>2.2 探索电影数据</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">movie_data = sc.textFile(&quot;/PATH/ml-100k/u.item&quot;)</span><br><span class="line">print movie_data.first()</span><br><span class="line">num_movies = movie_data.count()</span><br><span class="line">print &quot;Movies: %d&quot; % num_movies</span><br></pre></td></tr></table></figure>
<p>1|Toy Story (1995)|01-Jan-1995||<a href="http://us.imdb.com/M/title-exact?Toy%20Story%20(1995)|0|0|0|1|1|1|0|0|0|0|0|0|0|0|0|0|0|0|0" target="_blank" rel="external">http://us.imdb.com/M/title-exact?Toy%20Story%20(1995)|0|0|0|1|1|1|0|0|0|0|0|0|0|0|0|0|0|0|0</a><br>Movies: 1682</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def convert_year(x):</span><br><span class="line">  try:</span><br><span class="line">    return int(x[-4:])</span><br><span class="line">  except:</span><br><span class="line">    return 1900</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">movie_fields = movie_data.map(lambda lines: lines.split(&quot;|&quot;))</span><br><span class="line">years = movie_fields.map(lambda fields: fields[2]).map(lambda x: convert_year(x))</span><br><span class="line"></span><br><span class="line">years_filtered = years.filter(lambda x: x != 1900)</span><br><span class="line"></span><br><span class="line">movie_ages = years_filtered.map(lambda yr: 1998-yr).countByValue()</span><br><span class="line">values = movie_ages.values()</span><br><span class="line">bins = movie_ages.keys()</span><br><span class="line">hist(values, bins=bins, color=&apos;lightblue&apos;, normed=True)</span><br><span class="line">fig = matplotlib.pyplot.gcf()</span><br><span class="line">fig.set_size_inches(16,10)</span><br></pre></td></tr></table></figure>
<p><img src="/images/spark/spark-ml-3.3.png" alt="screenshow?key=150556f33e22a36bb651"></p>
<h3 id="2-3-探索评级数据"><a href="#2-3-探索评级数据" class="headerlink" title="2.3 探索评级数据"></a>2.3 探索评级数据</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rating_data = sc.textFile(&quot;/Users/hp/ghome/ml/ml-100k/u.data&quot;)</span><br><span class="line">print rating_data.first()</span><br><span class="line">num_ratings = rating_data.count()</span><br><span class="line">print &quot;Ratings: %d&quot; % num_ratings</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rating_data = rating_data.map(lambda line: line.split(&quot;\t&quot;))</span><br><span class="line">ratings = rating_data.map(lambda fields: int(fields[2]))</span><br><span class="line">max_rating = ratings.reduce(lambda x, y: max(x, y))</span><br><span class="line">min_rating = ratings.reduce(lambda x, y: min(x, y))</span><br><span class="line">mean_rating = ratings.reduce(lambda x, y: x + y) / num_ratings</span><br><span class="line">median_rating = np.median(ratings.collect())</span><br><span class="line">ratings_per_user = num_ratings / num_users</span><br><span class="line">ratings_per_movie = num_ratings / num_movies</span><br><span class="line">print &quot;Min rating: %d&quot; % min_rating</span><br><span class="line">print &quot;Max rating: %d&quot; % max_rating</span><br><span class="line">print &quot;Average rating: %2.2f&quot; % mean_rating</span><br><span class="line">print &quot;Median rating: %d&quot; % median_rating</span><br><span class="line">print &quot;Average # of ratings per user: %2.2f&quot; % ratings_per_user</span><br><span class="line">print &quot;Average # of ratings per movie: %2.2f&quot; % ratings_per_movie</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Max rating: 5<br>Average rating: 3.00<br>Median rating: 4<br>Average # of ratings per user: 106.00<br>Average # of ratings per movie: 59.00</p>
</blockquote>
<p>Spark对RDD也提供一个名为states的函数。该函数包含一个数值变量用于做类似的统计：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ratings.stats()</span><br><span class="line"></span><br><span class="line">其输出为：</span><br><span class="line">(count: 100000, mean: 3.52986, stdev: 1.12566797076, max: 5.0, min: 1.0)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">count_by_rating = ratings.countByValue()</span><br><span class="line">x_axis = np.array(count_by_rating.keys())</span><br><span class="line">y_axis = np.array([float(c) for c in count_by_rating.values()])</span><br><span class="line"># 这里对y轴正则化，使它表示百分比</span><br><span class="line">y_axis_normed = y_axis / y_axis.sum()</span><br><span class="line">pos = np.arange(len(x_axis))</span><br><span class="line">width = 1.0</span><br><span class="line"></span><br><span class="line">ax = plt.axes()</span><br><span class="line">ax.set_xticks(pos + (width / 2))</span><br><span class="line">ax.set_xticklabels(x_axis)</span><br><span class="line"></span><br><span class="line">plt.bar(pos, y_axis_normed, width, color=&apos;lightblue&apos;)</span><br><span class="line">plt.xticks(rotation=30)</span><br><span class="line">fig = matplotlib.pyplot.gcf()</span><br><span class="line">fig.set_size_inches(16, 10)</span><br></pre></td></tr></table></figure>
<p><img src="/images/spark/spark-ml-3.4.png" alt="screenshow?key=1505422e3494afb95855"></p>
<p><strong>各个用户评级次数的分布情况</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user_ratings_grouped = rating_data.map(lambda fields: (int(fields[0]), int(fields[2]))).groupByKey()</span><br><span class="line"></span><br><span class="line">user_ratings_byuser = user_ratings_grouped.map(lambda (k, v): (k, len(v)))</span><br><span class="line">user_ratings_byuser.take(10)</span><br><span class="line"></span><br><span class="line">Out[91]:</span><br><span class="line">[(2, 62),</span><br><span class="line"> (4, 24),</span><br><span class="line"> (6, 211),</span><br><span class="line"> (8, 59),</span><br><span class="line"> (10, 184),</span><br><span class="line"> (12, 51),</span><br><span class="line"> (14, 98),</span><br><span class="line"> (16, 140),</span><br><span class="line"> (18, 277),</span><br><span class="line"> (20, 48)]</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user_ratings_byuser_local = user_ratings_byuser.map(lambda (k, v): v).collect()</span><br><span class="line">hist(user_ratings_byuser_local, bins=200, color=&apos;lightblue&apos;, normed=True)</span><br><span class="line">fig = matplotlib.pyplot.gcf()</span><br><span class="line">fig.set_size_inches(16,10)</span><br></pre></td></tr></table></figure>
<p><img src="/images/spark/spark-ml-3.5.png" alt="screenshow?key=15056b5ffb7672cee5d1"></p>
<h2 id="3-处理与转换数据"><a href="#3-处理与转换数据" class="headerlink" title="3. 处理与转换数据"></a>3. 处理与转换数据</h2><p><strong>非规整数据和缺失数据的填充</strong></p>
<h2 id="4-从数据中提取有用特征"><a href="#4-从数据中提取有用特征" class="headerlink" title="4. 从数据中提取有用特征"></a>4. 从数据中提取有用特征</h2><p>在完成对数据的初步探索、处理和清理后，便可从中提取可供机器学习模型训练用的特征。</p>
<p>特征（<code>feature</code>）指那些用于<strong><em>模型训练的变量</em></strong>。每一行数据包含可供提取到训练样本中的各种信息。</p>
<p>几乎所有机器学习模型都是与用向量表示的数值特征打交道；需将原始数据转换为数值。</p>
<p>特征可以概括地分为如下几种。</p>
<ul>
<li>数值特征（numerical feature）：这些特征通常为实数或整数，比如之前例子中提到的年龄。</li>
<li>类别特征（categorical feature）：我们数据集中的用户性别、职业或电影类别便是这类。</li>
<li>文本特征（text feature）：它们派生自数据中的文本内容，比如电影名、描述或是评论。</li>
<li>其他特征：… 地理位置则可由经纬度或地理散列（geohash）表示。</li>
</ul>
<h3 id="4-1-数值特征"><a href="#4-1-数值特征" class="headerlink" title="4.1 数值特征"></a>4.1 数值特征</h3><p>原始的数值和一个数值特征之间的区别是什么？</p>
<p>机器学习模型中所学习的是各个特征所对应的向量的权值。这些权值在<code>特征值</code>到输出或是<code>目标变量</code>（指在监督学习模型中）is very important。</p>
<p>当数值特征仍处于原始形式时，其可用性相对较低，但可以转化为更有用的表示形式。</p>
<p>如 (位置信息 : 原始位置信息（比如用经纬度表示的），信息可用性很低。 然若对位置进行聚合（比如聚焦为一个city or country），和特定输出 之间存在某种关联。</p>
<h3 id="4-2-类别特征"><a href="#4-2-类别特征" class="headerlink" title="4.2 类别特征"></a>4.2 类别特征</h3><p>将类别特征表示为数字形式，常可借助 k 之1（1-of-k）方法进行</p>
<p>比如，可取<code>occupation</code> 所有可能取值：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">all_occupations = user_fields.map(lambda fields: fields[3]). distinct().collect()</span><br><span class="line">all_occupations.sort()</span><br></pre></td></tr></table></figure>
<p>然可依次对各可能的职业分配序号（注意 从0开始编号）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">idx = <span class="number">0</span></span><br><span class="line">all_occupations_dict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> o <span class="keyword">in</span> all_occupations:</span><br><span class="line">    all_occupations_dict[o] = idx</span><br><span class="line">    idx +=<span class="number">1</span></span><br><span class="line"><span class="comment"># 看一下“k之1”编码会对新的例子分配什么值</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"Encoding of 'doctor': %d"</span> % all_occupations_dict[<span class="string">'doctor'</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Encoding of 'programmer': %d"</span> % all_occupations_dict[<span class="string">'programmer'</span>]</span><br></pre></td></tr></table></figure>
<p>其输出如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Encoding of &apos;doctor&apos;: 2</span><br><span class="line">Encoding of &apos;programmer&apos;: 14</span><br></pre></td></tr></table></figure>
<h3 id="4-3-派生特征"><a href="#4-3-派生特征" class="headerlink" title="4.3 派生特征"></a>4.3 派生特征</h3><p>从原始数据派生特征的例子包括计算平均值、中位值、方差、和、差、最大值或最小值以及计数。从电影的发行年份和当前年份派生了新的movie age特征的。这类转换背后的想法常常是对数值数据进行某种概括，并期望它能让模型学习更容易。</p>
<p>数值特征到类别特征的转换也很常见，比如划分为区间特征。进行这类转换的变量常见的有年龄、地理位置和时间。</p>
<p><strong>如 ： 将时间戳转为类别特</strong></p>
<p>电影评级发生的时间</p>
<p>[‘afternoon’, ‘evening’, ‘morning’, ‘morning’, ‘morning’]</p>
<h3 id="4-4-文本特征"><a href="#4-4-文本特征" class="headerlink" title="4.4 文本特征"></a>4.4 文本特征</h3><p>文本特征也是一种类别特征或派生特征</p>
<p>NLP 便是专注于文本内容的处理、表示和建模的一个领域。</p>
<p>介绍一种简单且标准化的文本特征提取方法。该方法被称为词袋（bag-of-word）表示法。</p>
<p>词袋法将一段文本视为由其中的文本或数字组成的集合，其处理过程如下。</p>
<p><strong>bag-of-word</strong></p>
<p><strong>(1) 分词（tokenization）</strong></p>
<p>首先会应用某些分词方法来将文本分隔为一个由词（一般如单词、数字等）组成的集合。</p>
<p><strong>(2) 删除停用词（stop words removal)</strong></p>
<p>删除常见的单词，比如the、and和but（这些词被称作停用词）。</p>
<p><strong>(3) 提取词干（stemming）</strong>：</p>
<p>是指将各个词简化为其基本的形式或者干词。常见的例子如复数变为单数（比如dogs变为dog等）。提取的方法有很多种，文本处理算法库中常常会包括多种词干提取方法。</p>
<p><strong>(4) 向量化（vectorization）</strong> ：</p>
<p>向量来表示处理好的词。二元向量可能是最为简单的表示方式。它用1和0来分别表示是否存在某个词。从根本上说，这与之前提到的 k 之1编码相同。与 k 之1相同，它需要一个词的字典来实现词到索引序号的映射。随着遇到的词增多，各种词可能达数百万。由此，使用稀疏矩阵来表示就很关键。这种表示只记录某个词是否出现过，从而节省内存和磁盘空间，以及计算时间。</p>
<p><strong>提取简单的文本特征</strong></p>
<p>参见 : <a href="http://www.ituring.com.cn/tupubarticle/5567" target="_blank" rel="external">http://www.ituring.com.cn/tupubarticle/5567</a></p>
<p>现在每一个电影标题都被转换为一个稀疏向量。</p>
<h3 id="4-5-正则化特征"><a href="#4-5-正则化特征" class="headerlink" title="4.5 正则化特征"></a>4.5 正则化特征</h3><p>在将特征提取为向量形式后，一种常见的预处理方式是将数值数据正则化（normalization）。其背后的思想是将各个数值特征进行转换，以将它们的值域规范到一个标准区间内。正则化的方法有如下几种。</p>
<ul>
<li>正则化特征：这实际上是对数据集中的单个特征进行转换。比如减去平均值（特征对齐）或是进行标准的正则转换（以使得该特征的平均值和标准差分别为0和1）。</li>
<li>正则化特征向量：这通常是对数据中的某一行的所有特征进行转换，以让转换后的特征向量的长度标准化。也就是缩放向量中的各个特征以使得向量的范数为1（常指一阶或二阶范数）。</li>
</ul>
<p>向量正则化可通过numpy的norm函数来实现。具体来说，先计算一个随机向量的二阶范数，然后让向量中的每一个元素都除该范数，从而得到正则化后的向量：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">np.random.seed(42)</span><br><span class="line">x = np.random.randn(10)</span><br><span class="line">norm_x_2 = np.linalg.norm(x)</span><br><span class="line">normalized_x = x / norm_x_2</span><br><span class="line">print &quot;x:\n%s&quot; % x</span><br><span class="line">print &quot;2-Norm of x: %2.4f&quot; % norm_x_2</span><br><span class="line">print &quot;Normalized x:\n%s&quot; % normalized_x</span><br><span class="line">print &quot;2-Norm of normalized_x: %2.4f&quot; % np.linalg.norm(normalized_x)</span><br></pre></td></tr></table></figure>
<p>其输出应该如下（上面将随机种子的值设为42，保证每次运行的结果相同）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x: [ 0.49671415 -0.1382643  0.64768854  1.52302986 -0.23415337 -0.23413696</span><br><span class="line">1.57921282  0.76743473 -0.46947439  0.54256004]</span><br><span class="line">2-Norm of x: 2.5908</span><br><span class="line">Normalized x: [ 0.19172213 -0.05336737  0.24999534  0.58786029 -0.09037871 -0.09037237  0.60954584  0.29621508 -0.1812081  0.20941776]</span><br><span class="line">2-Norm of normalized_x: 1.0000</span><br></pre></td></tr></table></figure>
<p><strong>用 MLlib 正则化特征</strong></p>
<p>Spark在其MLlib机器学习库中内置了一些函数用于特征的缩放和标准化。它们包括供标准正态变换的<code>StandardScaler</code>，以及提供与上述相同的特征向量正则化的 <code>Normalizer</code>。</p>
<p>比较一下MLlib的Normalizer与我们自己函数的结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from pyspark.mllib.feature import Normalizer</span><br><span class="line">normalizer = Normalizer()</span><br><span class="line">vector =sc.parallelize([x])</span><br></pre></td></tr></table></figure>
<p>在导入所需的类后，会要初始化Normalizer（其默认使用与之前相同的二阶范数）。注意用Spark时，大部分情况下Normalizer所需的输入为一个RDD（它包含numpy数值或MLlib向量）。作为举例，我们会从x向量创建一个单元素的RDD。</p>
<p>之后将会对我们的RDD调用Normalizer的transform函数。由于该RDD只含有一个向量，可通过first函数来返回向量到驱动程序。接着调用toArray函数来将该向量转换为numpy数组：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">normalized_x_mllib = normalizer.transform(vector).first().toArray()</span><br><span class="line">#最后来看一下之前打印过的那些值，并做个比较：</span><br><span class="line"></span><br><span class="line">print &quot;x:\n%s&quot; % x</span><br><span class="line">print &quot;2-Norm of x: %2.4f&quot; % norm_x_2</span><br><span class="line">print &quot;Normalized x MLlib:\n%s&quot; % normalized_x_mllib</span><br><span class="line">print &quot;2-Norm of normalized_x_mllib: %2.4f&quot; % np.linalg.norm(normalized_x_mllib)</span><br></pre></td></tr></table></figure>
<p>相比自己编写的函数，使用 MLlib内置的函数 更方便</p>
<h3 id="4-6-用软件包提取特征"><a href="#4-6-用软件包提取特征" class="headerlink" title="4.6 用软件包提取特征"></a>4.6 用软件包提取特征</h3><p>特征提取可借助的软件包有scikit-learn、gensim、scikit-image、matplotlib、Python的NLTK、Java编写的OpenNLP以及用Scala编写的Breeze和Chalk。Breeze自Spark 1.0开始就成为Spark的一部分了。Breeze有线性代数功能。</p>
<h2 id="5-小结"><a href="#5-小结" class="headerlink" title="5. 小结"></a>5. 小结</h2><p>了解 如何导入、处理和清理数据，如何将原始数据转为<strong>特征向量</strong>以供模型训练的常见方法</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark Machine Learning p2 - 设计机器学习系统]]></title>
      <url>http://iequa.com/2016/09/08/spark-machine-learning-p2-design-ml-sys/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Spark Machine Learing Reading Notes</p>
</blockquote>
<style>
img {
        display: block !important;
        height: 400px;
        width: 500px;
        margin-left: 180px !important;
}
</style>

<h2 id="1-原始-MovieStream-介绍"><a href="#1-原始-MovieStream-介绍" class="headerlink" title="1. 原始 MovieStream 介绍"></a>1. 原始 MovieStream 介绍</h2><p><img src="/images/spark/spark-ml-2.1.jpg" alt="MovieStream"></p>
<h3 id="1-1-个性化"><a href="#1-1-个性化" class="headerlink" title="1.1 个性化"></a>1.1 个性化</h3><p><code>个性化</code> 是根据各因素来改变用户体验和<code>呈现给用户内容</code>。这些因素可能包括用户的行为数据和外部因素。</p>
<p><code>推荐</code>（recommendation）, 常指向用户呈现一个他们可能感兴趣的物品列表。</p>
<p>个性化和推荐十分相似, 根据因素改变搜索的呈现不同用户不同内容，这是隐式个性化</p>
<h3 id="1-2-客户细分"><a href="#1-2-客户细分" class="headerlink" title="1.2 客户细分"></a>1.2 客户细分</h3><p>目标营销用与推荐类似的方法从用户群中找出要营销的对象。一般来说，推荐和个性化的应用场景都是一对一，根据用户的特征进行分组，并可能参考行为数据。也可能使用了某种机器学习模型，比如 <code>聚类</code>。</p>
<h3 id="1-3-预测建模"><a href="#1-3-预测建模" class="headerlink" title="1.3 预测建模"></a>1.3 预测建模</h3><p><code>预测性分析</code> 从某种意义上说还覆盖推荐、个性化和目标营销。用预测建模（predictive modeling）来表示其他做预测的模型。借助活动记录、收入数据以及内容属性，MovieStream 可以创建一个回归模型（regression model）来预测新电影的市场表现。</p>
<p>另外，我们也可使用分类模型（classificaiton model）来对只有部分数据的新电影自动分配标签、关键字或分类。</p>
<h2 id="2-机器学习模型的种类"><a href="#2-机器学习模型的种类" class="headerlink" title="2. 机器学习模型的种类"></a>2. 机器学习模型的种类</h2><p><code>supervised learning</code>：这种方法使用已标记数据来学习。<code>推荐引擎</code>、<code>回归</code>和<code>分类</code>便是例子。它们所使用的标记数据可以是用户对电影的评级（对推荐来说）、电影标签（对上述分类例子来说）或是收入数字（对回归预测来说）.</p>
<p><code>unsupervised learning</code>：一些模型的学习过程不需要标记数据，我们称其为无监督学习。这类模型试图学习或是提取数据背后的结构或从中抽取最为重要的特征。<code>聚类</code>、<code>降维</code>和<code>文本处理</code>的某些特征提取都是无监督学习.</p>
<h2 id="3-数据驱动ML系统的组成"><a href="#3-数据驱动ML系统的组成" class="headerlink" title="3. 数据驱动ML系统的组成"></a>3. 数据驱动ML系统的组成</h2><p><img src="/images/spark/spark-ml-2.2.jpg" alt="机器学习流程"></p>
<h3 id="3-1-数据获取与存储"><a href="#3-1-数据获取与存储" class="headerlink" title="3.1 数据获取与存储"></a>3.1 数据获取与存储</h3><p>MovieStream 的数据通常来自用户活动.</p>
<p>要存储的数据包括：原始数据、即时处理后的数据，以及可用于生产系统的最终建模结果。</p>
<p><strong>数据存储</strong></p>
<ol>
<li><strong>文件系统</strong> : 如 HDFS、Amazon S3 等；</li>
<li><strong>SQL数据库</strong> : 如 MySQL、PostgreSQL；</li>
<li><strong>NoSQL</strong> : -如 HBase、Cassandra、Mongodb；</li>
<li><strong>搜索引擎</strong> : 如 Solr 、Elasticsearch；</li>
<li><strong>流数据</strong> : – 如 Kafka、Flume、Amazon Kinesis</li>
</ol>
<h3 id="3-2-数据清理与转换"><a href="#3-2-数据清理与转换" class="headerlink" title="3.2 数据清理与转换"></a>3.2 数据清理与转换</h3><p>大部分机器学习模型所处理的都是 <code>feature</code>。特征 通常是输入变量所对应的可用于模型的数值表示。</p>
<p>原始数据 预处理 几种 情况</p>
<ol>
<li>数据过滤</li>
<li>合并多个数据源</li>
<li>数据汇总</li>
</ol>
<p>对许多模型类型来说，这种表示就是包含 <strong>数值数据的</strong> <code>向量</code> or <code>矩阵</code>。</p>
<p>将类别数据（比如地理位置所在的国家或是电影的类别）编码为对应的数值表示。</p>
<ol>
<li>文本数据提取有用信息。</li>
<li>处理图像或是音频数据。</li>
<li>数值数据常被转换为类别数据以减少某个变量的可能值的数目。例如将年龄分为 601, 602…</li>
<li>对特征进行正则化、标准化，以保证同一模型的不同输入变量的值域相同。</li>
</ol>
<p>这些数据清理、探索、聚合和转换步骤，都能通过Spark核心API、SparkSQL引擎和其他外部Scala、Java或Python包做到。借助 Spark 的 Hadoop功能 还能实现上述多种存储系统上的读写。</p>
<h3 id="3-3-模型训练与测试回路"><a href="#3-3-模型训练与测试回路" class="headerlink" title="3.3 模型训练与测试回路"></a>3.3 模型训练与测试回路</h3><p>当数据已转换为可用于模型的形式，便可开始模型的训练和测试。</p>
<p>在训练数据集上运行模型并在测试数据集（即为评估模型而预留的数据，在训练阶段模型没接触过该数据）上测试其效果，这个过程一般相对直接，被称作交叉验证（cross-validation）。</p>
<p>Spark MLlib 来实现对各种机器学习方法的模型训练、评估以及交叉验证。</p>
<h3 id="3-4-模型部署与整合"><a href="#3-4-模型部署与整合" class="headerlink" title="3.4 模型部署与整合"></a>3.4 模型部署与整合</h3><p>通过训练测试循环找出最佳模型后，要让它能得出可付诸实践的预测，还需将其部署到生产系统中。</p>
<p>这个过程一般要将已训练的模型导入特定的数据存储中。</p>
<h3 id="3-5-模型监控与反馈"><a href="#3-5-模型监控与反馈" class="headerlink" title="3.5 模型监控与反馈"></a>3.5 模型监控与反馈</h3><p>监控机器学习系统在生产环境下的表现十分重要。</p>
<p>同样值得注意的是，模型准确度和预测效果只是现实中系统表现的一部分。</p>
<p>我们可以尽可能在生产系统中部署不同的模型，通过调整它们而优化业务指标。实践中，这通常通过在线分割测试（<code>live split test</code>）进行。</p>
<p>模型反馈（<code>model feedback</code>），指通过用户的行为来对模型的预测进行反馈的过程。在现实系统中，模型的应用将影响用户的决策和潜在行为，从而反过来将从根本上改变模型自己将来的训练数据。</p>
<h3 id="3-6-批处理-实时方案选择"><a href="#3-6-批处理-实时方案选择" class="headerlink" title="3.6 批处理/实时方案选择"></a>3.6 批处理/实时方案选择</h3><p>常见的批处理方法。模型用所有数据或一部分数据进行周期性的重新训练。由于上述流程会花费一定的时间，这就使得批处理方法难以在新数据到达时立即完成模型的更新。</p>
<p>存在一类名为在线学习（online learning）的机器学习方法。它们在新数据到达时便能立即更新模型，从而使实时系统成为可能。常见的例子有对线性模型的在线优化算法，如<code>随机梯度下降法</code>。</p>
<h2 id="4-机器学习系统架构"><a href="#4-机器学习系统架构" class="headerlink" title="4. 机器学习系统架构"></a>4. 机器学习系统架构</h2><p><img src="/images/spark/spark-ml-2.3.jpg" alt="机器学习系统架构"></p>
<p>机器学习流程示意图的内容：</p>
<ul>
<li>收集与用户、用户行为和电影标题有关的数据；</li>
<li>将这些数据转为特征；</li>
<li>模型训练，包括训练-测试和模型选择环节；</li>
<li>将已训练模型部署到在线服务系统，并用于离线处理；</li>
<li>通过推荐和目标页面将模型结果反馈到MovieStream站点；</li>
<li>将模型结果返回到MovieStream的个性化营销渠道；</li>
<li>使用离线模型来为MovieSteam的各个团队提供工具，以帮助其理解用户的行为、内容目录的特点和业务收入的驱动因素。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Thailand 我见 (not finish)]]></title>
      <url>http://iequa.com/2016/08/27/life-health-life-thai/</url>
      <content type="html"><![CDATA[<p>Some feeling of trips for Thailand </p>
<a id="more"></a>
<p>提起泰王国，给我最深的印象就是可以让我感受到，到底什么是 <a href="https://zh.wikipedia.org/wiki/三字经" target="_blank" rel="external">人之初、性本善</a>。我想这难以用文字和语言来表达，真是的 幸福国度、微笑国度，名不虚传。在我看来，那里的百姓是安居乐业，非常幸福。贫富差距不大，资源分配相对合理，小城市和<a href="https://zh.wikipedia.org/wiki/人再囧途之泰囧" target="_blank" rel="external">徐峥《泰囧》</a>清迈的大城市基础设施相差不大，去过一次真的很想在以后晚年的时候，来这里养老，感觉真的非常不错。我觉得去任何一个地方 人文环境，才是最重要的，其他的景色，景点是次要的，因为普通人都需要入世，需要沟通与交流。人最怕的不是贫穷，而是孤独。</p>
<p>15年10月末我曾去过泰国，到过曼谷、巴蜀府、华欣等地。非常感谢在那段异国他乡的时光里曾给予我帮助的朋友。</p>
<p><img src="/images/thai01.jpg" width="800" height="550" img=""></p>
<h2 id="曼谷"><a href="#曼谷" class="headerlink" title="曼谷"></a>曼谷</h2><p>曼谷（泰文：กรุงเทพมหานคร；英文：Bangkok），是泰国首都和最大城市，东南亚第二大城市，为泰国政治、经济、贸易、交通、文化、科技、教育、宗教与各方面中心。</p>
<h2 id="芭堤雅"><a href="#芭堤雅" class="headerlink" title="芭堤雅"></a>芭堤雅</h2><p>芭提雅(Pattaya,又常被译为“芭堤雅”)，是中南半岛南端的泰国一处著名海景度假胜地。距离曼谷东南方154公里。</p>
<p>芭提雅近年来热度极高的海滩度假、旅游、养老圣地，享有“东方夏威夷”之誉，芭提雅具有最负盛名的人妖表演，缤纷无休的夜文化，吸引着全世界的游客。</p>
<blockquote>
<p>据说 18年轻轨修建完成，从曼谷到芭堤雅只需要20多分钟。</p>
</blockquote>
<h2 id="华欣"><a href="#华欣" class="headerlink" title="华欣"></a>华欣</h2><p>华欣（英语：Hua Hin，泰语：หัวหิน），泰国中部海滨小镇。距离泰国首都曼谷200多公里（北纬12°34′，东经99°57′），隶属于泰国巴蜀府。与芭堤雅隔岸相望，距离曼谷西南281公里，约3小时行程。它被称作是泰国最传统的海滨胜地，皇室贵族们每年都会到华欣住一段时间，当今泰皇就长期居住于此地的行宫。</p>
<h2 id="普吉岛"><a href="#普吉岛" class="headerlink" title="普吉岛"></a>普吉岛</h2><p>海滩日光浴 享慵懒慢时光</p>
<p>游海岛 潜入大海的心里去</p>
<p>泛舟泰国“小桂林”攀牙湾 </p>
<p>浮潜设备</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CART (not finish)]]></title>
      <url>http://iequa.com/2016/08/24/ml-CART/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p>Classification and Regression Tree</p>
<a id="more"></a>
<h2 id="1-CART-Introduce"><a href="#1-CART-Introduce" class="headerlink" title="1. CART Introduce"></a>1. CART Introduce</h2><p>在数据挖掘中，决策树主要有两种类型:</p>
<ul>
<li>分类树 的输出是样本的类标。</li>
<li>回归树 的输出是一个实数 (例如房子的价格，病人呆在医院的时间等)。</li>
</ul>
<blockquote>
<p>术语 分类回归树(CART,Classification And Regression Tree) <strong>CART</strong> 包含了上述两种决策树, 最先由 Breiman 等提出.分类树和回归树有些共同点和不同点 — 例如处理在何处分裂的问题。</p>
</blockquote>
<p>分类 — 划分离散变量<br>回归 — 划分连续变量</p>
<h3 id="1-1-CART-What"><a href="#1-1-CART-What" class="headerlink" title="1.1 CART What?"></a>1.1 CART What?</h3><p><strong><em>CART</em></strong> 一种二分递归分割的技术，将当前的样本集分为两个子样本集，使得生成的决策树的每个非叶子节点都有两个分支，左分支对应取值为 <code>是</code> 的分支，右分支对应为 <code>否</code> 的分支.</p>
<p><strong><em>CART</em></strong> 学习过程等价于递归地二分每个特征，将输入空间（在这里等价特征空间）划分为有限个子空间（单元），并在这些子空间上确定预测的概率分布，也就是在输入给定的条件下输出对应的条件概率分布。</p>
<h3 id="1-2-CART-纯度度量"><a href="#1-2-CART-纯度度量" class="headerlink" title="1.2 CART 纯度度量"></a>1.2 CART 纯度度量</h3><p>CART中用于选择变量的不纯性度量是 <strong>Gini index</strong>；如果目标变量是标称的，并且是具有两个以上的类别，则CART可能考虑将目标类别合并成两个超类别（双化）；如果目标变量是连续的，则 CART 算法 找出一组基于树的回归方程来预测目标变量。</p>
<table>
<thead>
<tr>
<th>Algorithm</th>
<th>Feature Selection</th>
<th>Author</th>
</tr>
</thead>
<tbody>
<tr>
<td>CART</td>
<td>回归树： 最小二乘<br>分类树： 基尼指数 Gini index</td>
<td>Breiman. 1984<br>(Classification and Regression Tree 分类与回归树)</td>
</tr>
</tbody>
</table>
<p>由于<code>分类树</code>与<code>回归树</code>在递归地构建二叉决策树的过程中，选择特征划分的准则不同。二叉分类树构建过程中采用 <strong>Gini Index</strong> 为特征选择标准；二叉回归树采用<strong>平方误差最小化</strong> 作为特征选择标准。</p>
<h3 id="1-3-CART-步骤"><a href="#1-3-CART-步骤" class="headerlink" title="1.3 CART 步骤"></a>1.3 CART 步骤</h3><p><code>build decision tree</code>时通常采用自上而下的方法，在每一步选择一个最好的属性来分裂。 “最好” 的定义是使得子节点中的训练集尽量的纯。不同的算法使用不同的指标来定义”最好”。</p>
<p><strong><em>CART</em></strong> 是在给定输入随机变量 $X$ 条件下求得输出随机变量 $Y$ 的条件概率分布的学习方法。</p>
<blockquote>
<p>可以看出CART算法在叶节点表示上不同于ID3、C4.5方法，后二者叶节点对应数据子集通过“多数表决”的方式来确定一个类别（固定一个值）；而CART算法的叶节点对应类别的概率分布。</p>
</blockquote>
<p>CART算法也主要由两步组成：</p>
<ul>
<li>决策树的生成：基于训练数据集生成一棵二分决策树；</li>
<li>决策树的剪枝：用验证集对已生成的二叉决策树进行剪枝，剪枝的标准为损失函数最小化。</li>
</ul>
<h2 id="2-二叉分类树"><a href="#2-二叉分类树" class="headerlink" title="2. 二叉分类树"></a>2. 二叉分类树</h2><p>二叉分类树中用基尼指数（Gini Index）作为最优特征选择的度量标准。</p>
<p><strong>GINI Index :</strong></p>
<ol>
<li>是一种不等性度量；</li>
<li>通常用来度量收入不平衡，可以用来度量任何不均匀分布；</li>
<li>是介于0~1之间的数，0-完全相等，1-完全不相等；</li>
<li>总体内包含的类别越杂乱，GINI指数就越大（跟熵的概念很相似）</li>
</ol>
<h3 id="2-1-Gini-Index"><a href="#2-1-Gini-Index" class="headerlink" title="2.1 Gini Index"></a>2.1 Gini Index</h3><p>同样以分类系统为例，数据集 $D$ 中类别 $C$ 可能的取值为$c_1, c_2, \cdots, c_k$ （$k$是类别数），一个样本属于类别 $c_i$ 的概率为$p(i)$。那么概率分布的 Gini index 公式表示为：</p>
<p>$$<br>Gini(D) = 1 - \sum_{i=1}^{k} {p_i}^2    \qquad(fmt.2.1.1)<br>$$</p>
<blockquote>
<p>其中$p_i = \frac{类别属于c_i的样本数}{总样本数}$。如果所有的样本 Category 相同，则 $p_1 = 1, p_2 = p_3 = \cdots = p_k = 0$，则有$p_1 = 1, p_2 = p_3 = \cdots = p_k = 0$，此时数据不纯度最低。$Gini(D)$ 的物理含义是表示数据集 $D$ 的不确定性。数值越大，表明其不确定性越大（这一点与 <a href="/2016/08/18/ml-entropy-base/">Info Entropy</a> 相似）。<br>如果 $k=2$（二分类问题，类别命名为正类和负类），若样本属于正类的概率是 $p$，那么对应基尼指数为：</p>
<p>$$<br>\begin{align} Gini(D) &amp; = 1 - [p^2 + {(1-p)}^2] \\ &amp; = \underline {2p (1-p)} \qquad\qquad (fmt.2.1.2)<br>\end{align}<br>$$</p>
</blockquote>
<p>如果数据集 $D$ 根据特征 $f$ 是否取某一可能值 $f_∗$，将 $D$ 划分为 $D_1={(x, y) \in D | f(x) = f_{\ast}}, D_2=D-D_1$。那么特征 $f$ 在数据集 $D$ 上的 Gini index 定义为：</p>
<p>$$<br>Gini(D, f=f_{\ast}) = \frac{\vert D_1 \vert}{\vert D \vert} Gini(D_1) + \frac{\vert D_2 \vert}{\vert D \vert} Gini(D_2) \qquad\qquad (fmt.2.1.3)<br>$$</p>
<h3 id="2-2-Gini-Example"><a href="#2-2-Gini-Example" class="headerlink" title="2.2 Gini Example"></a>2.2 Gini Example</h3><p>代表性的例子说明 :</p>
<table>
<thead>
<tr>
<th>ID</th>
<th>阴晴(F)</th>
<th>温度(F)</th>
<th>湿度(F)</th>
<th>刮风(F)</th>
<th>是否玩（C）</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>sunny</td>
<td>hot</td>
<td>high</td>
<td>false</td>
<td>否</td>
</tr>
<tr>
<td>2</td>
<td>sunny</td>
<td>hot</td>
<td>high</td>
<td>true</td>
<td>否</td>
</tr>
<tr>
<td>3</td>
<td>overcast</td>
<td>hot</td>
<td>high</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>4</td>
<td>rainy</td>
<td>mild</td>
<td>high</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>5</td>
<td>rainy</td>
<td>cool</td>
<td>normal</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>6</td>
<td>rainy</td>
<td>cool</td>
<td>normal</td>
<td>true</td>
<td>否</td>
</tr>
<tr>
<td>7</td>
<td>overcast</td>
<td>cool</td>
<td>normal</td>
<td>true</td>
<td>是</td>
</tr>
<tr>
<td>8</td>
<td>sunny</td>
<td>mild</td>
<td>high</td>
<td>false</td>
<td>否</td>
</tr>
<tr>
<td>9</td>
<td>sunny</td>
<td>cool</td>
<td>normal</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>10</td>
<td>rainy</td>
<td>mild</td>
<td>normal</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>11</td>
<td>sunny</td>
<td>mild</td>
<td>normal</td>
<td>true</td>
<td>是</td>
</tr>
<tr>
<td>12</td>
<td>overcast</td>
<td>mild</td>
<td>high</td>
<td>true</td>
<td>是</td>
</tr>
<tr>
<td>13</td>
<td>overcast</td>
<td>hot</td>
<td>normal</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>14</td>
<td>rainy</td>
<td>mild</td>
<td>high</td>
<td>true</td>
<td>否</td>
</tr>
</tbody>
</table>
<p>在实际操作中，通过遍历所有特征（如果是连续值，需做离散化）及其取值，选择 $Min_{gini-index}$ 所对应的特征和特征值。</p>
<p>这里仍然以天气数据为例，给出特征<strong>阴晴</strong>的 Gini index 计算过程。</p>
<blockquote>
<p>(1). 当特征“阴晴”取值为”sunny”时，$D_1 = {1,2,8,9,11}, |D_1|=5$；$D_2={3,4,5,6,7,10,12,13,14}, |D_2|=9$. 数据自己对应的类别数分别为 $(+2,-3)、(+7,-2)$。因此 $Gini(D_1) = 2 \cdot \frac{3}{5} \cdot \frac{2}{5} = \frac{12}{25}$；$Gini(D_2) = 2 \cdot \frac{7}{9} \cdot \frac{2}{9} = \frac{28}{81}$. 对应的基尼指数为：<br>$$<br>Gini(C, “阴晴”=”sunny”) = \frac{5}{14} Gini(D_1) + \frac{9}{14} Gini(D_2) = \frac{5}{14} \frac{12}{25} + \frac{9}{14} \frac{28}{81} = 0.394 \quad(exp.2.2.1)<br>$$<br>(2). 当特征“阴晴”取值为”overcast”时，$D_1 = {2,7,12,13}, |D_1|=4$；$D_2={1,2,4,5,6,8,9,10,11,14}, |D_2|=10$。$D_1$、$D_2$ 数据自己对应的类别数分别为 $(+4,-0)、(+5,-5)$。因此 $Gini(D_1) = 2 \cdot 1 \cdot 0 = 0；Gini(D_2) = 2 \cdot \frac{5}{10} \cdot \frac{5}{10} = \frac{1}{2}$ 对应的基尼指数为：<br>$$<br>Gini(C, “阴晴”=”overcast”) = \frac{4}{14} Gini(D_1) + \frac{10}{14} Gini(D_2) = 0 + \frac{10}{14} \cdot \frac{1}{2} = \frac{5}{14} = 0.357 \quad(exp.2.2.2)<br>$$</p>
<p>(3). 当特征“阴晴”取值为”rainy”时，$D_1 = {4,5,6,10,14}, |D_1|=5$; $D_2={1,2,3,7,8,9,11,12,13}, |D_2|=9$。 $D_1$、$D_2$ 数据自己对应的类别数分别为 $(+3,−2)、(+6,−3)$。因此 $Gini(D_1) = 2 \cdot \frac{3}{5} \cdot \frac{2}{5} = \frac{12}{25}$；$Gini(D_2) = 2 \cdot \frac{6}{9} \cdot \frac{3}{9} = \frac{4}{9}$。 对应的基尼指数为：<br>$$<br>Gini(C, “阴晴”=”rainy”) = \frac{5}{14} Gini(D_1) + \frac{9}{14} Gini(D_2) = \frac{5}{14} \frac{12}{25} + \frac{9}{14} \frac{4}{9} = \frac{4}{7} = 0.457 \quad(exp.2.2.3)<br>$$</p>
</blockquote>
<p>如果特征”阴晴”是最优特征的话，那么特征取值为”overcast”应作为划分节点。</p>
<h2 id="3-二叉回归树-not-finish"><a href="#3-二叉回归树-not-finish" class="headerlink" title="3. 二叉回归树 (not finish)"></a>3. 二叉回归树 (not finish)</h2><p><strong>二叉回归树</strong> 采用 <code>平方误差最小化作为特征选择</code> 和 切分点选择的依据。一棵回归树对应着特征空间的若干个划分及其在划分单元上的输出值。假设将特征空间划分为 $J$ 个单元（子空间），分别是 ${R_1,R_2,⋯,R_J}$，在每个单元 $R_j$（对应回归树的一个叶子节点）上有一个固定的输出值 $v_j$（连续变量）。给定训练数据集$D={(x^{(1)}, y^{(1)}), (x^{(2)}, y^{(2)}), \cdots, (x^{(m)}, y^{(m)})}$，二叉回归树模型可表示为：</p>
<p>$$<br>f(x) = \sum_{j=1}^{J} v_j \cdot I(x \in R_j) \qquad (exp.3.1.1)<br>$$</p>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><ul>
<li><a href="http://wenku.baidu.com/link?url=aHNTy791blu36AysYKLXxRLkU4XlzxPNoyOEpZaRtCOM83C8mAUmNKWktm_lKF65WuCAUvyBKZnG_Jw91NzYhD8EfmDCpXEkX-PjwVqSKYC" target="_blank" rel="external">CART-文库PPT</a></li>
<li><a href="http://wenku.baidu.com/link?url=aHNTy791blu36AysYKLXxRLkU4XlzxPNoyOEpZaRtCOM83C8mAUmNKWktm_lKF65WuCAUvyBKZnG_Jw91NzYhD8EfmDCpXEkX-PjwVqSKYC" target="_blank" rel="external">CART-Veyron</a></li>
<li><a href="http://www.52caml.com/" target="_blank" rel="external">52caml</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JVM 跨平台与字节码原理初步]]></title>
      <url>http://iequa.com/2016/08/16/java-special-arms-p3-jvm/</url>
      <content type="html"><![CDATA[<p>用到 JVM 的场景</p>
<ol>
<li>Out of memory 时，团队高手不在</li>
<li>系统服务器架构，老大问你 投入多少服务器成本，VM 分配多大， 如何分配?</li>
</ol>
<h2 id="1-javap-命令"><a href="#1-javap-命令" class="headerlink" title="1. javap 命令"></a>1. javap 命令</h2><blockquote>
<p>通过这种方式认知比 Java 更低一个抽象层次的逻辑，虚指令有时候更好解释问题。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String a = <span class="string">"a"</span> + <span class="string">"b"</span> + <span class="number">1</span>;</span><br><span class="line">        String b = <span class="string">"ab1"</span>;</span><br><span class="line">        System.out.println(a == b); <span class="comment">// true 编译时优化</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  p3jvm git:(master) ✗ <span class="built_in">pwd</span></span><br><span class="line">/Users/hp/ghome/github/language/java/jsarms/p3jvm</span><br><span class="line">➜  p3jvm git:(master) ✗ javac</span><br><span class="line">Usage: javac &lt;options&gt; &lt;<span class="built_in">source</span> files&gt;</span><br><span class="line"><span class="built_in">where</span> possible options include:</span><br><span class="line">  -g                         Generate all debugging info</span><br><span class="line">  -g:none                    Generate no debugging info</span><br><span class="line">  -g:&#123;lines,vars,<span class="built_in">source</span>&#125;     Generate only some debugging info</span><br><span class="line">  -nowarn                    Generate no warnings</span><br><span class="line">  -verbose                   Output messages about what the compiler is doing</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  p3jvm git:(master) ✗ javac -g:vars,lines StringTest.java</span><br><span class="line">➜  p3jvm git:(master) ✗ javap -verbose StringTest</span><br><span class="line">Classfile /Users/hp/ghome/github/language/java/jsarms/p3jvm/StringTest.class</span><br><span class="line">  Last modified Aug 16, 2016; size 559 bytes</span><br><span class="line">  MD5 checksum 772d18512cb982c953e7db8c72522918</span><br><span class="line">public class StringTest</span><br><span class="line">  minor version: 0</span><br><span class="line">  major version: 51</span><br><span class="line">  flags: ACC_PUBLIC, ACC_SUPER</span><br><span class="line">Constant pool:</span><br><span class="line">   <span class="comment">#1 = Methodref          #6.#21         //  java/lang/Object."&lt;init&gt;":()V</span></span><br><span class="line">   <span class="comment">#2 = String             #22            //  ab1</span></span><br><span class="line">   <span class="comment">#3 = Fieldref           #23.#24        //  java/lang/System.out:Ljava/io/PrintStream;</span></span><br><span class="line">   <span class="comment">#4 = Methodref          #25.#26        //  java/io/PrintStream.println:(Z)V</span></span><br><span class="line">   <span class="comment">#5 = Class              #27            //  StringTest</span></span><br><span class="line">   <span class="comment">#6 = Class              #28            //  java/lang/Object</span></span><br><span class="line">   <span class="comment">#7 = Utf8               &lt;init&gt;</span></span><br><span class="line">   <span class="comment">#8 = Utf8               ()V</span></span><br><span class="line">   <span class="comment">#9 = Utf8               Code</span></span><br><span class="line">  <span class="comment">#10 = Utf8               LineNumberTable</span></span><br><span class="line">  <span class="comment">#11 = Utf8               LocalVariableTable</span></span><br><span class="line">  <span class="comment">#12 = Utf8               this</span></span><br><span class="line">  <span class="comment">#13 = Utf8               LStringTest;</span></span><br><span class="line">  <span class="comment">#14 = Utf8               test1</span></span><br><span class="line">  <span class="comment">#15 = Utf8               a</span></span><br><span class="line">  <span class="comment">#16 = Utf8               Ljava/lang/String;</span></span><br><span class="line">  <span class="comment">#17 = Utf8               b</span></span><br><span class="line">  <span class="comment">#18 = Utf8               StackMapTable</span></span><br><span class="line">  <span class="comment">#19 = Class              #29            //  java/lang/String</span></span><br><span class="line">  <span class="comment">#20 = Class              #30            //  java/io/PrintStream</span></span><br><span class="line">  <span class="comment">#21 = NameAndType        #7:#8          //  "&lt;init&gt;":()V</span></span><br><span class="line">  <span class="comment">#22 = Utf8               ab1</span></span><br><span class="line">  <span class="comment">#23 = Class              #31            //  java/lang/System</span></span><br><span class="line">  <span class="comment">#24 = NameAndType        #32:#33        //  out:Ljava/io/PrintStream;</span></span><br><span class="line">  <span class="comment">#25 = Class              #30            //  java/io/PrintStream</span></span><br><span class="line">  <span class="comment">#26 = NameAndType        #34:#35        //  println:(Z)V</span></span><br><span class="line">  <span class="comment">#27 = Utf8               StringTest</span></span><br><span class="line">  <span class="comment">#28 = Utf8               java/lang/Object</span></span><br><span class="line">  <span class="comment">#29 = Utf8               java/lang/String</span></span><br><span class="line">  <span class="comment">#30 = Utf8               java/io/PrintStream</span></span><br><span class="line">  <span class="comment">#31 = Utf8               java/lang/System</span></span><br><span class="line">  <span class="comment">#32 = Utf8               out</span></span><br><span class="line">  <span class="comment">#33 = Utf8               Ljava/io/PrintStream;</span></span><br><span class="line">  <span class="comment">#34 = Utf8               println</span></span><br><span class="line">  <span class="comment">#35 = Utf8               (Z)V</span></span><br><span class="line">// 以上是 Constant pool， 仅仅是陈列操作，并没有开始执行任务，看下面开始</span><br><span class="line">&#123;</span><br><span class="line">  public StringTest();</span><br><span class="line">    flags: ACC_PUBLIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=1, locals=1, args_size=1 // 所有方法都会有。</span><br><span class="line">      // stack 为栈顶的单位大小 (每个大小为 1 slot，4 byte)</span><br><span class="line">      // locals=1，非静态方法，本地变量增加 this</span><br><span class="line">         0: aload_0</span><br><span class="line">         1: invokespecial <span class="comment">#1                  // Method java/lang/Object."&lt;init&gt;":()V</span></span><br><span class="line">         4: <span class="built_in">return</span></span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line 1: 0</span><br><span class="line">      LocalVariableTable:</span><br><span class="line">        Start  Length  Slot  Name   Signature</span><br><span class="line">               0       5     0  this   LStringTest;</span><br><span class="line"></span><br><span class="line">  public static void <span class="built_in">test</span>1();</span><br><span class="line">    flags: ACC_PUBLIC, ACC_STATIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=3, locals=2, args_size=0 </span><br><span class="line">      // stack=3，本地栈slot个数为3，String需要load，String.out 占用一个再。当对比发生 boolean 时，两个String引用栈顶pop</span><br><span class="line">      // locals=2， 因为只有两个 String</span><br><span class="line">      // args_size=0，方法没有入口参数</span><br><span class="line">         0: ldc           <span class="comment">#2                  // String ab1</span></span><br><span class="line">         // 引用常量池内容</span><br><span class="line">         2: astore_0</span><br><span class="line">         // 将栈顶引用值，写入第 1 个 slot 所在的本地变量</span><br><span class="line">         3: ldc           <span class="comment">#2                  // String ab1</span></span><br><span class="line">         5: astore_1</span><br><span class="line">         6: getstatic     <span class="comment">#3                  // Field java/lang/System.out:Ljava/io/PrintStream;</span></span><br><span class="line">         // 获取静态域，放入栈顶，此时静态域是 System.out 对象</span><br><span class="line">         9: aload_0</span><br><span class="line">        10: aload_1</span><br><span class="line">        11: <span class="keyword">if</span>_acmpne     18</span><br><span class="line">        14: iconst_1</span><br><span class="line">        15: goto          19</span><br><span class="line">        18: iconst_0</span><br><span class="line">        19: invokevirtual <span class="comment">#4                  // Method java/io/PrintStream.println:(Z)V</span></span><br><span class="line">        22: <span class="built_in">return</span></span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line 4: 0</span><br><span class="line">        line 5: 3</span><br><span class="line">        line 6: 6</span><br><span class="line">        line 7: 22</span><br><span class="line">      LocalVariableTable:</span><br><span class="line">        Start  Length  Slot  Name   Signature</span><br><span class="line">               3      20     0     a   Ljava/lang/String;</span><br><span class="line">               6      17     1     b   Ljava/lang/String;</span><br><span class="line">      // 本地变量列表 LocalVariableTable. from javac -g:vars</span><br><span class="line">      StackMapTable: number_of_entries = 2</span><br><span class="line">           frame_<span class="built_in">type</span> = 255 /* full_frame */</span><br><span class="line">          offset_delta = 18</span><br><span class="line">          locals = [ class java/lang/String, class java/lang/String ]</span><br><span class="line">          stack = [ class java/io/PrintStream ]</span><br><span class="line">           frame_<span class="built_in">type</span> = 255 /* full_frame */</span><br><span class="line">          offset_delta = 0</span><br><span class="line">          locals = [ class java/lang/String, class java/lang/String ]</span><br><span class="line">          stack = [ class java/io/PrintStream, int ]</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">➜  p3jvm git:(master) ✗</span><br></pre></td></tr></table></figure>
<h2 id="2-Java-字节码结构"><a href="#2-Java-字节码结构" class="headerlink" title="2. Java 字节码结构"></a>2. Java 字节码结构</h2><p>javac 命令本身只是一个引导器，它引导编译器程序的运行。编译器本身是一个java程序 <code>com.sun.tools.javac.main.JavaCompiler</code>, 该类完成 java 源文件 的 Parser、Annotation process、检查、泛型处理、语法转换等，最终胜出 Class 文件。</p>
<p>Java 字节码文件主体结构: </p>
<table>
<thead>
<tr>
<th><strong>Class 文件头部</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Constant pool</td>
<td></td>
</tr>
<tr>
<td>当前Clas的描述信息</td>
<td></td>
</tr>
<tr>
<td>属性列表</td>
<td></td>
</tr>
<tr>
<td>方法列表</td>
<td></td>
</tr>
<tr>
<td>…</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Decision Tree Model]]></title>
      <url>http://iequa.com/2016/08/16/ml-decisionTree-model/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p><strong>Data Mining</strong></p>
<ul>
<li>挖掘目标</li>
<li>数据取样</li>
<li>数据探索</li>
<li>数据预处理</li>
<li><code>挖掘建模</code></li>
<li>模型评价</li>
</ul>
<p>分类问题 : 决策树算法、朴素贝叶斯、支持向量机、BP神经网络、懒惰学习算法、随机森林与自适应增强算法、分类模型选择和结果评价</p>
<h2 id="1-Classification-Introduce"><a href="#1-Classification-Introduce" class="headerlink" title="1. Classification Introduce"></a>1. Classification Introduce</h2><blockquote>
<p>分类有着广泛的应用，如医学疾病判别、垃圾邮件过滤、垃圾短信拦截、客户分析等等。分类问题可以分为两类</p>
</blockquote>
<h3 id="1-1-归类-离散"><a href="#1-1-归类-离散" class="headerlink" title="1.1 归类 : 离散"></a>1.1 归类 : 离散</h3><p>归类 是指对<code>离散数据</code>的分类，比如对根据一个人的笔迹判别这个是男还是女，这里的 Category 只有两个，类别是离散的集合空间{男，女}的。</p>
<h3 id="1-2-预测-连续"><a href="#1-2-预测-连续" class="headerlink" title="1.2 预测 : 连续"></a>1.2 预测 : 连续</h3><p>预测 是指对<code>连续数据</code>的分类，比如预测明天8点天气的湿度情况，天气的湿度在随时变化，8点时的天气是一个具体值，它不属于某个有限集合空间。预测也叫回归分析，在金融领域有着广泛应用。</p>
<blockquote>
<p>虽然对离散数据和连续数据的处理方式有所不同，但其实他们之间相互转化，比如我们可以根据比较的某个特征值判断，如果值大于0.5就认定为男性，小于等于0.5就认为是女性，这样就转化为连续处理方式；将天气湿度值分段处理也就转化为离散数据。</p>
</blockquote>
<p><strong>数据分类</strong> 分两个步骤：</p>
<ol>
<li>构造模型，利用训练数据集 训练 分类器；</li>
<li>利用建好的分类器模型对测试数据进行分类。</li>
</ol>
<blockquote>
<p>好的分类器具有很好的泛化能力，即它不仅在训练数据集上能达到很高的正确率，而且能在未见过得测试数据集也能达到较高的正确率。如果一个分类器只是在训练数据上表现优秀，但在测试数据上表现稀烂，这个分类器就已经过拟合了，它只是把训练数据记下来了，并没有抓到整个数据空间的特征。</p>
</blockquote>
<h2 id="2-Decision-Tree’-Classification"><a href="#2-Decision-Tree’-Classification" class="headerlink" title="2. Decision Tree’ Classification"></a>2. Decision Tree’ Classification</h2><p>代表性的例子说明 :</p>
<table>
<thead>
<tr>
<th>ID</th>
<th>阴晴(F)</th>
<th>温度(F)</th>
<th>湿度(F)</th>
<th>刮风(F)</th>
<th>是否玩（C）</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>sunny</td>
<td>hot</td>
<td>high</td>
<td>false</td>
<td>否</td>
</tr>
<tr>
<td>2</td>
<td>sunny</td>
<td>hot</td>
<td>high</td>
<td>true</td>
<td>否</td>
</tr>
<tr>
<td>3</td>
<td>overcast</td>
<td>hot</td>
<td>high</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>4</td>
<td>rainy</td>
<td>mild</td>
<td>high</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>5</td>
<td>rainy</td>
<td>cool</td>
<td>normal</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>6</td>
<td>rainy</td>
<td>cool</td>
<td>normal</td>
<td>true</td>
<td>否</td>
</tr>
<tr>
<td>7</td>
<td>overcast</td>
<td>cool</td>
<td>normal</td>
<td>true</td>
<td>是</td>
</tr>
<tr>
<td>8</td>
<td>sunny</td>
<td>mild</td>
<td>high</td>
<td>false</td>
<td>否</td>
</tr>
<tr>
<td>9</td>
<td>sunny</td>
<td>cool</td>
<td>normal</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>10</td>
<td>rainy</td>
<td>mild</td>
<td>normal</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>11</td>
<td>sunny</td>
<td>mild</td>
<td>normal</td>
<td>true</td>
<td>是</td>
</tr>
<tr>
<td>12</td>
<td>overcast</td>
<td>mild</td>
<td>high</td>
<td>true</td>
<td>是</td>
</tr>
<tr>
<td>13</td>
<td>overcast</td>
<td>hot</td>
<td>normal</td>
<td>false</td>
<td>是</td>
</tr>
<tr>
<td>14</td>
<td>rainy</td>
<td>mild</td>
<td>high</td>
<td>true</td>
<td>否</td>
</tr>
</tbody>
</table>
<p>利用ID3算法中的 Info Gain Feature Selection，递归的学习一棵决策树，得到树结构如下</p>
<p><img src="/images/model-dt02.png" width="560" height="400" img=""></p>
<blockquote>
<p>决策树（decision tree）是一个树结构（可以是二叉树或非二叉树）。其每个非叶节点表示一个Feature属性上的测试，每个分支代表这个Feature属性在某个值域上的输出，而每个叶节点存放一个 Category 。使用 DT 进行决策的过程就是从 root 开始，测试待分类项中相应的 Feature 属性，并按照其值选择输出分支，直到到达叶子节点，将叶子节点存放的 Category 作为决策结果。</p>
</blockquote>
<p>Feature Selection，如何量化最优Feature? <code>-&gt;</code> 导致 DT Algorithm 出现了 ID3、C4.5、C5.0、CART 等。</p>
<h2 id="3-Decision-Tree’-Build"><a href="#3-Decision-Tree’-Build" class="headerlink" title="3. Decision Tree’ Build"></a>3. Decision Tree’ Build</h2><p>构造 Decision Tree 的关键步骤是分裂属性。所谓分裂属性就是在某个节点处按照某一特征属性的不同划分构造不同的分支，其目标是让各个分裂子集尽可能地“纯”。尽可能“纯”就是尽量让一个分裂子集中待分类项属于同一类别。</p>
<blockquote>
<p>构造决策树的过程本质上就是根据 <strong>data-feature</strong> 将 数据集(D) 分类的递归过程，我们需要解决的第一个问题就是，<strong>当前 数据集(D) 上哪个 Feature 在划分数据分类时起决定性作用</strong></p>
</blockquote>
<h3 id="3-1-构造-DT-流程"><a href="#3-1-构造-DT-流程" class="headerlink" title="3.1 构造 DT 流程"></a>3.1 构造 DT 流程</h3><p>训练数据集 $D = \{ (x^{(1)}，y^{(1)}) ， (x^{(2)}，y^{(2)})， ⋯ ， (x^{(m)}，y^{(m)}) \}$ (Feature用离散值表示)<br>候选特征集 $F = \{f^1，f^2， ⋯，f^n \}$</p>
<p>开始建立 Root节点，将所有训练数据都置于根节点（$m$条样本）。从 feature集合 $F$ 中选择一个最优特征 $f^∗$，按照 $f^∗$ 取值将 训练数据集(D) 切分成若干子集，使得各个自己有一个在当前条件下最好的分类。</p>
<p>如果子集中样本类别基本相同，那么构建叶节点，并将数据子集划分给对应的叶节点；如果子集中样本类别差异较大，不能被基本正确分类，需要在剩下的特征集合 $（F−{f^∗}）$ 中选择新的最优特征，继续对数据子集进行切分。如此递归地进行下去，直至所有数据自己都能被基本正确 Category，或者没有合适的最优特征为止。</p>
<p>这样最终结果是每个子集都被分到叶节点上，对应着一个明确的类别。那么，递归生成的层级结构即为一棵 DT。</p>
<h3 id="3-2-伪代码构造-DT"><a href="#3-2-伪代码构造-DT" class="headerlink" title="3.2 伪代码构造 DT"></a>3.2 伪代码构造 DT</h3><p>  输入 : 训练数据集 $D = \{ (x^{(1)}，y^{(1)}) ， (x^{(2)}，y^{(2)})， ⋯ ， (x^{(m)}，y^{(m)}) \}$(Feature用离散值表示)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;候选特征集 $F = \{f^1，f^2， ⋯，f^n \}$</p>
<p>  输出 : T(D, F)</p>
<p><img src="/images/model-dt-03.png" width="760" height="400" img=""></p>
<p>决策树学习过程中递归的每一步，在选择最优特征后，根据特征取值切割当前节点的数据集，得到若干数据子集。<br>算法的时间复杂度是O(k<em>|D|</em>log(|D|))，k为属性个数，|D|为记录集D的记录数。</p>
<h2 id="4-Feature-Selection"><a href="#4-Feature-Selection" class="headerlink" title="4. Feature Selection"></a>4. Feature Selection</h2><p>递归地选择最优feature，根据feature取值切割数据集，使得对应的数据子集有一个较好的分类。从伪代码中也可以看出，在决策树学习过程中，最重要的是第07行，即如何选择最优feature？也就是我们常说的feature选择问题。</p>
<p>在这里，希望随着feature选择过程地不断进行，决策树的分支节点所包含的样本尽可能属于同一类别，即希望节点的”纯度（purity）”越来越高。</p>
<blockquote>
<p>如子集中的样本都属于同一个类别，是最好的结果；如果说大多数的样本类型相同，只有少部分样本不同，也可以接受。</p>
</blockquote>
<p>那么如何才能做到选择的特征对应的样本子集纯度最高呢？</p>
<table>
<thead>
<tr>
<th>Algorithm</th>
<th>Feature 选择方法</th>
<th>Author</th>
</tr>
</thead>
<tbody>
<tr>
<td>ID3</td>
<td>Information gain</td>
<td>Quinlan. 1986</td>
</tr>
<tr>
<td>C4.5</td>
<td>Gain ratio</td>
<td>Quinlan. 1993.</td>
</tr>
<tr>
<td>CART</td>
<td>回归树： 最小二乘<br>分类树： 基尼指数 Gini index</td>
<td>Breiman. 1984<br>(Classification and Regression Tree 分类与回归树)</td>
</tr>
</tbody>
</table>
<blockquote>
<p>ID3 (Iterative Dichotomiser)</p>
</blockquote>
<h3 id="4-1-Information-Gain"><a href="#4-1-Information-Gain" class="headerlink" title="4.1 Information Gain"></a>4.1 Information Gain</h3><p>信息增益（Information Gain）衡量 Feature 的重要性是根据当前 Feature 为划分带来多少信息量，带来的信息越多，该 Feature 就越重要，此时节点的”纯度”也就越高。</p>
<p><a href="/2016/08/18/ml-entropy-base/">Infomation Entropy</a></p>
<blockquote>
<p>对一个分类系统来说，假设类别 $C$ 可能的取值为 $c_1，c_2，⋯，c_k$（$k$是类别总数），每一个类别出现的概率分别是 $p(c_1)，p(c_2)，⋯，p(c_k)$。此时，分类系统的 Entropy 可以表示为:</p>
<p>$$<br>info(C) = -  \sum_{i=1}^k p(c_i) \cdot log_2 p(c_i) \qquad (fml.4.1.1)<br>$$</p>
<p>分类系统的作用就是输出一个特征向量（文本特征、ID特征 等）属于哪个 Category 的值，而这个值可能是 $c_1，c_2，⋯，c_k$ ，因此这个值所携带的信息量就是 (fml.4.1.1) 公式这么多</p>
</blockquote>
<p><strong>Condition Entropy</strong></p>
<p>假设 离散特征 $f$ 的取值有 $I$ 个，$info(C|f=f_i)$ 表示特征 $f$ 被取值为 $f_i$ 时的<strong><em>Condition Entropy</em></strong>； $info(C|f)$ 是指特征 $f$ 被固定时的 <strong><em>Condition Entropy</em></strong>。二者之间的关系是：</p>
<blockquote>
<p>$$<br>\begin{align}<br>info(C|f) &amp; = p_1 \cdot info(C|f=f_1) + p_2 \cdot info(C|f=f_2) + … + p_k \cdot info(C|f=f_{k}) \\ &amp; = \sum_{i=1}^{I} p_i \cdot info(C|f=f_i) \end{align}  \quad (fml.4.1.2)<br>$$<br>假设总样本数有 $m$ 条，特征 $f=f_i$ 时的样本数 $m_i，p_i=\frac{m_i}{m}$.</p>
</blockquote>
<p><strong>如何求 $P(C|f=f_i)$</strong> ?</p>
<blockquote>
<p>二分类情况 :</p>
<p>以二分类为例（正例为1，负例为0），总样本数为 $m$ 条，特征 $f$ 的取值为 $I$ 个，其中特征 $f=f_i$ 对应的样本数为 $m_i$ 条，其中正例 $m_{i1}$ 条，负例 $m_{i0}$ 条 $m_i = m_{i0} + m_{i1}$ 。那么有：</p>
<p>$$<br>\begin{align} info(C|f=f_i) &amp; = - \frac{m_{i1}}{m_i} \cdot log_{2} \frac{m_{i1}}{m_i} - \frac{m_{i0}}{m_i} \cdot log_{2} \frac{m_{i0}}{m_i} \end{align} \qquad (fml.4.1.3)<br>$$<br>多分类情况:</p>
<p>$$<br>\begin{align} info(C|f=f_i) = -\sum_{j=0}^{k-1} \frac{m_{ij}}{m_i} \cdot log_{2} \frac{m_{ij}}{m_i} \end{align} \qquad (fml.4.1.4)<br>$$</p>
<p>公式$\frac{m_{ij}}{m_i}$物理含义是当 $f=f_i$ 且 $C=c_j$ 的概率，即条件概率 $p(c_j|f_i)$</p>
<p>因此，<strong><em>Condition Entropy</em></strong> 计算公式为：</p>
<p>$$<br>\begin{align} info(C|f) &amp; = \sum_{i=1}^{I} p(f_i) \cdot info(C|f=f_i) \\ &amp; = - \sum_{i=1}^{I} p(f_i) \cdot \underline { \sum_{j=0}^{k-1} p(c_j|f_i) \cdot log_2 p(c_j|f_i) } \qquad (fml.4.1.5)<br>\end{align}<br>$$</p>
</blockquote>
<p>特征 $f$ 给系统带来的 info gain 等于系统原有的 Entropy 与固定特征 $f$ 的 <strong><em>Condition Entropy</em></strong> 之差，公式表示如下:</p>
<blockquote>
<p>$$<br>\begin{align} IG(F) &amp; = E(C) - E(C|F) \\ &amp; = -\sum_{i=1}^{k} p(c_i) \cdot \log_{2} p(c_i) + \sum_{i=1}^{I} p(f_i) \cdot \underline { \sum_{j=0}^{k-1} p(c_j|f_i) \cdot log_2 p(c_j|f_i) } \end{align}  \qquad (fml.4.1.6)<br>$$</p>
<p>$n$ 表示特征 $f$ 取值个数，$k$ 表示类别 $C$ 个数，$\sum_{j=0}^{n-1} \frac{m_{ij}}{m_i} \cdot log_{2} \frac{m_{ij}}{m_i}$ 表示每一个类别对应的 Entropy 。</p>
</blockquote>
<hr>
<p><strong>下面以天气数据为例,通过 <code>Info gain</code> 选择最优 feature 的过程 :</strong></p>
<blockquote>
<p>根据 阴晴、温度、湿度 和 刮风 来决定是否出去玩。样本中总共有 14 条记录，取值为 <code>是</code>(9个正样本)、<code>否</code>(5个负样本)，用 $S(9+,5−)$ 表示.</p>
<p>(1). 分类系统的 Entropy :<br>$$<br>Entropy(S) = info(9,5) = (-\frac{9}{14} _ llog_2 (\frac{9}{14})) + (- \frac{5}{14} _ llog_2 (\frac{5}{14})) = 0.940位   \quad (exp.4.1.1)<br>$$<br>(2). 如果以特征”阴晴”作为根节点。“阴晴”取值为{sunny, overcast, rainy}, 分别对应的正负样本数分别为(2+,3-), (4+,0-), (3+,2-)，那么在这三个节点上的 info Entropy 分别为：<br>$$<br>\begin{align} &amp; Entropy(S| “阴晴”=sunny) = info(2,3) = 0.971位  \quad(exp.4.1.1) \\ &amp; Entropy(S| “阴晴”=overcast) = info(4,0) = 0位  \;\;\quad(exp.4.1.2) \\ &amp; Entropy(S| “阴晴”=rainy) = info(3,2) = 0.971位  \;\quad(exp.4.1.3) \end{align}<br>$$</p>
<p>以 Feature “阴晴” 为根节点，平均信息值（即 <strong>Condition Entropy</strong>）为：<br>$$<br>Entropy(S|“阴晴”) = \frac{5}{14} * 0.971 + \frac{4}{14} * 0 + \frac{5}{14} * 0.971 = 0.693位 \quad (exp.4.1.4)<br>$$</p>
<p>以 Feature “阴晴” 为条件，计算得到的 <strong>Condition Entropy</strong> 代表了期望的信息总量，即对于一个新样本判定其属于哪个类别所必需的信息量。</p>
<p>(3). 计算特征“阴晴”“阴晴”对应的信息增益:<br>$$<br>IG( “阴晴”) = Entropy(S) - Entropy(S| “阴晴”) = 0.247位 \quad\quad(exp.4.1.5)<br>$$</p>
<p>同样的计算方法，可得每个特征对应的信息增益，即<br>$$<br>IG(“刮风”) = Entropy(S) - Entropy(S|“刮风”) = 0.048位 \qquad\qquad(exp.4.1.6) \\ IG(“湿度”) = Entropy(S) - Entropy(S|“湿度”) = 0.152位 \qquad\qquad(exp.4.1.7) \\ IG(“温度”) = Entropy(S) - Entropy(S|“温度”) = 0.029位 \qquad\qquad(exp.4.1.8)<br>$$</p>
<p>显然，Feature “阴晴” 的 info gain 最大，于是把它作为划分特征。基于“阴晴”对根节点进行划分的结果，如图4.5所示（决策树学习过程部分）。决策树学习算法对子节点进一步划分，重复上面的计算步骤。</p>
</blockquote>
<p><img src="/images/model-dt02.png" width="560" height="400" img=""></p>
<h3 id="4-2-Gain-ratio"><a href="#4-2-Gain-ratio" class="headerlink" title="4.2 Gain ratio"></a>4.2 Gain ratio</h3><p>与 Info Gain 不同，<code>Gain ratio</code> 的计算考虑了 F 分裂数据集后所产生的子节点的数量和规模，而<strong>忽略任何有关类别的信息</strong>。</p>
<blockquote>
<p>以 info gain 示例为例，按照 特征“阴晴” 将数据集分裂成3个子集，规模分别为5、4和5，因此不考虑子集中所包含的类别，产生一个分裂信息为：</p>
<p>$$<br>SplitInfo(“阴晴”) = info(5,4,5) = 1.577位 \qquad (exp.4.2.1)<br>$$<br><strong>Split Information Entropy</strong> 可简单地理解为表示信息分支所需要的信息量。 </p>
<p>那么 Info Gain ratio ：<br>$$<br>IG_{ratio}(F) = \frac {IG(F)} {SplitInfo(F)} \qquad (exp.4.2.2)<br>$$<br>在这里，特征 “阴晴”的 Gain ratio 为 $IG_{ratio}( “阴晴”)=\frac{0.247}{1.577} = 0.157$。减少信息增益方法对取值数较多的特征的影响。</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>-(math.log((<span class="number">5.0</span>/<span class="number">14.0</span>), <span class="number">2</span>) * (<span class="number">5.0</span>/<span class="number">14.0</span>) * <span class="number">2</span> + (<span class="number">4.0</span>/<span class="number">14.0</span>) * (math.log((<span class="number">4.0</span>/<span class="number">14.0</span>), <span class="number">2</span>)))</span><br><span class="line"><span class="number">1.577406282852345</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>基尼指数（Gini Index）是 <code>CART</code> 中分类树的特征选择方法. 接下来重点介绍</p>
<h2 id="5-CART"><a href="#5-CART" class="headerlink" title="5. CART"></a>5. CART</h2><p>分类与回归树（Classification And Regression Tree, 简称 CART）模型在Tree-Based家族中是应用最广泛的学习方法之一.</p>
<p>更多请参见本博文章 <a href="/2016/08/24/ml-CART/">CART</a></p>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><ul>
<li><a href="http://www.cnblogs.com/fengfenggirl/p/classsify_decision_tree.html" target="_blank" rel="external">逗比算法工程师</a></li>
<li><a href="http://www.52caml.com/" target="_blank" rel="external">算法杂货铺</a></li>
<li><a href="http://www.cnblogs.com/leoo2sk/archive/2010/09/19/decision-tree.html" target="_blank" rel="external">52caml</a></li>
<li>《机器学习导论》</li>
<li>《统计学习方法》</li>
<li>《数据挖掘－实用机器学习技术》</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hotels]]></title>
      <url>http://iequa.com/2016/08/15/ef-l3u3-Hotels/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 120px !important;
}
</style>

<h2 id="1-Recommending-a-hotel"><a href="#1-Recommending-a-hotel" class="headerlink" title="1. Recommending a hotel"></a>1. Recommending a hotel</h2><ul>
<li>right downtown.</li>
<li>The rates are reasonable.</li>
</ul>
<p><img src="/images/english/ef-l3u3l1.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>[JOAN] I have a meeting there on March 15th. Can you recommend a good hotel?</td>
<td></td>
</tr>
<tr>
<td>[TODD] How about the Hotel Anna? <code>It’s right downtown</code>. The rates are reasonable.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Thanks good. How much is it a night?</td>
<td></td>
</tr>
<tr>
<td>[TODD] I think it’s around 200 a night.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Not bad. <code>Is there a fitness center</code> in the hotel ?</td>
<td></td>
</tr>
<tr>
<td>[TODD] Yes, there is. Oh! And you get free wireless internet in your room. I love that.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] <code>What are the rooms like</code>?</td>
<td></td>
</tr>
<tr>
<td>[TODD] They’re nice. The bathrooms are pretty small. But they’re modern and clean.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Great! sounds perfect.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>It isn’t near the airport.<br>It’s close to shopping.<br>Every room has free wireless internet.<br>It doesn’t have a business center.</p>
</blockquote>
<h2 id="2-Making-a-hotel-reservation"><a href="#2-Making-a-hotel-reservation" class="headerlink" title="2. Making a hotel reservation"></a>2. Making a hotel reservation</h2><p><img src="/images/english/ef-l3u3l2.png" alt=""></p>
<table>
<thead>
<tr>
<th>Making a hotel reservation</th>
</tr>
</thead>
<tbody>
<tr>
<td>[CLERK] Hotel Anna，How Can I help you?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] I’d like to make a reservation please.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] <code>For how many people?</code> / For how many nights?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Just me.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] OK, When are you <code>checking in</code>?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Check in March 15th and check out March 19th</td>
<td></td>
</tr>
<tr>
<td>[CLERK] 15th to 19th. So, that. Would you like a single room or a double ?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] A single please. I’d like to have a nonsmoking room.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] That’s no problem. <code>Would you like me to reserve it for you, now?</code></td>
<td></td>
</tr>
<tr>
<td>[JOAN] What’s the rate?</td>
<td></td>
</tr>
<tr>
<td>[CLERK] It’s 210 a night.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] OK, Yes. Please reserve it for me now. My name is Baxter.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] May I have your credit card number?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] It’s 3788-6672-4038-24.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] Great. Just one moment … All set. Can I help you with anything else?</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="3-Checking-in-to-a-hotel"><a href="#3-Checking-in-to-a-hotel" class="headerlink" title="3. Checking in to a hotel"></a>3. Checking in to a hotel</h2><ul>
<li>suitcase</li>
<li>front desk</li>
<li>luggage</li>
<li>lobby</li>
<li>key card</li>
<li>credit card</li>
<li>elevator</li>
<li>hotel clerk</li>
<li>umbrella</li>
</ul>
<p><img src="/images/english/ef-l3u3l3.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>[CLERK] Good afternoon，May I help you?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yes, <code>I&#39;m checking in</code>.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] May I see your passport?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yes, Here you are.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] OK, Welcome to the hotel Ana. So that’s two people, for four nights.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Actually, it’s for one person – just me.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] Oh, sorry about it, Ah, yes - a nonsmoking single.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] That’s right.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] And <code>you&#39;re staying with us for four nights</code>, checking out on the 19th.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yes.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] OK, May I see your credit card?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Here you are.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] Wonderful ! <code>You&#39;re all set</code>. Here your credit card and Passport. Here’s your key card for 1412.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] <code>You can take the elevator behind you</code>. Would you like help with your luggage?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] No, Thank you.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] Ok, <code>Have a pleasant stay</code>. [‘plez(ə)nt]</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>We’re checking in on the 3rd and checking out on the 14th.<br>So, that’s one person for 10 nights.  </p>
</blockquote>
<h2 id="4-Checking-out-to-a-hotel"><a href="#4-Checking-out-to-a-hotel" class="headerlink" title="4. Checking out to a hotel"></a>4. Checking out to a hotel</h2><ul>
<li>plus room service</li>
<li>It’s not a big deal.</li>
<li>receipt</li>
</ul>
<p><img src="/images/english/ef-l3u3l4.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>[CLERK] Good morning，May I help you?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yes, <code>I&#39;d like to check out</code>, please.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] <code>How was your stay?</code></td>
<td></td>
</tr>
<tr>
<td>[JOAN] Pretty good, But <code>The neighborhood&#39;s a little noisy</code>.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] Oh, I’m sorry to hear that..</td>
<td></td>
</tr>
<tr>
<td>[JOAN] It’s okay. I love the room. <code>The fitness center&#39;s amazing</code>.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] Great! Would you like pay with your credit card?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] please.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] That’s 996.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Really? That seems high.</td>
<td></td>
</tr>
<tr>
<td>[CLERK] Would you like a receipt ?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Yes, I need the receipt.</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>Your bill comes to 996.<br>The total amount is 996.<br>That doesn’t seem right.<br>I’d like to review my bill, please.<br>How would you like to pay for that? </p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[中国人起名学问]]></title>
      <url>http://iequa.com/2016/08/13/life-chinese-named/</url>
      <content type="html"><![CDATA[<h2 id="1-五行八字介绍"><a href="#1-五行八字介绍" class="headerlink" title="1. 五行八字介绍"></a>1. 五行八字介绍</h2><h3 id="1-1-五行"><a href="#1-1-五行" class="headerlink" title="1.1 五行"></a>1.1 五行</h3><p>　五行就是周易中常说的木、火、土、金、水。易经中各类事物均可以五行来区分，如干支、地支、季节、方位、人体、颜色、味道等等。五行有相生与相克的特质，很多的事物可藉由五行的运算，了解元素之兴衰，来判别事物的起伏变化和你一生的好坏吉凶。</p>
<h3 id="1-2-三才"><a href="#1-2-三才" class="headerlink" title="1.2 三才"></a>1.2 三才</h3><p>　　三才配置即天、人、地。中国传统文化理解人立足于大地之上，在天之下，受到上天之眷顾，大地的滋养，而生生不息。亦有顺应天时、地利、人和的行事哲理。三才配置在姓名学中，占有很大的分量。</p>
<h3 id="1-3-五格"><a href="#1-3-五格" class="headerlink" title="1.3 五格"></a>1.3 五格</h3><p>　　五格配置是指天格、地格、人格、外格、总格共五格之间的关系。天格是由祖先流传而来，单独出现对人生没有多大影响;人格是姓名剖象数理的中心所在，对人生的影响最大;人格与地格结合的数理则为基础运。地格主要是36岁前的人生，也叫前运力，外格代表人的外围，吉凶无谓。总格是36岁以后的人生，也是后运力。五格配置在姓名学中占有主要位置。</p>
<h2 id="2-判断五行所缺"><a href="#2-判断五行所缺" class="headerlink" title="2. 判断五行所缺"></a>2. 判断五行所缺</h2><blockquote>
<p>起名字，需要根据五行八字所缺少的五行来用相应的属性字(更准确的说法是用<code>喜用神</code>)来填补，所以需要判断五行所缺。</p>
</blockquote>
<p><a href="http://www.360doc.com/content/15/0313/16/15585030_454852610.shtml" target="_blank" rel="external">解析四柱八字的精髓喜用神</a><br><a href="http://baike.baidu.com/view/1373942.htm" target="_blank" rel="external">喜用神百科</a><br><a href="http://blog.sina.com.cn/s/blog_6e775646010136qp.html" target="_blank" rel="external">如何知道自己八字的喜神，用神</a></p>
<blockquote>
<p>八字就是从这个平衡理论，去分析人一生的起落</p>
</blockquote>
<p>　　知道了五行的知识，我们也知道很多人的八字五行都不太齐全，有的不只缺一个，还会缺两个甚至三个。比如我们常听说的“五行缺金”之类的话，那么如何知道起名字五行缺什么呢?</p>
<h3 id="2-1-判断五行八字及喜用神"><a href="#2-1-判断五行八字及喜用神" class="headerlink" title="2.1 判断五行八字及喜用神"></a>2.1 判断五行八字及喜用神</h3><p>查询五行八字是为了看八字中缺少五行中的哪一行(<strong>以喜用神为准</strong>)，然后用名中字尽量补齐 : <code>金、木、水、火、土</code></p>
<p><strong>以 2015年10月11日13时30分 为例查询检验判断五行八字</strong></p>
<p>以下网址查询结果一致 :</p>
<ul>
<li><a href="http://www.sheup.com/shengchenbazi.php" target="_blank" rel="external">三藏八字查询</a></li>
<li><a href="http://www.zhyw.net/myweb/bz/bazi.htm" target="_blank" rel="external">周易网</a>  </li>
<li><a href="http://www.69jk.cn/tools/bazi/" target="_blank" rel="external">中国健康网</a></li>
</ul>
<p>以下网址查询结果一致 :</p>
<ul>
<li><a href="http://www.meimingteng.com/Tool/Bazi.aspx" target="_blank" rel="external">美名腾</a></li>
<li><a href="http://m.zhouyi.cc/bazi/xys/xiyongsheng.php" target="_blank" rel="external">易安居算命网</a></li>
<li><a href="http://www.fututa.com/" target="_blank" rel="external">浮图塔</a></li>
<li><a href="http://bazi.dosame.com/" target="_blank" rel="external">生辰八字喜用神查询</a></li>
<li><a href="http://sm.wonyoo.com" target="_blank" rel="external">中华忘忧网</a></li>
</ul>
<blockquote>
<p> 这类网址很多，如 : <a href="http://www.meimingteng.com/Tool/Bazi.aspx" target="_blank" rel="external">美名腾</a>、<a href="http://www.pcbaby.com.cn/tools/scbz/" target="_blank" rel="external">太平洋亲子网</a>、<a href="http://www.zhyw.net/myweb/bz/bazi.htm" target="_blank" rel="external">周易网</a>、<a href="http://www.69jk.cn/tools/bazi/" target="_blank" rel="external">中国健康网</a>、<a href="http://www.sheup.com/shengchenbazi.php" target="_blank" rel="external">三藏八字查询</a> 等等。请自行判断查询结果准确性。</p>
<p>周易网、中国健康网、三藏八字查询结果 与 老爷书 一致</p>
</blockquote>
<p><code>喜用神</code>查询你也可以参考如下网址查询，但准确性请自行裁断。</p>
<ul>
<li><a href="http://www.meimingteng.com/Tool/Bazi.aspx" target="_blank" rel="external">美名腾</a></li>
<li><a href="http://m.zhouyi.cc/bazi/xys/xiyongsheng.php" target="_blank" rel="external">易安居</a></li>
<li><a href="http://www.fututa.com/" target="_blank" rel="external">浮图塔</a></li>
<li><a href="http://www.babyqiming.com/zybz/bz.php" target="_blank" rel="external">babyqiming喜用神</a></li>
<li><a href="http://v.youku.com/v_show/id_XNDAwMTAwNDQ0.html" target="_blank" rel="external">优酷视频: 怎么样算八字 什么是八字喜用神 四柱</a></li>
</ul>
<h3 id="2-2-五行不缺的情况"><a href="#2-2-五行不缺的情况" class="headerlink" title="2.2 五行不缺的情况"></a>2.2 五行不缺的情况</h3><p>五行不缺的情况，参见 <a href="http://baike.baidu.com/view/1373942.htm" target="_blank" rel="external">喜用神</a>。<br>五行缺少的情况，参见 <a href="http://baike.baidu.com/view/1373942.htm" target="_blank" rel="external">喜用神</a>，但在多数情况下，缺少的一个就为它的喜用神，具体参见喜用神查询。 </p>
<blockquote>
<p>喜用神查询 与 八字五行 查询，请仔细辨别查询的结果可靠性。</p>
</blockquote>
<h2 id="3-姓名笔画吉凶"><a href="#3-姓名笔画吉凶" class="headerlink" title="3. 姓名笔画吉凶"></a>3. 姓名笔画吉凶</h2><blockquote>
<p>推荐 31 或者 23画</p>
</blockquote>
<p>二十三画　　　旭日升天，名显四方，渐次进展，终成大业。　　（吉）<br>三十一画　　　此数大吉，名利双收，渐进向上，大业成就。　　（吉）</p>
<p><a href="http://blog.sina.com.cn/s/blog_4d4f386c0102vg9r.html" target="_blank" rel="external">详见姓名笔画吉凶大全</a></p>
<blockquote>
<p>起名中用字的笔画数参见 <a href="http://tool.httpcn.com/KangXi/" target="_blank" rel="external">康子字典</a> (非简体字或繁体字)</p>
</blockquote>
<h2 id="4-姓名打分测试"><a href="#4-姓名打分测试" class="headerlink" title="4. 姓名打分测试"></a>4. 姓名打分测试</h2><p>打分测试这种网站比较多，根据我个人的经验判别我推荐 <a href="http://www.sheup.com/xingming_dafen.php" target="_blank" rel="external">三藏网打分测试</a>，根据三藏网查询的结果，可以看到 三才五格的解析以及康熙字典的笔画数目等。</p>
<hr>
<p>举例如下 :</p>
<p><img src="/images/society/life-named-xin.png" alt="example"></p>
<h2 id="5-小结"><a href="#5-小结" class="headerlink" title="5. 小结"></a>5. 小结</h2><p>综上所述: 起名字只需要在名字中，使用喜用神的字 并且 三才五格打分 都比较不错的情况下，方为好名字。</p>
<blockquote>
<p>个人意见 : 名字还是 顺耳，脱俗 的名字是最重要的。</p>
</blockquote>
<p><strong>起名选择字的方法一如如下图片所示，可参考百度搜索的姓名学</strong></p>
<p><img src="/images/society/life-named-searchword.png" alt="选择字方法参见"></p>
<h2 id="6-Reference-article"><a href="#6-Reference-article" class="headerlink" title="6. Reference article"></a>6. Reference article</h2><ul>
<li><a href="http://www.zhyw.net/myweb/bz/bazi.htm" target="_blank" rel="external">周易网</a>  </li>
<li><a href="http://www.69jk.cn/tools/bazi/" target="_blank" rel="external">中国健康网</a></li>
<li><a href="http://www.meimingteng.com/Tool/Bazi.aspx" target="_blank" rel="external">美名腾</a></li>
<li><a href="http://www.pcbaby.com.cn/tools/scbz/" target="_blank" rel="external">太平洋亲子网</a></li>
<li><a href="http://www.360doc.com/content/15/0313/16/15585030_454852610.shtml" target="_blank" rel="external">解析四柱八字的精髓喜用神</a>  </li>
<li><a href="http://www.babyqiming.com/zybz/bz.php" target="_blank" rel="external">不一定准确的喜用神查询</a></li>
<li><a href="http://www.chinesefortunecalendar.com/CAb5.htm" target="_blank" rel="external">八字五行算命和人生起伏圖</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_4d4f386c0102vg9r.html" target="_blank" rel="external">详见姓名笔画吉凶大全</a></li>
<li><a href="http://tool.httpcn.com/KangXi/" target="_blank" rel="external">康子字典</a></li>
<li><a href="http://www.sheup.com/xingming_dafen.php" target="_blank" rel="external">三藏网</a></li>
<li><a href="http://www.7mingzi.com/hanziwuxing-zi-%E9%99%88/" target="_blank" rel="external">起名网</a></li>
<li>…</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">公历：****年**月**日(星期四)11点</span><br><span class="line">农历：丙申年四月十三日午时</span><br><span class="line">春节：2月8日</span><br><span class="line">节前：乙未年</span><br><span class="line">节后：丙申年</span><br><span class="line">八字：丙申　癸巳　辛丑　甲午</span><br><span class="line">五行：火金　水火　金土　木火</span><br><span class="line">方位：南西　北南　西中　东南</span><br><span class="line">生肖：猴</span><br><span class="line">92 三才配置 吉， 天地人外总格 大吉  31画</span><br><span class="line">陈俊妃</span><br><span class="line">陈俊帆</span><br><span class="line">陈泊羊</span><br><span class="line">陈泊亦</span><br><span class="line">陈音竹</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python数据分析与挖掘实战 P5 model - Logistic regression]]></title>
      <url>http://iequa.com/2016/08/12/python-data-mining-p5-model-LR/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p><strong>data mining steps</strong></p>
<ol>
<li>挖掘目标</li>
<li>数据取样</li>
<li>数据探索</li>
<li>数据预处理</li>
<li><code>挖掘建模</code></li>
<li>模型评价</li>
</ol>
<blockquote>
<p>Logistic 回归模型属于概率型非线性回归，分为 二分类 和 多分类 的回归模型。</p>
</blockquote>
<h2 id="1-Logistic-Function"><a href="#1-Logistic-Function" class="headerlink" title="1. Logistic Function"></a>1. Logistic Function</h2><p>Logistic model 因变量 只有 1, 0 两种取值</p>
<p>假设在 $p$ 个独立自变量 $x_1，x_2，x_3，…，x_p$  作用下 : </p>
<ul>
<li>$y$ 取 1 的概率是 $p$, $ p = P(y=1|X) $</li>
<li>$y$ 取 0 的概率是 $1 -p$</li>
</ul>
<p>优势比</p>
<p>$$<br>odds = \frac p {p - 1}<br>$$</p>
<p>两边取自然对数得 Logistic 变换  :</p>
<p>$$<br>Logit(p) = ln(\frac {p} {1-p})<br>$$</p>
<p>令 $Logit(p) = z$</p>
<p>$$<br>Logit(p) = ln(\frac {p} {1-p}) = z<br>$$</p>
<p>=&gt;</p>
<p>$$<br>p = \frac {1} {1 + e^{-z}}<br>$$</p>
<p><img src="/images/model-logistic.jpg" alt="Logistic"></p>
<blockquote>
<p>$p \in (0, 1)$</p>
<p>$odds = {\frac p {p-1}} \in (0, +\infty)$ </p>
<p>$Logit(p) = z = ln(\frac p {p-1}) \in (-\infty, +\infty)$ </p>
</blockquote>
<h2 id="2-Logistic-regression-model"><a href="#2-Logistic-regression-model" class="headerlink" title="2. Logistic regression model"></a>2. Logistic regression model</h2><p>Logistic model 建立 $ln(\frac p {p-1})$ 与 自变量 的线性回归模型。</p>
<p>Logistic regression model :</p>
<p>$$<br>ln(\frac p {p-1}) = {\beta}_0 + {\beta}_1 x_1 + … + {\beta}_p x_p + \varepsilon<br>$$</p>
<blockquote>
<p>$ln(\frac {p} {1-p}) \in (-\infty, +\infty) =&gt; 自变量  x_1，x_2，…，x_p，可在任意范围内取值$</p>
</blockquote>
<p>记 $g(x) = {\beta}_0 + {\beta}_1 x_1 + … + {\beta}_p x_p$ ，得到 :</p>
<p>$$<br>p = P(y=1|X) = \frac 1 {1+e^{-g(x)}}<br>$$</p>
<p>$$<br>1 - p = P(y=0|X) = \frac 1 {1+e^{g(x)}}<br>$$</p>
<hr>
<p>$$<br>\frac p {1-p} =  e^{\beta_0 + \beta_1 x_1 + … + \beta_p x_p + \varepsilon }<br>$$</p>
<h2 id="3-Logistic-model-steps"><a href="#3-Logistic-model-steps" class="headerlink" title="3. Logistic model steps"></a>3. Logistic model steps</h2><ul>
<li>根据挖掘目的setting feature</li>
<li>列出 regression 方程</li>
<li>估计 regression 系数</li>
<li>模型检验</li>
<li>预测控制</li>
</ul>
<p>根据挖掘目的设置 feature，并筛选 feature $y; x_1，x_2，… ，x_p $</p>
<p>$<br>ln(\frac p {p-1}) = {\beta}_0 + {\beta}_1 x_1 + … + {\beta}_p x_p + \varepsilon<br>$</p>
<p>模型有效性的检验指标有很多，最基本的有 正确率。其次 : 混淆矩阵、ROC曲线、KS值等。</p>
<h2 id="4-Feature-筛选方法"><a href="#4-Feature-筛选方法" class="headerlink" title="4. Feature 筛选方法"></a>4. Feature 筛选方法</h2><ol>
<li>F 值大 ，p值小</li>
<li>Recursive Feature Elimination, RFE</li>
<li>Stability Selection</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#逻辑回归 自动建模</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment">#参数初始化</span></span><br><span class="line">filename = <span class="string">'../data/bankloan.xls'</span></span><br><span class="line">data = pd.read_excel(filename)</span><br><span class="line">x = data.iloc[:,:<span class="number">8</span>].as_matrix()</span><br><span class="line">y = data.iloc[:,<span class="number">8</span>].as_matrix()</span><br><span class="line"></span><br><span class="line"><span class="comment"># print("x: ")</span></span><br><span class="line"><span class="comment"># print(x)</span></span><br><span class="line"><span class="comment"># print("y: ")</span></span><br><span class="line"><span class="comment"># print(y)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression <span class="keyword">as</span> LR</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> RandomizedLogisticRegression <span class="keyword">as</span> RLR</span><br><span class="line">rlr = RLR() <span class="comment">#建立随机逻辑回归模型，筛选变量</span></span><br><span class="line">rlr.fit(x, y) <span class="comment">#训练模型</span></span><br><span class="line">rlr.get_support() <span class="comment">#获取特征筛选结果，也可以通过.scores_方法获取各个特征的分数</span></span><br><span class="line">print(<span class="string">u'通过随机逻辑回归模型筛选特征结束。'</span>)</span><br><span class="line">print(<span class="string">u'有效特征为：%s'</span> % <span class="string">','</span>.join(data.columns[rlr.get_support()]))</span><br><span class="line">x = data[data.columns[rlr.get_support()]].as_matrix() <span class="comment">#筛选好特征</span></span><br><span class="line"></span><br><span class="line">lr = LR() <span class="comment">#建立逻辑回归模型</span></span><br><span class="line">lr.fit(x, y) <span class="comment">#用筛选后的特征数据来训练模型</span></span><br><span class="line">print(<span class="string">u'逻辑回归模型训练结束。'</span>)</span><br><span class="line">print(<span class="string">u'模型的平均正确率为：%s'</span> % lr.score(x, y)) <span class="comment">#给出模型的平均正确率，本例为81.4%</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在建立随机LR时，使用了默认的阀值 0.25，也可以用 RLR (selection_threshold = 0.5) 自行设置。随机 Lasso<br>被筛掉的变量并不一定跟结果没关系，它们可能是非线性关系，对应非线性关系可用 DT 和 神经网络。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python数据分析与挖掘实战 P5 model - all]]></title>
      <url>http://iequa.com/2016/08/11/python-data-mining-p5-model-all/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p><strong>data mining steps</strong></p>
<ol>
<li>挖掘目标</li>
<li>数据取样</li>
<li>数据探索</li>
<li>数据预处理</li>
<li><code>挖掘建模</code></li>
<li>模型评价</li>
</ol>
<h2 id="1-分类与预测"><a href="#1-分类与预测" class="headerlink" title="1. 分类与预测"></a>1. 分类与预测</h2><h3 id="1-1-实现过程"><a href="#1-1-实现过程" class="headerlink" title="1.1 实现过程"></a>1.1 实现过程</h3><h3 id="1-2-常见的分类与预测算法"><a href="#1-2-常见的分类与预测算法" class="headerlink" title="1.2 常见的分类与预测算法"></a>1.2 常见的分类与预测算法</h3><table>
<thead>
<tr>
<th>Algorithm</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td>回归分析</td>
<td>&nbsp;回归分析是确定预测属性(数值型)与其他变量间互相依赖的定量关系最常用的统计学方法。包括 线性回归、非线性回归、Logistic回归、偏最小二乘回归等 model</td>
</tr>
<tr>
<td>决策树</td>
<td>&nbsp;决策树采用自顶向下的递归方式，在内部节点进行属性值的比较，并根据不同的属性值从该节点向下分支，最终得到的叶节点是学习划分的类。</td>
</tr>
<tr>
<td>bayes-net</td>
<td>&nbsp;目前不确定知识表达和推理领域最有效的理论模型之一。</td>
</tr>
<tr>
<td>SVM</td>
<td>&nbsp;支持向量机是一种通过非线性映射，把低维的非线性可分转化为高维的线性可分，在高维空间进行线性分析的算法。</td>
</tr>
<tr>
<td>人工神经网络</td>
<td>…</td>
</tr>
</tbody>
</table>
<h3 id="1-3-回归分析"><a href="#1-3-回归分析" class="headerlink" title="1.3 回归分析"></a>1.3 回归分析</h3><table>
<thead>
<tr>
<th>model</th>
<th>condition</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td>线性回归</td>
<td>因变量与自变量是线性关系</td>
<td>对一个或多个自变量和因变量之间的线性关系进行建模，可用最小二乘法求解模型系数</td>
</tr>
<tr>
<td>非线性回归</td>
<td>因变量与自变量之间不都是线性关系</td>
<td></td>
</tr>
<tr>
<td>Logistic 回归</td>
<td>因变量一般有 1 和 0 两种</td>
<td>广义线性回归model的特例，利用Logistic函数将因变量的取值范围控制在0和1之间，表示取值为 1 的概率</td>
</tr>
<tr>
<td>岭回归</td>
<td>…</td>
<td>…</td>
</tr>
<tr>
<td>主成分回归</td>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
<blockquote>
<p>Logistic 回归模型属于概率型非线性回归，分为 二分类 和 多分类 的回归模型。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Locations and directions]]></title>
      <url>http://iequa.com/2016/08/10/ef-l3u2-Locations-and-directions/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 550px;
        margin-left: 200px !important;
}
</style>

<h2 id="1-Telling-someone-where-you-live"><a href="#1-Telling-someone-where-you-live" class="headerlink" title="1. Telling someone where you live"></a>1. Telling someone where you live</h2><p>The bank is <code>on the corner of</code> Pine Street and First Street.<br>The bus stop is <code>in front of</code> the supermarket.<br>The post office is between the restaurant and the movie theater.<br>The pizza place is <code>behind</code> the library.<br>The bookstore is <code>across the street</code> from the restaurant.  </p>
<p><img src="/images/english/ef-l3u2l1.png" alt=""></p>
<p><strong>on，at，in</strong></p>
<ul>
<li>I live <code>on</code> Maple Road. I live <code>at</code> 1215 Maple Road. </li>
<li>They live <code>in</code> Paris, but they’re from the US.<br>&nbsp;</li>
<li>The library is <code>on</code> Pine Street.</li>
<li>The library is <code>at</code> 57 Pine Street.</li>
</ul>
<table>
<thead>
<tr>
<th><strong>Main Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>B: Are you coming to my party Saturday？</td>
<td></td>
</tr>
<tr>
<td>A: Where do you live?</td>
<td></td>
</tr>
<tr>
<td>B: I live at 1215 Maple Road.</td>
<td></td>
</tr>
<tr>
<td>B: The cross street is 4th Avenue.</td>
<td></td>
</tr>
<tr>
<td>B: between the library and the park</td>
<td></td>
</tr>
<tr>
<td>B: I’m on the 11th floor, number 17.</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>street = St.    街</li>
<li>road = Rd.    路</li>
<li>avenue = Ave.    大街</li>
<li>boulevard = Blvd.    大道</li>
<li>drive = Dr.    道</li>
</ul>
<h2 id="2-Giving-directions"><a href="#2-Giving-directions" class="headerlink" title="2. Giving directions"></a>2. Giving directions</h2><p><code>Go straight</code> on Pine Avenue. Then turn right on Central Boulevard.<br><code>Go down</code> Oak Street. Next, <code>turn left</code> on Valley Road.<br><code>Go right</code> on Central Boulevard.<br><code>Make a left</code> on Valley Road.</p>
<h2 id="3-Asking-for-directions-to-a-business"><a href="#3-Asking-for-directions-to-a-business" class="headerlink" title="3. Asking for directions to a business"></a>3. Asking for directions to a business</h2><ul>
<li>take the train</li>
<li>go by ferry  [‘ferɪ]</li>
<li>take the subway</li>
<li>ride the streetcar 有轨电车</li>
<li>go on foot</li>
<li>ride a bike</li>
</ul>
<p><img src="/images/english/ef-l3u2l3.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>A: ABC Company. How can I help you?</td>
<td></td>
</tr>
<tr>
<td>B: I have a meeting at your company today. Can you tell me <code>how to get to your office</code>, please?</td>
<td></td>
</tr>
<tr>
<td>A: Where are you coming from ?</td>
<td></td>
</tr>
<tr>
<td>B: I’m in front of the Regency Hotel on Park Drive. I’m walking.</td>
<td></td>
</tr>
<tr>
<td>A: Oh, OK. First, <code>go north on Park Drive for two blocks</code>, and make a right on Seventh Avenue.</td>
<td></td>
</tr>
<tr>
<td>B: North on Park, turn right on Seventh.</td>
<td></td>
</tr>
<tr>
<td>A: Correct. Next, go one block  on Seventh, and take a left on Chase Street. Our building is on the right   - number 729. We’re on the third floor  . Our office is number 316.</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong>Visit a business</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>How do I get to your office, please?</td>
<td></td>
</tr>
<tr>
<td>Can you please tell me how to get there?</td>
<td></td>
</tr>
<tr>
<td>How are you coming?</td>
<td></td>
</tr>
<tr>
<td>How long does it take?</td>
<td></td>
</tr>
<tr>
<td>It takes about 20 to 30 minutes.</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="4-Describing-the-location-of-a-city"><a href="#4-Describing-the-location-of-a-city" class="headerlink" title="4. Describing the location of a city"></a>4. Describing the location of a city</h2><ul>
<li>east coast</li>
<li>kilometers</li>
<li>ocean, desert</li>
<li>forest, hills, valley</li>
</ul>
<p><img src="/images/english/ef-l3u2l4-1.png" alt=""></p>
<blockquote>
<p>California [,kælɪ’fɔ:njə], summertime</p>
</blockquote>
<table>
<thead>
<tr>
<th><strong>Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>[CARLOS]  That’s my hometown.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] best! on the esat coast. Where is Rio?</td>
<td></td>
</tr>
<tr>
<td>[CARLOS] It’s in the south. down here.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] How far is it from Salvador to Rio?</td>
<td></td>
</tr>
<tr>
<td>[CARLOS] It’s about 1200 kilometers</td>
<td></td>
</tr>
<tr>
<td>[SALLY] So you live on the coast.  I love the ocean，Do you know Big Sur?</td>
<td></td>
</tr>
<tr>
<td>[CARLOS] No, Where’s that?</td>
<td></td>
</tr>
<tr>
<td>[SALLY] It’s in California. It’s in the mountains, but it’s also on the coast.</td>
<td></td>
</tr>
<tr>
<td>[SALLY] There it is, on the west coast. It’s so beautiful there. In the summertime, you can go camping…</td>
<td></td>
</tr>
</tbody>
</table>
<p><img src="/images/english/ef-l3u2l4.png" alt=""></p>
<h2 id="Expressions"><a href="#Expressions" class="headerlink" title="Expressions"></a>Expressions</h2><p>A: Let’s go to the coffee shop.<br>B: How far is it?<br>A: It’s only two blocks.<br>A: How far is it from your house to the beach?<br>B: It’s about two kilometers.</p>
<h2 id="Reading"><a href="#Reading" class="headerlink" title="Reading"></a>Reading</h2><p>Rio de Janeiro is a big city in the south of Brazil. It’s on the east coast of the country. Rio has beautiful beaches on the Atlantic Ocean. Two very famous beaches are Ipanema and Copacabana. Rio also is in the mountains. Sugarloaf is the name of a very famous mountain in Rio.</p>
<h2 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h2><p>My hometown is China Hangzhou. It sits at the head of Hangzhou Bay, which separates Shanghai and Ningbo.  The city has many beautiful old buildings、temple and a lot of parks. The Qian Tang River is the city’s civilization. The city’s West Lake is its best-known attraction. and G20 economic conference to be held here. Many people like to visit west lake. </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python数据分析与挖掘实战 P4 data preprocess]]></title>
      <url>http://iequa.com/2016/08/09/python-data-mining-p4-data-preprocess/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$']],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p><strong>data mining steps</strong></p>
<ol>
<li>挖掘目标</li>
<li>数据取样</li>
<li>数据探索</li>
<li><code>数据预处理</code> 60%</li>
<li>挖掘建模</li>
<li>模型评价</li>
</ol>
<p><strong>data preprocess steps</strong></p>
<ol>
<li>Data Clean</li>
<li>Data Integration  [ɪntɪ’greɪʃ(ə)n]</li>
<li>Data Transformation</li>
<li>Data 规约</li>
</ol>
<p><img src="/images/py-datapreprocess.jpg" alt="preprocess steps"></p>
<h2 id="1-Data-Clean"><a href="#1-Data-Clean" class="headerlink" title="1. Data Clean"></a>1. Data Clean</h2><h3 id="1-1-缺失值处理"><a href="#1-1-缺失值处理" class="headerlink" title="1.1 缺失值处理"></a>1.1 缺失值处理</h3><table>
<thead>
<tr>
<th>插补方法</th>
<th>方法描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>均值、中位数、众数插补</td>
<td></td>
</tr>
<tr>
<td>使用固定值</td>
<td></td>
</tr>
<tr>
<td>最近临插补</td>
<td>接近样本的该属性值插补</td>
</tr>
<tr>
<td>回归方法</td>
<td>有缺失值的变量，根据已有数据和与其有关的其他变量的数据建立拟合模型来预测缺失的属性值</td>
</tr>
<tr>
<td>插值法</td>
<td>如 : 拉格朗日/牛顿 插值法。 $f(x_i)$</td>
</tr>
</tbody>
</table>
<h3 id="1-2-异常值处理"><a href="#1-2-异常值处理" class="headerlink" title="1.2 异常值处理"></a>1.2 异常值处理</h3><table>
<thead>
<tr>
<th>异常值处理方法</th>
<th>方法描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>删除含有异常值的记录</td>
<td>-</td>
</tr>
<tr>
<td>视为缺失值</td>
<td>-</td>
</tr>
<tr>
<td>平均值修正</td>
<td>-</td>
</tr>
<tr>
<td>不处理</td>
<td>-</td>
</tr>
</tbody>
</table>
<h2 id="2-Data-Integration"><a href="#2-Data-Integration" class="headerlink" title="2. Data Integration"></a>2. Data Integration</h2><p>数据挖掘需要的数据往往分布在不同的数据源中, 数据集成 就是多个数据源 合并在一个一致的地方存储。</p>
<p>Data-Integration，多数据源data表达形式可能有差异，所以可能需要考虑<code>实体识别</code>、<code>属性冗余</code> 等问题，将源数据在最底层加以转换、提炼、集成。</p>
<h2 id="3-Data-Transformation"><a href="#3-Data-Transformation" class="headerlink" title="3. Data Transformation"></a>3. Data Transformation</h2><p>对数据进行规范化处理，将数据转换成 “适当的” 形式，以适用于挖掘任务及算法的需要。</p>
<blockquote>
<p><a href="http://jingyan.baidu.com/article/f54ae2fc2354a31e92b84934.html" target="_blank" rel="external">正态分布</a> ： 平均数上下1.96个标准差的得分占到95%的总体</p>
</blockquote>
<h3 id="3-1-简单函数变换"><a href="#3-1-简单函数变换" class="headerlink" title="3.1 简单函数变换"></a>3.1 简单函数变换</h3><p>常用来 将 不具有正态分布的数据变换成具有正态分布的数据。</p>
<h3 id="3-2-规范化"><a href="#3-2-规范化" class="headerlink" title="3.2 规范化"></a>3.2 规范化</h3><p>数据规范化(归一化)处理是 数据挖掘 的一项基础工作。</p>
<blockquote>
<p>比如将 工资收入 属性值映射到 [-1, 1] 或者 [0, 1] 内。<br>数据规范化对于基于 距离 的挖掘算法比较重要。</p>
</blockquote>
<p>(1). 最小 - 最大 规范化<br>(2). 零 - 均值规范化<br>(3). 小数定标规范化</p>
<h3 id="3-3-连续属性离散化"><a href="#3-3-连续属性离散化" class="headerlink" title="3.3 连续属性离散化"></a>3.3 连续属性离散化</h3><p>如 分类算法 (ID3算法、Apriori算法等)，要求数据是 分类属性形式。需将连续属性变换成<strong>分类</strong>属性，即 <code>连续属性离散化</code>.</p>
<p>(1). 等宽法<br>(2). 等频法<br>(3). 基于聚类分析的方法</p>
<h3 id="3-4-属性构造"><a href="#3-4-属性构造" class="headerlink" title="3.4 属性构造"></a>3.4 属性构造</h3><p>为了提取更有用的信息，提高挖掘精度。自己根据原有属性构造新的有价值属性</p>
<blockquote>
<p>如 : 供入电量、供出电量。 推出 新属性  <code>线损率</code></p>
</blockquote>
<h3 id="3-5-小波变换"><a href="#3-5-小波变换" class="headerlink" title="3.5 小波变换"></a>3.5 小波变换</h3><p>一种新型的数据分析工具，近年来兴起的信号分析手段。小波分析理论和方法在信号处理、图像处理、语音处理、模式识别 等领域应用广泛。</p>
<h2 id="4-Data-规约"><a href="#4-Data-规约" class="headerlink" title="4. Data 规约"></a>4. Data 规约</h2><p>大数据集上进行复杂的数据挖掘需要很长时间，<code>数据规约</code> 产生更小但保持原数据完整性的新数据集。</p>
<p>(1). 属性规约<br>(2). 数值规约</p>
<h2 id="5-Python-主要数据预处理函数"><a href="#5-Python-主要数据预处理函数" class="headerlink" title="5. Python 主要数据预处理函数"></a>5. Python 主要数据预处理函数</h2><table>
<thead>
<tr>
<th>name</th>
<th>function</th>
<th>lib</th>
</tr>
</thead>
<tbody>
<tr>
<td>interpolate</td>
<td>一维、高维数据插值</td>
<td>Scipy</td>
</tr>
<tr>
<td>unique</td>
<td>得到单指元素List</td>
<td>Pandas / Numpy</td>
</tr>
<tr>
<td>isnull</td>
<td></td>
<td>Pandas</td>
</tr>
<tr>
<td>notnull</td>
<td></td>
<td>Pandas</td>
</tr>
<tr>
<td>PCA</td>
<td>对指标变量矩阵进行主成分分析</td>
<td>Scikit-Learn</td>
</tr>
<tr>
<td>random</td>
<td>生成随机矩阵</td>
<td>Numpy</td>
</tr>
</tbody>
</table>
<h2 id="6-Summary"><a href="#6-Summary" class="headerlink" title="6. Summary"></a>6. Summary</h2><ul>
<li>Data Clean</li>
<li>Data Integration</li>
<li>Data Transformation</li>
<li>Data 规约</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python数据分析与挖掘实战 P3 data exploring]]></title>
      <url>http://iequa.com/2016/08/09/python-data-mining-p3-exploring/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$'], ['\[','\]'] ],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p><strong>data mining steps</strong></p>
<ol>
<li>挖掘目标</li>
<li>数据取样</li>
<li><code>数据探索</code></li>
<li>数据预处理</li>
<li>挖掘建模</li>
<li>模型评价</li>
</ol>
<h2 id="1-Data-Quality-analysis"><a href="#1-Data-Quality-analysis" class="headerlink" title="1. Data Quality analysis"></a>1. Data Quality analysis</h2><h3 id="1-1-脏数据"><a href="#1-1-脏数据" class="headerlink" title="1.1 脏数据"></a>1.1 脏数据</h3><ul>
<li>缺失值</li>
<li>异常值</li>
<li>不一致值</li>
<li>重复数据及含有特殊符号 (如: #、*) 的数据。</li>
</ul>
<p><strong>缺失值</strong></p>
<p>(1). 缺失值的影响</p>
<ul>
<li>data mining model 将丢失大量的有用信息</li>
<li>data mining model 不确定性增加，model 蕴涵的规律更难把握</li>
<li>包含 NULL 值的数据会使 model 过程陷入混乱, 导致不可靠输出</li>
</ul>
<p>(2). 缺失值的分析</p>
<ul>
<li>处理可以选择忽略，或者补全等。</li>
</ul>
<p><strong>异常值</strong></p>
<blockquote>
<p>异常值 是指样本中的个别值, 其数值明显偏离其余的观测值。也称为 离群点。</p>
</blockquote>
<ul>
<li>简单统计量分析（0~199 age）</li>
<li>3 $\sigma$ 原则 ( $p(|x-u| &gt; 3\sigma|) &lt;= 0.003$)</li>
<li>箱型图分析</li>
</ul>
<blockquote>
<p>3 $\sigma$ 原则 (服从正态分布下，异常值定义为测定值与均值超过3倍标准差的值 $p(|x-u| &gt; 3\sigma|) &lt;= 0.003$)</p>
</blockquote>
<h2 id="2-Data-Feature-analysis"><a href="#2-Data-Feature-analysis" class="headerlink" title="2. Data Feature analysis"></a>2. Data Feature analysis</h2><h3 id="2-1-定量数据的分布分析"><a href="#2-1-定量数据的分布分析" class="headerlink" title="2.1 定量数据的分布分析"></a>2.1 定量数据的分布分析</h3><ol>
<li>极差</li>
<li>组距、组数</li>
<li>分点、频率</li>
</ol>
<h3 id="2-2-对比分析"><a href="#2-2-对比分析" class="headerlink" title="2.2 对比分析"></a>2.2 对比分析</h3><ol>
<li>绝对数</li>
<li>相对数</li>
</ol>
<h3 id="2-3-统计量分析"><a href="#2-3-统计量分析" class="headerlink" title="2.3 统计量分析"></a>2.3 统计量分析</h3><p>用统计指标对定量数据进行统计描述，常从集中趋势和离中趋势两个方面进行分析。</p>
<ul>
<li>集中度量 : <strong>均值</strong> &amp; <strong>中位数</strong>  </li>
<li>离中度量 : <strong>标准差 (方差)、四分位间距</strong>  </li>
</ul>
<p><strong>(1). 集中趋势度量</strong>  </p>
<ol>
<li>均值</li>
<li>中位数</li>
<li>众数</li>
</ol>
<p><strong>(2). 离中趋势度量</strong>  </p>
<ol>
<li>极差</li>
<li>标准差</li>
<li>变异系数</li>
<li>四分位数间距</li>
</ol>
<blockquote>
<p>变异系数度量 标准差 相对于 均值的离中趋势</p>
</blockquote>
<p>statistics_analyze.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#餐饮销量数据统计量分析</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">catering_sale = <span class="string">'../data/catering_sale.xls'</span> <span class="comment">#餐饮数据</span></span><br><span class="line">data = pd.read_excel(catering_sale, index_col = <span class="string">u'日期'</span>) <span class="comment">#读取数据，指定“日期”列为索引列</span></span><br><span class="line">data = data[(data[<span class="string">u'销量'</span>] &gt; <span class="number">400</span>)&amp;(data[<span class="string">u'销量'</span>] &lt; <span class="number">5000</span>)] <span class="comment">#过滤异常数据</span></span><br><span class="line">statistics = data.describe() <span class="comment">#保存基本统计量</span></span><br><span class="line"></span><br><span class="line">statistics.loc[<span class="string">'range'</span>] = statistics.loc[<span class="string">'max'</span>]-statistics.loc[<span class="string">'min'</span>] <span class="comment">#极差</span></span><br><span class="line">statistics.loc[<span class="string">'var'</span>] = statistics.loc[<span class="string">'std'</span>]/statistics.loc[<span class="string">'mean'</span>] <span class="comment">#变异系数</span></span><br><span class="line">statistics.loc[<span class="string">'dis'</span>] = statistics.loc[<span class="string">'75%'</span>]-statistics.loc[<span class="string">'25%'</span>] <span class="comment">#四分位数间距</span></span><br><span class="line"></span><br><span class="line">print(statistics)</span><br></pre></td></tr></table></figure>
<p>Output</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">           销量</span><br><span class="line">count   195.000000</span><br><span class="line">mean   2744.595385</span><br><span class="line">std     424.739407</span><br><span class="line">min     865.000000</span><br><span class="line">25%    2460.600000</span><br><span class="line">50%    2655.900000</span><br><span class="line">75%    3023.200000</span><br><span class="line">max    4065.200000</span><br><span class="line">range  3200.200000</span><br><span class="line">var       0.154755</span><br><span class="line">dis     562.600000</span><br></pre></td></tr></table></figure>
<h3 id="2-4-周期性分析"><a href="#2-4-周期性分析" class="headerlink" title="2.4 周期性分析"></a>2.4 周期性分析</h3><h3 id="2-5-贡献度分析"><a href="#2-5-贡献度分析" class="headerlink" title="2.5 贡献度分析"></a>2.5 贡献度分析</h3><blockquote>
<p>贡献度分析 称 帕累托分析。原理是 帕累托 法则。又称 20/80 定律。同样的投入放在不同的地方会产生不同的效益。对于 公司 来说，一般情况都是 80% 的利润常常来自于 20% 最畅销的产品。</p>
</blockquote>
<h3 id="2-6-相关性分析"><a href="#2-6-相关性分析" class="headerlink" title="2.6 相关性分析"></a>2.6 相关性分析</h3><blockquote>
<p>分析连续变量之间线性相关程序的强弱，并用适当的统计指标表示出来的过程称为相关分析。</p>
</blockquote>
<ol>
<li>直接绘制散点图</li>
<li>绘制散点图矩阵</li>
<li>计算相关系数</li>
</ol>
<p><strong>计算机相关系数</strong></p>
<p>(1). Pearson 相关系数</p>
<p>一般用于分析两个连续性变量之间的关系</p>
<p>(2). Spearman 轶相关系数</p>
<p>不服从正态分布的变量, 分类或等级变量之间的相关性可采用 Spearman 轶相关系数。</p>
<p>(3). 判定系数</p>
<p>判定系数 是相关系数的平方，用 $r^2$ 表示; 用来衡量回归方式对 $y$ 的解释程度。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">           百合酱蒸凤爪    翡翠蒸香茜饺   金银蒜汁蒸排骨     乐膳真味鸡     蜜汁焗餐包      生炒菜心    铁板酸菜豆腐</span><br><span class="line">百合酱蒸凤爪   1.000000  0.009206  0.016799  0.455638  0.098085  0.308496  0.204898   </span><br><span class="line">翡翠蒸香茜饺   0.009206  1.000000  0.304434 -0.012279  0.058745 -0.180446 -0.026908   </span><br><span class="line">金银蒜汁蒸排骨  0.016799  0.304434  1.000000  0.035135  0.096218 -0.184290  0.187272   </span><br><span class="line">乐膳真味鸡    0.455638 -0.012279  0.035135  1.000000  0.016006  0.325462  0.297692   </span><br><span class="line">蜜汁焗餐包    0.098085  0.058745  0.096218  0.016006  1.000000  0.308454  0.502025   </span><br><span class="line">生炒菜心     0.308496 -0.180446 -0.184290  0.325462  0.308454  1.000000  0.369787   </span><br><span class="line">铁板酸菜豆腐   0.204898 -0.026908  0.187272  0.297692  0.502025  0.369787  1.000000</span><br></pre></td></tr></table></figure>
<h2 id="3-Python-data-discovery-function"><a href="#3-Python-data-discovery-function" class="headerlink" title="3. Python data discovery function"></a>3. Python data discovery function</h2><h3 id="3-1-feature-functions"><a href="#3-1-feature-functions" class="headerlink" title="3.1 feature functions"></a>3.1 feature functions</h3><table>
<thead>
<tr>
<th>name</th>
<th>function</th>
<th>lib</th>
</tr>
</thead>
<tbody>
<tr>
<td>D.sum()</td>
<td>data sample 总和 (按列计算)</td>
<td>pandas</td>
</tr>
<tr>
<td>mean()</td>
<td>算术平均数</td>
<td>pandas</td>
</tr>
<tr>
<td>var()</td>
<td>方差</td>
<td>pandas</td>
</tr>
<tr>
<td>std()</td>
<td>标准差</td>
<td>pandas</td>
</tr>
<tr>
<td>corr()</td>
<td>Spearman (Pearson)相关系数矩阵</td>
<td>pandas</td>
</tr>
<tr>
<td>cov()</td>
<td>协方差矩阵</td>
<td>pandas</td>
</tr>
<tr>
<td>skew()</td>
<td>样本值的偏度(三阶矩)</td>
<td>pandas</td>
</tr>
<tr>
<td>kurt()</td>
<td>样本值的峰度(四阶矩)</td>
<td>pandas</td>
</tr>
<tr>
<td>describe()</td>
<td>给出样本的基本描述(如：mean, var 等基本统计量)</td>
<td>pandas</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>name</th>
<th>function</th>
<th>lib</th>
</tr>
</thead>
<tbody>
<tr>
<td>cumsum()</td>
<td>依次给出前 1、2、3…n 个数的 sum</td>
<td>pandas</td>
</tr>
<tr>
<td>cumprod()</td>
<td>依次给出前 1、2、3…n 个数的 积</td>
<td>pandas</td>
</tr>
<tr>
<td>cummax()</td>
<td>依次给出前 1、2、3…n 个数的 max</td>
<td>pandas</td>
</tr>
<tr>
<td>cummin()</td>
<td>依次给出前 1、2、3…n 个数的 min</td>
<td>pandas</td>
</tr>
<tr>
<td>rolling_sum()</td>
<td>计算data sample的总和(按列计算)</td>
<td>pandas</td>
</tr>
<tr>
<td>rolling_mean()</td>
<td>计算data sample的算术平均数</td>
<td>pandas</td>
</tr>
<tr>
<td>rolling_var()</td>
<td>计算data sample的方差</td>
<td>pandas</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
<td>pandas</td>
</tr>
</tbody>
</table>
<h3 id="3-2-make-picture-functions"><a href="#3-2-make-picture-functions" class="headerlink" title="3.2 make-picture functions"></a>3.2 make-picture functions</h3><table>
<thead>
<tr>
<th>name</th>
<th>function</th>
<th>lib</th>
</tr>
</thead>
<tbody>
<tr>
<td>plot()</td>
<td>绘制线性二维图、折线图</td>
<td>Matplotlib / Pandas</td>
</tr>
<tr>
<td>pie()</td>
<td>绘制线饼型图</td>
<td>Matplotlib / Pandas</td>
</tr>
<tr>
<td>hist()</td>
<td>绘制线性二维条形直方图，可显示数据的分配情形</td>
<td>Matplotlib / Pandas</td>
</tr>
<tr>
<td>boxplot()</td>
<td>绘制样本数据的箱型图</td>
<td>Pandas</td>
</tr>
<tr>
<td>plot(logy=true)</td>
<td>绘制 $y$ 轴的对数图形</td>
<td>Pandas</td>
</tr>
<tr>
<td>plot(yerr=error)</td>
<td>绘制误差条形图</td>
<td>Pandas</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment">#导入图像库</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'SimHei'</span>] <span class="comment">#用来正常显示中文标签</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="keyword">False</span> <span class="comment">#用来正常显示负号</span></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>, <span class="number">5</span>)) <span class="comment"># 创建图像区域，指定比例</span></span><br><span class="line">...</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<h2 id="4-Summary"><a href="#4-Summary" class="headerlink" title="4. Summary"></a>4. Summary</h2><ul>
<li>Data Quality analysis</li>
<li>Data Feature analysis</li>
<li>Data discovery function</li>
</ul>
<blockquote>
<p>Data Feature analysis 在数据挖掘建模之前，通过 <code>频率分布分析</code>、对比分析、周期性分析、<code>相关性分析</code> 等方法，对 data sample 的 feature 规律 进行分析，了解数据的规律和趋势，为数据挖掘提供支持。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hobbies and interests]]></title>
      <url>http://iequa.com/2016/08/07/ef-l3u1-Hobbies-and-interests/</url>
      <content type="html"><![CDATA[<style>
img {
        display: block !important;
        width: 500px;
        margin-left: 200px !important;
}
</style>

<h2 id="1-Talking-about-your-hobbies-and-interests"><a href="#1-Talking-about-your-hobbies-and-interests" class="headerlink" title="1. Talking about your hobbies and interests"></a>1. Talking about your hobbies and interests</h2><ul>
<li>stamp collecting、taking photographs</li>
<li>woodworking、reading、running</li>
<li>cooking、drawing、sewing [ˈsəʊɪŋ] </li>
</ul>
<p><img src="/images/english/ef-l3u1l1-2.png" alt=""></p>
<ul>
<li>traveling、oil painting、gardening、camping</li>
<li>birdwatching、grow vegetables</li>
<li>going to the theater [‘θɪətə]</li>
<li>going to an exhibit [ɪg’zɪbɪt]</li>
<li>collecting comic books [‘kɒmɪk]</li>
</ul>
<p><img src="/images/english/ef-l3u1l2-1.png" alt=""></p>
<h3 id="be-good-at-be-interested-in"><a href="#be-good-at-be-interested-in" class="headerlink" title="be good at = be interested in"></a>be good at = be interested in</h3><p>A: <font color="#c7254e">What are you interested in?</font>  </p>
<p>A: What do you like doing?<br>B: I’m into doing things at home.  </p>
<p>A: Are you good at (interested in) cooking?<br>B: She’s good at drawing.</p>
<p>A: <font color="#c7254e">What do you like to do in your free time?</font><br>B: I enjoy stamp collecting.<br>B: I like getting together with friends.</p>
<h2 id="2-Asking-people-about-their-interests"><a href="#2-Asking-people-about-their-interests" class="headerlink" title="2. Asking people about their interests"></a>2. Asking people about their interests</h2><p>A: <font color="#c7254e">How often</font> do you travel?<br>B: Well, I go to China every summer.</p>
<p>A: <font color="#c7254e">Do you ever</font> go fishing?<br>B: No, I don’t. </p>
<p>A : <font color="#c7254e">What do you usually do?</font><br>B : Well, I watch TV. And I sometimes read comic books.</p>
<p>A: I do fun things near home.<br>B: <font color="#c7254e">Like what?</font><br>A: Like collecting comic books.  </p>
<p>A: <font color="#c7254e">What else do you like to do?</font><br>B: Well, I really like gardening.</p>
<h3 id="frequency"><a href="#frequency" class="headerlink" title="frequency"></a>frequency</h3><p>100% = always、80% = usually、60% = often<br>40% = sometimes、20% = rarely、0% = never  </p>
<h2 id="3-Talking-about-musical-instruments"><a href="#3-Talking-about-musical-instruments" class="headerlink" title="3. Talking about musical instruments"></a>3. Talking about musical instruments</h2><ul>
<li>cello piano guitar</li>
<li>violin trumpet drums</li>
<li>flute saxophone</li>
</ul>
<p><img src="/images/english/ef-l3u1l3-1.png" alt=""></p>
<p>Three people in my family can play a <code>musical instrument</code>. I play the saxophone. My father and mother play the violin. My sister can’t play an instrument, but she can sing. Sometimes, people ask us to play a song.</p>
<p><strong>My Piano and Me</strong></p>
<p>I’m really into my piano. It’s very old and has a beautiful sound. Sometimes my friends come to my house. They enjoy listening to me play. They always ask me to play a new song. I can say beautiful things with piano music.</p>
<h2 id="4-Making-plans-for-a-visitor"><a href="#4-Making-plans-for-a-visitor" class="headerlink" title="4. Making plans for a visitor"></a>4. Making plans for a visitor</h2><p><img src="/images/english/ef-l3u1l4.png" alt=""></p>
<table>
<thead>
<tr>
<th><strong>Main Dialog</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>[JOAN] Hi. Listen, Carlos, <code>do you have any plans</code> this weekend?</td>
<td></td>
</tr>
<tr>
<td>[Carlos] No , Why?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Gonzales is visiting. He’s the manager of the Mexico City office. And I’m <code>out of town</code> all weekend.</td>
<td></td>
</tr>
<tr>
<td>[Carlos] Right?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Can you show him around? Carlos  It’s really important.</td>
<td></td>
</tr>
<tr>
<td>[Carlos] Of course，show him around。 <code>What&#39;s He interested in</code>?</td>
<td></td>
</tr>
<tr>
<td>[JOAN] I know he enjoys eating out.</td>
<td></td>
</tr>
<tr>
<td>[CARLOS] Well, I know a lot of good restaurants.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Oh, and he’s really into art.</td>
<td></td>
</tr>
<tr>
<td>[CARLOS] There’s probably a good exhibition at the art museum.</td>
<td></td>
</tr>
<tr>
<td>[JOAN] Great. Thank you. Look - you can have two extra days’ vacation for this.</td>
<td></td>
</tr>
<tr>
<td>[CARLOS] really? Thanks.</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[晚上老是做梦怎么办]]></title>
      <url>http://iequa.com/2016/08/07/life-health-sleep/</url>
      <content type="html"><![CDATA[<h2 id="1-睡觉前尽量不要多想"><a href="#1-睡觉前尽量不要多想" class="headerlink" title="1. 睡觉前尽量不要多想"></a>1. 睡觉前尽量不要多想</h2><p>我有时候也经常这样，躺到床上不是尽快的入睡而是胡思乱想，想想今天干了些什么啦，有些什么新鲜事了，明天又有什么事情要做。这样的结果导致了睡觉睡不好，老是半夜被梦惊醒（噩梦）。因此我们睡觉前最好不要多想，让自己平静一些，尽快的进入梦乡，即使是做梦也做个好梦。</p>
<p><img src="/images/sleep01.jpg" width="460" height="300" img=""></p>
<h2 id="2-睡前可以听一些轻音乐"><a href="#2-睡前可以听一些轻音乐" class="headerlink" title="2. 睡前可以听一些轻音乐"></a>2. 睡前可以听一些轻音乐</h2><p>听一些音乐可以缓解我们的心情，尤其是轻音乐，可以使我们的大脑得到放松，不至于有太大的压力。我们还可以尽快的入睡，我睡觉前就比较喜欢听一些歌，戴上耳机，放低音量，使自己尽快的入睡。相信这样我们可以一觉睡到天亮，就不会再做恶梦了。</p>
<p><img src="/images/sleep02.jpg" width="460" height="300" img=""></p>
<h2 id="3-睡觉前不要再做过多的事情"><a href="#3-睡觉前不要再做过多的事情" class="headerlink" title="3. 睡觉前不要再做过多的事情"></a>3. 睡觉前不要再做过多的事情</h2><p>给自己一个缓冲的时间。忙了一天的工作，回到家就要歇一歇了。睡觉之前就更不要再做事情忙工作了，给自己一个休息的时间，睡觉前也可以得到放松。有了这样一个缓冲的时间，晚上也就不会再梦到工作，电脑，忙碌了。</p>
<p><img src="/images/life-sleep-03.jpg" alt="sleep3"></p>
<h2 id="4-早一点入睡"><a href="#4-早一点入睡" class="headerlink" title="4. 早一点入睡"></a>4. 早一点入睡</h2><p>调整好自己的作息。很多人会说睡的迟一点，入睡很快。但是有时候我们睡得越是迟，反而越睡不着，脑袋也总是浮现很多的画面，晚上又是做梦。所以记得要早睡早起，安排好自己的作息时间表，良好的习惯可以保证我们的睡眠质量。</p>
<p><img src="/images/life-sleep-04.jpg" alt="sleep4"></p>
<h2 id="5-如没有改善，则去看医生。"><a href="#5-如没有改善，则去看医生。" class="headerlink" title="5. 如没有改善，则去看医生。"></a>5. 如没有改善，则去看医生。</h2><p><a href="http://jingyan.baidu.com/album/92255446e82440851648f409.html?picindex=1" target="_blank" rel="external">转自百度经验</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MAC OSX Update Python Version]]></title>
      <url>http://iequa.com/2016/08/04/ops-macosx-update-python-version/</url>
      <content type="html"><![CDATA[<blockquote>
<p>by update Python 3.5.2 as example</p>
</blockquote>
<h2 id="1-Download"><a href="#1-Download" class="headerlink" title="1. Download"></a>1. Download</h2><ul>
<li><a href="https://www.python.org/downloads/mac-osx/" target="_blank" rel="external">https://www.python.org/downloads/mac-osx/</a></li>
<li>Latest Python 3 Release - Python 3.5.2</li>
</ul>
<h2 id="2-Install"><a href="#2-Install" class="headerlink" title="2. Install"></a>2. Install</h2><ul>
<li>python-3.5.2-macosx10.6.pkg</li>
</ul>
<h2 id="3-Update"><a href="#3-Update" class="headerlink" title="3. Update"></a>3. Update</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#python版号需要修改两个地方</span></span><br><span class="line"><span class="comment">#1. new_version</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sudo -i #得到超级权限</span></span><br><span class="line">new_version=<span class="string">"3.5"</span></span><br><span class="line"></span><br><span class="line">PYPATH=/System/Library/Frameworks/Python.framework/Versions/<span class="string">"<span class="variable">$new_version</span>"</span></span><br><span class="line"><span class="comment">#第1步 移动新版python到mac默认目录下</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"move.."</span></span><br><span class="line">mv /Library/Frameworks/Python.framework/Versions/<span class="string">"<span class="variable">$new_version</span>"</span> /System/Library/Frameworks/Python.framework/Versions/</span><br><span class="line"><span class="comment">#第2步 改变用户目录的用户组</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"chown.."</span></span><br><span class="line">chown -R root:wheel <span class="variable">$&#123;PYPATH&#125;</span></span><br><span class="line"><span class="comment">#第3步 删除原来2.7的链接文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"del.."</span></span><br><span class="line">rm /System/Library/Frameworks/Python.framework/Versions/Current</span><br><span class="line"><span class="comment">#第4步 重新链接到最新版本的python</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ln.."</span></span><br><span class="line">ln <span class="_">-s</span> <span class="variable">$&#123;PYPATH&#125;</span> /System/Library/Frameworks/Python.framework/Versions/Current</span><br><span class="line"><span class="comment">#第5步 删除旧的命令符号链接</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rm.."</span></span><br><span class="line">rm /usr/bin/&#123;pydoc,python,pythonw,python-config&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ln bin.."</span></span><br><span class="line"><span class="comment">#第6步 重新建立新的命令符号链接</span></span><br><span class="line">ln <span class="_">-s</span> <span class="variable">$&#123;PYPATH&#125;</span>/bin/pydoc<span class="string">"<span class="variable">$new_version</span>"</span> /usr/bin/pydoc</span><br><span class="line">ln <span class="_">-s</span> <span class="variable">$&#123;PYPATH&#125;</span>/bin/python<span class="string">"<span class="variable">$new_version</span>"</span> /usr/bin/python</span><br><span class="line">ln <span class="_">-s</span> <span class="variable">$&#123;PYPATH&#125;</span>/bin/pythonw<span class="string">"<span class="variable">$new_version</span>"</span> /usr/bin/pythonw</span><br><span class="line">ln <span class="_">-s</span> <span class="variable">$&#123;PYPATH&#125;</span>/bin/python<span class="string">"<span class="variable">$new_version</span>"</span>m-config /usr/bin/python-config</span><br><span class="line"></span><br><span class="line">python_param_list=`<span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin &amp;&amp; ls -al |grep <span class="string">"Python"</span>|awk <span class="string">'ORS=" " &#123;print $9&#125;'</span>`</span><br><span class="line"><span class="comment">#第7步 修复其他链接</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$python_param_list</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"info: <span class="variable">$i</span>"</span></span><br><span class="line">    rm <span class="_">-f</span> /usr/<span class="built_in">local</span>/bin/<span class="variable">$&#123;i&#125;</span></span><br><span class="line">    ln -sv /System/Library/Frameworks/Python.framework/Versions/<span class="string">"<span class="variable">$new_version</span>"</span>/bin/<span class="variable">$&#123;i&#125;</span> /usr/<span class="built_in">local</span>/bin/<span class="variable">$&#123;i&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第8步 环境变量要修改为最新的版本号</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=/System/Library/Frameworks/Python.framework/Versions/3.5/bin:$&#123;PATH&#125;'</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=/System/Library/Frameworks/Python.framework/Versions/3.5/bin:$&#123;PATH&#125;'</span> &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> <span class="comment">#退出超级权限</span></span><br></pre></td></tr></table></figure>
<h2 id="4-Verifiy"><a href="#4-Verifiy" class="headerlink" title="4. Verifiy"></a>4. Verifiy</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  ~ Python -V</span><br><span class="line">Python 3.5.2</span><br><span class="line">➜  ~</span><br></pre></td></tr></table></figure>
<h2 id="5-Refence-article"><a href="#5-Refence-article" class="headerlink" title="5. Refence article"></a>5. Refence article</h2><ul>
<li><a href="http://blog.csdn.net/wirelessqa/article/details/23261723" target="_blank" rel="external">老毕码农</a></li>
<li><a href="http://www.jianshu.com/p/1a002847265e" target="_blank" rel="external">mac pycharm 切换PYTHON版本</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Data Mining and Analysis environment]]></title>
      <url>http://iequa.com/2016/08/02/ml-python-env/</url>
      <content type="html"><![CDATA[<p>这是用 Python 进行数据分析挖掘的一小部分，包括 高维数组、数值计算、机器学习、神经网络 和 语言模型等。</p>
<a id="more"></a>
<h2 id="1-Python-data-analysis-intro"><a href="#1-Python-data-analysis-intro" class="headerlink" title="1. Python data analysis intro"></a>1. Python data analysis intro</h2><p><a href="http://www.python.org" target="_blank" rel="external">Python</a></p>
<ul>
<li>优雅的语法和动态类型</li>
<li>拥有高级数据结构、OO</li>
<li>Functional Programming</li>
<li>解释性、胶水语言，开发效率高</li>
<li>库丰富, NumPy, SciPy, Matplotlib, Pandas</li>
<li>适合于 Scientific Computing、Mathematical Modeling、Data mining …</li>
</ul>
<p><strong>import <code>future</code> feature</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from __futrue__ import print_function</span><br><span class="line">from __futrue__ import division</span><br></pre></td></tr></table></figure>
<p><strong>install third package</strong></p>
<blockquote>
<p>三种方式  </p>
<ol>
<li>下载源代码自行安装 : 安装灵活， 但需要自行解决上级依赖问题。  </li>
<li>用 pip 安装 : 比较方便，自动解决上级依赖问题  </li>
<li>系统自带的安装方式 : apt-get or brew ..</li>
</ol>
</blockquote>
<h3 id="1-1-Install-pip"><a href="#1-1-Install-pip" class="headerlink" title="1.1 Install pip"></a>1.1 Install pip</h3><blockquote>
<p>pip 是安装python包的工具，提供了安装包，列出已经安装的包，升级包以及卸载包的功能。<br>pip 是对easy_install的取代，提供了和easy_install相同的查找包的功能</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> python</span><br><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">sudo python get-pip.py</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">修改pip源 （可选）</span><br><span class="line">由于天朝原因,使用pip安装一些模块会特别慢甚至无法下载,因此我们需要修改pip的源到国内的一些镜像地址.</span><br><span class="line">cd ~</span><br><span class="line">mkdir .pip</span><br><span class="line">vim pip.conf</span><br><span class="line">添加以下两行</span><br><span class="line">[global]</span><br><span class="line">index-url = http://pypi.v2ex.com/simple</span><br><span class="line">把index-url的值设置为自己实际源的地址.</span><br><span class="line">至此pip源修改成功,以后使用pip安装模块时都会从这个源去下载安装.</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  tar.gz ll</span><br><span class="line">-rw-r--r-- 1 hp staff   1138794 Mar 11 16:09 pip-8.1.0.tar.gz</span><br><span class="line">-rw-r--r-- 1 hp staff    630700 Mar 11 13:38 setuptools-18.1.tar.gz</span><br><span class="line">tar -xvf setuptools-18.1.tar.gz</span><br><span class="line">tar -xvf pip-8.1.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> setuptools-18.1</span><br><span class="line">python setup.py build</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> pip-9.0.1/</span><br><span class="line">python setup.py build</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure>
<blockquote>
<p>9.0.1 见 <a href="https://pypi.python.org/pypi/pip" target="_blank" rel="external">https://pypi.python.org/pypi/pip</a></p>
</blockquote>
<p><strong>ipython</strong></p>
<blockquote>
<p>sudo pip install –upgrade ipython –ignore-installed six<br>sudo pip install notebook</p>
</blockquote>
<p>startup ipython notebook</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ipython notebook</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">PYSPARK_DRIVER_PYTHON=ipython PYSPARK_DRIVER_PYTHON_OPTS=<span class="string">"notebook --ip=192.168.140.159"</span> $SPARK_HOME/bin/pyspark</span><br></pre></td></tr></table></figure>
<h2 id="2-Python-Tools-for-data-analysis"><a href="#2-Python-Tools-for-data-analysis" class="headerlink" title="2. Python Tools for data analysis"></a>2. Python Tools for data analysis</h2><table>
<thead>
<tr>
<th>Extension lib</th>
<th>introduction</th>
</tr>
</thead>
<tbody>
<tr>
<td>Numpy</td>
<td>提供数组支持，以及相应的高效处理函数</td>
</tr>
<tr>
<td>Scipy</td>
<td>提供矩阵支持，以及矩阵相关的数值计算模块</td>
</tr>
<tr>
<td>Matplotlib</td>
<td>数据可视化工具，作图库</td>
</tr>
<tr>
<td>Pandas</td>
<td>数据分析和探索工具</td>
</tr>
<tr>
<td>StatsModels</td>
<td>统计建模和计量经济学，包括描述统计，统计模型估计和推断</td>
</tr>
<tr>
<td>Scikit-Learn</td>
<td>支持回归，分类，聚类 等强大的机器学习库</td>
</tr>
<tr>
<td>Keras</td>
<td>深度学习库，用于建立神经网络以及 deep learning model</td>
</tr>
<tr>
<td>Gensim</td>
<td>用来做 text topic model 的库</td>
</tr>
<tr>
<td>Pillow</td>
<td>旧版的PIL, 图片处理相关</td>
</tr>
<tr>
<td>OpenCV</td>
<td>video 处理相关</td>
</tr>
<tr>
<td>GMPY2</td>
<td>高精度计算相关</td>
</tr>
</tbody>
</table>
<hr>
<h3 id="2-1-Numpy"><a href="#2-1-Numpy" class="headerlink" title="2.1 Numpy"></a>2.1 Numpy</h3><p><a href="www.numpy.prg">Numpy</a> 提供了数据功能, 后续 Scipy、Matplotlib、Pandas 等都依赖于它。    </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo pip install numpy</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([<span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">print(<span class="string">"hello world 3.0 !"</span>)</span><br></pre></td></tr></table></figure>
<h3 id="2-2-Scipy"><a href="#2-2-Scipy" class="headerlink" title="2.2 Scipy"></a>2.2 Scipy</h3><blockquote>
<p>Numpy 提供了多维数据功能，但它只是数组，并不是矩阵。Scipy 提供了真正的矩阵，以及大量矩阵运算的对象和函数。<br>Scipy 依赖于 Numpy</p>
</blockquote>
<h3 id="2-3-Matplotlib"><a href="#2-3-Matplotlib" class="headerlink" title="2.3 Matplotlib"></a>2.3 Matplotlib</h3><blockquote>
<p>著名的绘图库，主要用于二维绘图，当然也可以进行三维绘图。<br>sudo pip install matplotlib </p>
</blockquote>
<h3 id="2-4-Pandas"><a href="#2-4-Pandas" class="headerlink" title="2.4 Pandas"></a>2.4 Pandas</h3><p>Pandas 是 Python 下最强大的数据分析 Tool，没有之一。Pandas 构建在 Numpy 之上。  </p>
<p><strong>Pandas Function</strong></p>
<ol>
<li>类SQL，CRUD</li>
<li>数据处理函数</li>
<li>时间序列分析功能</li>
<li>灵活处理缺失数据</li>
</ol>
<blockquote>
<p>sudo pip install pandas<br>sudo pip install xlrd<br>sudo pip install xlwt<br>《利用python进行数据分析》讲解详细，针对 Pandas。  </p>
</blockquote>
<p>Pandas 基本的数据结构是 : Series 和 DataFrame (它的每一列都是一个Series)。每个 Series 都会有一个对应的 Index，用来标记元。(Index类似于 SQL 主键)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">s = pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], index=[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]) <span class="comment"># 创建一个序列 s</span></span><br><span class="line">d2 = pd.DataFrame(s)</span><br><span class="line"></span><br><span class="line">d = pd.DataFrame([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]], columns=[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]) <span class="comment"># 创建一个 table</span></span><br><span class="line"></span><br><span class="line">d.head() <span class="comment"># 默认预览前 5 行</span></span><br><span class="line"></span><br><span class="line">d.describe() <span class="comment"># 数据基本统计量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件</span></span><br><span class="line">pd.read_excel(<span class="string">'data.xls'</span>) <span class="comment"># 读取 Excel 文件, 创建 DataFrame.</span></span><br><span class="line"><span class="comment"># pd.read_csv('data.csv', encoding='utf-8') # 读取文本, 一般指定 encoding</span></span><br></pre></td></tr></table></figure>
<h3 id="2-5-StatsModels"><a href="#2-5-StatsModels" class="headerlink" title="2.5 StatsModels"></a>2.5 StatsModels</h3><blockquote>
<p>StatsModels 主要是对，数据的读取、处理、探索，更加注重数据的统计建模分析，有 R 语言味道。<br>StatsModels 与 Pandas 结合, 成为 Python 下强大的数据挖掘组合。<br>sudo pip install StatsModels</p>
</blockquote>
<h3 id="2-6-Scikit-Learn"><a href="#2-6-Scikit-Learn" class="headerlink" title="2.6 Scikit-Learn"></a>2.6 Scikit-Learn</h3><blockquote>
<p>Scikit-Learn 强大的 ML 工具包。包括 数据预处理、分类、回归、聚类、预测 和 模型分析等。<br>Scikit-Learn 依赖于 Numpy、Scipy、Matplotlib。</p>
</blockquote>
<p><strong>install</strong></p>
<p>pip install scikit-learn 用 pip 安装这个包之后，在使用的时候会出现 ValueError: numpy.dtype has the wrong 等错误。</p>
<p><strong>solution fun</strong></p>
<p>sudo pip install cython<br>git clone <a href="https://github.com/scikit-learn/scikit-learn" target="_blank" rel="external">https://github.com/scikit-learn/scikit-learn</a><br>sudo make<br>sudo python setup.py install</p>
<blockquote>
<p>不安装 cython ，安装 scikit-learn 会报错。<br>这种方式 安装 scikit-learn 过程中的一些错误或警告不需要管。安装完成测试使用正常<br>pip list<br>scikit-learn (0.18.dev0)<br>scipy (0.13.0b1)</p>
</blockquote>
<h3 id="2-7-Keras"><a href="#2-7-Keras" class="headerlink" title="2.7 Keras"></a>2.7 Keras</h3><blockquote>
<p>神经网络model</p>
</blockquote>
<h3 id="2-8-Gensim"><a href="#2-8-Gensim" class="headerlink" title="2.8 Gensim"></a>2.8 Gensim</h3><blockquote>
<p>topic modelling for humans！NLP</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Bayes Model]]></title>
      <url>http://iequa.com/2016/06/22/ml-bayes-model/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$'], ['\[','\]'] ],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<blockquote>
<p>一个 民间学术“屌丝” 在死后才 逆袭 的故事</p>
</blockquote>
<a id="more"></a>
<p><strong>Content List</strong></p>
<ul>
<li>Bayes’ method</li>
<li>Bayes’ theorem</li>
<li>Application example</li>
<li>Naive Bayes Learning and classification</li>
<li>Parameter estimation of Naive Bayes Method</li>
</ul>
<table>
<thead>
<tr>
<th>symbol</th>
<th>meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td>\( x_j \)</td>
<td>第 $j$ 维特征</td>
</tr>
<tr>
<td>$ x $</td>
<td>一条样本的特征向量, $ x = (x_1, x_2, …, x_n) $</td>
</tr>
<tr>
<td>$ x^{(i)} $</td>
<td>第 $i$ 条样本</td>
</tr>
<tr>
<td>$ x^{(i)}_j $</td>
<td>第 $i$ 条样本的第$j$ 维特征</td>
</tr>
<tr>
<td>$ y^{(i)} $</td>
<td>第 $i$ 条样本的结果 (label)</td>
</tr>
<tr>
<td>\( X \)</td>
<td>所有样本的特征全集, 即 $X = (x^{(1)}, x^{(2)}, …, x^{(m)})^T$</td>
</tr>
<tr>
<td>\( Y \)</td>
<td>所有样本的label全集, 即 $Y = (y^{(1)}, y^{(2)}, … , y^{(m)})^T$</td>
</tr>
<tr>
<td>\( w \)</td>
<td>第 $j$ 维特征</td>
</tr>
<tr>
<td>\( w_j \)</td>
<td>参数向量， 即 $ w = (w_0, w_1, …, w_n) $</td>
</tr>
</tbody>
</table>
<p>这是一个 民间学术“屌丝” 在死后才 <strong>逆袭</strong> 的故事</p>
<p><img src="/images/ml-bayes-01.png" alt="bayes01.png"></p>
<p>Thomas Bayes（1702-1763）《An essay towards solving a problem in the doctrine of chances》</p>
<blockquote>
<p>对偶问题 </p>
<p>  :  在解决具体某个问题 P  的时候，往往由于参数、定义域等问题，不好直接处理。但可以把问题 P 转换成与之等价的问题 Q。通过解决 Q问题，来得到 P问题 的解。这时，Q问题就叫做P问题的“对偶问题”</p>
</blockquote>
<h2 id="1-Naive-Bayes-method"><a href="#1-Naive-Bayes-method" class="headerlink" title="1. Naive Bayes method"></a>1. Naive Bayes method</h2><blockquote>
<p>比如，一个朋友创业，你明明知道创业的结果就两种，即要么成功要么失败，但你依然会忍不住去估计他创业成功的几率有多大？你如果对他为人比较了解，而且有方法、思路清晰、有毅力、且能团结周围的人，你会不由自主的估计他创业成功的几率可能在80%以上。这种不同于 “非黑即白、非0即1”的思考方式，便是<strong>贝叶斯式的思考方式</strong>。</p>
</blockquote>
<h3 id="preface"><a href="#preface" class="headerlink" title="preface"></a>preface</h3><p>贝叶斯派 认为参数 $ \theta $ 是随机变量，而样本 $ \chi $ 是固定的，由于样本 $ \chi $ 是固定的，所以他们重点研究的是参数 $ \theta $ 的分布。</p>
<p>贝叶斯派 既然把 参数 $ \theta $ 看做是一个随机变量，所以要计算的分布，便得事先知道的无条件分布，即在有样本之前（或观察到X之前），有着怎样的分布呢？</p>
<p>比如往台球桌上扔一个球，这个球落会落在何处呢？如果是不偏不倚的把球抛出去，那么此球落在台球桌上的任一位置都有着相同的机会，即球落在台球桌上某一位置的概率服从均匀分布。这种在实验之前定下的属于基本前提性质的分布称为先验分布，或的无条件分布。</p>
<p>至此，贝叶斯派提出了一个思考问题的固定模式 :  </p>
<p><strong><code>先验分布 == 无条件分布</code></strong></p>
<p><strong>先验分布 $ \pi(\theta) $ + 样本信息 $ \chi $ =&gt; 后验分布  $ \pi(\theta | \chi ) $</strong></p>
<h3 id="先验信息"><a href="#先验信息" class="headerlink" title="先验信息"></a>先验信息</h3><p>先验信息一般来源于经验跟历史资料。比如 : 林丹跟某选手对决，解说一般会根据林丹历次比赛的成绩对此次比赛的胜负做个大致的判断。</p>
<h3 id="后验分布"><a href="#后验分布" class="headerlink" title="后验分布"></a>后验分布</h3><p>  而后验分布  $ \pi(\theta | \chi ) $ 一般也认为是在给定样本 $ \chi $ 的情况下的 $ \theta $ 条件分布，而使  $ \pi(\theta | \chi ) $ 达到最大的值 $ \theta_{MD} $ 称为最大后验估计，类似于经典统计学中的极大似然估计。</p>
<blockquote>
<p> 综合起来看，则好比是人类刚开始时对大自然只有少得可怜的先验知识，但随着不断观察、实验获得更多的样本、结果，使得人们对自然界的规律摸得越来越透彻。所以，贝叶斯方法既符合人们日常生活的思考方式，也符合人们认识自然的规律，经过不断的发展，最终占据统计学领域的半壁江山。</p>
</blockquote>
<h2 id="2-Naive-Bayes-theorem"><a href="#2-Naive-Bayes-theorem" class="headerlink" title="2. Naive Bayes theorem"></a>2. Naive Bayes theorem</h2><p><strong>条件概率</strong>（又称后验概率）就是事件 $A$ 在另外一个事件 $B$ 已经发生条件下的发生概率。条件概率表示为 $P(A|B)$</p>
<p>$$<br>P(A|B) = \frac{P(A \bigcap B)}{P(B)}<br>$$</p>
<blockquote>
<p>联合概率 ${P(A \bigcap B)}$ , ${P(A, B)}$</p>
<p>事件 $B$ 发生之前，我们对事件 $A$ 的发生有一个基本的概率判断，称为 $A$ 的先验概率，用 $P(A)$ 表示；</p>
<p>事件 $B$ 发生之后，我们对事件 $A$ 的发生概率重新评估，称为 $A$ 的后验概率，用 $P(A|B)$ 表示；</p>
</blockquote>
<h2 id="3-Application-examples"><a href="#3-Application-examples" class="headerlink" title="3. Application examples"></a>3. Application examples</h2><p><strong>Google的拼写检查</strong></p>
<p><img src="/images/ml-speling.png" alt="speling"></p>
<p>用户输入一个单词时，可能拼写正确，也可能拼写错误。</p>
<p>如果把拼写正确的情况记做 $c$ （代表correct），拼写错误的情况记做 $w$（代表wrong），那么”拼写检查”要做的事情就是：在发生 $w$ 的情况下，试图推断出 $c$ 。</p>
<p>换言之：已知w，然后在若干个备选方案中，找出可能性最大的那个 $c$，也就是求的 $P(c|w)$ 最大值。</p>
<p>而根据贝叶斯定理，有：</p>
<p>$$<br>P(c|w) = \frac{P(w | c) * P(c)}{p(w)}<br>$$</p>
<blockquote>
<p>$P(c)$ 表示某个正确的词的出现”概率”，它可以用”频率”代替。如果我们有一个足够大的文本库，那么这个文本库中每个单词的出现频率，就相当于它的发生概率。</p>
<p>$P(w|c)$ 表示在试图拼写 $c$ 的情况下，出现拼写错误 $w$ 的概率。 简化为 “编辑距离”</p>
</blockquote>
<p><a href="http://norvig.com/spell-correct.html" target="_blank" rel="external">google_spell-correct</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Elasticsearch * Reference1.7 Introduce]]></title>
      <url>http://iequa.com/2016/06/04/elasticsearch-1.7-Introduce/</url>
      <content type="html"><![CDATA[<p>Elasticsearch Reference 1.7 Brief Introduce.</p>
<a id="more"></a>
<h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><h3 id="Restful-API"><a href="#Restful-API" class="headerlink" title="Restful API"></a>Restful API</h3><p><strong>Cluster health</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl &apos;localhost:9200/_cat/health?v&apos;</span><br><span class="line">curl &apos;localhost:9200/_cat/nodes?v&apos;</span><br></pre></td></tr></table></figure>
<p><strong>List ALL Indices</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl &apos;localhost:9200/_cat/indices?v&apos;</span><br></pre></td></tr></table></figure>
<p><strong>Create an Index</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XPUT &apos;localhost:9200/customer?pretty&apos;</span><br></pre></td></tr></table></figure>
<p><strong>Put data to Index</strong></p>
<p>Our JSON document: { “name”: “John Doe” }</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XPUT &apos;localhost:9200/customer/external/1?pretty&apos; -d &apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;John Doe&quot;</span><br><span class="line">&#125;&apos;</span><br></pre></td></tr></table></figure>
<p>And the response:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XPUT &apos;localhost:9200/customer/external/1?pretty&apos; -d &apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;John Doe&quot;</span><br><span class="line">&#125;&apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;customer&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;external&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;created&quot; : true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Get Data from Index</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XGET &apos;localhost:9200/customer/external/1?pretty&apos;</span><br></pre></td></tr></table></figure>
<p><strong>Detele an Index</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XDELETE &apos;localhost:9200/customer&apos;</span><br></pre></td></tr></table></figure>
<p>Restful Cmd @elasticsearch</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -X&lt;REST Verb&gt; &lt;Node&gt;:&lt;Port&gt;/&lt;Index&gt;/&lt;Type&gt;/&lt;ID&gt;</span><br></pre></td></tr></table></figure>
<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.7/api-conventions.html" target="_blank" rel="external">more_detail_info_for_elasticsearch</a></p>
<h3 id="Java-API"><a href="#Java-API" class="headerlink" title="Java API"></a>Java API</h3><p><a href="https://www.elastic.co/guide/en/elasticsearch/client/java-api/1.7/client.html" target="_blank" rel="external">more_info</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Elasticsearch installation plugins]]></title>
      <url>http://iequa.com/2016/05/17/elasticsearch-install-plugins/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Elasticsearch 扩展性非常好，有很多官方和第三方开发的插件</p>
</blockquote>
<a id="more"></a>
<h2 id="1-Elasticsearch-Install"><a href="#1-Elasticsearch-Install" class="headerlink" title="1. Elasticsearch-Install"></a>1. Elasticsearch-Install</h2><p>官网 : <a href="https://www.elastic.co/" target="_blank" rel="external">https://www.elastic.co/</a></p>
<p><strong>Install es</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">download elasticsearch-1.7.5.tar.gz</span><br><span class="line">cd usr/local/mySoft/deploy</span><br><span class="line">tar -xvf elasticsearch-1.7.5.tar.gz</span><br><span class="line">ln -s /usr/local/mySoft/deploy/elasticsearch-1.7.5/ elasticsearch</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">vim ~/.zshrc</span><br><span class="line">export ES_HOME=/usr/local/xSoft/elasticsearch</span><br></pre></td></tr></table></figure>
<p><strong>Config es</strong></p>
<p>$ES_HOME/config/elasticsearch.yml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cluster.name: elasticsearch_x</span><br><span class="line">node.name=test-node1</span><br></pre></td></tr></table></figure>
<p><strong>Startup</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./bin/elasticsearch</span><br><span class="line"></span><br><span class="line">./bin/elasticsearch -d -Xms512m -Xmx512m</span><br></pre></td></tr></table></figure>
<blockquote>
<p>运行之后，会产生 data 和 logs 目录</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  elasticsearch ll</span><br><span class="line">total 28</span><br><span class="line">-rw-r--r--  1 hp staff 11358 Feb  2 17:24 LICENSE.txt</span><br><span class="line">-rw-r--r--  1 hp staff   150 Feb  2 17:24 NOTICE.txt</span><br><span class="line">-rw-r--r--  1 hp staff  8700 Feb  2 17:24 README.textile</span><br><span class="line">drwxr-xr-x 14 hp staff   476 May 26 15:42 bin/</span><br><span class="line">drwxr-xr-x  4 hp staff   136 May 27 11:03 config/</span><br><span class="line">drwxr-xr-x  3 hp staff   102 May 26 11:01 data/</span><br><span class="line">drwxr-xr-x 26 hp staff   884 May 26 09:58 lib/</span><br><span class="line">drwxr-xr-x  7 hp staff   238 May 27 09:58 logs/</span><br><span class="line">drwxr-xr-x  7 hp staff   238 May 27 10:48 plugins/</span><br><span class="line">➜  elasticsearch</span><br></pre></td></tr></table></figure>
<p><strong>Verify</strong></p>
<p>open <a href="http://ip:9200/" target="_blank" rel="external">http://ip:9200/</a></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"status"</span> : <span class="number">200</span>,</span><br><span class="line">  <span class="attr">"name"</span> : <span class="string">"node01"</span>,</span><br><span class="line">  <span class="attr">"cluster_name"</span> : <span class="string">"elasticsearch_x"</span>,</span><br><span class="line">  <span class="attr">"version"</span> : &#123;</span><br><span class="line">    <span class="attr">"number"</span> : <span class="string">"1.7.5"</span>,</span><br><span class="line">    <span class="attr">"build_hash"</span> : <span class="string">"00f95f4ffca6de89d68b7ccaf80d148f1f70e4d4"</span>,</span><br><span class="line">    <span class="attr">"build_timestamp"</span> : <span class="string">"2016-02-02T09:55:30Z"</span>,</span><br><span class="line">    <span class="attr">"build_snapshot"</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"lucene_version"</span> : <span class="string">"4.10.4"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"tagline"</span> : <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-Elasticsearch-Head"><a href="#2-Elasticsearch-Head" class="headerlink" title="2. Elasticsearch-Head"></a>2. Elasticsearch-Head</h2><p>ElasticSearch-Head 是一个与Elastic集群（Cluster）相交互的 Web 前台。</p>
<p><img src="/images/elastic/es-header.png" alt="header.png"></p>
<p>ES-Head的主要作用</p>
<ul>
<li>它展现ES集群的拓扑结构，并且可以通过它来进行索引（Index）和节点（Node）级别的操作</li>
<li>它提供一组针对集群的查询API，并将结果以json和表格形式返回</li>
<li>它提供一些快捷菜单，用以展现集群的各种状态</li>
</ul>
<p><strong>Install-Verify</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">elasticsearch/bin/plugin install mobz/elasticsearch-head</span><br><span class="line">open ip:9200/_plugin/head/</span><br><span class="line">open ip:9200/_cluster/health?pretty</span><br></pre></td></tr></table></figure>
<h2 id="3-Elasticsearch-Kopf"><a href="#3-Elasticsearch-Kopf" class="headerlink" title="3. Elasticsearch-Kopf"></a>3. Elasticsearch-Kopf</h2><p>Kopf是一个ElasticSearch的管理工具，它也提供了对ES集群操作的API。</p>
<p><img src="/images/elastic/es-kopf.png" alt="613455-20160224102628443-1084839027.png"></p>
<p><strong>Install-Verify</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./elasticsearch/bin/plugin install lmenezes/elasticsearch-kopf/&#123;branch|version&#125;</span><br><span class="line">open http://localhost:9200/_plugin/kopf</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="4-Elasticsearch-bigdesk"><a href="#4-Elasticsearch-bigdesk" class="headerlink" title="4. Elasticsearch-bigdesk"></a>4. Elasticsearch-bigdesk</h2><p>Bigdesk为Elastic集群提供动态的图表与统计数据。</p>
<p><img src="/images/elastic/es-bigdesk.jpeg" alt="613455-20160224102646365-1432943551.jpg"></p>
<p><strong>Install-Verify</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bin/plugin -install lukas-vlcek/bigdesk</span><br><span class="line">删除bin/plugin --remove bigdesk</span><br><span class="line">open ip:9200/_plugin/bigdesk</span><br><span class="line">open ip:9200/_cluster/state?pretty</span><br></pre></td></tr></table></figure>
<h2 id="5-Elasticsearch-service"><a href="#5-Elasticsearch-service" class="headerlink" title="5. Elasticsearch-service"></a>5. Elasticsearch-service</h2><p>elasticsearch 作为一个系统service应用 ，可以安装elasticsearch-servicewrapper插件</p>
<p><a href="https://github.com/elastic/elasticsearch-servicewrapper" target="_blank" rel="external">github-es-service</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/elasticsearch/elasticsearch-servicewrapper</span><br><span class="line"></span><br><span class="line">下载该插件后，解压缩。将service目录拷贝到elasticsearch安装目录的bin目录下。</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  service ll</span><br><span class="line">total 76</span><br><span class="line">-rwxr-xr-x  1 hp staff 55710 May 26 15:42 elasticsearch*</span><br><span class="line">-rw-r--r--  1 hp staff  2610 May 26 15:42 elasticsearch.bat</span><br><span class="line">-rw-r--r--  1 hp staff  4754 May 26 15:42 elasticsearch.conf</span><br><span class="line">-rwxr-xr-x  1 hp staff    64 May 26 15:42 elasticsearch32*</span><br><span class="line">-rwxr-xr-x  1 hp staff    64 May 26 15:42 elasticsearch64*</span><br><span class="line">drwxr-xr-x 16 hp staff   544 May 26 15:42 exec/</span><br><span class="line">drwxr-xr-x 17 hp staff   578 May 26 15:42 lib/</span><br><span class="line">➜  service</span><br></pre></td></tr></table></figure>
<p>运行这个插件的好处是：elasticsearch 需要的jvm参数和其它配置都已经配置好了，非常方便。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sh elasticsearch start;</span><br><span class="line">sh elasticsearch restart;</span><br><span class="line">sh elasticsearch stop;</span><br></pre></td></tr></table></figure>
<p>在实际生产环境中，该插件基本把参数都配置好了。我们只需要修改一下jvm分配的内存空间就好了，如 :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set.default.ES_HEAP_SIZE=16384</span><br><span class="line">set.default.ES_MIN_MEM=16384</span><br><span class="line">set.default.ES_MAX_MEM=19660</span><br></pre></td></tr></table></figure>
<blockquote>
<p>第一次运行 elaticsearch 会产生 data-dir 与 log-dir</p>
<p>service log 在 logs/service.log 中。</p>
<p><a href="https://github.com/elastic/elasticsearch-servicewrapper" target="_blank" rel="external">more_info-service</a></p>
<p>Mac OS X Mountain Lion missing 32-bit Java<br>apple 6 maybe could</p>
</blockquote>
<hr>
<h2 id="6-Http-basic-server-plugin"><a href="#6-Http-basic-server-plugin" class="headerlink" title="6. Http-basic-server-plugin"></a>6. Http-basic-server-plugin</h2><p>不要裸奔，穿一套比基尼吧。</p>
<p>做一个简单的HTTP认证，elasticsearch-http-basic 提供了针对 ES HTTP 连接 的 IP白名单、密码权限 和  信任代理功能。</p>
<p>github :<br><a href="https://github.com/Asquera/elasticsearch-http-basic" target="_blank" rel="external">Asquera_http_basic</a></p>
<p><strong>Install-Verify</strong></p>
<p>elasticsearch-http-basic还不支持ES标准的bin/plugin install [github-name]/[repo-name]的安装方式, 所以按照如下方式安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p plugins/http-basic; </span><br><span class="line">mv elasticsearch-http-basic-1.5.1.jar plugins/http-basic</span><br></pre></td></tr></table></figure>
<p><strong>Config http-basic param</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http.basic.enabled: true</span><br><span class="line">http.basic.user: &quot;admin&quot;</span><br><span class="line">http.basic.password: &quot;admin&quot;</span><br><span class="line">http.basic.ipwhitelist: [&quot;localhost&quot;, &quot;127.0.0.1&quot;]</span><br><span class="line">http.basic.trusted_proxy_chains: []</span><br><span class="line">http.basic.log: true</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="7-Elasticsearch-sql"><a href="#7-Elasticsearch-sql" class="headerlink" title="7. Elasticsearch-sql"></a>7. Elasticsearch-sql</h2><p><img src="/images/elastic/es-sql.jpeg" alt="图片描述"></p>
<p><strong>install</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./plugin -u https://github.com/NLPchina/elasticsearch-sql/releases/download/1.4.5/elasticsearch-sql-1.4.5.zip --install sql</span><br></pre></td></tr></table></figure>
<p><strong>Verify</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">open http://node01:9200/_plugin/sql/</span><br></pre></td></tr></table></figure>
<p><strong>./bin/plugin –list</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  elasticsearch ./bin/plugin --list</span><br><span class="line">Installed plugins:</span><br><span class="line">    - bigdesk</span><br><span class="line">    - head</span><br><span class="line">    - http-basic</span><br><span class="line">    - jdbc</span><br><span class="line">    - kopf</span><br><span class="line">    - license</span><br><span class="line">    - shield</span><br><span class="line">    - sql</span><br></pre></td></tr></table></figure>
<h2 id="8-Elasticsearch-jdbc"><a href="#8-Elasticsearch-jdbc" class="headerlink" title="8. Elasticsearch-jdbc"></a>8. Elasticsearch-jdbc</h2><p>关系型数据库的同步插件</p>
<p><strong>install</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./plugin --install jdbc --url http://xbib.org/repository/org/xbib/elasticsearch/plugin/elasticsearch-river-jdbc/1.5.0.5/elasticsearch-river-jdbc-1.5.0.5-plugin.zip</span><br></pre></td></tr></table></figure>
<p>download and add mysql-driver</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -o mysql-connector-java-5.1.33.zip -L &apos;http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.33.zip/from/http://cdn.mysql.com/&apos;</span><br><span class="line"></span><br><span class="line">cp mysql-connector-java-5.1.33-bin.jar $ES_HOME/plugins/jdbc/</span><br><span class="line"></span><br><span class="line">chmod 644 $ES_HOME/plugins/jdbc/*</span><br></pre></td></tr></table></figure>
<p>停止river</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XDELETE &apos;localhost:9200/_river/my_jdbc_river/&apos;</span><br></pre></td></tr></table></figure>
<p><strong>Verify</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">open http://node01:9200/_nodes/node01/plugins?pretty=true</span><br></pre></td></tr></table></figure>
<h2 id="9-Basic-operation"><a href="#9-Basic-operation" class="headerlink" title="9. Basic operation"></a>9. Basic operation</h2><p><strong>查看该节点安装的所有插件列表</strong></p>
<p><strong><em><a href="http://node01:9200/_nodes/node01/plugins?pretty=true" target="_blank" rel="external">http://node01:9200/_nodes/node01/plugins?pretty=true</a></em></strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"cluster_name"</span> : <span class="string">"elasticsearch_x"</span>,</span><br><span class="line">  <span class="attr">"nodes"</span> : &#123;</span><br><span class="line">    <span class="attr">"nSitXzd8QvSxQRz3mni3BA"</span> : &#123;</span><br><span class="line">      <span class="attr">"name"</span> : <span class="string">"node01"</span>,</span><br><span class="line">      <span class="attr">"transport_address"</span> : <span class="string">"inet[/192.168.181.35:9300]"</span>,</span><br><span class="line">      <span class="attr">"host"</span> : <span class="string">"unix.local"</span>,</span><br><span class="line">      <span class="attr">"ip"</span> : <span class="string">"192.168.181.35"</span>,</span><br><span class="line">      <span class="attr">"version"</span> : <span class="string">"1.7.5"</span>,</span><br><span class="line">      <span class="attr">"build"</span> : <span class="string">"00f95f4"</span>,</span><br><span class="line">      <span class="attr">"http_address"</span> : <span class="string">"inet[/192.168.181.35:9200]"</span>,</span><br><span class="line">      <span class="attr">"plugins"</span> : [ &#123;</span><br><span class="line">        <span class="attr">"name"</span> : <span class="string">"sql"</span>,</span><br><span class="line">        <span class="attr">"version"</span> : <span class="string">"1.4.5"</span>,</span><br><span class="line">        <span class="attr">"description"</span> : <span class="string">"Use sql to query elasticsearch."</span>,</span><br><span class="line">        <span class="attr">"url"</span> : <span class="string">"/_plugin/sql/"</span>,</span><br><span class="line">        <span class="attr">"jvm"</span> : <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"site"</span> : <span class="literal">true</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"name"</span> : <span class="string">"http-basic-server-plugin"</span>,</span><br><span class="line">        <span class="attr">"version"</span> : <span class="string">"NA"</span>,</span><br><span class="line">        <span class="attr">"description"</span> : <span class="string">"HTTP Basic Server Plugin"</span>,</span><br><span class="line">        <span class="attr">"jvm"</span> : <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"site"</span> : <span class="literal">false</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"name"</span> : <span class="string">"bigdesk"</span>,</span><br><span class="line">        <span class="attr">"version"</span> : <span class="string">"NA"</span>,</span><br><span class="line">        <span class="attr">"description"</span> : <span class="string">"No description found."</span>,</span><br><span class="line">        <span class="attr">"url"</span> : <span class="string">"/_plugin/bigdesk/"</span>,</span><br><span class="line">        <span class="attr">"jvm"</span> : <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"site"</span> : <span class="literal">true</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"name"</span> : <span class="string">"head"</span>,</span><br><span class="line">        <span class="attr">"version"</span> : <span class="string">"NA"</span>,</span><br><span class="line">        <span class="attr">"description"</span> : <span class="string">"No description found."</span>,</span><br><span class="line">        <span class="attr">"url"</span> : <span class="string">"/_plugin/head/"</span>,</span><br><span class="line">        <span class="attr">"jvm"</span> : <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"site"</span> : <span class="literal">true</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"name"</span> : <span class="string">"kopf"</span>,</span><br><span class="line">        <span class="attr">"version"</span> : <span class="string">"1.5.7-SNAPSHOT"</span>,</span><br><span class="line">        <span class="attr">"description"</span> : <span class="string">"kopf - simple web administration tool for ElasticSearch"</span>,</span><br><span class="line">        <span class="attr">"url"</span> : <span class="string">"/_plugin/kopf/"</span>,</span><br><span class="line">        <span class="attr">"jvm"</span> : <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"site"</span> : <span class="literal">true</span></span><br><span class="line">      &#125; ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>XPUT data</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">curl -u admin:admin -XPUT http://node01:9200/megacorp/employee/1 -d '</span><br><span class="line"> &#123;</span><br><span class="line">     "first_name" : "John",</span><br><span class="line">     "last_name" :  "Smith",</span><br><span class="line">     "age" :        25,</span><br><span class="line">     "about" :      "I love to go rock climbing",</span><br><span class="line">     "interests": [ "sports", "music" ]</span><br><span class="line"> &#125;'</span><br></pre></td></tr></table></figure>
<p><strong>XGET data</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">curl -XGET 'localhost:9200/_count?pretty' -d '</span><br><span class="line"> &#123;</span><br><span class="line">     "query": &#123;</span><br><span class="line">         "match_all": &#123;&#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;'</span><br></pre></td></tr></table></figure>
<p>output</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"count"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="10-Reference-article"><a href="#10-Reference-article" class="headerlink" title="10. Reference article"></a>10. Reference article</h2><ol>
<li><a href="http://www.cnblogs.com/richaaaard/p/5212044.html" target="_blank" rel="external">csdn-004-Elasticsearch插件的介绍</a></li>
<li><a href="http://blog.csdn.net/shenfuli/article/details/49094935" target="_blank" rel="external">插件安装Head、Kopf与Bigdesk</a></li>
<li><a href="http://www.chepoo.com/elasticsearch-service-install.html" target="_blank" rel="external">chepoo.com/elasticsearch-service</a></li>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-service.html" target="_blank" rel="external">elastic.co/guide/</a></li>
<li><a href="https://github.com/NLPchina/elasticsearch-sql" target="_blank" rel="external">NLPchina/elasticsearch-sql</a></li>
<li><a href="https://github.com/elasticfence/elasticsearch-http-user-auth" target="_blank" rel="external">elasticsearch-http-user-auth</a> (这个我没有使用)</li>
<li><a href="http://guoze.me/2015/05/28/elasticsearch-http-basic-authentication/" target="_blank" rel="external">建造者说</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Elasticsearch * 入门]]></title>
      <url>http://iequa.com/2016/05/17/elasticsearch1-indoor/</url>
      <content type="html"><![CDATA[<p>Elasticsearch 是一个基于Apache Lucene(TM)的开源搜索引擎、<code>实时分布式搜索</code>和<code>分析引擎</code>。</p>
<a id="more"></a>
<blockquote>
<p>Lucene 是 成熟的<code>全文索引与信息检索(IR)库</code>，采用Java实现。信息检索式指文档搜索、文档内信息搜索或者文档相关的元数据搜索等操作。。</p>
<p>Solr是一个基于Lucene <code>java库的企业级搜索服务器</code>，包含XML/HTTP，JSON API，高亮查询结果，缓存，复制，还有一个WEB管理界面。Solr运行在Servlet容器中</p>
<p>2010 年 Elasticsearch 出现公开版本</p>
</blockquote>
<p><strong>Elasticsearch 涉及的技术</strong></p>
<ul>
<li>全文搜索</li>
<li>分析系统</li>
<li>分布式数据库</li>
</ul>
<p><strong>谁在使用 Elasticsearch?</strong></p>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/Wikipedia:%E9%A6%96%E9%A1%B5" target="_blank" rel="external">维基百科</a></li>
<li><a href="http://stackoverflow.com/" target="_blank" rel="external">StackOverflow</a></li>
<li><a href="https://github.com/libean" target="_blank" rel="external">Github</a><br>…</li>
</ul>
<h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h2><p>Elasticsearch 是 开源搜索引擎.</p>
<p><strong>Elasticsearch 不仅是全文搜索，还是：</strong></p>
<ul>
<li>分布式 实时文件存储，每个字段都被索引并可被搜索</li>
<li>分布式 实时分析搜索引擎</li>
<li>可扩展服务器，处理<strong>PB</strong>级结构化或非结构化数据</li>
</ul>
<p>这些功能被集成到一个服务里面，应用可通过 <code>RESTful API</code>、各种语言的<code>客户端</code>、<code>命令行</code> 与之交互。</p>
<p>Elasticsearch也使用Java开发并使用Lucene作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的<code>RESTful API</code>来隐藏Lucene的复杂性，从而让全文搜索变得简单。</p>
<p><a href="http://es.xiaoleilu.com/010_Intro/10_Installing_ES.html" target="_blank" rel="external">more_info_install_elaticsearch</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[deploy@node196 config]$ ll</span><br><span class="line">total 20</span><br><span class="line">-rw-rw-r--  1 deploy deploy 13915 May 10 10:02 elasticsearch.yml</span><br><span class="line">-rw-rw-r--. 1 deploy deploy  2054 Jul 16  2015 logging.yml</span><br><span class="line">[deploy@node196 config]$ pwd</span><br><span class="line">/home/deploy/elasticsearch-1.7.1/config</span><br></pre></td></tr></table></figure>
<p><strong>编辑 elasticsearch.yml</strong> </p>
<p>替代cluster.name的默认值，这样可以防止一个新启动的节点加入到相同网络中的另一个同名的集群中。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cluster.name: elasticsearch_your-company-name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#################################### Node #####################################</span><br><span class="line"></span><br><span class="line"># Node names are generated dynamically on startup, so you&apos;re relieved</span><br><span class="line"># from configuring them manually. You can tie this node to a specific name:</span><br><span class="line">#</span><br><span class="line">node.name: &quot;node196&quot;</span><br></pre></td></tr></table></figure>
<h2 id="2-API"><a href="#2-API" class="headerlink" title="2. API"></a>2. API</h2><h3 id="2-1-Java-API"><a href="#2-1-Java-API" class="headerlink" title="2.1 Java API"></a>2.1 Java API</h3><p><strong>节点客户端(node client)</strong></p>
<p>节点客户端以无数据节点(none data node)身份加入集群，换言之，它自己不存储任何数据，但是它知道数据在集群中的具体位置，并且能直接转发请求到对应的节点上。</p>
<p><strong>传输客户端(Transport client)</strong></p>
<p>更轻量的传输客户端 能发送请求到远程集群。它自己不加入集群，只是简单转发请求给集群中的节点。</p>
<blockquote>
<p>两个Java客户端都通过 9300端口 与 集群交互，使用 Elasticsearch传输协议(<code>Elasticsearch Transport Protocol</code>)。集群中的节点之间也通过 9300 port 进行通信。</p>
</blockquote>
<p><a href="https://www.elastic.co/guide/index.html" target="_blank" rel="external">more_info_Java-API</a></p>
<h3 id="2-2-RESTful-API"><a href="#2-2-RESTful-API" class="headerlink" title="2.2 RESTful API"></a>2.2 RESTful API</h3><ul>
<li>基于 HTTP 协议，以 JSON 为数据交互格式的 RESTful API</li>
</ul>
<blockquote>
<p>向 Elasticsearch 发出的请求的组成部分与其它普通的HTTP请求是一样的：<br>curl -X<verb> ‘<protocol>://<host>:<port>/<path></path>?<query_string>‘ -d ‘<body>‘</body></query_string></port></host></protocol></verb></p>
<p>VERB HTTP方法：GET, POST, PUT, HEAD, DELETE<br>…</p>
</blockquote>
<p>example : 查询集群中 文档数量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[deploy@node196 config]$ curl -u username:passwd -XGET &apos;localhost:9200/_count?pretty&apos; -d &apos;</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;     &quot;query&quot;: &#123;</span><br><span class="line">&gt;         &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; &#125;&apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;count&quot; : 100001234,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 376,</span><br><span class="line">    &quot;successful&quot; : 376,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -u name:pass -X DELETE http://ip:9200/your_index</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /coupon_seeker/coupon_seeker/_search?q=source:dianping</span><br><span class="line"></span><br><span class="line">curl -u name:pass -XGET &apos;http://192.168.181.xxx:9200/coupon_seeker/coupon_seeker/_search?q=source:dianping</span><br></pre></td></tr></table></figure>
<p>有条件的精确匹配删除命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -u name:pass -XDELETE &apos;http://192.168.181.xxx:9200/coupon_seeker/coupon_seeker/_query?pretty=true&apos; -d &apos;&#123;&quot;query&quot;:&#123;&quot;match&quot;:&#123;source:&quot;dianping&quot;&#125;&#125;&#125;&apos;</span><br></pre></td></tr></table></figure>
<h2 id="3-文档"><a href="#3-文档" class="headerlink" title="3. 文档"></a>3. 文档</h2><p><strong>面向文档</strong></p>
<p>Elasticsearch is document oriented，这意味着它可以存储整个 <code>object</code> 或 <code>document</code>。</p>
<p>Elasticsearch 还可以 索引(index) 每个文档的内容使之可以被 <strong>搜索</strong>。</p>
<p>可对 <code>document</code> （而非成行成列的数据）进行 <code>index</code>、<code>搜索</code>、<code>排序</code>、<code>过滤</code>。</p>
<p>这种理解数据的方式与以往完全不同，这也是 Elasticsearch 能够执行复杂的全文搜索的原因之一。</p>
<p><strong>JSON</strong> (JavaScript Object Notation)，文档序列化格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"email"</span>:      <span class="string">"john@smith.com"</span>,</span><br><span class="line">    <span class="attr">"first_name"</span>: <span class="string">"John"</span>,</span><br><span class="line">    <span class="attr">"last_name"</span>:  <span class="string">"Smith"</span>,</span><br><span class="line">    <span class="attr">"info"</span>: &#123;</span><br><span class="line">        <span class="attr">"bio"</span>:         <span class="string">"Eco-warrior and defender of the weak"</span>,</span><br><span class="line">        <span class="attr">"age"</span>:         <span class="number">25</span>,</span><br><span class="line">        <span class="attr">"interests"</span>: [ <span class="string">"dolphins"</span>, <span class="string">"whales"</span> ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"join_date"</span>: <span class="string">"2014/05/01"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如下 user对象很复杂，但它的结构和对象的含义已经被完整的体现在JSON中了，在Elasticsearch中将对象转化为 JSON 并做 index索引 要比在表结构中做相同的事情简单的多。</p>
<h2 id="5-索引"><a href="#5-索引" class="headerlink" title="5. 索引"></a>5. 索引</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[hdfs@node196 data_analysis]$ curl -u username:passwd -XPUT http://node190:9200/megacorp/employee/1 -d &apos;</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;     &quot;first_name&quot; : &quot;John&quot;,</span><br><span class="line">&gt;     &quot;last_name&quot; :  &quot;Smith&quot;,</span><br><span class="line">&gt;     &quot;age&quot; :        25,</span><br><span class="line">&gt;     &quot;about&quot; :      &quot;I love to go rock climbing&quot;,</span><br><span class="line">&gt;     &quot;interests&quot;: [ &quot;sports&quot;, &quot;music&quot; ]</span><br><span class="line">&gt; &#125;&apos;</span><br><span class="line">&#123;&quot;_index&quot;:&quot;megacorp&quot;,&quot;_type&quot;:&quot;employee&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;created&quot;:true&#125;[hdfs@node196 data_analysis]$</span><br></pre></td></tr></table></figure>
<ul>
<li>indexing</li>
<li>search</li>
<li>aggregations  /ˌæɡrɪˈɡeɪʃən/</li>
</ul>
<p><strong>Elasticsearch能做的事</strong></p>
<p>场景: 假设我们刚好在Megacorp工作，这时人力资源部门出于某种目的需要让我们创建一个员工目录，这个目录用于促进人文关怀和用于实时协同工作，所以它有以下不同的需求：</p>
<ul>
<li>数据能够包含多个值的标签、数字和纯文本。</li>
<li>检索任何员工的所有信息。</li>
<li>支持结构化搜索，例如查找30岁以上的员工。</li>
<li>支持简单的全文搜索和更复杂的短语(phrase)搜索</li>
<li>高亮搜索结果中的关键字</li>
<li>能够利用图表管理分析这些数据</li>
</ul>
<p><strong>索引员工文档</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Relational DB -&gt; Databases -&gt; Tables -&gt; Rows -&gt; Columns</span><br><span class="line">Elasticsearch -&gt; Indices   -&gt; Types  -&gt; Documents -&gt; Fields</span><br></pre></td></tr></table></figure>
<p>Elasticsearch | Relational DB<br>: ——- | : ——-<br>Indices | Databases<br>Types | Tables<br>Documents | Rows<br>Fields | Columns</p>
<p><strong>Elasticsearch</strong></p>
<blockquote>
<p>索引」含义的区分</p>
<p>  <strong>index_num.</strong> : index (数据库)，它是相关文档存储的地方，</p>
<p>  <strong>index_verb.</strong> 「索引一个文档」表示把一个文档存储到索引（名词）里，以便它可以被检索或者查询。这很像SQL 中的 INSERT关键字，差别是，如果文档已经存在，新的文档将覆盖旧的文档。</p>
<p><strong>倒排索引</strong> : 传统数据库为特定列增加一个索引，例如 B-Tree索引 来加速检索。Elasticsearch和Lucene使用倒排索引(inverted index)的数据结构来达到相同目的。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT /megacorp/employee/1</span><br><span class="line">&#123;</span><br><span class="line">    &quot;first_name&quot; : &quot;John&quot;,</span><br><span class="line">    &quot;last_name&quot; :  &quot;Smith&quot;,</span><br><span class="line">    &quot;age&quot; :        25,</span><br><span class="line">    &quot;about&quot; :      &quot;I love to go rock climbing&quot;,</span><br><span class="line">    &quot;interests&quot;: [ &quot;sports&quot;, &quot;music&quot; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://segmentfault.com/img/bVvQp0" alt="图片描述"></p>
<h3 id="4-1-检索文档"><a href="#4-1-检索文档" class="headerlink" title="4.1 检索文档"></a>4.1 检索文档</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/1</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; :   &quot;megacorp&quot;,</span><br><span class="line">  &quot;_type&quot; :    &quot;employee&quot;,</span><br><span class="line">  &quot;_id&quot; :      &quot;1&quot;,</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;found&quot; :    true,</span><br><span class="line">  &quot;_source&quot; :  &#123;</span><br><span class="line">      &quot;first_name&quot; :  &quot;John&quot;,</span><br><span class="line">      &quot;last_name&quot; :   &quot;Smith&quot;,</span><br><span class="line">      &quot;age&quot; :         25,</span><br><span class="line">      &quot;about&quot; :       &quot;I love to go rock climbing&quot;,</span><br><span class="line">      &quot;interests&quot;:  [ &quot;sports&quot;, &quot;music&quot; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-2-简单搜索"><a href="#4-2-简单搜索" class="headerlink" title="4.2 简单搜索"></a>4.2 简单搜索</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br></pre></td></tr></table></figure>
<p>查询 last_name 为 Smith 的记录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search?q=last_name:Smith</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   ...</span><br><span class="line">   &quot;hits&quot;: &#123;</span><br><span class="line">      &quot;total&quot;:      2,</span><br><span class="line">      &quot;max_score&quot;:  0.30685282,</span><br><span class="line">      &quot;hits&quot;: [</span><br><span class="line">         &#123;</span><br><span class="line">            ...</span><br><span class="line">            &quot;_source&quot;: &#123;</span><br><span class="line">               &quot;first_name&quot;:  &quot;John&quot;,</span><br><span class="line">               &quot;last_name&quot;:   &quot;Smith&quot;,</span><br><span class="line">               &quot;age&quot;:         25,</span><br><span class="line">               &quot;about&quot;:       &quot;I love to go rock climbing&quot;,</span><br><span class="line">               &quot;interests&quot;: [ &quot;sports&quot;, &quot;music&quot; ]</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">            ...</span><br><span class="line">            &quot;_source&quot;: &#123;</span><br><span class="line">               &quot;first_name&quot;:  &quot;Jane&quot;,</span><br><span class="line">               &quot;last_name&quot;:   &quot;Smith&quot;,</span><br><span class="line">               &quot;age&quot;:         32,</span><br><span class="line">               &quot;about&quot;:       &quot;I like to collect rock albums&quot;,</span><br><span class="line">               &quot;interests&quot;: [ &quot;music&quot; ]</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      ]</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-3-使用DSL语句查询"><a href="#4-3-使用DSL语句查询" class="headerlink" title="4.3 使用DSL语句查询"></a>4.3 使用DSL语句查询</h3><p> DSL(Domain Specific Language特定领域语言) </p>
<p><strong>查询字符串等价于</strong>  q=last_name:Smith <strong>DSL查询 : </strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot; : &#123;</span><br><span class="line">        &quot;match&quot; : &#123;</span><br><span class="line">            &quot;last_name&quot; : &quot;Smith&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-4-更复杂的搜索"><a href="#4-4-更复杂的搜索" class="headerlink" title="4.4 更复杂的搜索"></a>4.4 更复杂的搜索</h3><p><strong>filter range</strong></p>
<p>GET /megacorp/employee/_search<br>{<br>    “query” : {<br>        “filtered” : {<br>            “filter” : {<br>                “range” : {<br>                    “age” : { “gt” : 30 } <1><br>                }<br>            },<br>            “query” : {<br>                “match” : {<br>                    “last_name” : “smith” <2><br>                }<br>            }<br>        }<br>    }<br>}</2></1></p>
<h3 id="4-5-全文搜索"><a href="#4-5-全文搜索" class="headerlink" title="4.5 全文搜索"></a>4.5 全文搜索</h3><p>一种传统数据库难以实现的功能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot; : &#123;</span><br><span class="line">        &quot;match&quot; : &#123;</span><br><span class="line">            &quot;about&quot; : &quot;rock climbing&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Result :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   ...</span><br><span class="line">   &quot;hits&quot;: &#123;</span><br><span class="line">      &quot;total&quot;:      2,</span><br><span class="line">      &quot;max_score&quot;:  0.16273327,</span><br><span class="line">      &quot;hits&quot;: [</span><br><span class="line">         &#123;</span><br><span class="line">            ...</span><br><span class="line">            &quot;_score&quot;:         0.16273327, &lt;1&gt;</span><br><span class="line">            &quot;_source&quot;: &#123;</span><br><span class="line">               &quot;first_name&quot;:  &quot;John&quot;,</span><br><span class="line">               &quot;last_name&quot;:   &quot;Smith&quot;,</span><br><span class="line">               &quot;age&quot;:         25,</span><br><span class="line">               &quot;about&quot;:       &quot;I love to go rock climbing&quot;,</span><br><span class="line">               &quot;interests&quot;: [ &quot;sports&quot;, &quot;music&quot; ]</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">            ...</span><br><span class="line">            &quot;_score&quot;:         0.016878016, &lt;2&gt;</span><br><span class="line">            &quot;_source&quot;: &#123;</span><br><span class="line">               &quot;first_name&quot;:  &quot;Jane&quot;,</span><br><span class="line">               &quot;last_name&quot;:   &quot;Smith&quot;,</span><br><span class="line">               &quot;age&quot;:         32,</span><br><span class="line">               &quot;about&quot;:       &quot;I like to collect rock albums&quot;,</span><br><span class="line">               &quot;interests&quot;: [ &quot;music&quot; ]</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      ]</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-6-短语搜索-–-phrases"><a href="#4-6-短语搜索-–-phrases" class="headerlink" title="4.6 短语搜索 – phrases"></a>4.6 短语搜索 – phrases</h3><p>想要确切的匹配若干个单词或者短语(phrases), 例如  我们想要查询同时包含”rock”和”climbing”（并且是相邻的）的员工记录。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot; : &#123;</span><br><span class="line">        &quot;match_phrase&quot; : &#123;</span><br><span class="line">            &quot;about&quot; : &quot;rock climbing&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong><em>增加高亮</em></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot; : &#123;</span><br><span class="line">        &quot;match_phrase&quot; : &#123;</span><br><span class="line">            &quot;about&quot; : &quot;rock climbing&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;highlight&quot;: &#123;</span><br><span class="line">        &quot;fields&quot; : &#123;</span><br><span class="line">            &quot;about&quot; : &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-aggregations"><a href="#5-aggregations" class="headerlink" title="5. aggregations"></a>5. aggregations</h2><p>聚合相当于 group by</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;last_name&quot;: &quot;smith&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;all_interests&quot;: &#123;</span><br><span class="line">      &quot;terms&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;interests&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">&quot;all_interests&quot;: &#123;</span><br><span class="line">   &quot;buckets&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;key&quot;: &quot;music&quot;,</span><br><span class="line">         &quot;doc_count&quot;: 2</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;key&quot;: &quot;sports&quot;,</span><br><span class="line">         &quot;doc_count&quot;: 1</span><br><span class="line">      &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>聚合也允许分级汇总。例如，让我们统计每种兴趣下职员的平均年龄</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;aggs&quot; : &#123;</span><br><span class="line">        &quot;all_interests&quot; : &#123;</span><br><span class="line">            &quot;terms&quot; : &#123; &quot;field&quot; : &quot;interests&quot; &#125;,</span><br><span class="line">            &quot;aggs&quot; : &#123;</span><br><span class="line">                &quot;avg_age&quot; : &#123;</span><br><span class="line">                    &quot;avg&quot; : &#123; &quot;field&quot; : &quot;age&quot; &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>教程小结</strong></p>
<p> 为了保持简短，还有很多的特性未提及——像 推荐、定位、渗透、模糊 以及 部分匹配等。但这也突出了构建高级搜索功能是多么的容易。无需配置，只需要添加数据然后开始搜索！</p>
<h2 id="6-分布式的特性"><a href="#6-分布式的特性" class="headerlink" title="6. 分布式的特性"></a>6. 分布式的特性</h2><p>Elasticsearch 你不需要知道任何关于分布式系统、分片、集群发现或者其他大量的分布式概念。所有的教程你即可以运行在你的笔记本上，也可以运行在拥有100个节点的集群上，其工作方式是一样的。</p>
<p>Elasticsearch 致力于隐藏分布式系统的复杂性。以下这些操作都是在底层自动完成的：</p>
<ul>
<li>将你的文档分区到不同的容器或者分片(shards)中，它们可存于一或多个节点中。</li>
<li>将分片均匀的分配到各个节点，对索引和搜索做负载均衡。</li>
<li>冗余每一个分片，防止硬件故障造成的数据丢失。</li>
<li>将集群中任意一个节点上的请求路由到相应数据所在的节点。</li>
<li>无论是增加节点，还是移除节点，分片都可以做到无缝的扩展和迁移。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Distance formula of point to plane]]></title>
      <url>http://iequa.com/2016/05/17/math-distance-formula-of-point-to-plain/</url>
      <content type="html"><![CDATA[<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX"],
    tex2jax: {
      inlineMath: [ ['$','$'], ['\\(','\\)'] ],
      displayMath: [ ['$$','$$'], ['\[','\]'] ],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML,http://myserver.com/MathJax/config/local/local.js">
</script>

<p>平面的一般式方程, 向量的模（长度）, 向量的数量积, 点到平面的距离</p>
<a id="more"></a>
<p><a href="https://zh.wikipedia.org/wiki/%E5%90%91%E9%87%8F" target="_blank" rel="external">维基百科_Vector</a></p>
<h2 id="1-平面的一般式方程"><a href="#1-平面的一般式方程" class="headerlink" title="1. 平面的一般式方程"></a>1. 平面的一般式方程</h2><p>Ax +By +Cz + D = 0</p>
<p>其中n = (A, B, C)是平面的法向量，D是将平面平移到坐标原点所需距离（所以D=0时，平面过原点）</p>
<h2 id="2-向量的模（长度）"><a href="#2-向量的模（长度）" class="headerlink" title="2. 向量的模（长度）"></a>2. 向量的模（长度）</h2><p>给定一个向量V（x, y, z),则|V| = sqrt(x <em> x + y </em> y + z * z)</p>
<blockquote>
<p>在数学中，矢量常采用更为抽象的矢量空间（也称为线性空间）来定义，而定义具有物理意义上的大小和方向的矢量概念则需要引进了范数和内积的欧几里得空间。<br>范数， 模长</p>
</blockquote>
<h2 id="3-向量的数量积-点积-内积"><a href="#3-向量的数量积-点积-内积" class="headerlink" title="3. 向量的数量积/点积/内积"></a>3. 向量的数量积/点积/内积</h2><p>给定两个向量V1(x1, y1, z1)和V2(x2, y2, z2)则他们的内积是 V1V2 = x1x2 + y1y2 + z1z2</p>
<blockquote>
<p>数量积被广泛应用于物理中，如做功就是用力的矢量乘位移的矢量，即<img src="/images/math-pointdis.png" alt=""></p>
</blockquote>
<h2 id="4-点到平面的距离-Yes"><a href="#4-点到平面的距离-Yes" class="headerlink" title="4. 点到平面的距离(Yes)"></a>4. 点到平面的距离(Yes)</h2><p>求点到直线的距离不再是难事，有图有真相</p>
<p><img src="/images/math-pointToPlane.jpeg" alt="Distance formula of point to plane"></p>
<blockquote>
<p>如果法向量是单位向量的话，那么分母为1</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark Machine Learning p1 - Spark编程入门]]></title>
      <url>http://iequa.com/2016/04/25/spark-machine-learning-p1/</url>
      <content type="html"><![CDATA[<p>Spark 的环境搭建与运行, 接触了 RDD 与 SparkContext, 启动 Spark-Shell 以及如何使用 Scala、Python 编写 Spark 程序. </p>
<a id="more"></a>
<p><strong>Apache Spark</strong></p>
<p>Spark 的设计目标 即: <code>迭代式+低延迟</code> 适合 Machine Learning 算法的特性<br>Spark 分布式计算框架, 将中间数据和结果保存在内存中<br>Spark 提供函数式API, 并兼容 Hadoop 生态<br>Spark 框架对 资源调度、任务提交、执行、跟踪， 节点间通信以及数据并行处理的内在底层操作都进行了抽象</p>
<blockquote>
<p>简化了海量数据的存储(HDFS) 和 计算(MR) 流程。MapReduce 缺点, 如: 启动任务时的高开销、对中间数据 和 计算结果 写入磁盘的依赖。这使得 Hadoop 不适合 迭代式 或 低延迟 的任务。</p>
</blockquote>
<p><strong>Spark 的四种运行模式</strong></p>
<ol>
<li>本地单机模式 – Spark 进程 all run in one JVM</li>
<li>集群单机模式 – 使用 Spark 自己内置的 任务调度框架</li>
<li>基于 Mesos 一个开源集群计算框架</li>
<li>基于 YARN 与 Hadoop2 关联形成集群计算和资源调度框架</li>
</ol>
<h2 id="1-Spark运行"><a href="#1-Spark运行" class="headerlink" title="1. Spark运行"></a>1. Spark运行</h2><p>运行示例程序来测试是否一切正常：</p>
<blockquote>
<p>./bin/run-example org.apache.spark.examples.SparkPi</p>
</blockquote>
<p>该命令将在本地单机模式下执行SparkPi这个示例。在该模式下，所有的Spark进程均运行于同一个JVM中，而并行处理则通过多线程来实现。默认情况下，该示例会启用与本地系统的CPU核心数目相同的线程。</p>
<p>要在本地模式下设置并行的级别，以local[N]的格式来指定一个master变量即可。比如只使用两个线程时，可输入如下命令：</p>
<blockquote>
<p>MASTER=local[2] ./bin/run-example org.apache.spark.examples.SparkPi</p>
</blockquote>
<h2 id="2-Spark集群"><a href="#2-Spark集群" class="headerlink" title="2. Spark集群"></a>2. Spark集群</h2><p>Spark集群由两类程序构成: </p>
<ol>
<li>一个驱动程序</li>
<li>多个执行程序</li>
</ol>
<blockquote>
<p>本地模式下所有的处理都运行在同一个JVM内，而在集群模式时它们通常运行在不同的节点上。</p>
</blockquote>
<p>一个采用单机模式的Spark集群包括：</p>
<ol>
<li>一个运行Spark单机主进程和驱动程序的 Master；</li>
<li>各自运行一个执行程序进程的多个 Worker。</li>
</ol>
<p>比如在一个Spark单机集群上运行，只需传入主节点的URL即可：</p>
<blockquote>
<p>MASTER=spark://IP:PORT ./bin/run-example org.apache.spark.examples.SparkPi<br>其中的IP和PORT分别是主节点IP地址和端口号。这是告诉Spark让示例程序运行在主节点所对应的集群上</p>
</blockquote>
<h2 id="3-Spark编程模型"><a href="#3-Spark编程模型" class="headerlink" title="3. Spark编程模型"></a>3. Spark编程模型</h2><h3 id="3-1-SparkContext类"><a href="#3-1-SparkContext类" class="headerlink" title="3.1 SparkContext类"></a>3.1 SparkContext类</h3><p><strong>SparkContext类与SparkConf类</strong></p>
<p>任何Spark程序的编写都是从SparkContext开始的。SparkContext的初始化需要一个SparkConf对象，后者包含了Spark集群配置的各种参数（比如主节点的URL）。</p>
<p>初始化后，我们便可用SparkContext对象所包含的各种方法来创建和操作RDD。Spark shell（在Scala和Python下可以，但不支持Java）能自动完成上述初始化。若要用Scala代码来实现的话，可参照下面的代码：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setAppName(<span class="string">"Test Spark App"</span>).setMaster(<span class="string">"local[4]"</span>)</span><br><span class="line"><span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</span><br></pre></td></tr></table></figure>
<p>这段代码会创建一个4线程的SparkContext对象，并将其相应的任务命名为Test Spark APP。我们也可通过如下方式调用SparkContext的简单构造函数</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(<span class="string">"local[4]"</span>, <span class="string">"Test Spark App"</span>)</span><br></pre></td></tr></table></figure>
<h3 id="3-2-Spark-shell"><a href="#3-2-Spark-shell" class="headerlink" title="3.2 Spark shell"></a>3.2 Spark shell</h3><p>Spark支持 用 Scala or Python REPL（Read-Eval-Print-Loop，即交互式shell）来进行交互式的程序编写。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./bin/spark-shell</span><br></pre></td></tr></table></figure>
<p>会启动Scala shell 并初始化一个SparkContext对象。我们可以通过 sc这个Scala值来调用这个对象</p>
<h3 id="3-3-RDD"><a href="#3-3-RDD" class="headerlink" title="3.3 RDD"></a>3.3 RDD</h3><p>一个 RDD 代表一系列的“记录”（严格来说，某种类型的对象）。<br>这些记录被分配或分区到一个集群的多个节点上（在本地模式下，可以类似地理解为单个进程里的多个线程上）。</p>
<p>Spark中的RDD具备容错性，即当某个节点或任务失败时（因非用户代码原因而引起，如硬件故障、网络不通等），RDD会在余下的节点上自动重建，以便任务能最终完成。</p>
<p><strong>1. 创建RDD</strong></p>
<p>RDD可从现有的集合创建 ：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> collection = <span class="type">List</span>(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>)</span><br><span class="line"><span class="keyword">val</span> rddFromCollection = sc.parallelize(collection)</span><br></pre></td></tr></table></figure>
<p>RDD也可以基于Hadoop的输入源创建，比如本地文件系统、HDFS。基于Hadoop的RDD可以使用任何实现了Hadoop InputFormat接口的输入格式，包括文本文件、其他Hadoop标准格式、HBase等。以下举例说明如何用一个本地文件系统里的文件创建RDD：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">val rddFromTextFile = sc.textFile(&quot;LICENSE&quot;)</span><br></pre></td></tr></table></figure>
<p>上述代码中的textFile函数（方法）会返回一个RDD对象。该对象的每一条记录都是一个表示文本文件中某一行文字的String（字符串）对象。</p>
<p><strong>2. Spark操作</strong></p>
<p>在Spark编程模式下，所有的操作被分为 <code>transformation</code> 和 <code>action</code> 两种。</p>
<p><strong>transformation</strong> 操作是对一个数据集里的所有记录执行某种函数，从而使记录发生改变；</p>
<p><strong>action</strong> 通常是运行某些计算或聚合操作，并将结果返回运行 SparkContext 的那个驱动程序。</p>
<p>Spark 的操作通常采用<code>函数式</code>风格。</p>
<p>Spark程序中最常用的转换操作便是map操作。该操作对一个RDD里的每一条记录都执行某个函数，从而将输入映射成为新的输出。</p>
<p>比如，下面这段代码便对一个从本地文本文件创建的RDD进行操作。它对该RDD中的每一条记录都执行size函数。<br>创建一个这样的由若干String构成的RDD对象。通过map函数，我们将每一个字符串都转换为一个整数，从而返回一个由若干Int构成的RDD对象。</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">scala&gt; rddFromTextFile.count</span><br><span class="line">res2: <span class="type">Long</span> = <span class="number">294</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> intsFromStringsRDD = rddFromTextFile.map(line =&gt; line.size)</span><br><span class="line">intsFromStringsRDD: org.apache.spark.rdd.<span class="type">RDD</span>[<span class="type">Int</span>] = <span class="type">MapPartitionsRDD</span>[<span class="number">3</span>] at map at &lt;console&gt;:<span class="number">23</span></span><br><span class="line"></span><br><span class="line">scala&gt; intsFromStringsRDD.count</span><br><span class="line">res3: <span class="type">Long</span> = <span class="number">294</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> sumOfRecords = intsFromStringsRDD.sum</span><br><span class="line">sumOfRecords: <span class="type">Double</span> = <span class="number">17062.0</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> numRecords = intsFromStringsRDD.count</span><br><span class="line">numRecords: <span class="type">Long</span> = <span class="number">294</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> aveLengthOfRecord = sumOfRecords / numRecords</span><br><span class="line">aveLengthOfRecord: <span class="type">Double</span> = <span class="number">58.034013605442176</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> aveLengthOfRecordChained = rddFromTextFile.map(line =&gt; line.size).sum / rddFromTextFile.count</span><br></pre></td></tr></table></figure>
<blockquote>
<p>示例中 <strong>=&gt;</strong> 是Scala下表示匿名函数的语法。语法 <strong>line =&gt; line.size</strong> 表示以 <strong>=&gt;</strong> 操作符左边的部分作为输入，对其执行一个函数，并以 <strong>=&gt;</strong> 操作符右边代码的执行结果为输出。在这个例子中，输入为line，输出则是 <strong>line.size</strong> 函数的执行结果。在Scala语言中，这种将一个String对象映射为一个Int的函数被表示为String =&gt; Int。</p>
</blockquote>
<p>Spark的大多数操作都会返回一个新RDD，但多数的Action操作则是返回计算的结果</p>
<blockquote>
<p>注 : Spark 中的转换操作是延后的。也就是说，在RDD上调用一个转换操作并不会立即触发相应的计算。 只有必要时才计算结果并将其返回给驱动程序，从而提高了Spark的效率。</p>
</blockquote>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> transformedRDD = rddFromTextFile.map(line =&gt; line.size).</span><br><span class="line">     | filter(size =&gt; size &gt; <span class="number">10</span>).map(size =&gt; size * <span class="number">2</span>)</span><br><span class="line">transformedRDD: org.apache.spark.rdd.<span class="type">RDD</span>[<span class="type">Int</span>] = <span class="type">MapPartitionsRDD</span>[<span class="number">7</span>] at map at &lt;console&gt;:<span class="number">24</span></span><br><span class="line"></span><br><span class="line">scala&gt;</span><br></pre></td></tr></table></figure>
<p>没有触发任何计算，也没有结果被返回。<br>如果我们现在在新的RDD上调用一个执行操作，比如sum，该计算将会被触发：</p>
<p><strong><em>触发计算</em></strong></p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> computation = transformedRDD.sum</span><br><span class="line">computation: <span class="type">Double</span> = <span class="number">34106.0</span></span><br></pre></td></tr></table></figure>
<p><strong>3. RDD缓存策略</strong></p>
<p>Spark最为强大的功能之一便是能够把数据缓存在集群的内存里。这通过调用RDD的cache函数来实现：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">scala&gt; rddFromTextFile.cache</span><br><span class="line">res4: rddFromTextFile.<span class="keyword">type</span> = <span class="type">MapPartitionsRDD</span>[<span class="number">2</span>] at textFile at &lt;console&gt;:<span class="number">21</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> aveLengthOfRecordChainedFromCached = rddFromTextFile.map(line =&gt; line.size).sum / rddFromTextFile.count</span><br><span class="line">aveLengthOfRecordChainedFromCached: <span class="type">Double</span> = <span class="number">58.034013605442176</span></span><br></pre></td></tr></table></figure>
<p>在RDD首次调用一个执行操作时，这个操作对应的计算会立即执行，数据会从数据源里读出并保存到内存。因此，首次调用cache函数所需要的时间会部分取决于Spark从输入源读取数据所需要的时间。但是，当下一次访问该数据集的时候，数据可以直接从内存中读出从而减少低效的I/O操作，加快计算。多数情况下，这会取得数倍的速度提升。</p>
<blockquote>
<p>Spark支持更为细化的缓存策略。通过persist函数可以指定Spark的数据缓存策略。关于RDD缓存的更多信息可参见：<a href="http://spark.apache.org/docs/latest/programming-guide.html#rdd-persistence。" target="_blank" rel="external">http://spark.apache.org/docs/latest/programming-guide.html#rdd-persistence。</a></p>
</blockquote>
<h3 id="3-4-广播变量和累加器"><a href="#3-4-广播变量和累加器" class="headerlink" title="3.4 广播变量和累加器"></a>3.4 广播变量和累加器</h3><p>Spark的另一个核心功能是能创建两种特殊类型的变量：<strong>广播变量</strong> 和 累加器。</p>
<p>广播变量（broadcast variable）为只读变量，它由运行SparkContext的驱动程序创建后发送给会参与计算的节点。对那些需要让各工作节点高效地访问相同数据的应用场景，比如机器学习，这非常有用。</p>
<p>Spark下创建广播变量只需在SparkContext上调用一个方法即可：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scala&gt; val broadcastAList = sc.broadcast(List(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;))</span><br><span class="line">broadcastAList: org.apache.spark.broadcast.Broadcast[List[String]] = Broadcast(11)</span><br><span class="line"></span><br><span class="line">scala&gt;</span><br></pre></td></tr></table></figure>
<p><strong>广播变量</strong> 也可以被非驱动程序所在的节点（即工作节点）访问，访问的方法是调用该变量的<code>value</code>方法：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> broadcastAList = sc.broadcast(<span class="type">List</span>(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>))</span><br><span class="line">broadcastAList: org.apache.spark.broadcast.<span class="type">Broadcast</span>[<span class="type">List</span>[<span class="type">String</span>]] = <span class="type">Broadcast</span>(<span class="number">11</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; sc.parallelize(<span class="type">List</span>(<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>)).map(x =&gt; broadcastAList.value ++ x).collect</span><br><span class="line">res5: <span class="type">Array</span>[<span class="type">List</span>[<span class="type">Any</span>]] = <span class="type">Array</span>(<span class="type">List</span>(a, b, c, d, e, <span class="number">1</span>), <span class="type">List</span>(a, b, c, d, e, <span class="number">2</span>), <span class="type">List</span>(a, b, c, d, e, <span class="number">3</span>))</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意，collect 函数一般仅在的确需要将整个结果集返回驱动程序并进行后续处理时才有必要调用。如果在一个非常大的数据集上调用该函数，可能耗尽驱动程序的可用内存，进而导致程序崩溃。</p>
</blockquote>
<p>高负荷的处理应尽可能地在整个集群上进行，从而避免驱动程序成为系统瓶颈。然而在不少情况下，将结果收集到驱动程序的确是有必要的。很多机器学习算法的迭代过程便属于这类情况。</p>
<p><strong>累加器</strong>（accumulator）也是一种被广播到工作节点的变量。累加器与广播变量的关键不同，是后者只能读取而前者却可累加。</p>
<blockquote>
<p>关于累加器的更多信息，可参见《Spark编程指南》：<a href="http://spark.apache.org/docs/latest/programming-guide.html#shared-variables。" target="_blank" rel="external">http://spark.apache.org/docs/latest/programming-guide.html#shared-variables。</a></p>
</blockquote>
<h2 id="4-Spark-Scala-编程入门"><a href="#4-Spark-Scala-编程入门" class="headerlink" title="4. Spark Scala 编程入门"></a>4. Spark Scala 编程入门</h2><p><a href="https://github.com/blair1/spark/tree/master/Spark-Machine-Learning_8519OSCode/Chapter%2001/scala-spark-app" target="_blank" rel="external">scala-spark-app</a></p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkContext</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkContext</span>._</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * A simple Spark app in Scala</span><br><span class="line"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">ScalaApp</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]) &#123;</span><br><span class="line">    <span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(<span class="string">"local[2]"</span>, <span class="string">"First Spark App"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we take the raw data in CSV format and convert it into a set of records of the form (user, product, price)</span></span><br><span class="line">    <span class="keyword">val</span> data = sc.textFile(<span class="string">"data/UserPurchaseHistory.csv"</span>)</span><br><span class="line">      .map(line =&gt; line.split(<span class="string">","</span>))</span><br><span class="line">      .map(purchaseRecord =&gt; (purchaseRecord(<span class="number">0</span>), purchaseRecord(<span class="number">1</span>), purchaseRecord(<span class="number">2</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// let's count the number of purchases</span></span><br><span class="line">    <span class="keyword">val</span> numPurchases = data.count()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// let's count how many unique users made purchases</span></span><br><span class="line">    <span class="keyword">val</span> uniqueUsers = data.map &#123; <span class="keyword">case</span> (user, product, price) =&gt; user &#125;.distinct().count()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// let's sum up our total revenue</span></span><br><span class="line">    <span class="keyword">val</span> totalRevenue = data.map &#123; <span class="keyword">case</span> (user, product, price) =&gt; price.toDouble &#125;.sum()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// let's find our most popular product</span></span><br><span class="line">    <span class="keyword">val</span> productsByPopularity = data</span><br><span class="line">      .map &#123; <span class="keyword">case</span> (user, product, price) =&gt; (product, <span class="number">1</span>) &#125;</span><br><span class="line">      .reduceByKey(_ + _)</span><br><span class="line">      .collect()</span><br><span class="line">      .sortBy(-_._2)</span><br><span class="line">    <span class="keyword">val</span> mostPopular = productsByPopularity(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// finally, print everything out</span></span><br><span class="line">    println(<span class="string">"Total purchases: "</span> + numPurchases)</span><br><span class="line">    println(<span class="string">"Unique users: "</span> + uniqueUsers)</span><br><span class="line">    println(<span class="string">"Total revenue: "</span> + totalRevenue)</span><br><span class="line">    println(<span class="string">"Most popular product: %s with %d purchases"</span>.format(mostPopular._1, mostPopular._2))</span><br><span class="line"></span><br><span class="line">    sc.stop()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-Spark-Java-编程入门"><a href="#5-Spark-Java-编程入门" class="headerlink" title="5. Spark Java 编程入门"></a>5. Spark Java 编程入门</h2><p>Java API与Scala API本质上很相似。Scala代码可以很方便地调用Java代码，但某些Scala代码却无法在Java里调用，特别是那些使用了隐式类型转换、默认参数和采用了某些Scala反射机制的代码。</p>
<p>SparkContext有了对应的Java版本JavaSparkContext，而RDD则对应JavaRDD。<br>Spark提供对Java 8匿名函数（lambda）语法的支持。</p>
<p>用Scala编写时，键/值对记录的RDD能支持一些特别的操作（比如reduceByKey和saveAsSequenceFile）。这些操作可以通过隐式类型转换而自动被调用。用Java编写时，则需要特别类型的JavaRDD来支持这些操作。它们包括用于键/值对的JavaPairRDD，以及用于数值记录的JavaDoubleRDD。</p>
<p>Java 8 RDD以及Java 8 lambda表达式更多信息可参见《Spark编程指南》：<a href="http://spark.apache.org/docs/latest/programming-guide.html#rdd-operations。" target="_blank" rel="external">http://spark.apache.org/docs/latest/programming-guide.html#rdd-operations。</a></p>
<h2 id="6-Spark-Python-编程入门"><a href="#6-Spark-Python-编程入门" class="headerlink" title="6. Spark Python 编程入门"></a>6. Spark Python 编程入门</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="string">"""用Python编写的一个简单Spark应用"""</span></span><br><span class="line"><span class="keyword">from</span> pyspark <span class="keyword">import</span> SparkContext</span><br><span class="line"></span><br><span class="line">sc = SparkContext(<span class="string">"local[2]"</span>, <span class="string">"First Spark App"</span>)</span><br><span class="line"><span class="comment"># 将CSV格式的原始数据转化为(user,product,price)格式的记录集</span></span><br><span class="line">data = sc.textFile(<span class="string">"data/UserPurchaseHistory.csv"</span>).map(<span class="keyword">lambda</span> line:</span><br><span class="line">line.split(<span class="string">","</span>)).map(<span class="keyword">lambda</span> record: (record[<span class="number">0</span>], record[<span class="number">1</span>], record[<span class="number">2</span>]))</span><br><span class="line"><span class="comment"># 求总购买次数</span></span><br><span class="line">numPurchases = data.count()</span><br><span class="line"><span class="comment"># 求有多少不同客户购买过商品</span></span><br><span class="line">uniqueUsers = data.map(<span class="keyword">lambda</span> record: record[<span class="number">0</span>]).distinct().count()</span><br><span class="line"><span class="comment"># 求和得出总收入</span></span><br><span class="line">totalRevenue = data.map(<span class="keyword">lambda</span> record: float(record[<span class="number">2</span>])).sum()</span><br><span class="line"><span class="comment"># 求最畅销的产品是什么</span></span><br><span class="line">products = data.map(<span class="keyword">lambda</span> record: (record[<span class="number">1</span>], <span class="number">1.0</span>)).</span><br><span class="line">reduceByKey(<span class="keyword">lambda</span> a, b: a + b).collect()</span><br><span class="line">mostPopular = sorted(products, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="keyword">True</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"Total purchases: %d"</span> % numPurchases</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Unique users: %d"</span> % uniqueUsers</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Total revenue: %2.2f"</span> % totalRevenue</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Most popular product: %s with %d purchases"</span> % (mostPopular[<span class="number">0</span>], mostPopular[<span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<p>匿名函数在Python语言中亦称lambda函数，lambda也是语法表达上的关键字。</p>
<p>用Scala编写时，一个将输入x映射为输出y的匿名函数表示为x =&gt; y，而在Python中则是lambda x : y。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  python-spark-app git:(master) ✗ <span class="built_in">pwd</span></span><br><span class="line">/Users/hp/ghome/hadoop-spark/spark/Spark-Machine-Learning_8519OSCode/Chapter01/python-spark-app</span><br><span class="line">➜  python-spark-app git:(master) ✗ <span class="variable">$SPARK_HOME</span>/bin/spark-submit pythonapp.py</span><br><span class="line">Using Spark<span class="string">'s default log4j profile: org/apache/spark/log4j-defaults.properties</span><br><span class="line">16/08/26 15:56:02 INFO SparkContext: Running Spark version 1.5.2</span><br><span class="line">...</span><br><span class="line">Total purchases: 5</span><br><span class="line">Unique users: 4</span><br><span class="line">Total revenue: 39.91</span><br><span class="line">Most popular product: iPhone Cover with 2 purchases</span><br><span class="line">16/08/26 15:56:07 INFO SparkUI: Stopped Spark web UI at http://192.168.143.84:4040</span><br><span class="line">...</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>Spark的Python API几乎覆盖了所有Scala API所能提供的功能. 但的确有些特性，比如Spark Streaming和个别的API方法，暂不支持。<br><a href="http://spark.apache.org/docs/latest/programming-guide.html" target="_blank" rel="external">具体参见《Spark编程指南》的Python部分</a></p>
</blockquote>
<h2 id="7-小结"><a href="#7-小结" class="headerlink" title="7. 小结"></a>7. 小结</h2><p>体会了 函数式 编程的威力， scala、python 都可以。java 不适合写 spark 程序</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7.1 install Common software]]></title>
      <url>http://iequa.com/2016/04/19/ops-centos7-install-common-software/</url>
      <content type="html"><![CDATA[<p>ifconfig、vim、wget、git、netcat …</p>
<a id="more"></a>
<h2 id="1-install-ifconfig"><a href="#1-install-ifconfig" class="headerlink" title="1. install ifconfig"></a>1. install ifconfig</h2> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum search ifconfig</span><br><span class="line">yum install net-tools.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="2-install-vim"><a href="#2-install-vim" class="headerlink" title="2. install vim"></a>2. install vim</h2> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum search vim</span><br><span class="line">yum install vim-enhanced</span><br></pre></td></tr></table></figure>
<h2 id="3-install-wget"><a href="#3-install-wget" class="headerlink" title="3. install wget"></a>3. install wget</h2> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> [libin@centos-linux-1 x]$ yum search wget</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.skyshe.cn</span><br><span class="line"> * extras: mirrors.163.com</span><br><span class="line"> * updates: mirrors.163.com</span><br><span class="line">============================================================================================ N/S matched: wget =============================================================================================</span><br><span class="line">wget.x86_64 : A utility <span class="keyword">for</span> retrieving files using the HTTP or FTP protocols</span><br><span class="line"></span><br><span class="line">  Name and summary matches only, use <span class="string">"search all"</span> <span class="keyword">for</span> everything.</span><br><span class="line"> </span><br><span class="line"> [libin@centos-linux-1 x]$ yum install wget.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="4-install-git"><a href="#4-install-git" class="headerlink" title="4. install git"></a>4. install git</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum search git</span><br><span class="line">yum install git.x86_64</span><br></pre></td></tr></table></figure>
<p>default，git havn’t color, you can use under cmd give git add color</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global color.status auto </span><br><span class="line">$ git config --global color.diff auto </span><br><span class="line">$ git config --global color.branch auto </span><br><span class="line">$ git config --global color.interactive auto</span><br></pre></td></tr></table></figure>
<h2 id="5-install-netcat"><a href="#5-install-netcat" class="headerlink" title="5. install netcat"></a>5. install netcat</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum search netcat</span><br><span class="line">yum install nmap-ncat.x86_64</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SBT Hello]]></title>
      <url>http://iequa.com/2016/03/16/scala-sbt-hello/</url>
      <content type="html"><![CDATA[<ol>
<li>什么是 SBT ?</li>
<li>SBT 项目工程目录</li>
<li>SBT 编译打包 Scala HelloWorld</li>
</ol>
<a id="more"></a>
<h2 id="1-SBT-What"><a href="#1-SBT-What" class="headerlink" title="1. SBT, What?"></a>1. SBT, What?</h2><p>SBT 是 Simple Build Tool 的简称. SBT 可以认为是 Scala 世界的 maven。</p>
<p>SBT的着迷特性，比如：</p>
<ol>
<li>DSL build构建, 并可混合构建 Java 和 Scala 项目；</li>
<li>通过触发执行 (trigger execution) 特性支持持续的编译与测试；</li>
<li>可以重用 Maven 或者 ivy的repository 进行依赖管理；</li>
<li>增量编译、并行任务等等…</li>
</ol>
<h2 id="2-Hello-SBT"><a href="#2-Hello-SBT" class="headerlink" title="2. Hello, SBT"></a>2. Hello, SBT</h2><p>一个极致简单的 Scala项目 （hello simple project）</p>
<p>hello/HelloWorld.scala</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]) &#123;</span><br><span class="line">        println(<span class="string">"Hello, SBT"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>sbt run</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  hello git:(master) ✗ sbt</span><br><span class="line">[info] Set current project to hello (in build file:/Users/hp/ghome/Spark-Scala/hello/)</span><br><span class="line">&gt; run</span><br><span class="line">[info] Updating &#123;file:/Users/hp/ghome/Spark-Scala/hello/&#125;hello...</span><br><span class="line">[info] Resolving org.fusesource.jansi#jansi;1.4 ...</span><br><span class="line">[info] Done updating.</span><br><span class="line">[info] Compiling 1 Scala source to /Users/hp/ghome/Spark-Scala/hello/target/scala-2.10/classes...</span><br><span class="line">[info] Running HelloWorld</span><br><span class="line">Hello, SBT</span><br><span class="line">[success] Total time: 3 s, completed 2016-3-17 9:38:44</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
<h2 id="3-SBT-项目工程结构详解"><a href="#3-SBT-项目工程结构详解" class="headerlink" title="3. SBT 项目工程结构详解"></a>3. SBT 项目工程结构详解</h2><p>一个典型的SBT项目工程结构如下图所示：</p>
<p><img src="https://segmentfault.com/img/bVtyRb" alt="图片描述"></p>
<p><strong> build.sbt 详解 </strong></p>
<p>build.sbt 相当于 maven-pom.xml，它是build定义文件。 </p>
<p>SBT 运行 使用 2 种形式 的 build 定义文件，</p>
<ol>
<li>one, put your project’s base directory，– build.sbt， a simple build definition； </li>
<li>other one, put project directory，can Use Scala language, more expressive。</li>
</ol>
<p>一个简单的build.sbt文件内容如下：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">name := <span class="string">"hello"</span>      <span class="comment">// 项目名称</span></span><br><span class="line"></span><br><span class="line">organization := <span class="string">"xxx.xxx.xxx"</span>  <span class="comment">// 组织名称</span></span><br><span class="line"></span><br><span class="line">version := <span class="string">"0.0.1-SNAPSHOT"</span>  <span class="comment">// 版本号</span></span><br><span class="line"></span><br><span class="line">scalaVersion := <span class="string">"2.9.2"</span>   <span class="comment">// 使用的Scala版本号</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 其它build定义</span></span><br></pre></td></tr></table></figure>
<p> name 和 version的定义是必须的，因为如果想生成jar包的话，这两个属性的值将作为jar包名称的一部分, 各行之间以空行分隔。<br>除了定义以上项目相关信息，我们还可以在build.sbt中添加项目依赖：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 添加源代码编译或者运行期间使用的依赖</span><br><span class="line">libraryDependencies += &quot;ch.qos.logback&quot; % &quot;logback-core&quot; % &quot;1.0.0&quot;</span><br><span class="line"></span><br><span class="line">libraryDependencies += &quot;ch.qos.logback&quot; % &quot;logback-classic&quot; % &quot;1.0.0&quot;</span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">libraryDependencies ++= Seq(</span><br><span class="line">                            &quot;ch.qos.logback&quot; % &quot;logback-core&quot; % &quot;1.0.0&quot;,</span><br><span class="line">                            &quot;ch.qos.logback&quot; % &quot;logback-classic&quot; % &quot;1.0.0&quot;,</span><br><span class="line">                            ...</span><br><span class="line">                            )</span><br><span class="line"></span><br><span class="line">// 添加测试代码编译或者运行期间使用的依赖</span><br><span class="line">libraryDependencies ++= Seq(&quot;org.scalatest&quot; %% &quot;scalatest&quot; % &quot;1.8&quot; % &quot;test&quot;)</span><br></pre></td></tr></table></figure>
<p>当然， build.sbt文件中还可以定义很多东西，比如添加插件，声明额外的repository，声明各种编译参数等等</p>
<p><strong> project目录即相关文件介绍 </strong></p>
<p>project目录下的几个文件可以根据情况添加。</p>
<p>build.properties 文件声明使用的要使用哪个版本的SBT来编译当前项目， 最新的sbt boot launcher可以能够兼容编译所有0.10.x版本的SBT构建项目，比如如果我使用的是0.12版本的sbt，但却想用0.11.3版本的sbt来编译当前项目，则可以在build.properties文件中添加sbt.version=0.11.3来指定。</p>
<p>plugins.sbt 文件用来声明当前项目希望使用哪些插件来增强当前项目使用的sbt的功能，比如像assembly功能，清理ivy local cache功能，都有相应的sbt插件供使用， 要使用这些插件只需要在 plugins.sbt 中声明即可.</p>
<p>为了能够成功加载这些sbt插件，我们将他们的查找位置添加到resolovers当中.</p>
<p><strong> 其他 </strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ touch build.sbt</span><br><span class="line">$ mkdir src</span><br><span class="line">$ mkdir src/main</span><br><span class="line">$ mkdir src/main/java</span><br><span class="line">$ mkdir src/main/resources</span><br><span class="line">$ mkdir src/main/scala</span><br><span class="line">$ mkdir src/test</span><br><span class="line">$ mkdir src/test/java</span><br><span class="line">$ mkdir src/test/resources</span><br><span class="line">$ mkdir src/test/scala</span><br><span class="line">$ mkdir project</span><br><span class="line">$ ...</span><br></pre></td></tr></table></figure>
<p>可以使用giter8来自动化以上步骤.<br>giter8的更多信息可参考<a href="https://github.com//giter8" target="_blank" rel="external">https://github.com//giter8</a>.</p>
<h2 id="4-SBT-Cmd"><a href="#4-SBT-Cmd" class="headerlink" title="4. SBT Cmd"></a>4. SBT Cmd</h2><ol>
<li>actions – 显示对当前工程可用的命令</li>
<li>update – 下载依赖</li>
<li>compile – 编译代码</li>
<li>test – 运行测试代码</li>
<li>package – 创建一个可发布的jar包</li>
<li>publish-local – 把构建出来的jar包安装到本地的ivy缓存</li>
<li>publish – 把jar包发布到远程仓库（如果配置了的话)</li>
</ol>
<p>more cmd</p>
<ol>
<li>test-failed – 运行失败的spec</li>
<li>test-quick – 运行所有失败的以及/或者是由依赖更新的spec</li>
<li>clean-cache – 清除所有的sbt缓存。类似于sbt的clean命令</li>
<li>clean-lib – 删除lib_managed下的所有内容</li>
</ol>
<h2 id="5-Scala-HelloWorld"><a href="#5-Scala-HelloWorld" class="headerlink" title="5. Scala HelloWorld"></a>5. Scala HelloWorld</h2><p>SBT Scala HelloWorld 具体请看 : <a href="https://github.com/blair1/language/tree/master/scala/ScalaWorld" target="_blank" rel="external">Scala-Projects/HelloWorld</a></p>
<p>➜  HelloWorld&gt; sbt package</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[info] Loading project definition from /Users/hp/spark/HelloWorld/project</span><br><span class="line">[info] Set current project to HelloWorld (in build file:/Users/hp/spark/HelloWorld/)</span><br><span class="line">[info] Packaging /Users/hp/spark/HelloWorld/target/scala-2.11/helloworld_2.11-0.0.1-SNAPSHOT.jar ...</span><br><span class="line">[info] Done packaging.</span><br><span class="line">[success] Total time: 1 s, completed 2016-3-17 9:05:44</span><br></pre></td></tr></table></figure>
<p>➜  HelloWorld&gt; sbt run</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[info] Loading project definition from /Users/hp/spark/HelloWorld/project</span><br><span class="line">[info] Set current project to HelloWorld (in build file:/Users/hp/spark/HelloWorld/)</span><br><span class="line">[info] Running Hi</span><br><span class="line">Hi!</span><br><span class="line">[success] Total time: 1 s, completed 2016-3-17 9:07:43</span><br></pre></td></tr></table></figure>
<h2 id="6-Spark-HelloWorld"><a href="#6-Spark-HelloWorld" class="headerlink" title="6. Spark HelloWorld"></a>6. Spark HelloWorld</h2><p>Spark HelloWorld 具体请看 : <a href="https://github.com/blair1/hadoop-spark/tree/master/spark/HelloWorld" target="_blank" rel="external">Spark-Projects/HelloWorld</a></p>
<p>➜  HelloWorld&gt; sbt compile<br>➜  HelloWorld&gt; sbt package</p>
<pre><code class="shell">$SPARK_HOME/bin/spark-submit \
  --class &quot;HelloWorld&quot; \
    target/scala-2.11/helloworld_2.11-1.0.jar
</code></pre>
<h2 id="7-Referenced-article"><a href="#7-Referenced-article" class="headerlink" title="7. Referenced article"></a>7. Referenced article</h2><p>参考 : <a href="http://www.scala-sbt.org/0.13/docs/zh-cn/Getting-Started.html" target="_blank" rel="external">scala-sbt.org/0.13/docs/zh-cn/Getting-Started.html</a><br>参考 : <a href="https://github.com/CSUG/real_world_scala/blob/master/02_sbt.markdown" target="_blank" rel="external">CSUG/real_world_scala/blob/master/02_sbt.markdown</a><br>参考 : <a href="http://www.scala-sbt.org/0.13.1/docs/Getting-Started/Hello.html" target="_blank" rel="external">scala-sbt.org/0.13.1/docs/Getting-Started</a><br>参考 : <a href="http://article.yeeyan.org/view/442873/404261" target="_blank" rel="external">译言网</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[大数据平台CDH集群在线安装]]></title>
      <url>http://iequa.com/2016/03/14/hadoop-cdh-install-online/</url>
      <content type="html"><![CDATA[<p>介绍了 CDH 集群的搭建与安装，其中 Server 安装步骤非常准确, Agent 需要进一步验证.</p>
<a id="more"></a>
<p>标签： Cloudera-Manager CDH Hadoop 部署 集群</p>
<blockquote>
<p>摘要：管理、部署Hadoop集群需要工具，Cloudera Manager便是其一。本文详细记录了以在线方式部署CDH集群&gt;的步骤。</p>
</blockquote>
<p>以Apache Hadoop为主导的大数据技术的出现，使得中小型公司对于大数据的存储与处理也拥有了武器。</p>
<p>目前Hadoop比较流行的主要有2个版本，Apache和Cloudera版本。</p>
<p>Apache Hadoop：维护人员比较多，更新频率比较快，但是稳定性比较差。<br>Cloudera Hadoop（CDH）：CDH：Cloudera公司的发行版本，基于Apache Hadoop的二次开发，优化了组件兼容和交互接口、简化安装配置、增加Cloudera兼容特性。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">大数据平台CDH集群 cdh-5.70-rpm_install 详细过程</span><br></pre></td></tr></table></figure>
<h1 id="Part-1-install-cdh-server"><a href="#Part-1-install-cdh-server" class="headerlink" title="Part 1 install cdh server"></a>Part 1 install cdh server</h1><h2 id="1-1-Ready-install-resources"><a href="#1-1-Ready-install-resources" class="headerlink" title="1.1 Ready install resources"></a>1.1 Ready install resources</h2><ol>
<li>CentOS Linux release 7.1.1503 (Core) cm-5.7.0 </li>
<li>cloudera-manager-installer.bin</li>
<li>adduser deploy</li>
</ol>
<p>centos7.1 在安装过程时，网络配置，设置静态IP</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br></pre></td></tr></table></figure>
<p>设置静态ip，以及指定ip地址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DEVICE=&quot;eth0&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">IPADDR=192.168.1.110</span><br><span class="line">NM_CONTROLLED=&quot;yes&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">DNS1=8.8.8.8</span><br><span class="line">DNS2=8.8.4.4</span><br><span class="line">GATEWAY=192.168.1.1</span><br></pre></td></tr></table></figure>
<h2 id="1-2-网络配置（所有节点）"><a href="#1-2-网络配置（所有节点）" class="headerlink" title="1.2 网络配置（所有节点）"></a>1.2 网络配置（所有节点）</h2><p><strong>修改hostname为 cdh-server7</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　RedHat 的 hostname，就修改 /etc/sysconfig/network文件，将里面的 HOSTNAME 这一行修改成 HOSTNAME=NEWNAME，其中 NEWNAME 就是你要设置的 hostname。</span><br><span class="line"></span><br><span class="line">　　Debian发行版的 hostname 的配置文件是 /etc/hostname</span><br></pre></td></tr></table></figure>
<p><strong>修改ip与主机名的对应关系</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 ~]# vi /etc/hosts #修改ip与主机名的对应关系:</span><br><span class="line">192.168.181.190 node190</span><br><span class="line">192.168.181.198 node198</span><br><span class="line">192.168.181.196 node196</span><br></pre></td></tr></table></figure>
<p><strong>重启网络服务生效</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 ~]# service network restart</span><br></pre></td></tr></table></figure>
<p><strong>关闭SELINUX</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看SELINUX状态</span><br><span class="line"></span><br><span class="line">[root@cdh-server7 ~]#getenforce</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">若 SELINUX 没有关闭，按照下述方式关闭</span><br><span class="line"></span><br><span class="line">vi /etc/selinux/config</span><br><span class="line">修改SELinux=disabled。重启生效，可以等后面都设置完了重启主机</span><br><span class="line"># This file controls the state of SELinux on the system.</span><br><span class="line"># SELINUX= can take one of these three values:</span><br><span class="line">#       enforcing - SELinux security policy is enforced.</span><br><span class="line">#       permissive - SELinux prints warnings instead of enforcing.</span><br><span class="line">#       disabled - SELinux is fully disabled.</span><br><span class="line">SELINUX=disabled</span><br><span class="line"># SELINUXTYPE= type of policy in use. Possible values are:</span><br><span class="line">#       targeted - Only targeted network daemons are protected.</span><br><span class="line">#       strict - Full SELinux protection.</span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 ~]# ping www.baidu.com</span><br></pre></td></tr></table></figure>
<p>以上步骤执行完毕后，重启主机</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>
<p>重启后再次检查下以上几点，确保环境配置正确。</p>
<h2 id="1-3-卸载-openjdk-所有节点"><a href="#1-3-卸载-openjdk-所有节点" class="headerlink" title="1.3 卸载 openjdk (所有节点)"></a>1.3 卸载 openjdk (所有节点)</h2><blockquote>
<p>注意 : 如果没有openjdk, 则不需要卸载，默认 centos7 没有</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 deploy]# rpm -qa | grep java</span><br><span class="line">[root@cdh-server7 deploy]# rpm -qa | grep jdk</span><br><span class="line"></span><br><span class="line"># if exist java or jdk, uninstall, erase it.  example under this...</span><br><span class="line">[root@cdh-server7 deploy]# rpm -e --nodeps java-1.5.0-gcj-1.5.0.0-29.1.el6.x86_64</span><br><span class="line">[root@cdh-server7 deploy]# rpm -e --nodeps java-1.6.0-openjdk-1.6.0.0-1.66.1.13.0.el6.x86_64</span><br><span class="line">[root@cdh-server7 deploy]# rpm -e --nodeps java-1.7.0-openjdk-1.7.0.45-2.4.3.3.el6.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="1-4-卸载-centOS7-默认mysql"><a href="#1-4-卸载-centOS7-默认mysql" class="headerlink" title="1.4 卸载 centOS7 默认mysql"></a>1.4 卸载 centOS7 默认mysql</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 deploy]# rpm -qa | grep mariadb</span><br><span class="line">[root@cdh-server7 deploy]# rpm -e --nodeps mariadb-libs-5.5.41-2.el7_0.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="1-5-Cloudera-Manager安装"><a href="#1-5-Cloudera-Manager安装" class="headerlink" title="1.5 Cloudera Manager安装"></a>1.5 Cloudera Manager安装</h2><p>下载资源文件<a href="https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/cloudera-manager.repo" target="_blank" rel="external">https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/cloudera-manager.repo</a></p>
<p>将cloudera-manager.repo文件拷贝到所有节点的/etc/yum.repos.d/文件夹下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@node196 ]# cd /home/deploy/cdh</span><br><span class="line">[root@node196 cdh]# wget https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/cloudera-manager.repo</span><br><span class="line">[root@cdh-server7 cdh]# mv cloudera-manager.repo /etc/yum.repos.d/</span><br></pre></td></tr></table></figure>
<p>验证repo文件是否起效</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum list|grep cloudera</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 cdh]# yum list | grep cloudera</span><br><span class="line">cloudera-manager-agent.x86_64           5.7.0-1.cm560.p0.54.el7        cloudera-manager</span><br><span class="line">cloudera-manager-daemons.x86_64         5.7.0-1.cm560.p0.54.el7        cloudera-manager</span><br><span class="line">cloudera-manager-server.x86_64          5.7.0-1.cm560.p0.54.el7        cloudera-manager</span><br><span class="line">cloudera-manager-server-db-2.x86_64     5.7.0-1.cm560.p0.54.el7        cloudera-manager</span><br><span class="line">enterprise-debuginfo.x86_64             5.7.0-1.cm560.p0.54.el7        cloudera-manager</span><br><span class="line">oracle-j2sdk1.7.x86_64                  1.7.0+update67-1               cloudera-manager</span><br></pre></td></tr></table></figure>
<p>如果列出的不是你安装的版本，执行下面命令重试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum clean all </span><br><span class="line">yum list | grep cloudera</span><br></pre></td></tr></table></figure>
<p>上传下列 <strong>rpm 包</strong> 到 [root@cdh-server7] 的 /home/deploy/cdh/cloudera-rpms (任意目录)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /home/deploy/cdh/cloudera-rpms</span><br><span class="line">cloudera-manager-agent-5.7.0-1.cm560.p0.54.el7.x86_64.rpm</span><br><span class="line">cloudera-manager-daemons-5.7.0-1.cm560.p0.54.el7.x86_64.rpm</span><br><span class="line">cloudera-manager-server-5.7.0-1.cm560.p0.54.el7.x86_64.rpm   ## agent not use</span><br><span class="line">cloudera-manager-server-db-2-5.7.0-1.cm560.p0.54.el7.x86_64.rpm  ## agent not use</span><br><span class="line">enterprise-debuginfo-5.7.0-1.cm560.p0.54.el7.x86_64.rpm</span><br><span class="line">oracle-j2sdk1.7-1.7.0+update67-1.x86_64.rpm</span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明 : 可从<a href="https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5/RPMS/x86_64/" target="_blank" rel="external">https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5/RPMS/x86_64/</a> 下载相关rpm包</p>
</blockquote>
<p>切换到rpms目录下，执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 cdh]# cd /home/deploy/cdh/cloudera-rpms/</span><br><span class="line">[root@cdh-server7 cloudera-rpms]# yum -y install *.rpm</span><br></pre></td></tr></table></figure>
<h2 id="1-6-拷贝资源包到目标目录"><a href="#1-6-拷贝资源包到目标目录" class="headerlink" title="1.6 拷贝资源包到目标目录"></a>1.6 拷贝资源包到目标目录</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">从 http://archive.cloudera.com/cdh5/parcels/5.7.0/ 下载资源包</span><br></pre></td></tr></table></figure>
<p>将之前下载的Parcel那3个文件拷贝到/opt/cloudera/parcel-repo目录下（如果没有该目录，请自行创建）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 cdh]# cp CDH-5.7.0-1.cdh5.7.0.p0.45-el7.parcel /opt/cloudera/parcel-repo/CDH-5.7.0-1.cdh5.7.0.p0.45-el7.parcel</span><br><span class="line">[root@cdh-server7 cdh]# cp CDH-5.7.0-1.cdh5.7.0.p0.45-el7.parcel.sha1 /opt/cloudera/parcel-repo/CDH-5.7.0-1.cdh5.7.0.p0.45-el7.parcel.sha</span><br><span class="line">[root@cdh-server7 cdh]# cp manifest.json /opt/cloudera/parcel-repo/manifest.json</span><br></pre></td></tr></table></figure>
<h2 id="1-7-配置-java-环境变量"><a href="#1-7-配置-java-环境变量" class="headerlink" title="1.7 配置 java 环境变量"></a>1.7 配置 java 环境变量</h2><p>设置JAVA_HOME</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 cdh]#vi /etc/profile</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.7.0_67-cloudera/</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">[root@cdh-server7 cdh]#source /etc/profile</span><br></pre></td></tr></table></figure>
<p>关闭防火墙</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 deploy]#systemctl stop firewalld.service  #centos7,关闭防火墙</span><br></pre></td></tr></table></figure>
<p>以上步骤执行完毕后，重启主机</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>
<h2 id="1-8-安装CM-只在主节点"><a href="#1-8-安装CM-只在主节点" class="headerlink" title="1.8 安装CM (只在主节点)"></a>1.8 安装CM (只在主节点)</h2><p><strong>以下两步骤请只在主节点上执行 :</strong></p>
<ul>
<li><p>进入该目录，给bin文件赋予可执行权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 cdh]# chmod a+x ./cloudera-manager-installer.bin</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装CM (该步骤, 可能是不需要的)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 cdh]# ./cloudera-manager-installer.bin</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>开始启动server端</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 cdh]# cd /etc/init.d/</span><br><span class="line">[root@cdh-server7 init.d]# ./cloudera-scm-server-db start</span><br><span class="line"></span><br><span class="line">[root@cdh-server7 init.d]# ./cloudera-scm-server start</span><br><span class="line">Starting cloudera-scm-server:                              [  OK  ]</span><br><span class="line">[root@cdh-server7 init.d]# tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意 :<br> 机器重启之后，默认启动会导致异常<br> 需要按照该先启动cloudera-scm-server-db，再启动cloudera-scm-server的顺序执行</p>
</blockquote>
<h2 id="1-9-浏览器访问验证-主节点"><a href="#1-9-浏览器访问验证-主节点" class="headerlink" title="1.9 浏览器访问验证(主节点)"></a>1.9 浏览器访问验证(主节点)</h2><p>CM安装成功后浏览器输入<a href="http://ip:7180" target="_blank" rel="external">http://ip:7180</a>, 用户名和密码都输入admin，进入web管理界面。</p>
<p>通过浏览器访问验证</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://192.168.181.190:7180/</span><br></pre></td></tr></table></figure>
<p>如果打不开改网页，等待2分钟后。这个服务启动是需要一定时间的。</p>
<p>选择部署的版本，这里我们选择免费版的就可以了。</p>
<blockquote>
<p>如果不会设置，那么请参考 最靠谱的安装指南 <a href="http://www.jianshu.com/p/57179e03795f" target="_blank" rel="external">http://www.jianshu.com/p/57179e03795f</a></p>
</blockquote>
<p>安装服务时，数据库选择默认的嵌入式数据库</p>
<h1 id="Part-2-安装-agent"><a href="#Part-2-安装-agent" class="headerlink" title="Part 2 安装 agent"></a>Part 2 安装 agent</h1><blockquote>
<p>this step is similar， but I can’t be sure, exactly right. </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">安装 agent ，可以在单独的机器，主节点，可以只当做主，随意你</span><br></pre></td></tr></table></figure>
<blockquote>
<p>为agent做配置,启动agent (所有节点)<br>agent 不需要装server，其他绝大部分步骤和 安装 server 相同。</p>
</blockquote>
<h2 id="2-1-网络配置"><a href="#2-1-网络配置" class="headerlink" title="2.1 网络配置"></a>2.1 网络配置</h2><p><strong>修改ip与主机名的对应关系</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-agent1 ~]# vi /etc/hosts #修改ip与主机名的对应关系:</span><br><span class="line">192.168.181.190 cdh-server7(node190)</span><br><span class="line">192.168.181.198 cdh-agent1(node198)</span><br><span class="line">192.168.181.196 cdh-agent2(node196)</span><br></pre></td></tr></table></figure>
<p><strong>重启网络服务生效</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 ~]# service network restart</span><br></pre></td></tr></table></figure>
<p><strong>关闭SELINUX</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看SELINUX状态</span><br><span class="line"></span><br><span class="line">[root@cdh-server7 ~]#getenforce</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">若 SELINUX 没有关闭，按照下述方式关闭</span><br><span class="line"></span><br><span class="line">vi /etc/selinux/config</span><br><span class="line">修改SELinux=disabled。重启生效，可以等后面都设置完了重启主机</span><br><span class="line"># This file controls the state of SELinux on the system.</span><br><span class="line"># SELINUX= can take one of these three values:</span><br><span class="line">#       enforcing - SELinux security policy is enforced.</span><br><span class="line">#       permissive - SELinux prints warnings instead of enforcing.</span><br><span class="line">#       disabled - SELinux is fully disabled.</span><br><span class="line">SELINUX=disabled</span><br><span class="line"># SELINUXTYPE= type of policy in use. Possible values are:</span><br><span class="line">#       targeted - Only targeted network daemons are protected.</span><br><span class="line">#       strict - Full SELinux protection.</span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 ~]# ping www.baidu.com</span><br></pre></td></tr></table></figure>
<h2 id="2-2-卸载-openjdk-所有节点"><a href="#2-2-卸载-openjdk-所有节点" class="headerlink" title="2.2 卸载 openjdk (所有节点)"></a>2.2 卸载 openjdk (所有节点)</h2><blockquote>
<p>注意 : 如果没有openjdk, 则不需要卸载，默认 centos7 没有</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 deploy]# rpm -qa | grep java</span><br><span class="line">[root@cdh-server7 deploy]# rpm -qa | grep jdk</span><br><span class="line"></span><br><span class="line"># if exist java or jdk, uninstall, erase it.  example under this...</span><br><span class="line">[root@cdh-server7 deploy]# rpm -e --nodeps java-1.5.0-gcj-1.5.0.0-29.1.el6.x86_64</span><br><span class="line">[root@cdh-server7 deploy]# rpm -e --nodeps java-1.6.0-openjdk-1.6.0.0-1.66.1.13.0.el6.x86_64</span><br><span class="line">[root@cdh-server7 deploy]# rpm -e --nodeps java-1.7.0-openjdk-1.7.0.45-2.4.3.3.el6.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="2-3-卸载centOS7默认mysql"><a href="#2-3-卸载centOS7默认mysql" class="headerlink" title="2.3 卸载centOS7默认mysql"></a>2.3 卸载centOS7默认mysql</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 deploy]# rpm -qa | grep mariadb</span><br><span class="line">[root@cdh-server7 deploy]# rpm -e --nodeps mariadb-libs-5.5.41-2.el7_0.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="2-4-cloudera-manager-repo"><a href="#2-4-cloudera-manager-repo" class="headerlink" title="2.4 cloudera-manager.repo"></a>2.4 cloudera-manager.repo</h2><blockquote>
<p>上传cloudera-manager.repo 到 cdh-agent1</p>
</blockquote>
<p>[root@cdh-agent1 cdh]# cp cloudera-manager.repo /etc/yum.repos.d/</p>
<p><strong>transparent_hugepage</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br></pre></td></tr></table></figure>
<p><strong>vi /etc/rc.local 在文件尾放入 如下两条语句</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod +x /etc/rc.local</span><br></pre></td></tr></table></figure>
<p><strong>调整swappiness</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo 10 &gt; /proc/sys/vm/swappiness</span><br><span class="line"># vi /etc/sysctl.conf</span><br><span class="line">vm.swappiness = 10</span><br></pre></td></tr></table></figure>
<h2 id="2-5-cdh-cloudera-rpms"><a href="#2-5-cdh-cloudera-rpms" class="headerlink" title="2.5 ~/cdh/cloudera-rpms"></a>2.5 ~/cdh/cloudera-rpms</h2><blockquote>
<p>上传下列rpm包到cdh-agent1的/home/deploy/cdh/cloudera-rpms</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cloudera-manager-agent-5.7.0-1.cm560.p0.54.el7.x86_64.rpm</span><br><span class="line">cloudera-manager-daemons-5.7.0-1.cm560.p0.54.el7.x86_64.rpm</span><br><span class="line">enterprise-debuginfo-5.7.0-1.cm560.p0.54.el7.x86_64.rpm</span><br><span class="line">oracle-j2sdk1.7-1.7.0+update67-1.x86_64.rpm</span><br><span class="line"></span><br><span class="line">[root@cdh-agent1 init.d]# cd /home/deploy/cdh/cloudera-rpms/</span><br><span class="line">[root@cdh-agent1 init.d]# yum -y install *.rpm</span><br></pre></td></tr></table></figure>
<p><strong>设置JAVA_HOME</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 cdh]#vi /etc/profile</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.7.0_67-cloudera/</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">[root@cdh-server7 cdh]#source /etc/profile</span><br></pre></td></tr></table></figure>
<p>关闭防火墙</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 deploy]#systemctl stop firewalld.service  #centos7,关闭防火墙</span><br></pre></td></tr></table></figure>
<p>以上步骤执行完毕后，重启主机</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-agent1 init.d]# vi /etc/cloudera-scm-agent/config.ini</span><br><span class="line"></span><br><span class="line">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line"># Hostname of the CM server.</span><br><span class="line">#server_host=localhost</span><br><span class="line">server_host=cdh-server7(node190)</span><br><span class="line">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 cdh]# cd /etc/init.d/</span><br><span class="line">[root@cdh-server7 init.d]# ./cloudera-scm-agent start</span><br><span class="line">Starting cloudera-scm-agent:                               [  OK  ]</span><br><span class="line">[root@cdh-server deploy]# tail -f /var/log//cloudera-scm-agent/cloudera-scm-agent.log</span><br></pre></td></tr></table></figure>
<hr>
<p>注意 : </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">安装YARN NodeManager失败时，需要删除 /yarn /var/lib/hadoop-yarn 目录再重新添加</span><br></pre></td></tr></table></figure>
<hr>
<p>CDH最靠谱的安装指南 : <a href="http://www.jianshu.com/p/57179e03795f" target="_blank" rel="external">http://www.jianshu.com/p/57179e03795f</a></p>
<h1 id="Part-3-恢复启动-Our-集群"><a href="#Part-3-恢复启动-Our-集群" class="headerlink" title="Part 3 恢复启动 Our 集群"></a>Part 3 恢复启动 Our 集群</h1><h2 id="3-1-确定-firewalld-close"><a href="#3-1-确定-firewalld-close" class="headerlink" title="3.1 确定 firewalld close"></a>3.1 确定 firewalld close</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start firewalld.service#启动firewall</span><br><span class="line">systemctl stop firewalld.service#停止firewall</span><br><span class="line">systemctl disable firewalld.service#禁止firewall开机启动</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意 : 操作之前确定 firewalld 是关闭的</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@node19x flag]$ vim /etc/rc.local (/etc/rc.local 对应貌似相对dir /ect/init.d)</span><br><span class="line"></span><br><span class="line">  1 #!/bin/bash</span><br><span class="line">  2 # THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES</span><br><span class="line">  3 #</span><br><span class="line">  4 # It is highly advisable to create own systemd services or udev rules</span><br><span class="line">  5 # to run scripts during boot instead of using this file.</span><br><span class="line">  6 #</span><br><span class="line">  7 # In contrast to previous versions due to parallel execution during boot</span><br><span class="line">  8 # this script will NOT be run after all other services.</span><br><span class="line">  9 #</span><br><span class="line"> 10 # Please note that you must run &apos;chmod +x /etc/rc.d/rc.local&apos; to ensure</span><br><span class="line"> 11 # that this script will be executed during boot.</span><br><span class="line"> 12</span><br><span class="line"> 13 touch /var/lock/subsys/local</span><br><span class="line"> 14 echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line"> 15 echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line"> 16 service ntpd start</span><br><span class="line"> 17 service elasticsearch start</span><br></pre></td></tr></table></figure>
<h2 id="3-2-启动server端、cm"><a href="#3-2-启动server端、cm" class="headerlink" title="3.2 启动server端、cm"></a>3.2 启动server端、cm</h2><p>only at server node</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@cdh-server7 cdh]# cd /etc/init.d/</span><br><span class="line">[root@cdh-server7 init.d]# ./cloudera-scm-server-db start</span><br><span class="line"></span><br><span class="line">[root@cdh-server7 init.d]# ./cloudera-scm-server start</span><br><span class="line">Starting cloudera-scm-server:                              [  OK  ]</span><br><span class="line">[root@cdh-server7 init.d]# tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log</span><br><span class="line"></span><br><span class="line">// 等待日志 7180 启动成功， 访问 : http://node190:7180/cmf/home</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意 :<br>机器重启之后，默认启动会导致异常<br>需要按照该先启动cloudera-scm-server-db，再启动cloudera-scm-server的顺序执行</p>
</blockquote>
<p>一般以下 agent 是自动启动的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@node190 init.d]# ./cloudera-scm-agent start</span><br><span class="line">cloudera-scm-agent is already running</span><br><span class="line">node190:./cloudera-scm-agent start</span><br><span class="line">node19x:./cloudera-scm-agent start</span><br><span class="line">node19x:./cloudera-scm-agent start</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="3-3-CM页面上启动各服务"><a href="#3-3-CM页面上启动各服务" class="headerlink" title="3.3 CM页面上启动各服务"></a>3.3 CM页面上启动各服务</h2><ol>
<li>CM 页面上重启 service monitor</li>
<li>CM 页面上重启 host monitor</li>
<li>CM 页面上启动各项服务 (如 : ZK, Flume, YARN, HDFS, Hive, Sqoop, Spark etc..)</li>
</ol>
<hr>
<h2 id="3-4-各个节点启动-ES"><a href="#3-4-各个节点启动-ES" class="headerlink" title="3.4 各个节点启动 ES"></a>3.4 各个节点启动 ES</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[deploy@node190 init.d]# ll</span><br><span class="line">total 44</span><br><span class="line">-rwxr-xr-x  1 root root  8671 Apr  2 04:52 cloudera-scm-agent</span><br><span class="line">lrwxrwxrwx. 1 root root    58 Apr 18 16:55 elasticsearch -&gt; /home/deploy/elasticsearch-1.7.1/bin/service/elasticsearch</span><br><span class="line">-rw-r--r--. 1 root root 13948 Sep 16  2015 functions</span><br><span class="line">-rwxr-xr-x. 1 root root  2989 Sep 16  2015 netconsole</span><br><span class="line">-rwxr-xr-x. 1 root root  6630 Sep 16  2015 network</span><br><span class="line">-rw-r--r--. 1 root root  1160 Apr  1 00:45 README</span><br></pre></td></tr></table></figure>
<p><strong>deploy</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/deploy/elasticsearch-1.7.1/bin/service</span><br><span class="line">[deploy@node190 init.d]<span class="comment"># ./elasticsearch start</span></span><br><span class="line">[deploy@node19x init.d]<span class="comment"># ./elasticsearch start</span></span><br><span class="line">[deploy@node19x init.d]<span class="comment"># ./elasticsearch start</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://node190:9200/_plugin/bigdesk/#cluster</span><br></pre></td></tr></table></figure>
<blockquote>
<p>等待同步数据完成，一般会很快，等待 Status 从 RED 变为 green 状态</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://node190:9200/_plugin/head/</span><br></pre></td></tr></table></figure>
<h2 id="3-5-启动-kibana"><a href="#3-5-启动-kibana" class="headerlink" title="3.5 启动 kibana"></a>3.5 启动 kibana</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[deploy@node196 ~]#</span><br><span class="line">cd /home/deploy/kibana-4.1.1-linux-x64</span><br><span class="line">    ./bin/kibana &gt; kibana.log 2&gt;&amp;1 &amp;              --@deploy</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7 install spark ipython nodebook]]></title>
      <url>http://iequa.com/2016/03/11/ops-centos7-ipython-nodebook-install/</url>
      <content type="html"><![CDATA[<blockquote>
<p>IPython notebook 目前已经成为用 Python 做教学、计算、科研的一个重要工具。</p>
</blockquote>
<a id="more"></a>
<ul>
<li>IPython Notebook 使用浏览器作为界面，向后台的 IPython 服务器发送请求，并显示结果。</li>
<li>IPython Notebook 在浏览器的界面中使用单元(Cell)保存各种信息。Cell 有多种类型，经常使用的有表示格式化文本的 Markdown单元，和表示代码的 Code单元。</li>
</ul>
<h2 id="1-install-ifconfig"><a href="#1-install-ifconfig" class="headerlink" title="1. install ifconfig"></a>1. install ifconfig</h2> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum search ifconfig</span><br><span class="line">yum install net-tools.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="2-install-vim"><a href="#2-install-vim" class="headerlink" title="2. install vim"></a>2. install vim</h2> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum search vim</span><br><span class="line">yum install vim-enhanced</span><br></pre></td></tr></table></figure>
<h2 id="3-install-wget"><a href="#3-install-wget" class="headerlink" title="3. install wget"></a>3. install wget</h2> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> [libin@centos-linux-1 x]$ yum search wget</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.skyshe.cn</span><br><span class="line"> * extras: mirrors.163.com</span><br><span class="line"> * updates: mirrors.163.com</span><br><span class="line">============================================================================================ N/S matched: wget =============================================================================================</span><br><span class="line">wget.x86_64 : A utility <span class="keyword">for</span> retrieving files using the HTTP or FTP protocols</span><br><span class="line"></span><br><span class="line">  Name and summary matches only, use <span class="string">"search all"</span> <span class="keyword">for</span> everything.</span><br><span class="line"> </span><br><span class="line"> [libin@centos-linux-1 x]$ yum install wget.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="4-install-Jdk"><a href="#4-install-Jdk" class="headerlink" title="4. install Jdk"></a>4. install Jdk</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># green install jdk-7u80-linux-x64.gz</span></span><br><span class="line"><span class="comment"># edit /etc/profile add</span></span><br><span class="line"><span class="comment">## libin add ##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### JAVA ###</span></span><br><span class="line">JAVA_HOME=/home/x/jdk</span><br><span class="line">JAVA_BIN=<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line">PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/jre/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/jre/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME JAVA_BIN PATH CLASSPATH</span><br><span class="line"><span class="string">"/etc/profile"</span> 86L, 2035C</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/profile：该文件是用户登录时，操作系统定制用户环境时使用的第一个文件，应用于登录到系统的每一个用户。 对所有用户有效 ##</span></span><br></pre></td></tr></table></figure>
<h2 id="5-install-Scala"><a href="#5-install-Scala" class="headerlink" title="5. install Scala"></a>5. install Scala</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># green install scala-2.10.4.tgz</span></span><br><span class="line"><span class="comment"># edit /etc/profile add</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Scala ###</span></span><br><span class="line"><span class="comment">#export SCALA_HOME=/usr/local/xSoft/scala</span></span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/home/x/scala</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;SCALA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<h2 id="6-install-Spark-Standalone"><a href="#6-install-Spark-Standalone" class="headerlink" title="6. install Spark (Standalone)"></a>6. install Spark (Standalone)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">green install spark-1.5.2-bin-hadoop2.6.tgz</span><br><span class="line">cp conf/spark-env.sh.template conf/spark-env.sh</span><br></pre></td></tr></table></figure>
<p>edit conf/spark-env.sh add</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/home/x/jdk</span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/home/x/scala</span><br><span class="line"><span class="built_in">export</span> SPARK_HOME=/home/x/spark</span><br><span class="line"><span class="built_in">export</span> SPARK_MASTER_IP=192.168.181.113</span><br><span class="line"><span class="built_in">export</span> MASTER=spark://192.168.181.113:7077</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> SPARK_EXECUTOR_INSTANCES=2</span><br><span class="line"><span class="built_in">export</span> SPARK_EXECUTOR_CORES=1</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> SPARK_WORKER_MEMORY=1000m</span><br><span class="line"><span class="built_in">export</span> SPARK_EXECUTOR_MEMORY=300m</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> SPARK_LIBRARY_PATH=<span class="variable">$&#123;SPARK_HOME&#125;</span>/lib</span><br><span class="line"></span><br><span class="line"><span class="comment">#export SPARK_LAUNCH_WITH_SCALA=0</span></span><br><span class="line"><span class="comment">#export SCALA_LIBRARY_PATH=$&#123;SPARK_HOME&#125;/lib</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#export SPARK_LIBRARY_PATH=/home/deploy/spark/spark-1.5.2-bin-hadoop2.6/lib</span></span><br></pre></td></tr></table></figure>
<h2 id="7-install-ipython-nodebook"><a href="#7-install-ipython-nodebook" class="headerlink" title="7. install ipython-nodebook"></a>7. install ipython-nodebook</h2><p>openssh、zlib<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install openssh-clients</span><br><span class="line">yum install zlib</span><br></pre></td></tr></table></figure></p>
<p>setuptools、pip</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xvf setuptools-18.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> setuptools-18.1</span><br><span class="line">sudo python setup.py build</span><br><span class="line">sudo python setup.py install</span><br><span class="line"></span><br><span class="line">tar xvf pip-8.1.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> pip-8.1.0</span><br><span class="line">sudo python setup.py build</span><br><span class="line">sudo python setup.py install</span><br></pre></td></tr></table></figure>
<p>ipython、matplotlib</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pip install ipython</span><br><span class="line">sudo pip install matplotlib</span><br></pre></td></tr></table></figure>
<blockquote>
<p>mymac : sudo pip install –upgrade ipython –ignore-installed six</p>
</blockquote>
<p>python-dev、g++</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install python-devel （如果没有安装 python 源代码，会报找不到 Python.h 的头文件错误）</span><br><span class="line">sudo yum install gcc-c++</span><br></pre></td></tr></table></figure>
<p><strong>install python-notebook</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 前面install的各种py相关, 为个这一步</span></span><br><span class="line"></span><br><span class="line">sudo pip install notebook</span><br></pre></td></tr></table></figure>
<h2 id="8-start-up-notebook"><a href="#8-start-up-notebook" class="headerlink" title="8. start-up notebook"></a>8. start-up notebook</h2><p><strong>startup ipython notebook</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> your_dir</span><br><span class="line">ipython notebook</span><br></pre></td></tr></table></figure>
<p><strong>startup ipython spark notebook</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PYSPARK_DRIVER_PYTHON=ipython PYSPARK_DRIVER_PYTHON_OPTS=<span class="string">"notebook --ip=192.168.181.113"</span> /home/x/spark/bin/pyspark</span><br></pre></td></tr></table></figure>
<p>浏览器访问 <a href="http://192.168.181.113:8888/notebooks" target="_blank" rel="external">http://192.168.181.113:8888/notebooks</a></p>
<p><img src="/images/ops/ops-ipython-01.png" alt="ipython"></p>
<h2 id="9-spark-notebook-example1"><a href="#9-spark-notebook-example1" class="headerlink" title="9. spark-notebook example1"></a>9. spark-notebook example1</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">%pylab inline</span><br><span class="line">%matplotlib inline</span><br><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">data =[33,25,20,12,10]</span><br><span class="line">plt.figure(num=1, figsize=(6,6))</span><br><span class="line">plt.axes(aspect=1)</span><br><span class="line">plt.title(<span class="string">'Plot 3'</span>, size=14)</span><br><span class="line">plt.pie(data, labels=(<span class="string">'Group 1'</span>,<span class="string">'Group 2'</span>,<span class="string">'Group 3'</span>,<span class="string">'Group 4'</span>,<span class="string">'Group 5'</span>))</span><br><span class="line">plt.savefig(<span class="string">'/home/x/spark/test_libin/plot3.png'</span>, format=<span class="string">'png'</span>)</span><br></pre></td></tr></table></figure>
<p><img src="/images/ops/ops-ipython-02.png" alt="ipython"></p>
<h2 id="maybe-attention-point"><a href="#maybe-attention-point" class="headerlink" title="maybe attention point"></a>maybe attention point</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -V</span><br><span class="line"></span><br><span class="line"><span class="comment">#若系统默认是python2.6，需要升级到2.7</span></span><br><span class="line">tar xvf Python-2.7.tgz</span><br><span class="line">./configure --with-zlib=/usr/include --prefix=/usr/<span class="built_in">local</span>/python27 --prefix=/usr/<span class="built_in">local</span>/python27</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">mv /usr/bin/python /usr/bin/python_old</span><br><span class="line">ln <span class="_">-s</span> /usr/<span class="built_in">local</span>/python27/bin/python /usr/bin/</span><br><span class="line">python</span><br><span class="line">此处已经可以正常使用python2.7了</span><br><span class="line">但是因为yum是使用的2.6的版本来用的，所以 还需要修改一下</span><br><span class="line">[root@wangyuelou Python-2.7.2]<span class="comment"># vim /usr/bin/yum</span></span><br><span class="line"><span class="comment">#!/usr/bin/python   #修改此处为2.6的位置</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Sqoop introduce]]></title>
      <url>http://iequa.com/2016/02/16/hadoop-sqoop-learn-use01/</url>
      <content type="html"><![CDATA[<p>Sqoop 即 SQL to Hadoop, 是一款方便的在传统关系数据库与 Hadoop 之间进行数据迁移的工具，充分利用 MapReduce 并行特点以批处理的方式加快数据传输.</p>
<a id="more"></a>
<h2 id="1-Sqoop-what"><a href="#1-Sqoop-what" class="headerlink" title="1. Sqoop what ?"></a>1. Sqoop what ?</h2><p>sqoop 即 SQL to Hadoop ，是一款方便的在传统关系数据库与 Hadoop 之间进行数据迁移的工具，充分利用 MapReduce 并行特点以批处理的方式加快数据传输，发展至今主要演化了二大版本，sqoop1和sqoop2。 </p>
<p>sqoop : clouder 公司开发</p>
<p><strong>生产背景</strong></p>
<ol>
<li>mysql  导入 Hadoop </li>
<li>Hadoop 导入 mysql</li>
</ol>
<p>注 : 以上 Hadoop 指 Hive、HBase、HDFS 等</p>
<h2 id="2-Sqoop-特点"><a href="#2-Sqoop-特点" class="headerlink" title="2. Sqoop 特点"></a>2. Sqoop 特点</h2><p>sqoop架构非常简单，其整合了Hive、Hbase和Oozie，通过map-reduce任务来传输数据，从而提供并发特性和容错。</p>
<p>   Sqoop 由两部分组成：客户端(client)和服务端(server)。需要在集群的其中某个节点上安装server，该节点的服务端可以作为其他 Sqoop 客户端的入口点。</p>
<p>   在 server 端的节点上必须安装有 Hadoop。client 可以安装在任意数量的机子上。在装有客户端的机子上不需要安装 Hadoop。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqoop 官网 : https://sqoop.apache.org</span><br><span class="line"></span><br><span class="line">1.4.5官方文档 : https://sqoop.apache.org/docs/1.4.5/</span><br><span class="line"></span><br><span class="line">sqoop2不推荐的原因 : http://blog.csdn.net/robbyo/article/details/50737356</span><br></pre></td></tr></table></figure>
<h2 id="3-Sqoop-优缺点"><a href="#3-Sqoop-优缺点" class="headerlink" title="3. Sqoop 优缺点"></a>3. Sqoop 优缺点</h2><p><strong>优点</strong></p>
<ol>
<li>高效可控的利用资源，任务并行度，超时时间。</li>
<li>数据类型映射与转化，可自动进行，用户也可自定义 .</li>
<li>支持多种主流数据库，MySQL,Oracle，SQL Server，DB2等等 。</li>
</ol>
<p><strong>缺点</strong></p>
<ol>
<li>基于命令行的操作方式，易出错，且不安全。</li>
<li>数据传输和数据格式是紧耦合的，这使得connector无法支持所有的数据格式</li>
<li>用户名和密码暴漏出来</li>
</ol>
<h2 id="4-Sqoop-原理"><a href="#4-Sqoop-原理" class="headerlink" title="4. Sqoop 原理"></a>4. Sqoop 原理</h2><h3 id="4-1-Sqoop的import原理"><a href="#4-1-Sqoop的import原理" class="headerlink" title="4.1 Sqoop的import原理"></a>4.1 Sqoop的import原理</h3><p>Sqoop 在 import 时，需要制定 split-by 参数。</p>
<p>Sqoop 根据不同的 split-by参数值 来进行切分, 然后将切分出来的区域分配到不同 map 中。每个map中再处理数据库中获取的一行一行的值，写入到 HDFS 中。同时split-by 根据不同的参数类型有不同的切分方法，如比较简单的int型，Sqoop会取最大和最小split-by字段值，然后根据传入的 num-mappers来确定划分几个区域。 </p>
<p>比如 select max(split_by),min(split-by) from 得到的 max(split-by)和 min(split-by) 分别为 1000 和 1, 而 num-mappers 为 2 的话，则会分成两个区域 (1,500) 和 (501-100), 同时也会分成 2个sql 给 2个map 去进行导入操作，分别为 select XXX from table where split-by&gt;=1 and split-by<500 和="" select="" xxx="" from="" table="" where="" split-by="">=501 and split-by&lt;=1000。最后每个map各自获取各自SQL中的数据进行导入工作。</500></p>
<h3 id="4-2-Sqoop的export原理"><a href="#4-2-Sqoop的export原理" class="headerlink" title="4.2. Sqoop的export原理"></a>4.2. Sqoop的export原理</h3><p>根据 mysql 表名称，生成一个以表名称命名的 Java类，该类继承了 sqoopRecord的，是一个只有 Map 的 MR，且自定义了输出字段。</p>
<p>sqoop export –connect jdbc:mysql://$url:3306/$3?characterEncoding=utf8 –username $username –password $password –table $1 –export-dir $2 –input-fields-terminated-by ‘|’ –null-non-string ‘0’ –null-string ‘0’;</p>
<h2 id="5-Sqoop-使用实例"><a href="#5-Sqoop-使用实例" class="headerlink" title="5. Sqoop 使用实例"></a>5. Sqoop 使用实例</h2><p><strong>环境</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqoop: sqoop-1.4.5+cdh5.3.6+78</span><br><span class="line">hive : hive-0.13.1+cdh5.3.6+397</span><br><span class="line">hbase: hbase-0.98.6+cdh5.3.6+115</span><br></pre></td></tr></table></figure>
<h3 id="5-1-Mysql-to-Hadoop"><a href="#5-1-Mysql-to-Hadoop" class="headerlink" title="5.1. Mysql to Hadoop"></a>5.1. Mysql to Hadoop</h3><ul>
<li>Mysql to Hdfs</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqoop import \</span><br><span class="line">  --connect $&#123;jdbc_url&#125; --username $&#123;jdbc_username&#125; --password  $&#123;jdbc_passwd&#125; \</span><br><span class="line">  --query &quot;$&#123;exec_sql&#125;&quot; \</span><br><span class="line">  --split-by $&#123;id&#125; -m 10 \</span><br><span class="line">  --target-dir $&#123;target_dir&#125; \</span><br><span class="line">  --fields-terminated-by &quot;\001&quot; --lines-terminated-by &quot;\n&quot; \</span><br><span class="line">  --hive-drop-import-delims \</span><br><span class="line">  --null-string &apos;\\N&apos; --null-non-string &apos;\\N&apos;</span><br></pre></td></tr></table></figure>
<ul>
<li>Mysql To Hive</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqoop import \</span><br><span class="line">  --connect $&#123;jdbc_url&#125; \</span><br><span class="line">  --username $&#123;jdbc_username&#125; --password  $&#123;jdbc_passwd&#125; \</span><br><span class="line">  --table $&#123;jdbc_table&#125; --fields-terminated-by &quot;\001&quot; --lines-terminated-by &quot;\n&quot; \</span><br><span class="line">  --hive-import --hive-overwrite --hive-table $&#123;hive_table&#125; \</span><br><span class="line">  --null-string &apos;\\N&apos; --null-non-string &apos;\\N&apos;</span><br></pre></td></tr></table></figure>
<ul>
<li>Mysql To HBase</li>
</ul>
<h3 id="5-2-Hadoop-to-Mysql"><a href="#5-2-Hadoop-to-Mysql" class="headerlink" title="5.2 Hadoop to Mysql"></a>5.2 Hadoop to Mysql</h3><ul>
<li>Hdfs To Mysql</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqoop <span class="built_in">export</span> -D sqoop.export.records.per.statement=10 \</span><br><span class="line">--connect jdbc:mysql://192.168.***.**:3306/***?autoReconnect=<span class="literal">true</span> </span><br><span class="line">--username *** </span><br><span class="line">--password *** </span><br><span class="line">--table mds_dm_rs_shop_result \</span><br><span class="line">--fields-terminated-by <span class="string">'\t'</span> </span><br><span class="line">--export-dir <span class="string">"/dc_ext/xbd/dm/mds/mds_dm_rs_shop_result/dt=20170410"</span> </span><br><span class="line">--null-string <span class="string">'\\N'</span> </span><br><span class="line">--null-non-string <span class="string">'\\N'</span>;</span><br></pre></td></tr></table></figure>
<p><strong>refence article</strong></p>
<p><a href="http://www.zihou.me/html/2014/01/28/9114.html" target="_blank" rel="external">Sqoop中文文档</a><br><a href="http://www.aboutyun.com/thread-12684-1-1.html" target="_blank" rel="external">Hive to Mysql 常遇九大问题总结</a> </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hive Introduce 1]]></title>
      <url>http://iequa.com/2016/02/15/hadoop-hive-brief/</url>
      <content type="html"><![CDATA[<ol>
<li>初步了解 Hadoop 生态圈</li>
<li>初步了解 Hive 架构图</li>
</ol>
<a id="more"></a>
<h2 id="1-Hive-Introduce"><a href="#1-Hive-Introduce" class="headerlink" title="1. Hive Introduce"></a>1. Hive Introduce</h2><h3 id="1-1-Hive-Preface"><a href="#1-1-Hive-Preface" class="headerlink" title="1.1 Hive Preface"></a>1.1 Hive Preface</h3><p><strong>Hadoop</strong></p>
<ol>
<li>Hadoop 生态系统 是 处理大数据集而产生的解决方案。</li>
<li>Hadoop 实现计算模型 MapReduce, 可将计算任务分割成多个处理单元，这个计算模型下面是一个 HDFS。</li>
</ol>
<p><strong>Hive</strong></p>
<ol>
<li>Hive 提供了一个 Hive查询语言 HiveQL, 查询转换为 MapReduce job</li>
<li>Hive 适合做数据仓库，可离线维护海量数据，可对数据进行挖掘, 形成报告等</li>
<li>Hadoop、HDFS 设计本身限制了 Hive 所能胜任的工作, Hive 不支持记录级别的更新、插入 或者 删除 操作。</li>
</ol>
<p><strong>Hive 运行架构</strong></p>
<ol>
<li>使用 HQL 作为查询接口；</li>
<li>使用 MapReduce 作为执行层；</li>
<li>使用 HDFS 作为存储层；</li>
</ol>
<h3 id="1-2-Hadoop-Mapreduce"><a href="#1-2-Hadoop-Mapreduce" class="headerlink" title="1.2 Hadoop / Mapreduce"></a>1.2 Hadoop / Mapreduce</h3><p><code>Input -&gt; Mappers -&gt; Sort,Shuffle -&gt; Reducers -&gt; Output</code></p>
<h3 id="1-3-Hive-系统架构"><a href="#1-3-Hive-系统架构" class="headerlink" title="1.3 Hive 系统架构"></a>1.3 Hive 系统架构</h3><p><img src="/images/hadoop/hive-02.png" alt="Hive 系统架构"></p>
<h2 id="2-Hive-架构组件分析"><a href="#2-Hive-架构组件分析" class="headerlink" title="2. Hive 架构组件分析"></a>2. Hive 架构组件分析</h2><p><strong>本章重点 :</strong></p>
<ol>
<li>初步了解 Hive 的工作流</li>
<li>初步了解 hive 的工作组件</li>
</ol>
<h3 id="2-1-元数据存储Metastore"><a href="#2-1-元数据存储Metastore" class="headerlink" title="2.1 元数据存储Metastore"></a>2.1 元数据存储Metastore</h3><ul>
<li><p>Hive的数据由两部分组成：数据文件 和 元数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">元数据存储，Derby只能用于一个Hive连接，一般存储在MySQL。</span><br><span class="line"></span><br><span class="line">元数据包括表的名字，表的列和分区及其属性，表的属性（是否为外部表等），表的数据所在目录等。</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-2-驱动-Driver"><a href="#2-2-驱动-Driver" class="headerlink" title="2.2 驱动 (Driver)"></a>2.2 驱动 (Driver)</h3><ul>
<li>编译器</li>
<li>优化器</li>
<li>执行器</li>
</ul>
<p>用户通过下面的接口提交Hive给Driver，由Driver进行HQL语句解析，此时从Metastore中获取表的信息，先生成逻辑计划，再生成物理计划，再由Executor生成Job交给Hadoop运行，然后由Driver将结果返回给用户。</p>
<p>编译器（Hive的核心）：1，语义解析器（ParseDriver），将查询字符串转换成解析树表达式；2，语法解析器（SemanticAnalyzer），将解析树转换成基于语句块的内部查询表达式；3，逻辑计划生成器（Logical Plan Generator），将内部查询表达式转换为逻辑计划，这些计划由逻辑操作树组成，操作符是Hive的最小处理单元，每个操作符处理代表一道HDFS操作或者是MR作业；4，查询计划生成器（QueryPlan Generator），将逻辑计划转化成物理计划（MR Job）。</p>
<p>优化器：优化器是一个演化组件，当前它的规则是：列修剪，谓词下压。</p>
<p>执行器：编译器将操作树切分成一个Job链（DAG），执行器会顺序执行其中所有的Job；如果Task链不存在依赖关系，可以采用并发执行的方式进行Job的执行。</p>
<h3 id="2-3-接口"><a href="#2-3-接口" class="headerlink" title="2.3 接口"></a>2.3 接口</h3><p><strong>CLI、HWI、ThriftServer</strong></p>
<ol>
<li><p>CLI：为命令行工具，默认服务。bin/hive或bin/hive–service cli；</p>
</li>
<li><p>HWI：为Web接口，可以用过浏览器访问Hive，默认端口9999，启动方式为bin/hive –service hwi;</p>
</li>
<li><p>ThriftServer：通过Thrift对外提供服务，默认端口是10000，启动方式为bin/hive –service hiveserver;</p>
</li>
</ol>
<p><strong> 连接hive-metastore(如mysql)的三种方式 </strong></p>
<ol>
<li>单用户模式。此模式连到数据库Derby，一般用于Unit Test。<br><img src="/images/hadoop/hive-longdis-model.jpeg" alt="单用户模式"></li>
<li>多用户模式。通过网络连接到一个数据库中，是最经常使用到的模式。<br><img src="/images/hadoop/hive-more-user-model.jpeg" alt="多用户模式"></li>
<li>远程服务器模式。用于非Java客户端访问元数据库，在服务器端启动MetaStoreServer，客户端利用Thrift协议通过MetaStoreServer访问元数据库。<br><img src="/images/hadoop/hive-longdis-model.jpeg" alt="远程服务器模式"></li>
</ol>
<h3 id="2-4-其他服务"><a href="#2-4-其他服务" class="headerlink" title="2.4 其他服务"></a>2.4 其他服务</h3><p><strong>bin/hive –service -help</strong></p>
<ol>
<li><p>metastore   (bin/hive –service metastore)</p>
</li>
<li><p>hiveserver2（bin/hive –service hiveserver2）</p>
</li>
</ol>
<p><strong>HiveServer2</strong></p>
<ol>
<li><p>HiveServer2是HieServer改进版本，它提供给新的ThriftAPI来处理JDBC或者ODBC客户端，进行Kerberos身份验证，多个客户端并发</p>
</li>
<li><p>HS2还提供了新的CLI：BeeLine，是Hive 0.11引入的新的交互式CLI，基于SQLLine，可以作为Hive JDBC Client 端访问HievServer2，启动一个beeline就是维护了一个session.</p>
</li>
</ol>
<p><strong>Hive下载地址</strong></p>
<ol>
<li><p>cdh-hive : <a href="https://repository.cloudera.com/artifactory/cloudera-repos/org/apache/hive/hive-exec/0.13.1-cdh5.3.6/" target="_blank" rel="external">hive0.13.1-cdh5.3.6 jar 包</a> (没用)</p>
</li>
<li><p>apache-hive : <a href="http://archive.apache.org/dist/hive/" target="_blank" rel="external">Apache-Hive</a></p>
</li>
</ol>
<p><strong>Hive-Beeline 试验成功</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">下载 apache-hive-0.13.1-bin, apache-hadoop2.5，配置 HADOOP_HOME, 启动 </span><br><span class="line"></span><br><span class="line">➜  ./apache-hive-0.13.1-bin/bin/beeline</span><br><span class="line">Beeline version 0.13.1 by Apache Hive</span><br><span class="line">beeline&gt; !connect jdbc:hive2://node190:10000 hdfs 1</span><br><span class="line">scan complete in 3ms</span><br><span class="line">Connecting to jdbc:hive2://node190:10000</span><br><span class="line">Connected to: Apache Hive (version 0.13.1-cdh5.3.6)</span><br><span class="line">Driver: Hive JDBC (version 0.13.1)</span><br><span class="line">Transaction isolation: TRANSACTION_REPEATABLE_READ</span><br><span class="line">0: jdbc:hive2://node190:10000&gt; select count(*) from ods_dm_shop_tmp;</span><br><span class="line">+-------+</span><br><span class="line">|  _c0  |</span><br><span class="line">+-------+</span><br><span class="line">| 1091  |</span><br><span class="line">+-------+</span><br><span class="line">1 row selected (24.815 seconds)</span><br><span class="line">0: jdbc:hive2://node190:10000&gt;</span><br><span class="line"></span><br><span class="line">说明 : beeline 可以成功，用代码 jdbc 就可以成功</span><br><span class="line"></span><br><span class="line">安装 hadoop 参考了 《Spark大数据处理》高彦杰@著, 不用配置直接绿色简单版</span><br></pre></td></tr></table></figure>
<p><strong>Hive table</strong></p>
<p>  table 中的一个 Partition 对应表下的一个子目录<br>  每一个 Bucket 对应一个文件；<br>  Hive的默认数据仓库目录是/user/hive/warehouse<br>  在hive-site.xml中由hive.metastore.warehouse.dir项定义；</p>
<h2 id="reference-article"><a href="#reference-article" class="headerlink" title="reference article"></a>reference article</h2><p>参考 : <a href="http://blog.csdn.net/lalaguozhe/article/details/11776055" target="_blank" rel="external">CSDN - Hive Server 2 调研，安装和部署</a><br>参考 : <a href="http://www.geedoo.info/beeline-abnormal-connection-hiveserver2.html" target="_blank" rel="external">极豆技术博客 - Beeline连接hiveserver2异常</a><br>参考 : <a href="http://blog.csdn.net/skywalker_only/article/details/38366347" target="_blank" rel="external">Hive学习之HiveServer2 JDBC客户端</a><br>参考 : <a href="https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients#HiveServer2Clients-Beeline" target="_blank" rel="external">HiveServer2 Clients beeline</a><br>参考 : <a href="http://www.aboutyun.com/blog-6-1855.html" target="_blank" rel="external">Beeline连接hiveserver2异常</a><br>参考 : <a href="http://blog.csdn.net/skywalker_only/article/details/38335235" target="_blank" rel="external">Hive学习之HiveServer2服务端配置与启动</a></p>
<p><strong>other tmp</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## Chap 7 HiveQL 视图 ##</span><br><span class="line">## Chap 8 HiveQL 索引 ##</span><br><span class="line">## Chap 9 模式设计 ##</span><br><span class="line">## Chap 10 调优 ##</span><br><span class="line">## Chap 11 其他文件格式和压缩方法 ##</span><br><span class="line">## Chap 12 开发 ##</span><br><span class="line">## Chap 13 函数 ##</span><br><span class="line">## Chap 14 Streaming ##</span><br><span class="line">## Chap 15 自定义Hive文件和记录格式 ##</span><br><span class="line">## Chap 16 Hive 的 Thrift 服务 ##</span><br><span class="line">## Chap 11 其他文件格式和压缩方法 ##</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark Introduce and Install]]></title>
      <url>http://iequa.com/2016/02/01/spark-introduce-and-install/</url>
      <content type="html"><![CDATA[<p>介绍 Spark 的历史，介绍 Spark 的安装与部署，介绍 Spark 的代码架构 等</p>
<a id="more"></a>
<p>Spark 发源于 美国加州大学伯克利分校 AMPLap 大数据分析平台<br>Spark 立足于内存计算、从多迭代批量处理出发<br>Spark 兼顾数据仓库、流处理、图计算 等多种计算范式，大数据系统领域全栈计算平台  </p>
<p><a href="http://spark.apache.org" target="_blank" rel="external">spark.apache.org</a> </p>
<blockquote>
<p>University of California, Berkeley </p>
</blockquote>
<h2 id="1-Spark-的历史与发展"><a href="#1-Spark-的历史与发展" class="headerlink" title="1. Spark 的历史与发展"></a>1. Spark 的历史与发展</h2><ul>
<li>2009 年 : Spark 诞生于 AMPLab  </li>
<li>2014-02 : Apache 顶级项目  </li>
<li>2014-05 : Spark 1.0.0 发布</li>
</ul>
<h2 id="2-Spark-之于-Hadoop"><a href="#2-Spark-之于-Hadoop" class="headerlink" title="2. Spark 之于 Hadoop"></a>2. Spark 之于 Hadoop</h2><p> Spark 是 MapReduce 的替代方案, 且兼容 HDFS、Hive 等分布式存储层。</p>
<p> Spark 相比 Hadoop MapReduce 的优势如下 :</p>
<ol>
<li>中间结果输出</li>
<li>数据格式和内存布局</li>
<li>执行策略  </li>
<li>任务调度的开销</li>
</ol>
<blockquote>
<p>Spark用事件驱动类库AKKA来启动任务, 通过线程池复用线程避免进线程启动切换开销</p>
</blockquote>
<h2 id="3-Spark-能带来什么"><a href="#3-Spark-能带来什么" class="headerlink" title="3. Spark 能带来什么 ?"></a>3. Spark 能带来什么 ?</h2><ol>
<li>打造全栈多计算范式的高效数据流水线</li>
<li>轻量级快速处理, 并支持 Scala、Python、Java</li>
<li>与 HDFS 等 存储层 兼容</li>
</ol>
<h2 id="4-Spark-安装与部署"><a href="#4-Spark-安装与部署" class="headerlink" title="4. Spark 安装与部署"></a>4. Spark 安装与部署</h2><p>Spark 主要使用 HDFS 充当持久化层，所以完整的安装 Spark 需要先安装 Hadoop.<br>Spark 是计算框架, 它主要使用 HDFS 充当持久化层。</p>
<p><strong>Linux 集群安装 Spark</strong></p>
<ol>
<li>安装 JDK</li>
<li>安装 Scala</li>
<li>配置 SSH 免密码登陆 (可选)</li>
<li>安装 Hadoop</li>
<li>安装 Spark</li>
<li>启动 Spark 集群</li>
</ol>
<p><a href="http://spark.apache.org/downloads.html" target="_blank" rel="external">Spark官网下载</a></p>
<h3 id="4-1-安装-Spark"><a href="#4-1-安装-Spark" class="headerlink" title="4.1 安装 Spark"></a>4.1 安装 Spark</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(1). download  spark-1.5.2-bin-hadoop2.6.tgz</span><br><span class="line"></span><br><span class="line">(2). tar -xzvf spark-1.5.2-bin-hadoop2.6.tgz</span><br><span class="line"></span><br><span class="line">(3). 配置 conf/spark-env.sh</span><br><span class="line">    1) 详细复杂参数配置参见 官网 Configuration</span><br><span class="line">    2) vim conf/spark-env.sh</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">export</span> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home</span><br><span class="line">    <span class="built_in">export</span> SCALA_HOME=/usr/<span class="built_in">local</span>/Cellar/scala/2.11.5</span><br><span class="line">    <span class="built_in">export</span> SPARK_HOME=/usr/<span class="built_in">local</span>/xSoft/spark</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">export</span> SPARK_MASTER_IP=ip</span><br><span class="line">    <span class="built_in">export</span> MASTER=spark://ip:7077</span><br><span class="line"></span><br><span class="line">    <span class="built_in">export</span> SPARK_EXECUTOR_INSTANCES=2</span><br><span class="line">    <span class="built_in">export</span> SPARK_EXECUTOR_CORES=1</span><br><span class="line"></span><br><span class="line">    <span class="built_in">export</span> SPARK_WORKER_MEMORY=1000m</span><br><span class="line">    <span class="built_in">export</span> SPARK_EXECUTOR_MEMORY=300m</span><br><span class="line"></span><br><span class="line">    <span class="built_in">export</span> SPARK_LIBRARY_PATH=<span class="variable">$&#123;SPARK_HOME&#125;</span>/lib</span><br><span class="line"></span><br><span class="line">(4). 配置 conf/slaves (测试可选)</span><br><span class="line">(5). 一般需要 startup ssh server.</span><br></pre></td></tr></table></figure>
<h3 id="4-2-启动-Spark-集群"><a href="#4-2-启动-Spark-集群" class="headerlink" title="4.2 启动 Spark 集群"></a>4.2 启动 Spark 集群</h3><p>在 Spark 根目录启动 Spark</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./sbin/start-all.sh</span><br><span class="line">./sbin/stop-all.sh</span><br></pre></td></tr></table></figure>
<p>启动后 jps 查看 会有 Master 进程存在</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  spark-1.5.2-bin-hadoop2.6  jps</span><br><span class="line">11262 Jps</span><br><span class="line">11101 Master</span><br><span class="line">11221 Worker</span><br></pre></td></tr></table></figure>
<h3 id="4-3-Spark-集群初试"><a href="#4-3-Spark-集群初试" class="headerlink" title="4.3 Spark 集群初试"></a>4.3 Spark 集群初试</h3><p>可以通过两种方式运行 Spark 样例 :</p>
<ul>
<li>以 ./run-example 的方式执行</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/xSoft/spark</span><br><span class="line">➜  spark ./sbin/start-all.sh</span><br><span class="line">➜  spark ./bin/run-example org.apache.spark.examples.SparkPi</span><br></pre></td></tr></table></figure>
<ul>
<li>以 ./Spark Shell 方式执行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scala&gt; import org.apache.spark._</span><br><span class="line">import org.apache.spark._</span><br><span class="line"></span><br><span class="line">scala&gt; object SparkPi &#123;</span><br><span class="line">     |</span><br><span class="line">     |   def main(args: Array[String]) &#123;</span><br><span class="line">     |</span><br><span class="line">     |     val slices = 2</span><br><span class="line">     |     val n = 100000 * slices</span><br><span class="line">     |</span><br><span class="line">     |     val count = sc.parallelize(1 to n, slices).map &#123; i =&gt;</span><br><span class="line">     |</span><br><span class="line">     |       val x = math.random * 2 - 1</span><br><span class="line">     |       val y = math.random * 2 - 1</span><br><span class="line">     |</span><br><span class="line">     |       if (x * x + y * y &lt; 1) 1 else 0</span><br><span class="line">     |</span><br><span class="line">     |     &#125;.reduce(_ + _)</span><br><span class="line">     |</span><br><span class="line">     |     println(&quot;Pi is rounghly &quot; + 4.0 * count / n)</span><br><span class="line">     |</span><br><span class="line">     |   &#125;</span><br><span class="line">     | &#125;</span><br><span class="line">defined module SparkPi</span><br><span class="line">scala&gt;</span><br><span class="line"></span><br><span class="line">// Spark Shell 已默认将 SparkContext 类初始化为对象 sc, 用户代码可直接使用。</span><br><span class="line">// Spark 自带的交互式的 Shell 程序，方便进行交互式编程。</span><br></pre></td></tr></table></figure>
<ul>
<li><p>通过 Web UI 查看集群状态</p>
<pre><code>http：//masterIp:8080
</code></pre></li>
</ul>
<p><img src="/images/spark/spark-introduce-05.png" width="740" height="400" img=""></p>
<h3 id="4-4-Spark-quick-start"><a href="#4-4-Spark-quick-start" class="headerlink" title="4.4 Spark quick start"></a>4.4 Spark quick start</h3><p>quick-start : <a href="https://spark.apache.org/docs/latest/quick-start.html" target="_blank" rel="external">https://spark.apache.org/docs/latest/quick-start.html</a></p>
<p>./bin/spark-shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scala&gt; val textFile = sc.textFile(&quot;README.md&quot;)</span><br><span class="line">textFile: spark.RDD[String] = spark.MappedRDD@2ee9b6e3</span><br><span class="line">RDDs have actions, which return values, and transformations, which return pointers to new RDDs. Let’s start with a few actions:</span><br><span class="line"></span><br><span class="line">scala&gt; textFile.count() // Number of items in this RDD</span><br><span class="line">res0: Long = 126</span><br><span class="line"></span><br><span class="line">scala&gt; textFile.first() // First item in this RDD</span><br><span class="line">res1: String = # Apache Spark</span><br></pre></td></tr></table></figure>
<h2 id="5-Spark-生态-BDAS"><a href="#5-Spark-生态-BDAS" class="headerlink" title="5. Spark 生态 BDAS"></a>5. Spark 生态 BDAS</h2><ul>
<li>Spark 框架、架构、计算模型、数据管理策略</li>
<li>Spark BDAS 项目及其子项目进行了简要介绍</li>
<li>Spark 生态系统包含的多个子项目 : SparkSql、Spark Streaming、GraphX、MLlib</li>
</ul>
<p><img src="/images/spark/spark-introduce-01.png" alt="Spark EcoSystem = BDAS = 伯克利数据分析栈"></p>
<ul>
<li>Spark 是 BDAS 核心, 是一 大数据分布式编程框架</li>
</ul>
<h2 id="6-Spark-架构"><a href="#6-Spark-架构" class="headerlink" title="6. Spark 架构"></a>6. Spark 架构</h2><ul>
<li>Spark 的代码结构</li>
<li>Spark 的架构</li>
<li>Spark 运行逻辑</li>
</ul>
<h3 id="6-1-Spark-的代码结构"><a href="#6-1-Spark-的代码结构" class="headerlink" title="6.1 Spark 的代码结构"></a>6.1 Spark 的代码结构</h3><p><img src="/images/spark/spark-introduce-02.jpeg" alt="spark code"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scheduler：文件夹中含有负责整体的Spark应用、任务调度的代码。</span><br><span class="line">broadcast：含有Broadcast（广播变量）的实现代码，API中是Java和Python API的实现。</span><br><span class="line"></span><br><span class="line">deploy：含有Spark部署与启动运行的代码。</span><br><span class="line">common：不是一个文件夹，而是代表Spark通用的类和逻辑实现，有5000行代码。</span><br><span class="line"></span><br><span class="line">metrics：是运行时状态监控逻辑代码，Executor中含有Worker节点负责计算的逻辑代码。</span><br><span class="line">partial：含有近似评估代码。</span><br></pre></td></tr></table></figure>
<h3 id="6-2-Spark-的架构"><a href="#6-2-Spark-的架构" class="headerlink" title="6.2 Spark 的架构"></a>6.2 Spark 的架构</h3><p>Spark架构采用了分布式计算中的Master-Slave模型。</p>
<table>
<thead>
<tr>
<th>Role</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Master</td>
<td>对应集群中的含有Master进程的节点, 集群的控制器</td>
</tr>
<tr>
<td>Slave</td>
<td>集群中含有Worker进程的节点</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>Client</td>
<td>作为用户的客户端负责提交应用</td>
</tr>
<tr>
<td>Driver</td>
<td>运行Application的main()函数并创建SparkContext。负责作业的调度，即Task任务的分发</td>
</tr>
<tr>
<td>Worker</td>
<td>管理计算节点和创建Executor，启动Executor 或 Driver. 接收主节点命令与进行状态汇报</td>
</tr>
<tr>
<td>Executor</td>
<td>Worker node执行任务的组件,负责 Task 的执行,用于启动线程池运行任务</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>ClusterManager</td>
<td>Standalone 模式中为 Master, 控制整个集群, 监控Worker</td>
</tr>
<tr>
<td>SparkContext</td>
<td>整个应用的上下文, 控制App的生命周期</td>
</tr>
<tr>
<td>RDD</td>
<td>Spark的基本计算单元，一组RDD可形成执行的 DAG</td>
</tr>
</tbody>
</table>
<p><img src="/images/spark/spark-introduce-03.jpeg" alt="spark"></p>
<table>
<thead>
<tr>
<th>Spark App 流程</th>
</tr>
</thead>
<tbody>
<tr>
<td>1. Client 提交应用</td>
<td></td>
</tr>
<tr>
<td>2. Master 找到一个 Worker 启动 Driver</td>
<td></td>
</tr>
<tr>
<td>3. Driver 向 Master 或者 资源管理器申请资源，之后将应用转化为 RDD Graph</td>
<td></td>
</tr>
<tr>
<td>4. DAGScheduler 将 RDD Graph 转化为 Stage的有向无环图 提交给 TaskScheduler</td>
<td></td>
</tr>
<tr>
<td>5. TaskScheduler 提交 task 给Executor执行</td>
<td></td>
</tr>
<tr>
<td>6. 在任务执行的过程中，其他组件协同工作，确保整个应用顺利执行</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>在执行阶段，Driver 会将 Task 和 Task所依赖的file 和 jar 序列化后传递给对应的 Worker机器，同时 Executor对相应数据分区的任务进行处理。</p>
</blockquote>
<h2 id="7-小结"><a href="#7-小结" class="headerlink" title="7. 小结"></a>7. 小结</h2><p>由于 Spark 主要使用 HDFS 充当持久化层，所以完整的使用 Spark 需要预先安装 Hadoop.</p>
<p>Spark 将分布式的内存数据抽象为弹性分布式数据集 (RDD), 并在其上实现了丰富的算子，从而对 RDD 进行计算，最后将 算子序列 转化为 DAG 进行执行和调度。</p>
<blockquote>
<p>Spark的Python API几乎覆盖了所有Scala API所能提供的功能. 但的确有些特性，比如Spark Streaming和个别的API方法，暂不支持。<br><a href="http://spark.apache.org/docs/latest/programming-guide.html" target="_blank" rel="external">具体参见《Spark编程指南》的Python部分</a></p>
</blockquote>
<p>体会了 函数式 编程. 个人认为 scala、python 比较适合写 spark 程序.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Kettle ETL]]></title>
      <url>http://iequa.com/2016/01/22/db-etl-kettle/</url>
      <content type="html"><![CDATA[<p>Kettle 的使用初步介绍</p>
<a id="more"></a>
<ol>
<li>ETL 是数据抽取（Extract）、清洗（Cleaning）、转换（Transform）、装载（Load）的过程。</li>
<li>ETL 是构建 <strong>DW</strong> 的重要一环，用户从数据源抽取出数据，经 数据清洗,按照预定义好的 DW模型，将数据加载到 DW 中去。</li>
<li>ETL 是将业务系统的数据经过抽取、清洗转换之后加载到 DW 的过程，目的是将企业中的分散零乱、标准不统一的数据到一起，为企业的决策提供分析依据。</li>
<li>ETL 是 <strong>BI</strong> 项目中一个重要环节。</li>
</ol>
<p><strong>ETL的设计分三个部分：</strong></p>
<ol>
<li>数据抽取</li>
<li>数据的清洗转换</li>
<li>数据的加载</li>
</ol>
<h2 id="1-Kettle-开源的-ETL-工具"><a href="#1-Kettle-开源的-ETL-工具" class="headerlink" title="1. Kettle 开源的 ETL 工具"></a>1. Kettle 开源的 ETL 工具</h2><h3 id="1-1-Kettle-的介绍"><a href="#1-1-Kettle-的介绍" class="headerlink" title="1-1. Kettle 的介绍"></a>1-1. Kettle 的介绍</h3><p>  ETL（Extract-Transform-Load的缩写，即数据抽取、转换、装载的过程， 我们经常会遇到各种数据的处理，转换，迁移，所以掌握一种 ETL 工具的使用必不可少。</p>
<p>  Kettle 支持图形化的GUI设计界面，然后可以以工作流的形式流转，熟练它可以减少非常多的研发工作量，提高工作效率。</p>
<p>  Kettle 允许你管理来自不同数据库的数据，通过提供一个图形化的用户环境来描述你想做什么。</p>
<p>  Kettle 中有两种脚本文件，transformation 和 job.</p>
<ul>
<li>transformation 完成针对数据的基础转换.</li>
<li>job 则完成整个工作流的控制。</li>
</ul>
<h3 id="1-2-Kettle-家族产品"><a href="#1-2-Kettle-家族产品" class="headerlink" title="1-2. Kettle 家族产品"></a>1-2. Kettle 家族产品</h3><p> <strong> Kettle家族目前包括 4 个产品：Spoon、Pan、CHEF、Kitchen。</strong></p>
<p> Spoon 允许你通过图形界面来设计 ETL 转换过程（Transformation）。</p>
<p> Pan   允许你批量运行由 Spoon 设计的 ETL 转换 (例如使用一个时间调度器)。Pan 是一后台执行的程序，没图界面。</p>
<p> Chef  允许你创建任务（Job）。 任务通过允许每个转换，任务，脚本等等，更有利于自动化更新数据仓库的复杂工作。任务通过允许每个转换，任务，脚本等等。任务将会被检查，看看是否正确地运行了。</p>
<p> Kitchen 允许你批量使用由 Chef 设计的任务 (例如使用一个时间调度器)。Kitchen 也是后台运行的程序。</p>
<h2 id="2-下载和部署安装"><a href="#2-下载和部署安装" class="headerlink" title="2. 下载和部署安装"></a>2. 下载和部署安装</h2><p>Kettle可以在<a href="http://kettle.pentaho.org/" target="_blank" rel="external">http://kettle.pentaho.org/</a> 网站下载<br><br>下载 kettle 压缩包，因 kettle 为绿色软件，解压缩到任意本地路径即可</p>
<p>安装需要 : JDK、JAVA_HOME、CLASSPATH、PENTAHO_JAVA_HOME 等环境变量。</p>
<blockquote>
<p>如需连接mysql，则需将 mysql-connector-java-5.1.38.jar 放入到 lib 中。</p>
</blockquote>
<h3 id="2-1-kettle-windows-安装"><a href="#2-1-kettle-windows-安装" class="headerlink" title="2-1 kettle windows 安装"></a>2-1 kettle windows 安装</h3><ul>
<li>建议在 windows 下使用操作练习 kettle<br> windows 对图形化 支持好 </li>
<li>直接启动 Spoon.bat 即可</li>
</ul>
<h3 id="2-2-kettle-Linux-安装"><a href="#2-2-kettle-Linux-安装" class="headerlink" title="2-2 kettle Linux 安装"></a>2-2 kettle Linux 安装</h3><p> linux 图形化不强，如需要在 linux 中查看一下 kettle 资源库是否连接正常，以及在 linux 上调度 kettle 的 job，就需要在 Linux上 配置 kettle 环境了。</p>
<p>验证 kettle 部署成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd data-integration</span><br><span class="line">输入命令./kitchen.sh。如果出现帮助信息说明部署成功</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如出现错误，请 chmod +x *.sh，再试。</p>
</blockquote>
<h3 id="2-3-kettle-osx-安装"><a href="#2-3-kettle-osx-安装" class="headerlink" title="2-3 kettle osx 安装"></a>2-3 kettle osx 安装</h3><p> 暂时无 mac 版本。</p>
<h2 id="3-应用场景"><a href="#3-应用场景" class="headerlink" title="3. 应用场景"></a>3. 应用场景</h2><p>这里简单概括一下几种具体的应用场景，按网络环境划分主要包括：</p>
<h3 id="3-1-表视图模式："><a href="#3-1-表视图模式：" class="headerlink" title="3-1 表视图模式："></a>3-1 表视图模式：</h3><p>  这种情况我们经常遇到，就是在同一网络环境下，我们对各种数据源的表数据进行抽取、过滤、清洗等，例如历史数据同步、异构系统数据交互、数据对称发布或备份等都归属于这个模式；传统的实现方式一般都要进行研发（一小部分例如两个相同表结构的表之间的数据同步，如果sqlserver数据库可以通过发布/订阅实现），涉及到一些复杂的一些业务逻辑如果我们研发出来还容易出各种bug；</p>
<h3 id="3-2-前置机模式"><a href="#3-2-前置机模式" class="headerlink" title="3-2 前置机模式"></a>3-2 前置机模式</h3><p>  数据交换的双方 A 和 B 网络不通，但是 A 和 B 都可以和前置机 C 连接..</p>
<h3 id="3-3-文件模式"><a href="#3-3-文件模式" class="headerlink" title="3-3 文件模式"></a>3-3 文件模式</h3><p>  数据交互的双方 A 和 B 是完全的物理隔离，这样就只能通过以文件的方式来进行数据交互了，例如 XML 格式.</p>
<h2 id="4-DEMO实战"><a href="#4-DEMO实战" class="headerlink" title="4. DEMO实战"></a>4. DEMO实战</h2><h3 id="4-1-简单表同步"><a href="#4-1-简单表同步" class="headerlink" title="4-1 简单表同步"></a>4-1 简单表同步</h3><p>功能描述 : 数据库 TestDB01 中的 UsersA表 到 数据库TestDB02 的UsersB表；<br>实现流程 : 建立一个转换和一个作业Job；</p>
<p><strong>一、建立转换</strong></p>
<ol>
<li><p>进入主界面，新建一个转换，转换的后缀名为 ktr.<br>  创建 DB连接，选择新建 DB连接, Test按钮测试是否配置正确！</p>
<p>  我们需要建立两个 DB连接，分别为 TestDB01 和 TestDB02；</p>
<p>  (如报错可以 : 下载 mysql-connect jar 放入 lib 目录下)</p>
</li>
<li><p>建立步骤和步骤关系 <strong>:</strong> [输入] -&gt; [表输入]<br>  点击核心对象，我们从步骤树中选择【表输入】, 这样拖拽一个 表输入<br>  之后，我们双击表输入之后，我们自己可以随意写一个 sql 语句，这个语句表示<br>  可以在这个库中随意组合，只要 sql 语句没有错误即可，我这里只是最简单的把<br>  TestA 中的所有数据查出来，语句为 select * from usersA。</p>
</li>
<li><p>建立步骤和步骤关系 <strong>:</strong> [输出] -&gt; [插入/更新]<br>  同上类似</p>
</li>
<li><p>建立 连接 关系<br>  然后在【表输入】上同时按住 shift 键和鼠标左键滑向【插入/更新】，这样建立两个步骤之间的连接</p>
</li>
<li><p>运行<br>  建立好转换之后，我们可以直接运行(点击上面的小三角形)这个转换，检查一下是否有错，如图，有错误都会在下面的控制台上输出。</p>
</li>
</ol>
<p><strong>二、建立作业 :</strong></p>
<p>如果我们需要让这个转换定时执行怎么办呢，那么我们需要建立一个作业job</p>
<ol>
<li><p>新建 Job</p>
<p> 文件-&gt;新建-&gt;Job</p>
</li>
<li><p>在 Job 中 添加 转换</p>
<p> 在新建的作业中, 打开刚才新建的 [简单表同步] 的 transformation</p>
</li>
<li><p>添加 START</p>
<p> 通用 -&gt; START</p>
<p> 使 START 关联 -&gt;  [简单表同步] Transformation</p>
</li>
<li><p>这样我们在【Start】步骤上面双击</p>
<p> 设置时间间隔、定时执行 等需要的参数</p>
<p>这样这个作业就制定好了，点击保存之后，就可以在图形化界面上点击开始执行了。</p>
</li>
</ol>
<h2 id="5-win-linux-后台运行"><a href="#5-win-linux-后台运行" class="headerlink" title="5. win/linux 后台运行"></a>5. win/linux 后台运行</h2><h3 id="5-1-win-后台运行"><a href="#5-1-win-后台运行" class="headerlink" title="5-1 win 后台运行"></a>5-1 win 后台运行</h3><p>simpleTableSync.bat</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@echo off </span><br><span class="line"></span><br><span class="line">if &quot;%1&quot; == &quot;h&quot; goto begin </span><br><span class="line"></span><br><span class="line">mshta vbscript:createobject(&quot;wscript.shell&quot;).run(&quot;%~nx0 h&quot;,0)(window.close)&amp;&amp;exit </span><br><span class="line"></span><br><span class="line">:begin</span><br><span class="line">C:</span><br><span class="line">cd C:\WorkSoft\data-integration</span><br><span class="line">kitchen /file:C:\WorkJob\ETL\tSyncTestJob.kjb /level:Basic&gt;&gt;C:\WorkJob\ETL\MyTest.log /level:Basic&gt;&gt;C:\WorkJob\ETL\MyTest.log</span><br></pre></td></tr></table></figure>
<h3 id="5-2-linux-后台运行"><a href="#5-2-linux-后台运行" class="headerlink" title="5-2 linux 后台运行"></a>5-2 linux 后台运行</h3><p>simpleTableSync.sh</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#################################################################</span><br><span class="line">#</span><br><span class="line"># @date:   2016.01.28</span><br><span class="line"># @desc:   simpleTableSync @kettle</span><br><span class="line">#</span><br><span class="line">#################################################################</span><br><span class="line"></span><br><span class="line">cd `dirname $0`/.. &amp;&amp; wk_dir=`pwd` &amp;&amp; cd -</span><br><span class="line">source $&#123;wk_dir&#125;/util/env</span><br><span class="line"></span><br><span class="line">echo_ex &quot;$&#123;data_integration&#125;/kitchen.sh -file=$&#123;data_dir&#125;/tSyncTestJob.kjb&quot;</span><br><span class="line">$&#123;data_integration&#125;/kitchen.sh -file=$&#123;data_dir&#125;/tSyncTestJob.kjb</span><br><span class="line">check_success</span><br><span class="line"></span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>
<p>注意 : kjb 与 ktr 最好放在一个目录下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[hdfs@node196 simpleTableSync]$ cd data/</span><br><span class="line">[hdfs@node196 data]$ ll</span><br><span class="line">total 24</span><br><span class="line">-rw-rw-r--. 1 hdfs hdfs  6944 Jan 29 18:22 tSyncTestJob.kjb</span><br><span class="line">-rw-rw-r--. 1 hdfs hdfs 13450 Jan 29 18:22 tSyncTestTrans.ktr</span><br></pre></td></tr></table></figure>
<blockquote>
<p>从 win 拷贝过来的文件，fileformat 可能是 dos 格式，可以 :set ff=unix.</p>
</blockquote>
<h2 id="Reference-article"><a href="#Reference-article" class="headerlink" title="Reference article"></a>Reference article</h2><p><a href="http://www.cnblogs.com/limengqiang/archive/2013/01/16/KettleApply2.html#sz" target="_blank" rel="external">kettle系列</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Logback 入门初步]]></title>
      <url>http://iequa.com/2015/12/27/java-logback-indoor/</url>
      <content type="html"><![CDATA[<p>Logback 一个开源日志组件, SLF4J 这个简单的日志前端接口（Façade）来替代 Jakarta Commons-Logging 。</p>
<a id="more"></a>
<p>Logback 一个开源日志组件。<br>Logback 当前分成三个模块：logback-core  logback- classic  和  logback-access。</p>
<h2 id="1-logback-简介"><a href="#1-logback-简介" class="headerlink" title="1. logback 简介"></a>1. logback 简介</h2><p>Ceki在Java日志领域世界知名。他创造了Log4J ，这个最早的Java日志框架即便在JRE内置日志功能的竞争下仍然非常流行。随后他又着手实现SLF4J 这个“简单的日志前端接口（Façade）”来替代Jakarta Commons-Logging 。</p>
<p>Logback，一个“可靠、通用、快速而又灵活的Java日志框架”。</p>
<p><strong>官网网址 :</strong> <a href="http://logback.qos.ch/" target="_blank" rel="external">http://logback.qos.ch/</a></p>
<h2 id="2-工程使用需要的-jar"><a href="#2-工程使用需要的-jar" class="headerlink" title="2. 工程使用需要的 jar"></a>2. 工程使用需要的 jar</h2><p>要在工程里面使用 logback , 只需要以下jar文件：</p>
<pre><code>(1). slf4j-api.jar       
(2). logback-access.jar
(3). logback-classic.jar
(4). logback-core.jar

logback-core    是其它两个模块的基础模块。   
logback-classic 是 log4j 的一个 改良版本。   
logback-access  与Servlet容器集成提供通过Http来访问日志功能
</code></pre><p>logback-classic 完整实现 SLF4J API 使你可以很方便地更换成其它日志系统如 log4j 或 JDK Logging。</p>
<h2 id="3-logback-常用配置详解"><a href="#3-logback-常用配置详解" class="headerlink" title="3. logback 常用配置详解"></a>3. logback 常用配置详解</h2><h3 id="3-1-根节点-lt-configuration-gt"><a href="#3-1-根节点-lt-configuration-gt" class="headerlink" title="3.1 根节点&lt; configuration &gt;"></a>3.1 根节点&lt; configuration &gt;</h3><table>
<thead>
<tr>
<th>configuration</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>scan</td>
<td>当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。</td>
</tr>
<tr>
<td>scanPeriod</td>
<td>设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。</td>
</tr>
<tr>
<td>debug</td>
<td>当此属性设置为true时，将打印出 logback 内部日志信息，实时查看logback运行状态。默认值为false。</td>
</tr>
</tbody>
</table>
<h2 id="4-logback-配置示例"><a href="#4-logback-配置示例" class="headerlink" title="4. logback 配置示例"></a>4. logback 配置示例</h2><h3 id="4-1-Myself-resources-logback-xml-example"><a href="#4-1-Myself-resources-logback-xml-example" class="headerlink" title="4.1 Myself resources/logback.xml example"></a>4.1 Myself resources/logback.xml example</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"3600 seconds"</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"AppName"</span> <span class="attr">value</span>=<span class="string">"your_app_name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LogParentDir"</span> <span class="attr">value</span>=<span class="string">"/home/www/logs/"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>$&#123;AppName&#125;<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"infoAppender"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>INFO<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;LogParentDir&#125;/$&#123;AppName&#125;/infoLogFile.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"errorAppender"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;LogParentDir&#125;/$&#123;AppName&#125;/errorLogFile.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--其中appender的配置表示打印到控制台--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.x.dmt"</span> <span class="attr">level</span>=<span class="string">"ERROR"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"errorAppender"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--设置addtivity为false，将此loger的打印信息不向上级传递；--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.x.dmt.service"</span> <span class="attr">level</span>=<span class="string">"INFO"</span> <span class="attr">additivity</span>=<span class="string">"fasle"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"infoAppender"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注意: logger 同名情况, 级别低的,需要放在下面,否则级别高的会覆盖级别低的权限,早晨级别低的打印不出来日志 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<p><a href="http://aub.iteye.com/blog/1101260" target="_blank" rel="external">更多参见 iteye1101260</a></p>
<p><a href="http://logback.qos.ch/" target="_blank" rel="external">官方网址</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux, profile / bashrc Brief Introduce]]></title>
      <url>http://iequa.com/2014/05/18/ops-linux-bashrc-profile/</url>
      <content type="html"><![CDATA[<p>/etc/profile、/etc/bashrc、~/.bash_profile、~/.bashrc </p>
<a id="more"></a>
<table>
<thead>
<tr>
<th>config file</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td>/etc/profile，/etc/bashrc</td>
<td>系统全局环境变量设定</td>
</tr>
<tr>
<td>~/.profile，~/.bashrc</td>
<td>用户家目录下的私有环境变量设定 </td>
</tr>
</tbody>
</table>
<h2 id="1-login-env-steps"><a href="#1-login-env-steps" class="headerlink" title="1. login env steps"></a>1. login env steps</h2><blockquote>
<p>以下是 登入系统,环境设定档 流程</p>
</blockquote>
<table>
<thead>
<tr>
<th>Read step</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td>/etc/profile</td>
<td>/etc/profile.d 和 /etc/inputrc 。 从/etc/profile.d目录的配置文件搜集shell的设置</td>
</tr>
<tr>
<td>~/.bash_profile</td>
<td>~/.bash_profile，如无则读取 ~/.bash_login，如无则读取 ~/.profile</td>
</tr>
<tr>
<td>~/.bashrc</td>
<td>~/.bashrc (交互式 non-login 方式进入 bash 运行的)</td>
</tr>
</tbody>
</table>
<h2 id="2-profile-and-bashrc"><a href="#2-profile-and-bashrc" class="headerlink" title="2. ~/.profile and ~/.bashrc"></a>2. ~/.profile and ~/.bashrc</h2><table>
<thead>
<tr>
<th>~/.profile 、 ~/.bashrc 相同点</th>
</tr>
</thead>
<tbody>
<tr>
<td>都具有个性化定制功能</td>
<td></td>
</tr>
<tr>
<td>~/.profile 可以设定本用户专有的路径，环境变量，等，它只能登入的时候执行一次</td>
<td></td>
</tr>
<tr>
<td>~/.bashrc 也是某用户专有设定文档，可以设定路径，命令别名，每次shell script的执行都会使用它一次</td>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>bashrc 和 profile 的区别</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>交互式模式</code> : shell等待你的输入，并且执行你提交的命令。 shell与用户进行交互 登录、执行命令、签退、shell终止</td>
<td></td>
</tr>
<tr>
<td><code>非交互式模式</code> : shell不与你进行交互，是读取存在文件中的命令,并且执行它们。当它读到文件的结尾，shell终止</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>~/.bash_profile 是交互式、login 方式进入 bash 运行的<br>~/.bashrc 是交互式 non-login 方式进入 bash 运行的 </p>
</blockquote>
<h2 id="3-reference-article"><a href="#3-reference-article" class="headerlink" title="3. reference article"></a>3. reference article</h2><p><a href="http://blog.chinaunix.net/uid-26435987-id-3400127.html" target="_blank" rel="external">blog.chinaunix.net/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Qunar Trainee Summary]]></title>
      <url>http://iequa.com/2014/05/07/life-trainee/</url>
      <content type="html"><![CDATA[<blockquote>
<p>an trainee in qunar</p>
</blockquote>
<a id="more"></a>
<p>  时间过得真快，转眼间，我在去哪儿网实习的这段时间马上就要过去了，在这段实习的日子真的学会了很多，经过这次培训，我学会了java，了解了guava，学习了SVN， git版本管理工具， Maven项目管理及自动构建工具， SpringMVC的开发，mybatis 的使用，Servlet， jsp， html， http 的初步了解，动态代理与AOP， 单元测试与自动化测试，数据库建表规范， Linux系统的使用等等等等，熟悉了公司内部的开发框架，了解公司开发规范，适应公司文化，环境。</p>
<p>  在这些天实习的日子，最初本想不走 java 路线的，觉得封装好严重，你根本不知道那个包是怎么回事，就可以拿过来一用，就出来了一个看起来比较高大上的作品，学很短的时间就可以搞出个东西来，觉得没有C、C++或者是算法，来得那么爽。但是经过培训后，我才发现了java的可爱之处与强大，以前对java有误解，完全是自己的无知与不懂，遇到了酒店事业部的 思雨大神，更是感受到了学习java这方面的知识，可以很牛很牛，学任何一门技术都具有更为广阔的空间，实习初期，由于我对java知识之前是没有任何经验的，所以面对严格快速正规的培训，真的感到压力很大，幸好小组的分享还有做作业遇到问题，组内外同学的帮助，才可以跟下来，由于初学，节奏很快，那么多知识，在不到2个月的时间内全部学熟是很难做到的，我现在对 SpringMVC 还有一些 Guava，web的知识，还不是很熟练，以后一定要找时间在自己补习下这方面的知识。并把自己在公司学到的一些知识，介绍给学校的一些还在迷茫懵懂的学妹，学弟们。在公司两个多月的实习生活，对我来说不仅仅是技术和能力上的提升，更多的还有思想和态度的转变。</p>
<p>  最后，首先，要感谢公司给我们应届生提供的这个培训平台，可以让我学到这么多的专业知识，认识到更多的志同道合的朋友；感谢丫丫姐，辛苦操劳的尽可能给我们提供欢愉的学习环境，以及邀请很多的优秀讲师；感谢全体给我们讲课的讲师们，感谢我的团队以及周边的同事，在工作学习的繁忙之余，还可以带来各种各样的欢声笑语，感谢老何与david，让我学到了严谨，负责，认真的工作态度与生活态度。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java SE Basic Introduce]]></title>
      <url>http://iequa.com/2013/02/02/java-se-introduce/</url>
      <content type="html"><![CDATA[<p>This is a introduction about Java SE and how to use it.</p>
<a id="more"></a>
<ul>
<li>Java data type</li>
<li>OO</li>
<li>Exception</li>
<li>Java Array  </li>
<li>Java 常用类 </li>
<li>Java 容器类</li>
<li>Collection / Generic</li>
<li>Java I/O Stream</li>
<li>Java Thread</li>
<li>Java TCP/UDP, socket</li>
</ul>
<h2 id="1-Java-概述"><a href="#1-Java-概述" class="headerlink" title="1. Java 概述"></a>1. Java 概述</h2><ul>
<li>Java 运行机制</li>
<li>JDK &amp; JRE</li>
<li>Java env install</li>
<li>Java Basic Content</li>
</ul>
<blockquote>
<p>conclude : 计算机语言朝着人类易于理解的方向发展  </p>
</blockquote>
<h2 id="2-Java-特点"><a href="#2-Java-特点" class="headerlink" title="2. Java 特点"></a>2. Java 特点</h2><ul>
<li>一种 OO 语言  </li>
<li>一种平台无关的语言, 提供程序运行的解释环境  </li>
<li>一种健壮的语言, 吸收了C/C++语言的优点， 但去掉了其影响程序健壮性的部分(如: 指针， 内存的申请与释放等)。  </li>
</ul>
<h2 id="3-Java程序运行机制"><a href="#3-Java程序运行机制" class="headerlink" title="3. Java程序运行机制"></a>3. Java程序运行机制</h2><p><strong>Java 2种核心机制</strong></p>
<ul>
<li>Java Virtual Machine</li>
<li>Garbage collection</li>
</ul>
<blockquote>
<p>JVM 可理解成一个以字节码为机器指令的CPU<br>JVM 机制屏蔽了底层运行平台的差别, 实现了”一次编译, 随处运行”。</p>
<p>x.java –编译–&gt; x.class –执行–&gt; JVM</p>
<p>Java语言消除了程序员回收无用内存空间的责任;<br>它提供一种系统级线程跟踪存储空间的分配情况，并在JVM的空闲时, 检查并释放那些可被释放的存储器空间。  </p>
</blockquote>
<h2 id="4-JDK-amp-JRE-amp-env-install"><a href="#4-JDK-amp-JRE-amp-env-install" class="headerlink" title="4. JDK &amp; JRE &amp; env install"></a>4. JDK &amp; JRE &amp; env install</h2><ul>
<li>Software Development Kit (软件开发包)  开发需要 JDK  </li>
<li>Java Runtime Environment  用户只需 JRE  </li>
</ul>
<p><code>/etc/profile</code> or  <code>.zshrc</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">### JAVA ###</span><br><span class="line">JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home</span><br><span class="line">JAVA_BIN=$JAVA_HOME/bin</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/jre/lib/dt.jar:$JAVA_HOME/jre/lib/tools.jar</span><br><span class="line">export JAVA_HOME JAVA_BIN PATH CLASSPATH</span><br></pre></td></tr></table></figure>
<blockquote>
<p>classpath : java在编译和运行时要找的class所在的路径<br>建议你的 JDK 装在不带空格的目录里面</p>
</blockquote>
<h2 id="5-命名规则"><a href="#5-命名规则" class="headerlink" title="5. 命名规则"></a>5. 命名规则</h2><ol>
<li>类名首字母大写  </li>
<li>变量名和方法名的首字母小写  </li>
<li>运用驼峰标识   </li>
</ol>
<p>HelloWorld.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class HelloWorld &#123;</span><br><span class="line">  public static void main(String[] args) &#123;</span><br><span class="line">    System.out.println(&quot;Hello Java.&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line">  * 这里是注释</span><br><span class="line">  */</span><br></pre></td></tr></table></figure>
<blockquote>
<p>一个源文件中最多只能有一个public类. 其它类的个数不限，如果源文件 文件包含一个public class 它必需按该 class-name 命名  </p>
</blockquote>
<h2 id="6-Java-程序设计"><a href="#6-Java-程序设计" class="headerlink" title="6. Java 程序设计"></a>6. Java 程序设计</h2><p><strong>data type</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">                                      -- 整数类型 (byte, short, int, long)  </span><br><span class="line">                          -- 数值型 --     </span><br><span class="line">                         |            -- 浮点类型 (float, double)  </span><br><span class="line">           --基本数据类型  -- 字符型 (char)  </span><br><span class="line">          |              |  </span><br><span class="line">          |               -- 布尔型 (boolean)  </span><br><span class="line">数据类型 --                           </span><br><span class="line">          |               -- 类 (class)  </span><br><span class="line">          |              |  </span><br><span class="line">           --引用数据类型  -- 接口 (interface)  </span><br><span class="line">                         |  </span><br><span class="line">                          -- 数组 (array)</span><br></pre></td></tr></table></figure>
<hr>
<blockquote>
<p>java 中定义了 <strong>4类 8种</strong> 基本数据类型<br>boolean 类型只允许取值 true / false , 不可以用 0 或 非0 替代。<br>char 采用 Unicode 编码 (全球语言统一编码), 每个字符占两个字节  </p>
</blockquote>
<h2 id="7-Array-amp-Method"><a href="#7-Array-amp-Method" class="headerlink" title="7. Array &amp; Method"></a>7. Array &amp; Method</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class Test &#123;  </span><br><span class="line">    public static void main(String[] args) &#123;  </span><br><span class="line">        Date[] days;  </span><br><span class="line">        days = new Date[3];  </span><br><span class="line">        for (int i = 0; i &lt; 3; i++) &#123;  </span><br><span class="line">            days[i] = new Date(2004, 4, i+1);  </span><br><span class="line">        &#125;</span><br><span class="line">        // </span><br><span class="line">        int[] a = &#123;1, 2, 3, 4, 5, 6, 7&#125;;  </span><br><span class="line">        for (int i = 0; i &lt; a.length; i++) &#123;  </span><br><span class="line">            System.out.print(a[i] + &quot; &quot;);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">class Date &#123;  </span><br><span class="line">    int year;  </span><br><span class="line">    int month;  </span><br><span class="line">    int day;  </span><br><span class="line">    Date(int y, int m, int d) &#123;  </span><br><span class="line">        year = y;  </span><br><span class="line">        month = m;  </span><br><span class="line">        day = d;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="http://blog.csdn.net/robbyo/article/details/16942921" target="_blank" rel="external">面向过程-约瑟夫环</a></p>
<p><a href="http://blog.csdn.net/robbyo/article/details/16967715" target="_blank" rel="external">面向对象-约瑟夫环</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Trie Tree POJ 2001]]></title>
      <url>http://iequa.com/2013/01/17/acm-Trie_Tree-POJ-2001/</url>
      <content type="html"><![CDATA[<p>trie tree poj 2001 shortest prefixes</p>
<a id="more"></a>
<h2 id="POJ-2001-Shortest-Prefixes"><a href="#POJ-2001-Shortest-Prefixes" class="headerlink" title="POJ 2001 Shortest Prefixes"></a><a href="http://poj.org/problem?id=2001" target="_blank" rel="external">POJ 2001 Shortest Prefixes</a></h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iterator&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUG puts(<span class="string">"here!!!"</span>);  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1010</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> kind = <span class="number">26</span>;  </span><br><span class="line"><span class="keyword">char</span> str[N][<span class="number">25</span>];  </span><br><span class="line"><span class="keyword">struct</span> Node &#123;  </span><br><span class="line">    <span class="keyword">int</span> num;  </span><br><span class="line">    <span class="keyword">bool</span> tail;  </span><br><span class="line">    Node* next[kind];  </span><br><span class="line">    Node() : num(<span class="number">1</span>), tail(<span class="literal">false</span>) &#123;  </span><br><span class="line">        <span class="built_in">memset</span>(next, <span class="number">0</span>, <span class="keyword">sizeof</span>(next));  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(Node* root, <span class="keyword">char</span> *s)</span> </span>&#123;  </span><br><span class="line">    Node* p = root;  </span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, index;  </span><br><span class="line">    <span class="keyword">while</span>(s[i]) &#123;  </span><br><span class="line">        index = s[i] - <span class="string">'a'</span>;  </span><br><span class="line">        <span class="keyword">if</span>(p-&gt;next[index] == <span class="literal">NULL</span>) &#123;  </span><br><span class="line">            p-&gt;next[index] = <span class="keyword">new</span> Node();  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> p-&gt;next[index]-&gt;num++;  </span><br><span class="line">        p = p-&gt;next[index];  </span><br><span class="line">        i++;  </span><br><span class="line">    &#125;  </span><br><span class="line">    p-&gt;tail = <span class="literal">true</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(Node* root, <span class="keyword">int</span> count)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;  </span><br><span class="line">        Node* p = root;  </span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str[i]);  </span><br><span class="line">        <span class="keyword">char</span>* s = str[i];  </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; s &lt;&lt; <span class="string">' '</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len; j++) &#123;  </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; s[j];  </span><br><span class="line">            <span class="keyword">int</span> index = s[j] - <span class="string">'a'</span>;  </span><br><span class="line">            <span class="keyword">if</span>(p-&gt;next[index]-&gt;num == <span class="number">1</span>) &#123;  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">            p = p-&gt;next[index];  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    Node* root = <span class="keyword">new</span> Node(); <span class="comment">// 根节点不包含任何字符  </span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, count = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>, str[i]) == <span class="number">1</span>) &#123;  </span><br><span class="line">        insert(root, str[i]);  </span><br><span class="line">        i++;  </span><br><span class="line">    &#125;  </span><br><span class="line">    count = i;  </span><br><span class="line">    solve(root, count);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Union-Find Sets POJ 1703]]></title>
      <url>http://iequa.com/2013/01/17/acm-union-find_sets-POJ-1703/</url>
      <content type="html"><![CDATA[<p>union-find sets poj 1703 find them, catch them 帮派之争</p>
<a id="more"></a>
<h2 id="Find-them-Catch-them"><a href="#Find-them-Catch-them" class="headerlink" title="Find them, Catch them"></a><a href="http://poj.org/problem?id=1703" target="_blank" rel="external">Find them, Catch them</a></h2><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">5 5</span><br><span class="line">A 1 2</span><br><span class="line">D 1 2</span><br><span class="line">A 1 2</span><br><span class="line">D 2 4</span><br><span class="line">A 1 4</span><br></pre></td></tr></table></figure>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Not sure yet.</span><br><span class="line">In different gangs.</span><br><span class="line">In the same gang.</span><br></pre></td></tr></table></figure>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iterator&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MID(x,y) ( ( x + y ) &gt;&gt; 1 )  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> L(x) ( x &lt;&lt; 1 )  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R(x) ( x &lt;&lt; 1 | 1 )  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUG puts(<span class="string">"here!!!"</span>);  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STOP system(<span class="string">"pause"</span>);  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100005</span>;  </span><br><span class="line"><span class="keyword">int</span> f[N+N];  </span><br><span class="line"><span class="keyword">int</span> n, m;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(f[x] &lt; <span class="number">0</span>) <span class="keyword">return</span> x;  </span><br><span class="line">    <span class="keyword">return</span> f[x] = find(f[x]);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> loop;  </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; loop;  </span><br><span class="line">    <span class="keyword">while</span>(loop--) &#123;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);  </span><br><span class="line">        <span class="built_in">memset</span>(f, <span class="number">255</span>, <span class="keyword">sizeof</span>(f));  </span><br><span class="line">        <span class="keyword">while</span>(m--) &#123;  </span><br><span class="line">            <span class="keyword">int</span> a, b;  </span><br><span class="line">            <span class="keyword">char</span> s[<span class="number">3</span>];  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s%d%d"</span>, s, &amp;a, &amp;b);  </span><br><span class="line">            <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">'A'</span>) &#123;  </span><br><span class="line">                <span class="keyword">if</span>(find(a) != find(b) &amp;&amp; find(a) != find(b+n)) &#123;  </span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"Not sure yet.\n"</span>);  </span><br><span class="line">                &#125;  </span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(find(a) == find(b)) &#123;  </span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"In the same gang.\n"</span>);  </span><br><span class="line">                &#125;  </span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"In different gangs.\n"</span>);  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span> &#123;  </span><br><span class="line">                <span class="keyword">if</span>(find(a) != find(b+n)) &#123;  </span><br><span class="line">                    f[find(a)] = find(b+n);  </span><br><span class="line">                    f[find(b)] = find(a+n);  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Union-Find Sets HDU 1856]]></title>
      <url>http://iequa.com/2013/01/17/acm-union-find_sets-hdu_1856/</url>
      <content type="html"><![CDATA[<p>union-find sets hdu 1856 more is better</p>
<a id="more"></a>
<p><strong><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1856" target="_blank" rel="external">More is better</a></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Mr Wang wants some boys to help him with a project. ...</span><br></pre></td></tr></table></figure>
<p><strong><font color="#2561c2">Sample Input</font></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">5 6</span><br><span class="line">1 6</span><br><span class="line">4</span><br><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">5 6</span><br><span class="line">7 8</span><br></pre></td></tr></table></figure>
<p><strong><font color="#2561c2">Sample Output</font></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">2</span><br></pre></td></tr></table></figure>
<p><strong><font color="#2561c2">Code</font></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iterator&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUG puts(<span class="string">"here!!!"</span>);  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100005</span>;  </span><br><span class="line"><span class="keyword">struct</span> Node &#123;  </span><br><span class="line">    <span class="keyword">int</span> par;  </span><br><span class="line">    <span class="keyword">int</span> sum;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="keyword">int</span> SUM;  </span><br><span class="line">  </span><br><span class="line">Node p[<span class="number">2</span>*N + <span class="number">5</span>];  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makeSet</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2</span>*n; i++) &#123;  </span><br><span class="line">        p[i].par = i;  </span><br><span class="line">        p[i].sum = <span class="number">1</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    SUM = <span class="number">1</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(a == p[a].par) <span class="keyword">return</span> a;  </span><br><span class="line">    <span class="keyword">return</span> p[a].par = find(p[a].par);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">union1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> fa = find(a);  </span><br><span class="line">    <span class="keyword">int</span> fb = find(b);  </span><br><span class="line">    <span class="keyword">if</span>(fa != fb) &#123;  </span><br><span class="line">        p[fa].par = fb;  </span><br><span class="line">        p[fb].sum += p[fa].sum;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span>(p[fb].sum &gt; SUM) &#123;  </span><br><span class="line">        SUM = p[fb].sum;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n, a, b;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) == <span class="number">1</span>) &#123;  </span><br><span class="line">        makeSet(n);  </span><br><span class="line">        <span class="keyword">while</span>(n--) &#123;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a, &amp;b);  </span><br><span class="line">            union1(a, b);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, SUM);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[KMP / HDU 1711 找到匹配的位置并返回]]></title>
      <url>http://iequa.com/2013/01/17/acm-kmp-for-hdu_1711/</url>
      <content type="html"><![CDATA[<p>kmp hdu 1711 number sequence</p>
<a id="more"></a>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a><font color="#2561c2">Description</font></h3><p>Given two sequences of numbers : a[1], a[2], …… , a[N], and b[1], b[2], …… , b[M] (1 &lt;= M &lt;= 10000, 1 &lt;= N &lt;= 1000000). Your task is to find a number K which make a[K] = b[1], a[K + 1] = b[2], …… , a[K + M – 1] = b[M]. If there are more than one K exist, output the smallest one.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a><font color="#2561c2">Input</font></h3><p>The first line of input is a number T which indicate the number of cases. Each case contains three lines. The first line is two numbers N and M (1 &lt;= M &lt;= 10000, 1 &lt;= N &lt;= 1000000). The second line contains N integers which indicate a[1], a[2], …… , a[N]. The third line contains M integers which indicate b[1], b[2], …… , b[M]. All integers are in the range of [-1000000, 1000000].</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a><font color="#2561c2">Output</font></h3><p>For each test case, you should output one line which only contain K described above. If no such K exists, output -1 instead.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a><font color="#2561c2">Sample Input</font></h3><p>2<br>13 5<br>1 2 1 2 3 1 2 3 1 3 2 1 2<br>1 2 3 1 3<br>13 5<br>1 2 1 2 3 1 2 3 1 3 2 1 2<br>1 2 3 2 1</p>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a><font color="#2561c2">Sample Output</font></h3><p>6<br>-1</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a><font color="#2561c2">Code</font></h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iterator&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUG puts(<span class="string">"here!!!"</span>);  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000005</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">10005</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">int</span> s[N];  </span><br><span class="line"><span class="keyword">int</span> t[M];  </span><br><span class="line"><span class="keyword">int</span> next[M];  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">int</span> len)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i, j;  </span><br><span class="line">    i = <span class="number">0</span>, j = <span class="number">-1</span>;  </span><br><span class="line">    next[<span class="number">0</span>] = <span class="number">-1</span>;  </span><br><span class="line">    <span class="keyword">while</span>(i &lt; len<span class="number">-1</span>) &#123;  </span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">-1</span> || t[i] == t[j]) &#123;  </span><br><span class="line">            i++, j++, next[i] = j;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> &#123;  </span><br><span class="line">            j = next[j];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> sl, <span class="keyword">int</span> tl)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">while</span>(i &lt; sl &amp;&amp; j &lt; tl) &#123;  </span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">-1</span> || s[i] == t[j]) &#123;  </span><br><span class="line">            i++, j++;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> j = next[j];  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span>(j == tl) <span class="keyword">return</span> i-j+<span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">// abcabcababcabcabdef  </span></span><br><span class="line"><span class="comment">// abcabcabd  </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> T, n, m, ans;  </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;  </span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;  </span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, s+i);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, t+i);  </span><br><span class="line">        &#125;  </span><br><span class="line">        getNext(m);  </span><br><span class="line">        ans = kmp(n, m);  </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
  
  
</search>
